Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUALS
    EMARK
    DOT

Grammar

Rule 0     S' -> re
Rule 1     re -> alternation
Rule 2     re -> simple
Rule 3     alternation -> re PIPE simple
Rule 4     simple -> concatenation
Rule 5     simple -> basic
Rule 6     concatenation -> simple basic
Rule 7     basic -> elementary
Rule 8     basic -> asterisk
Rule 9     basic -> plus
Rule 10    basic -> optional
Rule 11    elementary -> group
Rule 12    elementary -> directionset
Rule 13    elementary -> command
Rule 14    elementary -> literal
Rule 15    elementary -> charclass
Rule 16    asterisk -> elementary ASTERISK
Rule 17    plus -> elementary PLUS
Rule 18    optional -> elementary QMARK
Rule 19    number -> DIGIT
Rule 20    number -> DIGIT number
Rule 21    group -> LPARENS groupbody RPARENS
Rule 22    groupbody -> QMARK specialgroup
Rule 23    groupbody -> basicgroup
Rule 24    specialgroup -> UNDERSCORE lengthcheck
Rule 25    specialgroup -> PIPE stationarygroup
Rule 26    lengthcheck -> LPARENS number RPARENS re
Rule 27    stationarygroup -> re
Rule 28    basicgroup -> re
Rule 29    charclass -> pcharclass
Rule 30    charclass -> ncharclass
Rule 31    pcharclass -> LSQBRACKET classitems RSQBRACKET
Rule 32    ncharclass -> LSQBRACKET CARET classitems RSQBRACKET
Rule 33    classitems -> literal
Rule 34    classitems -> literal classitems
Rule 35    directionset -> CARET DIGIT
Rule 36    command -> COMMAND
Rule 37    literal -> LITERAL
Rule 38    literal -> DIGIT

Terminals, with rules where they appear

ASTERISK             : 16
CARET                : 32 35
COMMAND              : 36
DIGIT                : 19 20 35 38
DOT                  : 
EMARK                : 
EQUALS               : 
LITERAL              : 37
LPARENS              : 21 26
LSQBRACKET           : 31 32
PIPE                 : 3 25
PLUS                 : 17
QMARK                : 18 22
RPARENS              : 21 26
RSQBRACKET           : 31 32
UNDERSCORE           : 24
error                : 

Nonterminals, with rules where they appear

alternation          : 1
asterisk             : 8
basic                : 5 6
basicgroup           : 23
charclass            : 15
classitems           : 31 32 34
command              : 13
concatenation        : 4
directionset         : 12
elementary           : 7 16 17 18
group                : 11
groupbody            : 21
lengthcheck          : 24
literal              : 14 33 34
ncharclass           : 30
number               : 20 26
optional             : 10
pcharclass           : 29
plus                 : 9
re                   : 3 26 27 28 0
simple               : 2 3 6
specialgroup         : 22
stationarygroup      : 25

Parsing method: LALR

state 0

    (0) S' -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    ncharclass                     shift and go to state 2
    basic                          shift and go to state 16
    alternation                    shift and go to state 10
    directionset                   shift and go to state 14
    command                        shift and go to state 1
    simple                         shift and go to state 13
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    pcharclass                     shift and go to state 12
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    concatenation                  shift and go to state 9
    group                          shift and go to state 22
    optional                       shift and go to state 21
    re                             shift and go to state 18

state 1

    (13) elementary -> command .

    ASTERISK        reduce using rule 13 (elementary -> command .)
    PLUS            reduce using rule 13 (elementary -> command .)
    QMARK           reduce using rule 13 (elementary -> command .)
    LPARENS         reduce using rule 13 (elementary -> command .)
    CARET           reduce using rule 13 (elementary -> command .)
    COMMAND         reduce using rule 13 (elementary -> command .)
    LITERAL         reduce using rule 13 (elementary -> command .)
    DIGIT           reduce using rule 13 (elementary -> command .)
    LSQBRACKET      reduce using rule 13 (elementary -> command .)
    PIPE            reduce using rule 13 (elementary -> command .)
    $end            reduce using rule 13 (elementary -> command .)
    RPARENS         reduce using rule 13 (elementary -> command .)


state 2

    (30) charclass -> ncharclass .

    ASTERISK        reduce using rule 30 (charclass -> ncharclass .)
    PLUS            reduce using rule 30 (charclass -> ncharclass .)
    QMARK           reduce using rule 30 (charclass -> ncharclass .)
    LPARENS         reduce using rule 30 (charclass -> ncharclass .)
    CARET           reduce using rule 30 (charclass -> ncharclass .)
    COMMAND         reduce using rule 30 (charclass -> ncharclass .)
    LITERAL         reduce using rule 30 (charclass -> ncharclass .)
    DIGIT           reduce using rule 30 (charclass -> ncharclass .)
    LSQBRACKET      reduce using rule 30 (charclass -> ncharclass .)
    PIPE            reduce using rule 30 (charclass -> ncharclass .)
    $end            reduce using rule 30 (charclass -> ncharclass .)
    RPARENS         reduce using rule 30 (charclass -> ncharclass .)


state 3

    (38) literal -> DIGIT .

    LITERAL         reduce using rule 38 (literal -> DIGIT .)
    DIGIT           reduce using rule 38 (literal -> DIGIT .)
    RSQBRACKET      reduce using rule 38 (literal -> DIGIT .)
    ASTERISK        reduce using rule 38 (literal -> DIGIT .)
    PLUS            reduce using rule 38 (literal -> DIGIT .)
    QMARK           reduce using rule 38 (literal -> DIGIT .)
    LPARENS         reduce using rule 38 (literal -> DIGIT .)
    CARET           reduce using rule 38 (literal -> DIGIT .)
    COMMAND         reduce using rule 38 (literal -> DIGIT .)
    LSQBRACKET      reduce using rule 38 (literal -> DIGIT .)
    PIPE            reduce using rule 38 (literal -> DIGIT .)
    $end            reduce using rule 38 (literal -> DIGIT .)
    RPARENS         reduce using rule 38 (literal -> DIGIT .)


state 4

    (37) literal -> LITERAL .

    LITERAL         reduce using rule 37 (literal -> LITERAL .)
    DIGIT           reduce using rule 37 (literal -> LITERAL .)
    RSQBRACKET      reduce using rule 37 (literal -> LITERAL .)
    ASTERISK        reduce using rule 37 (literal -> LITERAL .)
    PLUS            reduce using rule 37 (literal -> LITERAL .)
    QMARK           reduce using rule 37 (literal -> LITERAL .)
    LPARENS         reduce using rule 37 (literal -> LITERAL .)
    CARET           reduce using rule 37 (literal -> LITERAL .)
    COMMAND         reduce using rule 37 (literal -> LITERAL .)
    LSQBRACKET      reduce using rule 37 (literal -> LITERAL .)
    PIPE            reduce using rule 37 (literal -> LITERAL .)
    $end            reduce using rule 37 (literal -> LITERAL .)
    RPARENS         reduce using rule 37 (literal -> LITERAL .)


state 5

    (36) command -> COMMAND .

    ASTERISK        reduce using rule 36 (command -> COMMAND .)
    PLUS            reduce using rule 36 (command -> COMMAND .)
    QMARK           reduce using rule 36 (command -> COMMAND .)
    LPARENS         reduce using rule 36 (command -> COMMAND .)
    CARET           reduce using rule 36 (command -> COMMAND .)
    COMMAND         reduce using rule 36 (command -> COMMAND .)
    LITERAL         reduce using rule 36 (command -> COMMAND .)
    DIGIT           reduce using rule 36 (command -> COMMAND .)
    LSQBRACKET      reduce using rule 36 (command -> COMMAND .)
    PIPE            reduce using rule 36 (command -> COMMAND .)
    $end            reduce using rule 36 (command -> COMMAND .)
    RPARENS         reduce using rule 36 (command -> COMMAND .)


state 6

    (8) basic -> asterisk .

    LPARENS         reduce using rule 8 (basic -> asterisk .)
    CARET           reduce using rule 8 (basic -> asterisk .)
    COMMAND         reduce using rule 8 (basic -> asterisk .)
    LITERAL         reduce using rule 8 (basic -> asterisk .)
    DIGIT           reduce using rule 8 (basic -> asterisk .)
    LSQBRACKET      reduce using rule 8 (basic -> asterisk .)
    PIPE            reduce using rule 8 (basic -> asterisk .)
    RPARENS         reduce using rule 8 (basic -> asterisk .)
    $end            reduce using rule 8 (basic -> asterisk .)


state 7

    (35) directionset -> CARET . DIGIT

    DIGIT           shift and go to state 23


state 8

    (15) elementary -> charclass .

    ASTERISK        reduce using rule 15 (elementary -> charclass .)
    PLUS            reduce using rule 15 (elementary -> charclass .)
    QMARK           reduce using rule 15 (elementary -> charclass .)
    LPARENS         reduce using rule 15 (elementary -> charclass .)
    CARET           reduce using rule 15 (elementary -> charclass .)
    COMMAND         reduce using rule 15 (elementary -> charclass .)
    LITERAL         reduce using rule 15 (elementary -> charclass .)
    DIGIT           reduce using rule 15 (elementary -> charclass .)
    LSQBRACKET      reduce using rule 15 (elementary -> charclass .)
    PIPE            reduce using rule 15 (elementary -> charclass .)
    $end            reduce using rule 15 (elementary -> charclass .)
    RPARENS         reduce using rule 15 (elementary -> charclass .)


state 9

    (4) simple -> concatenation .

    LPARENS         reduce using rule 4 (simple -> concatenation .)
    CARET           reduce using rule 4 (simple -> concatenation .)
    COMMAND         reduce using rule 4 (simple -> concatenation .)
    LITERAL         reduce using rule 4 (simple -> concatenation .)
    DIGIT           reduce using rule 4 (simple -> concatenation .)
    LSQBRACKET      reduce using rule 4 (simple -> concatenation .)
    PIPE            reduce using rule 4 (simple -> concatenation .)
    $end            reduce using rule 4 (simple -> concatenation .)
    RPARENS         reduce using rule 4 (simple -> concatenation .)


state 10

    (1) re -> alternation .

    PIPE            reduce using rule 1 (re -> alternation .)
    RPARENS         reduce using rule 1 (re -> alternation .)
    $end            reduce using rule 1 (re -> alternation .)


state 11

    (31) pcharclass -> LSQBRACKET . classitems RSQBRACKET
    (32) ncharclass -> LSQBRACKET . CARET classitems RSQBRACKET
    (33) classitems -> . literal
    (34) classitems -> . literal classitems
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT

    CARET           shift and go to state 26
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3

    literal                        shift and go to state 24
    classitems                     shift and go to state 25

state 12

    (29) charclass -> pcharclass .

    ASTERISK        reduce using rule 29 (charclass -> pcharclass .)
    PLUS            reduce using rule 29 (charclass -> pcharclass .)
    QMARK           reduce using rule 29 (charclass -> pcharclass .)
    LPARENS         reduce using rule 29 (charclass -> pcharclass .)
    CARET           reduce using rule 29 (charclass -> pcharclass .)
    COMMAND         reduce using rule 29 (charclass -> pcharclass .)
    LITERAL         reduce using rule 29 (charclass -> pcharclass .)
    DIGIT           reduce using rule 29 (charclass -> pcharclass .)
    LSQBRACKET      reduce using rule 29 (charclass -> pcharclass .)
    PIPE            reduce using rule 29 (charclass -> pcharclass .)
    $end            reduce using rule 29 (charclass -> pcharclass .)
    RPARENS         reduce using rule 29 (charclass -> pcharclass .)


state 13

    (2) re -> simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    PIPE            reduce using rule 2 (re -> simple .)
    RPARENS         reduce using rule 2 (re -> simple .)
    $end            reduce using rule 2 (re -> simple .)
    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    ncharclass                     shift and go to state 2
    basic                          shift and go to state 27
    group                          shift and go to state 22
    command                        shift and go to state 1
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    pcharclass                     shift and go to state 12
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    optional                       shift and go to state 21
    directionset                   shift and go to state 14

state 14

    (12) elementary -> directionset .

    ASTERISK        reduce using rule 12 (elementary -> directionset .)
    PLUS            reduce using rule 12 (elementary -> directionset .)
    QMARK           reduce using rule 12 (elementary -> directionset .)
    LPARENS         reduce using rule 12 (elementary -> directionset .)
    CARET           reduce using rule 12 (elementary -> directionset .)
    COMMAND         reduce using rule 12 (elementary -> directionset .)
    LITERAL         reduce using rule 12 (elementary -> directionset .)
    DIGIT           reduce using rule 12 (elementary -> directionset .)
    LSQBRACKET      reduce using rule 12 (elementary -> directionset .)
    PIPE            reduce using rule 12 (elementary -> directionset .)
    $end            reduce using rule 12 (elementary -> directionset .)
    RPARENS         reduce using rule 12 (elementary -> directionset .)


state 15

    (21) group -> LPARENS . groupbody RPARENS
    (22) groupbody -> . QMARK specialgroup
    (23) groupbody -> . basicgroup
    (28) basicgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    QMARK           shift and go to state 29
    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    directionset                   shift and go to state 14
    command                        shift and go to state 1
    ncharclass                     shift and go to state 2
    basic                          shift and go to state 16
    group                          shift and go to state 22
    groupbody                      shift and go to state 28
    simple                         shift and go to state 13
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    charclass                      shift and go to state 8
    elementary                     shift and go to state 20
    concatenation                  shift and go to state 9
    basicgroup                     shift and go to state 30
    alternation                    shift and go to state 10
    optional                       shift and go to state 21
    re                             shift and go to state 31
    pcharclass                     shift and go to state 12

state 16

    (5) simple -> basic .

    LPARENS         reduce using rule 5 (simple -> basic .)
    CARET           reduce using rule 5 (simple -> basic .)
    COMMAND         reduce using rule 5 (simple -> basic .)
    LITERAL         reduce using rule 5 (simple -> basic .)
    DIGIT           reduce using rule 5 (simple -> basic .)
    LSQBRACKET      reduce using rule 5 (simple -> basic .)
    PIPE            reduce using rule 5 (simple -> basic .)
    $end            reduce using rule 5 (simple -> basic .)
    RPARENS         reduce using rule 5 (simple -> basic .)


state 17

    (14) elementary -> literal .

    ASTERISK        reduce using rule 14 (elementary -> literal .)
    PLUS            reduce using rule 14 (elementary -> literal .)
    QMARK           reduce using rule 14 (elementary -> literal .)
    LPARENS         reduce using rule 14 (elementary -> literal .)
    CARET           reduce using rule 14 (elementary -> literal .)
    COMMAND         reduce using rule 14 (elementary -> literal .)
    LITERAL         reduce using rule 14 (elementary -> literal .)
    DIGIT           reduce using rule 14 (elementary -> literal .)
    LSQBRACKET      reduce using rule 14 (elementary -> literal .)
    PIPE            reduce using rule 14 (elementary -> literal .)
    $end            reduce using rule 14 (elementary -> literal .)
    RPARENS         reduce using rule 14 (elementary -> literal .)


state 18

    (0) S' -> re .
    (3) alternation -> re . PIPE simple

    PIPE            shift and go to state 32


state 19

    (9) basic -> plus .

    LPARENS         reduce using rule 9 (basic -> plus .)
    CARET           reduce using rule 9 (basic -> plus .)
    COMMAND         reduce using rule 9 (basic -> plus .)
    LITERAL         reduce using rule 9 (basic -> plus .)
    DIGIT           reduce using rule 9 (basic -> plus .)
    LSQBRACKET      reduce using rule 9 (basic -> plus .)
    PIPE            reduce using rule 9 (basic -> plus .)
    RPARENS         reduce using rule 9 (basic -> plus .)
    $end            reduce using rule 9 (basic -> plus .)


state 20

    (7) basic -> elementary .
    (16) asterisk -> elementary . ASTERISK
    (17) plus -> elementary . PLUS
    (18) optional -> elementary . QMARK

    LPARENS         reduce using rule 7 (basic -> elementary .)
    CARET           reduce using rule 7 (basic -> elementary .)
    COMMAND         reduce using rule 7 (basic -> elementary .)
    LITERAL         reduce using rule 7 (basic -> elementary .)
    DIGIT           reduce using rule 7 (basic -> elementary .)
    LSQBRACKET      reduce using rule 7 (basic -> elementary .)
    PIPE            reduce using rule 7 (basic -> elementary .)
    RPARENS         reduce using rule 7 (basic -> elementary .)
    $end            reduce using rule 7 (basic -> elementary .)
    ASTERISK        shift and go to state 34
    PLUS            shift and go to state 33
    QMARK           shift and go to state 35


state 21

    (10) basic -> optional .

    LPARENS         reduce using rule 10 (basic -> optional .)
    CARET           reduce using rule 10 (basic -> optional .)
    COMMAND         reduce using rule 10 (basic -> optional .)
    LITERAL         reduce using rule 10 (basic -> optional .)
    DIGIT           reduce using rule 10 (basic -> optional .)
    LSQBRACKET      reduce using rule 10 (basic -> optional .)
    PIPE            reduce using rule 10 (basic -> optional .)
    RPARENS         reduce using rule 10 (basic -> optional .)
    $end            reduce using rule 10 (basic -> optional .)


state 22

    (11) elementary -> group .

    ASTERISK        reduce using rule 11 (elementary -> group .)
    PLUS            reduce using rule 11 (elementary -> group .)
    QMARK           reduce using rule 11 (elementary -> group .)
    LPARENS         reduce using rule 11 (elementary -> group .)
    CARET           reduce using rule 11 (elementary -> group .)
    COMMAND         reduce using rule 11 (elementary -> group .)
    LITERAL         reduce using rule 11 (elementary -> group .)
    DIGIT           reduce using rule 11 (elementary -> group .)
    LSQBRACKET      reduce using rule 11 (elementary -> group .)
    PIPE            reduce using rule 11 (elementary -> group .)
    $end            reduce using rule 11 (elementary -> group .)
    RPARENS         reduce using rule 11 (elementary -> group .)


state 23

    (35) directionset -> CARET DIGIT .

    ASTERISK        reduce using rule 35 (directionset -> CARET DIGIT .)
    PLUS            reduce using rule 35 (directionset -> CARET DIGIT .)
    QMARK           reduce using rule 35 (directionset -> CARET DIGIT .)
    LPARENS         reduce using rule 35 (directionset -> CARET DIGIT .)
    CARET           reduce using rule 35 (directionset -> CARET DIGIT .)
    COMMAND         reduce using rule 35 (directionset -> CARET DIGIT .)
    LITERAL         reduce using rule 35 (directionset -> CARET DIGIT .)
    DIGIT           reduce using rule 35 (directionset -> CARET DIGIT .)
    LSQBRACKET      reduce using rule 35 (directionset -> CARET DIGIT .)
    PIPE            reduce using rule 35 (directionset -> CARET DIGIT .)
    $end            reduce using rule 35 (directionset -> CARET DIGIT .)
    RPARENS         reduce using rule 35 (directionset -> CARET DIGIT .)


state 24

    (33) classitems -> literal .
    (34) classitems -> literal . classitems
    (33) classitems -> . literal
    (34) classitems -> . literal classitems
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT

    RSQBRACKET      reduce using rule 33 (classitems -> literal .)
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3

    literal                        shift and go to state 24
    classitems                     shift and go to state 36

state 25

    (31) pcharclass -> LSQBRACKET classitems . RSQBRACKET

    RSQBRACKET      shift and go to state 37


state 26

    (32) ncharclass -> LSQBRACKET CARET . classitems RSQBRACKET
    (33) classitems -> . literal
    (34) classitems -> . literal classitems
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT

    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3

    literal                        shift and go to state 24
    classitems                     shift and go to state 38

state 27

    (6) concatenation -> simple basic .

    LPARENS         reduce using rule 6 (concatenation -> simple basic .)
    CARET           reduce using rule 6 (concatenation -> simple basic .)
    COMMAND         reduce using rule 6 (concatenation -> simple basic .)
    LITERAL         reduce using rule 6 (concatenation -> simple basic .)
    DIGIT           reduce using rule 6 (concatenation -> simple basic .)
    LSQBRACKET      reduce using rule 6 (concatenation -> simple basic .)
    PIPE            reduce using rule 6 (concatenation -> simple basic .)
    RPARENS         reduce using rule 6 (concatenation -> simple basic .)
    $end            reduce using rule 6 (concatenation -> simple basic .)


state 28

    (21) group -> LPARENS groupbody . RPARENS

    RPARENS         shift and go to state 39


state 29

    (22) groupbody -> QMARK . specialgroup
    (24) specialgroup -> . UNDERSCORE lengthcheck
    (25) specialgroup -> . PIPE stationarygroup

    UNDERSCORE      shift and go to state 40
    PIPE            shift and go to state 41

    specialgroup                   shift and go to state 42

state 30

    (23) groupbody -> basicgroup .

    RPARENS         reduce using rule 23 (groupbody -> basicgroup .)


state 31

    (28) basicgroup -> re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 28 (basicgroup -> re .)
    PIPE            shift and go to state 32


state 32

    (3) alternation -> re PIPE . simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    ncharclass                     shift and go to state 2
    basic                          shift and go to state 16
    group                          shift and go to state 22
    command                        shift and go to state 1
    simple                         shift and go to state 43
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    pcharclass                     shift and go to state 12
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    concatenation                  shift and go to state 9
    directionset                   shift and go to state 14
    optional                       shift and go to state 21

state 33

    (17) plus -> elementary PLUS .

    LPARENS         reduce using rule 17 (plus -> elementary PLUS .)
    CARET           reduce using rule 17 (plus -> elementary PLUS .)
    COMMAND         reduce using rule 17 (plus -> elementary PLUS .)
    LITERAL         reduce using rule 17 (plus -> elementary PLUS .)
    DIGIT           reduce using rule 17 (plus -> elementary PLUS .)
    LSQBRACKET      reduce using rule 17 (plus -> elementary PLUS .)
    PIPE            reduce using rule 17 (plus -> elementary PLUS .)
    $end            reduce using rule 17 (plus -> elementary PLUS .)
    RPARENS         reduce using rule 17 (plus -> elementary PLUS .)


state 34

    (16) asterisk -> elementary ASTERISK .

    LPARENS         reduce using rule 16 (asterisk -> elementary ASTERISK .)
    CARET           reduce using rule 16 (asterisk -> elementary ASTERISK .)
    COMMAND         reduce using rule 16 (asterisk -> elementary ASTERISK .)
    LITERAL         reduce using rule 16 (asterisk -> elementary ASTERISK .)
    DIGIT           reduce using rule 16 (asterisk -> elementary ASTERISK .)
    LSQBRACKET      reduce using rule 16 (asterisk -> elementary ASTERISK .)
    PIPE            reduce using rule 16 (asterisk -> elementary ASTERISK .)
    RPARENS         reduce using rule 16 (asterisk -> elementary ASTERISK .)
    $end            reduce using rule 16 (asterisk -> elementary ASTERISK .)


state 35

    (18) optional -> elementary QMARK .

    LPARENS         reduce using rule 18 (optional -> elementary QMARK .)
    CARET           reduce using rule 18 (optional -> elementary QMARK .)
    COMMAND         reduce using rule 18 (optional -> elementary QMARK .)
    LITERAL         reduce using rule 18 (optional -> elementary QMARK .)
    DIGIT           reduce using rule 18 (optional -> elementary QMARK .)
    LSQBRACKET      reduce using rule 18 (optional -> elementary QMARK .)
    PIPE            reduce using rule 18 (optional -> elementary QMARK .)
    $end            reduce using rule 18 (optional -> elementary QMARK .)
    RPARENS         reduce using rule 18 (optional -> elementary QMARK .)


state 36

    (34) classitems -> literal classitems .

    RSQBRACKET      reduce using rule 34 (classitems -> literal classitems .)


state 37

    (31) pcharclass -> LSQBRACKET classitems RSQBRACKET .

    ASTERISK        reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    PLUS            reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    QMARK           reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LPARENS         reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    CARET           reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    COMMAND         reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LITERAL         reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    DIGIT           reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LSQBRACKET      reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    PIPE            reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    RPARENS         reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    $end            reduce using rule 31 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)


state 38

    (32) ncharclass -> LSQBRACKET CARET classitems . RSQBRACKET

    RSQBRACKET      shift and go to state 44


state 39

    (21) group -> LPARENS groupbody RPARENS .

    ASTERISK        reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    PLUS            reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    QMARK           reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    LPARENS         reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    CARET           reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    COMMAND         reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    LITERAL         reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    DIGIT           reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    LSQBRACKET      reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    PIPE            reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    $end            reduce using rule 21 (group -> LPARENS groupbody RPARENS .)
    RPARENS         reduce using rule 21 (group -> LPARENS groupbody RPARENS .)


state 40

    (24) specialgroup -> UNDERSCORE . lengthcheck
    (26) lengthcheck -> . LPARENS number RPARENS re

    LPARENS         shift and go to state 45

    lengthcheck                    shift and go to state 46

state 41

    (25) specialgroup -> PIPE . stationarygroup
    (27) stationarygroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    ncharclass                     shift and go to state 2
    basic                          shift and go to state 16
    alternation                    shift and go to state 10
    command                        shift and go to state 1
    simple                         shift and go to state 13
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    stationarygroup                shift and go to state 47
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    concatenation                  shift and go to state 9
    directionset                   shift and go to state 14
    group                          shift and go to state 22
    optional                       shift and go to state 21
    re                             shift and go to state 48
    pcharclass                     shift and go to state 12

state 42

    (22) groupbody -> QMARK specialgroup .

    RPARENS         reduce using rule 22 (groupbody -> QMARK specialgroup .)


state 43

    (3) alternation -> re PIPE simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    PIPE            reduce using rule 3 (alternation -> re PIPE simple .)
    RPARENS         reduce using rule 3 (alternation -> re PIPE simple .)
    $end            reduce using rule 3 (alternation -> re PIPE simple .)
    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    ncharclass                     shift and go to state 2
    basic                          shift and go to state 27
    group                          shift and go to state 22
    command                        shift and go to state 1
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    pcharclass                     shift and go to state 12
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    optional                       shift and go to state 21
    directionset                   shift and go to state 14

state 44

    (32) ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .

    ASTERISK        reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    PLUS            reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    QMARK           reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LPARENS         reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    CARET           reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    COMMAND         reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LITERAL         reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    DIGIT           reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LSQBRACKET      reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    PIPE            reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    $end            reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    RPARENS         reduce using rule 32 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)


state 45

    (26) lengthcheck -> LPARENS . number RPARENS re
    (19) number -> . DIGIT
    (20) number -> . DIGIT number

    DIGIT           shift and go to state 50

    number                         shift and go to state 49

state 46

    (24) specialgroup -> UNDERSCORE lengthcheck .

    RPARENS         reduce using rule 24 (specialgroup -> UNDERSCORE lengthcheck .)


state 47

    (25) specialgroup -> PIPE stationarygroup .

    RPARENS         reduce using rule 25 (specialgroup -> PIPE stationarygroup .)


state 48

    (27) stationarygroup -> re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 27 (stationarygroup -> re .)
    PIPE            shift and go to state 32


state 49

    (26) lengthcheck -> LPARENS number . RPARENS re

    RPARENS         shift and go to state 51


state 50

    (19) number -> DIGIT .
    (20) number -> DIGIT . number
    (19) number -> . DIGIT
    (20) number -> . DIGIT number

    RPARENS         reduce using rule 19 (number -> DIGIT .)
    DIGIT           shift and go to state 50

    number                         shift and go to state 52

state 51

    (26) lengthcheck -> LPARENS number RPARENS . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) elementary -> . group
    (12) elementary -> . directionset
    (13) elementary -> . command
    (14) elementary -> . literal
    (15) elementary -> . charclass
    (16) asterisk -> . elementary ASTERISK
    (17) plus -> . elementary PLUS
    (18) optional -> . elementary QMARK
    (21) group -> . LPARENS groupbody RPARENS
    (35) directionset -> . CARET DIGIT
    (36) command -> . COMMAND
    (37) literal -> . LITERAL
    (38) literal -> . DIGIT
    (29) charclass -> . pcharclass
    (30) charclass -> . ncharclass
    (31) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (32) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 15
    CARET           shift and go to state 7
    COMMAND         shift and go to state 5
    LITERAL         shift and go to state 4
    DIGIT           shift and go to state 3
    LSQBRACKET      shift and go to state 11

    command                        shift and go to state 1
    ncharclass                     shift and go to state 2
    basic                          shift and go to state 16
    alternation                    shift and go to state 10
    simple                         shift and go to state 13
    literal                        shift and go to state 17
    asterisk                       shift and go to state 6
    plus                           shift and go to state 19
    pcharclass                     shift and go to state 12
    elementary                     shift and go to state 20
    charclass                      shift and go to state 8
    concatenation                  shift and go to state 9
    directionset                   shift and go to state 14
    group                          shift and go to state 22
    optional                       shift and go to state 21
    re                             shift and go to state 53

state 52

    (20) number -> DIGIT number .

    RPARENS         reduce using rule 20 (number -> DIGIT number .)


state 53

    (26) lengthcheck -> LPARENS number RPARENS re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 26 (lengthcheck -> LPARENS number RPARENS re .)
    PIPE            shift and go to state 32

