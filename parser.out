Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    EQUALS

Grammar

Rule 0     S' -> re
Rule 1     re -> alternation
Rule 2     re -> simple
Rule 3     alternation -> re PIPE simple
Rule 4     simple -> concatenation
Rule 5     simple -> basic
Rule 6     concatenation -> simple basic
Rule 7     basic -> elementary
Rule 8     basic -> asterisk
Rule 9     basic -> plus
Rule 10    basic -> optional
Rule 11    basic -> nrepeat
Rule 12    elementary -> group
Rule 13    elementary -> directionset
Rule 14    elementary -> command
Rule 15    elementary -> literal
Rule 16    elementary -> charclass
Rule 17    elementary -> any
Rule 18    elementary -> nodisplay
Rule 19    elementary -> anchor
Rule 20    asterisk -> elementary ASTERISK
Rule 21    plus -> elementary PLUS
Rule 22    optional -> elementary QMARK
Rule 23    nrepeat -> elementary LBRACE number RBRACE
Rule 24    nrepeat -> elementary LBRACE COMMA number RBRACE
Rule 25    nrepeat -> elementary LBRACE number COMMA RBRACE
Rule 26    nrepeat -> elementary LBRACE number COMMA number RBRACE
Rule 27    any -> DOT
Rule 28    nodisplay -> EMARK
Rule 29    number -> DIGIT
Rule 30    number -> DIGIT number
Rule 31    group -> LPARENS groupbody RPARENS
Rule 32    groupbody -> QMARK specialgroup
Rule 33    groupbody -> basicgroup
Rule 34    specialgroup -> UNDERSCORE lengthcheck
Rule 35    specialgroup -> PIPE stationarygroup
Rule 36    specialgroup -> COLON nocapture
Rule 37    lengthcheck -> LPARENS number RPARENS re
Rule 38    stationarygroup -> re
Rule 39    nocapture -> re
Rule 40    basicgroup -> re
Rule 41    charclass -> pcharclass
Rule 42    charclass -> ncharclass
Rule 43    pcharclass -> LSQBRACKET classitems RSQBRACKET
Rule 44    ncharclass -> LSQBRACKET CARET classitems RSQBRACKET
Rule 45    classitems -> literal
Rule 46    classitems -> literal classitems
Rule 47    directionset -> CARET DIGIT
Rule 48    anchor -> DOLLAR DIGIT
Rule 49    command -> COMMAND
Rule 50    literal -> LITERAL
Rule 51    literal -> DIGIT

Terminals, with rules where they appear

ASTERISK             : 20
CARET                : 44 47
COLON                : 36
COMMA                : 24 25 26
COMMAND              : 49
DIGIT                : 29 30 47 48 51
DOLLAR               : 48
DOT                  : 27
EMARK                : 28
EQUALS               : 
LBRACE               : 23 24 25 26
LITERAL              : 50
LPARENS              : 31 37
LSQBRACKET           : 43 44
PIPE                 : 3 35
PLUS                 : 21
QMARK                : 22 32
RBRACE               : 23 24 25 26
RPARENS              : 31 37
RSQBRACKET           : 43 44
UNDERSCORE           : 34
error                : 

Nonterminals, with rules where they appear

alternation          : 1
anchor               : 19
any                  : 17
asterisk             : 8
basic                : 5 6
basicgroup           : 33
charclass            : 16
classitems           : 43 44 46
command              : 14
concatenation        : 4
directionset         : 13
elementary           : 7 20 21 22 23 24 25 26
group                : 12
groupbody            : 31
lengthcheck          : 34
literal              : 15 45 46
ncharclass           : 42
nocapture            : 36
nodisplay            : 18
nrepeat              : 11
number               : 23 24 25 26 26 30 37
optional             : 10
pcharclass           : 41
plus                 : 9
re                   : 3 37 38 39 40 0
simple               : 2 3 6
specialgroup         : 32
stationarygroup      : 35

Parsing method: LALR

state 0

    (0) S' -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    re                             shift and go to state 2
    command                        shift and go to state 3
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    nrepeat                        shift and go to state 12
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 17
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    alternation                    shift and go to state 29

state 1

    (49) command -> COMMAND .

    ASTERISK        reduce using rule 49 (command -> COMMAND .)
    PLUS            reduce using rule 49 (command -> COMMAND .)
    QMARK           reduce using rule 49 (command -> COMMAND .)
    LBRACE          reduce using rule 49 (command -> COMMAND .)
    LPARENS         reduce using rule 49 (command -> COMMAND .)
    CARET           reduce using rule 49 (command -> COMMAND .)
    COMMAND         reduce using rule 49 (command -> COMMAND .)
    LITERAL         reduce using rule 49 (command -> COMMAND .)
    DIGIT           reduce using rule 49 (command -> COMMAND .)
    DOT             reduce using rule 49 (command -> COMMAND .)
    EMARK           reduce using rule 49 (command -> COMMAND .)
    DOLLAR          reduce using rule 49 (command -> COMMAND .)
    LSQBRACKET      reduce using rule 49 (command -> COMMAND .)
    PIPE            reduce using rule 49 (command -> COMMAND .)
    RPARENS         reduce using rule 49 (command -> COMMAND .)
    $end            reduce using rule 49 (command -> COMMAND .)


state 2

    (0) S' -> re .
    (3) alternation -> re . PIPE simple

    PIPE            shift and go to state 30


state 3

    (14) elementary -> command .

    ASTERISK        reduce using rule 14 (elementary -> command .)
    PLUS            reduce using rule 14 (elementary -> command .)
    QMARK           reduce using rule 14 (elementary -> command .)
    LBRACE          reduce using rule 14 (elementary -> command .)
    LPARENS         reduce using rule 14 (elementary -> command .)
    CARET           reduce using rule 14 (elementary -> command .)
    COMMAND         reduce using rule 14 (elementary -> command .)
    LITERAL         reduce using rule 14 (elementary -> command .)
    DIGIT           reduce using rule 14 (elementary -> command .)
    DOT             reduce using rule 14 (elementary -> command .)
    EMARK           reduce using rule 14 (elementary -> command .)
    DOLLAR          reduce using rule 14 (elementary -> command .)
    LSQBRACKET      reduce using rule 14 (elementary -> command .)
    PIPE            reduce using rule 14 (elementary -> command .)
    RPARENS         reduce using rule 14 (elementary -> command .)
    $end            reduce using rule 14 (elementary -> command .)


state 4

    (17) elementary -> any .

    ASTERISK        reduce using rule 17 (elementary -> any .)
    PLUS            reduce using rule 17 (elementary -> any .)
    QMARK           reduce using rule 17 (elementary -> any .)
    LBRACE          reduce using rule 17 (elementary -> any .)
    LPARENS         reduce using rule 17 (elementary -> any .)
    CARET           reduce using rule 17 (elementary -> any .)
    COMMAND         reduce using rule 17 (elementary -> any .)
    LITERAL         reduce using rule 17 (elementary -> any .)
    DIGIT           reduce using rule 17 (elementary -> any .)
    DOT             reduce using rule 17 (elementary -> any .)
    EMARK           reduce using rule 17 (elementary -> any .)
    DOLLAR          reduce using rule 17 (elementary -> any .)
    LSQBRACKET      reduce using rule 17 (elementary -> any .)
    PIPE            reduce using rule 17 (elementary -> any .)
    RPARENS         reduce using rule 17 (elementary -> any .)
    $end            reduce using rule 17 (elementary -> any .)


state 5

    (16) elementary -> charclass .

    ASTERISK        reduce using rule 16 (elementary -> charclass .)
    PLUS            reduce using rule 16 (elementary -> charclass .)
    QMARK           reduce using rule 16 (elementary -> charclass .)
    LBRACE          reduce using rule 16 (elementary -> charclass .)
    LPARENS         reduce using rule 16 (elementary -> charclass .)
    CARET           reduce using rule 16 (elementary -> charclass .)
    COMMAND         reduce using rule 16 (elementary -> charclass .)
    LITERAL         reduce using rule 16 (elementary -> charclass .)
    DIGIT           reduce using rule 16 (elementary -> charclass .)
    DOT             reduce using rule 16 (elementary -> charclass .)
    EMARK           reduce using rule 16 (elementary -> charclass .)
    DOLLAR          reduce using rule 16 (elementary -> charclass .)
    LSQBRACKET      reduce using rule 16 (elementary -> charclass .)
    PIPE            reduce using rule 16 (elementary -> charclass .)
    RPARENS         reduce using rule 16 (elementary -> charclass .)
    $end            reduce using rule 16 (elementary -> charclass .)


state 6

    (5) simple -> basic .

    LPARENS         reduce using rule 5 (simple -> basic .)
    CARET           reduce using rule 5 (simple -> basic .)
    COMMAND         reduce using rule 5 (simple -> basic .)
    LITERAL         reduce using rule 5 (simple -> basic .)
    DIGIT           reduce using rule 5 (simple -> basic .)
    DOT             reduce using rule 5 (simple -> basic .)
    EMARK           reduce using rule 5 (simple -> basic .)
    DOLLAR          reduce using rule 5 (simple -> basic .)
    LSQBRACKET      reduce using rule 5 (simple -> basic .)
    PIPE            reduce using rule 5 (simple -> basic .)
    RPARENS         reduce using rule 5 (simple -> basic .)
    $end            reduce using rule 5 (simple -> basic .)


state 7

    (18) elementary -> nodisplay .

    ASTERISK        reduce using rule 18 (elementary -> nodisplay .)
    PLUS            reduce using rule 18 (elementary -> nodisplay .)
    QMARK           reduce using rule 18 (elementary -> nodisplay .)
    LBRACE          reduce using rule 18 (elementary -> nodisplay .)
    LPARENS         reduce using rule 18 (elementary -> nodisplay .)
    CARET           reduce using rule 18 (elementary -> nodisplay .)
    COMMAND         reduce using rule 18 (elementary -> nodisplay .)
    LITERAL         reduce using rule 18 (elementary -> nodisplay .)
    DIGIT           reduce using rule 18 (elementary -> nodisplay .)
    DOT             reduce using rule 18 (elementary -> nodisplay .)
    EMARK           reduce using rule 18 (elementary -> nodisplay .)
    DOLLAR          reduce using rule 18 (elementary -> nodisplay .)
    LSQBRACKET      reduce using rule 18 (elementary -> nodisplay .)
    PIPE            reduce using rule 18 (elementary -> nodisplay .)
    RPARENS         reduce using rule 18 (elementary -> nodisplay .)
    $end            reduce using rule 18 (elementary -> nodisplay .)


state 8

    (19) elementary -> anchor .

    ASTERISK        reduce using rule 19 (elementary -> anchor .)
    PLUS            reduce using rule 19 (elementary -> anchor .)
    QMARK           reduce using rule 19 (elementary -> anchor .)
    LBRACE          reduce using rule 19 (elementary -> anchor .)
    LPARENS         reduce using rule 19 (elementary -> anchor .)
    CARET           reduce using rule 19 (elementary -> anchor .)
    COMMAND         reduce using rule 19 (elementary -> anchor .)
    LITERAL         reduce using rule 19 (elementary -> anchor .)
    DIGIT           reduce using rule 19 (elementary -> anchor .)
    DOT             reduce using rule 19 (elementary -> anchor .)
    EMARK           reduce using rule 19 (elementary -> anchor .)
    DOLLAR          reduce using rule 19 (elementary -> anchor .)
    LSQBRACKET      reduce using rule 19 (elementary -> anchor .)
    PIPE            reduce using rule 19 (elementary -> anchor .)
    RPARENS         reduce using rule 19 (elementary -> anchor .)
    $end            reduce using rule 19 (elementary -> anchor .)


state 9

    (48) anchor -> DOLLAR . DIGIT

    DIGIT           shift and go to state 31


state 10

    (28) nodisplay -> EMARK .

    ASTERISK        reduce using rule 28 (nodisplay -> EMARK .)
    PLUS            reduce using rule 28 (nodisplay -> EMARK .)
    QMARK           reduce using rule 28 (nodisplay -> EMARK .)
    LBRACE          reduce using rule 28 (nodisplay -> EMARK .)
    LPARENS         reduce using rule 28 (nodisplay -> EMARK .)
    CARET           reduce using rule 28 (nodisplay -> EMARK .)
    COMMAND         reduce using rule 28 (nodisplay -> EMARK .)
    LITERAL         reduce using rule 28 (nodisplay -> EMARK .)
    DIGIT           reduce using rule 28 (nodisplay -> EMARK .)
    DOT             reduce using rule 28 (nodisplay -> EMARK .)
    EMARK           reduce using rule 28 (nodisplay -> EMARK .)
    DOLLAR          reduce using rule 28 (nodisplay -> EMARK .)
    LSQBRACKET      reduce using rule 28 (nodisplay -> EMARK .)
    PIPE            reduce using rule 28 (nodisplay -> EMARK .)
    $end            reduce using rule 28 (nodisplay -> EMARK .)
    RPARENS         reduce using rule 28 (nodisplay -> EMARK .)


state 11

    (27) any -> DOT .

    ASTERISK        reduce using rule 27 (any -> DOT .)
    PLUS            reduce using rule 27 (any -> DOT .)
    QMARK           reduce using rule 27 (any -> DOT .)
    LBRACE          reduce using rule 27 (any -> DOT .)
    LPARENS         reduce using rule 27 (any -> DOT .)
    CARET           reduce using rule 27 (any -> DOT .)
    COMMAND         reduce using rule 27 (any -> DOT .)
    LITERAL         reduce using rule 27 (any -> DOT .)
    DIGIT           reduce using rule 27 (any -> DOT .)
    DOT             reduce using rule 27 (any -> DOT .)
    EMARK           reduce using rule 27 (any -> DOT .)
    DOLLAR          reduce using rule 27 (any -> DOT .)
    LSQBRACKET      reduce using rule 27 (any -> DOT .)
    PIPE            reduce using rule 27 (any -> DOT .)
    $end            reduce using rule 27 (any -> DOT .)
    RPARENS         reduce using rule 27 (any -> DOT .)


state 12

    (11) basic -> nrepeat .

    LPARENS         reduce using rule 11 (basic -> nrepeat .)
    CARET           reduce using rule 11 (basic -> nrepeat .)
    COMMAND         reduce using rule 11 (basic -> nrepeat .)
    LITERAL         reduce using rule 11 (basic -> nrepeat .)
    DIGIT           reduce using rule 11 (basic -> nrepeat .)
    DOT             reduce using rule 11 (basic -> nrepeat .)
    EMARK           reduce using rule 11 (basic -> nrepeat .)
    DOLLAR          reduce using rule 11 (basic -> nrepeat .)
    LSQBRACKET      reduce using rule 11 (basic -> nrepeat .)
    PIPE            reduce using rule 11 (basic -> nrepeat .)
    RPARENS         reduce using rule 11 (basic -> nrepeat .)
    $end            reduce using rule 11 (basic -> nrepeat .)


state 13

    (51) literal -> DIGIT .

    ASTERISK        reduce using rule 51 (literal -> DIGIT .)
    PLUS            reduce using rule 51 (literal -> DIGIT .)
    QMARK           reduce using rule 51 (literal -> DIGIT .)
    LBRACE          reduce using rule 51 (literal -> DIGIT .)
    LPARENS         reduce using rule 51 (literal -> DIGIT .)
    CARET           reduce using rule 51 (literal -> DIGIT .)
    COMMAND         reduce using rule 51 (literal -> DIGIT .)
    LITERAL         reduce using rule 51 (literal -> DIGIT .)
    DIGIT           reduce using rule 51 (literal -> DIGIT .)
    DOT             reduce using rule 51 (literal -> DIGIT .)
    EMARK           reduce using rule 51 (literal -> DIGIT .)
    DOLLAR          reduce using rule 51 (literal -> DIGIT .)
    LSQBRACKET      reduce using rule 51 (literal -> DIGIT .)
    PIPE            reduce using rule 51 (literal -> DIGIT .)
    RPARENS         reduce using rule 51 (literal -> DIGIT .)
    $end            reduce using rule 51 (literal -> DIGIT .)
    RSQBRACKET      reduce using rule 51 (literal -> DIGIT .)


state 14

    (12) elementary -> group .

    ASTERISK        reduce using rule 12 (elementary -> group .)
    PLUS            reduce using rule 12 (elementary -> group .)
    QMARK           reduce using rule 12 (elementary -> group .)
    LBRACE          reduce using rule 12 (elementary -> group .)
    LPARENS         reduce using rule 12 (elementary -> group .)
    CARET           reduce using rule 12 (elementary -> group .)
    COMMAND         reduce using rule 12 (elementary -> group .)
    LITERAL         reduce using rule 12 (elementary -> group .)
    DIGIT           reduce using rule 12 (elementary -> group .)
    DOT             reduce using rule 12 (elementary -> group .)
    EMARK           reduce using rule 12 (elementary -> group .)
    DOLLAR          reduce using rule 12 (elementary -> group .)
    LSQBRACKET      reduce using rule 12 (elementary -> group .)
    PIPE            reduce using rule 12 (elementary -> group .)
    RPARENS         reduce using rule 12 (elementary -> group .)
    $end            reduce using rule 12 (elementary -> group .)


state 15

    (9) basic -> plus .

    LPARENS         reduce using rule 9 (basic -> plus .)
    CARET           reduce using rule 9 (basic -> plus .)
    COMMAND         reduce using rule 9 (basic -> plus .)
    LITERAL         reduce using rule 9 (basic -> plus .)
    DIGIT           reduce using rule 9 (basic -> plus .)
    DOT             reduce using rule 9 (basic -> plus .)
    EMARK           reduce using rule 9 (basic -> plus .)
    DOLLAR          reduce using rule 9 (basic -> plus .)
    LSQBRACKET      reduce using rule 9 (basic -> plus .)
    PIPE            reduce using rule 9 (basic -> plus .)
    RPARENS         reduce using rule 9 (basic -> plus .)
    $end            reduce using rule 9 (basic -> plus .)


state 16

    (50) literal -> LITERAL .

    ASTERISK        reduce using rule 50 (literal -> LITERAL .)
    PLUS            reduce using rule 50 (literal -> LITERAL .)
    QMARK           reduce using rule 50 (literal -> LITERAL .)
    LBRACE          reduce using rule 50 (literal -> LITERAL .)
    LPARENS         reduce using rule 50 (literal -> LITERAL .)
    CARET           reduce using rule 50 (literal -> LITERAL .)
    COMMAND         reduce using rule 50 (literal -> LITERAL .)
    LITERAL         reduce using rule 50 (literal -> LITERAL .)
    DIGIT           reduce using rule 50 (literal -> LITERAL .)
    DOT             reduce using rule 50 (literal -> LITERAL .)
    EMARK           reduce using rule 50 (literal -> LITERAL .)
    DOLLAR          reduce using rule 50 (literal -> LITERAL .)
    LSQBRACKET      reduce using rule 50 (literal -> LITERAL .)
    PIPE            reduce using rule 50 (literal -> LITERAL .)
    RPARENS         reduce using rule 50 (literal -> LITERAL .)
    $end            reduce using rule 50 (literal -> LITERAL .)
    RSQBRACKET      reduce using rule 50 (literal -> LITERAL .)


state 17

    (2) re -> simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    PIPE            reduce using rule 2 (re -> simple .)
    RPARENS         reduce using rule 2 (re -> simple .)
    $end            reduce using rule 2 (re -> simple .)
    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    plus                           shift and go to state 15
    ncharclass                     shift and go to state 27
    command                        shift and go to state 3
    any                            shift and go to state 4
    literal                        shift and go to state 18
    charclass                      shift and go to state 5
    basic                          shift and go to state 32
    nodisplay                      shift and go to state 7
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    nrepeat                        shift and go to state 12
    anchor                         shift and go to state 8
    group                          shift and go to state 14

state 18

    (15) elementary -> literal .

    ASTERISK        reduce using rule 15 (elementary -> literal .)
    PLUS            reduce using rule 15 (elementary -> literal .)
    QMARK           reduce using rule 15 (elementary -> literal .)
    LBRACE          reduce using rule 15 (elementary -> literal .)
    LPARENS         reduce using rule 15 (elementary -> literal .)
    CARET           reduce using rule 15 (elementary -> literal .)
    COMMAND         reduce using rule 15 (elementary -> literal .)
    LITERAL         reduce using rule 15 (elementary -> literal .)
    DIGIT           reduce using rule 15 (elementary -> literal .)
    DOT             reduce using rule 15 (elementary -> literal .)
    EMARK           reduce using rule 15 (elementary -> literal .)
    DOLLAR          reduce using rule 15 (elementary -> literal .)
    LSQBRACKET      reduce using rule 15 (elementary -> literal .)
    PIPE            reduce using rule 15 (elementary -> literal .)
    RPARENS         reduce using rule 15 (elementary -> literal .)
    $end            reduce using rule 15 (elementary -> literal .)


state 19

    (47) directionset -> CARET . DIGIT

    DIGIT           shift and go to state 33


state 20

    (7) basic -> elementary .
    (20) asterisk -> elementary . ASTERISK
    (21) plus -> elementary . PLUS
    (22) optional -> elementary . QMARK
    (23) nrepeat -> elementary . LBRACE number RBRACE
    (24) nrepeat -> elementary . LBRACE COMMA number RBRACE
    (25) nrepeat -> elementary . LBRACE number COMMA RBRACE
    (26) nrepeat -> elementary . LBRACE number COMMA number RBRACE

    LPARENS         reduce using rule 7 (basic -> elementary .)
    CARET           reduce using rule 7 (basic -> elementary .)
    COMMAND         reduce using rule 7 (basic -> elementary .)
    LITERAL         reduce using rule 7 (basic -> elementary .)
    DIGIT           reduce using rule 7 (basic -> elementary .)
    DOT             reduce using rule 7 (basic -> elementary .)
    EMARK           reduce using rule 7 (basic -> elementary .)
    DOLLAR          reduce using rule 7 (basic -> elementary .)
    LSQBRACKET      reduce using rule 7 (basic -> elementary .)
    PIPE            reduce using rule 7 (basic -> elementary .)
    RPARENS         reduce using rule 7 (basic -> elementary .)
    $end            reduce using rule 7 (basic -> elementary .)
    ASTERISK        shift and go to state 36
    PLUS            shift and go to state 37
    QMARK           shift and go to state 35
    LBRACE          shift and go to state 34


state 21

    (13) elementary -> directionset .

    ASTERISK        reduce using rule 13 (elementary -> directionset .)
    PLUS            reduce using rule 13 (elementary -> directionset .)
    QMARK           reduce using rule 13 (elementary -> directionset .)
    LBRACE          reduce using rule 13 (elementary -> directionset .)
    LPARENS         reduce using rule 13 (elementary -> directionset .)
    CARET           reduce using rule 13 (elementary -> directionset .)
    COMMAND         reduce using rule 13 (elementary -> directionset .)
    LITERAL         reduce using rule 13 (elementary -> directionset .)
    DIGIT           reduce using rule 13 (elementary -> directionset .)
    DOT             reduce using rule 13 (elementary -> directionset .)
    EMARK           reduce using rule 13 (elementary -> directionset .)
    DOLLAR          reduce using rule 13 (elementary -> directionset .)
    LSQBRACKET      reduce using rule 13 (elementary -> directionset .)
    PIPE            reduce using rule 13 (elementary -> directionset .)
    RPARENS         reduce using rule 13 (elementary -> directionset .)
    $end            reduce using rule 13 (elementary -> directionset .)


state 22

    (10) basic -> optional .

    LPARENS         reduce using rule 10 (basic -> optional .)
    CARET           reduce using rule 10 (basic -> optional .)
    COMMAND         reduce using rule 10 (basic -> optional .)
    LITERAL         reduce using rule 10 (basic -> optional .)
    DIGIT           reduce using rule 10 (basic -> optional .)
    DOT             reduce using rule 10 (basic -> optional .)
    EMARK           reduce using rule 10 (basic -> optional .)
    DOLLAR          reduce using rule 10 (basic -> optional .)
    LSQBRACKET      reduce using rule 10 (basic -> optional .)
    PIPE            reduce using rule 10 (basic -> optional .)
    RPARENS         reduce using rule 10 (basic -> optional .)
    $end            reduce using rule 10 (basic -> optional .)


state 23

    (4) simple -> concatenation .

    LPARENS         reduce using rule 4 (simple -> concatenation .)
    CARET           reduce using rule 4 (simple -> concatenation .)
    COMMAND         reduce using rule 4 (simple -> concatenation .)
    LITERAL         reduce using rule 4 (simple -> concatenation .)
    DIGIT           reduce using rule 4 (simple -> concatenation .)
    DOT             reduce using rule 4 (simple -> concatenation .)
    EMARK           reduce using rule 4 (simple -> concatenation .)
    DOLLAR          reduce using rule 4 (simple -> concatenation .)
    LSQBRACKET      reduce using rule 4 (simple -> concatenation .)
    PIPE            reduce using rule 4 (simple -> concatenation .)
    RPARENS         reduce using rule 4 (simple -> concatenation .)
    $end            reduce using rule 4 (simple -> concatenation .)


state 24

    (31) group -> LPARENS . groupbody RPARENS
    (32) groupbody -> . QMARK specialgroup
    (33) groupbody -> . basicgroup
    (40) basicgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    QMARK           shift and go to state 38
    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    re                             shift and go to state 39
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    groupbody                      shift and go to state 40
    command                        shift and go to state 3
    nrepeat                        shift and go to state 12
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 17
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    basicgroup                     shift and go to state 41
    alternation                    shift and go to state 29

state 25

    (8) basic -> asterisk .

    LPARENS         reduce using rule 8 (basic -> asterisk .)
    CARET           reduce using rule 8 (basic -> asterisk .)
    COMMAND         reduce using rule 8 (basic -> asterisk .)
    LITERAL         reduce using rule 8 (basic -> asterisk .)
    DIGIT           reduce using rule 8 (basic -> asterisk .)
    DOT             reduce using rule 8 (basic -> asterisk .)
    EMARK           reduce using rule 8 (basic -> asterisk .)
    DOLLAR          reduce using rule 8 (basic -> asterisk .)
    LSQBRACKET      reduce using rule 8 (basic -> asterisk .)
    PIPE            reduce using rule 8 (basic -> asterisk .)
    RPARENS         reduce using rule 8 (basic -> asterisk .)
    $end            reduce using rule 8 (basic -> asterisk .)


state 26

    (41) charclass -> pcharclass .

    ASTERISK        reduce using rule 41 (charclass -> pcharclass .)
    PLUS            reduce using rule 41 (charclass -> pcharclass .)
    QMARK           reduce using rule 41 (charclass -> pcharclass .)
    LBRACE          reduce using rule 41 (charclass -> pcharclass .)
    LPARENS         reduce using rule 41 (charclass -> pcharclass .)
    CARET           reduce using rule 41 (charclass -> pcharclass .)
    COMMAND         reduce using rule 41 (charclass -> pcharclass .)
    LITERAL         reduce using rule 41 (charclass -> pcharclass .)
    DIGIT           reduce using rule 41 (charclass -> pcharclass .)
    DOT             reduce using rule 41 (charclass -> pcharclass .)
    EMARK           reduce using rule 41 (charclass -> pcharclass .)
    DOLLAR          reduce using rule 41 (charclass -> pcharclass .)
    LSQBRACKET      reduce using rule 41 (charclass -> pcharclass .)
    PIPE            reduce using rule 41 (charclass -> pcharclass .)
    $end            reduce using rule 41 (charclass -> pcharclass .)
    RPARENS         reduce using rule 41 (charclass -> pcharclass .)


state 27

    (42) charclass -> ncharclass .

    ASTERISK        reduce using rule 42 (charclass -> ncharclass .)
    PLUS            reduce using rule 42 (charclass -> ncharclass .)
    QMARK           reduce using rule 42 (charclass -> ncharclass .)
    LBRACE          reduce using rule 42 (charclass -> ncharclass .)
    LPARENS         reduce using rule 42 (charclass -> ncharclass .)
    CARET           reduce using rule 42 (charclass -> ncharclass .)
    COMMAND         reduce using rule 42 (charclass -> ncharclass .)
    LITERAL         reduce using rule 42 (charclass -> ncharclass .)
    DIGIT           reduce using rule 42 (charclass -> ncharclass .)
    DOT             reduce using rule 42 (charclass -> ncharclass .)
    EMARK           reduce using rule 42 (charclass -> ncharclass .)
    DOLLAR          reduce using rule 42 (charclass -> ncharclass .)
    LSQBRACKET      reduce using rule 42 (charclass -> ncharclass .)
    PIPE            reduce using rule 42 (charclass -> ncharclass .)
    $end            reduce using rule 42 (charclass -> ncharclass .)
    RPARENS         reduce using rule 42 (charclass -> ncharclass .)


state 28

    (43) pcharclass -> LSQBRACKET . classitems RSQBRACKET
    (44) ncharclass -> LSQBRACKET . CARET classitems RSQBRACKET
    (45) classitems -> . literal
    (46) classitems -> . literal classitems
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT

    CARET           shift and go to state 43
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13

    literal                        shift and go to state 42
    classitems                     shift and go to state 44

state 29

    (1) re -> alternation .

    PIPE            reduce using rule 1 (re -> alternation .)
    RPARENS         reduce using rule 1 (re -> alternation .)
    $end            reduce using rule 1 (re -> alternation .)


state 30

    (3) alternation -> re PIPE . simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    command                        shift and go to state 3
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    nrepeat                        shift and go to state 12
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 45
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26

state 31

    (48) anchor -> DOLLAR DIGIT .

    ASTERISK        reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    PLUS            reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    QMARK           reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    LBRACE          reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    LPARENS         reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    CARET           reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    COMMAND         reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    LITERAL         reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    DIGIT           reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    DOT             reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    EMARK           reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    DOLLAR          reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    LSQBRACKET      reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    PIPE            reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    RPARENS         reduce using rule 48 (anchor -> DOLLAR DIGIT .)
    $end            reduce using rule 48 (anchor -> DOLLAR DIGIT .)


state 32

    (6) concatenation -> simple basic .

    LPARENS         reduce using rule 6 (concatenation -> simple basic .)
    CARET           reduce using rule 6 (concatenation -> simple basic .)
    COMMAND         reduce using rule 6 (concatenation -> simple basic .)
    LITERAL         reduce using rule 6 (concatenation -> simple basic .)
    DIGIT           reduce using rule 6 (concatenation -> simple basic .)
    DOT             reduce using rule 6 (concatenation -> simple basic .)
    EMARK           reduce using rule 6 (concatenation -> simple basic .)
    DOLLAR          reduce using rule 6 (concatenation -> simple basic .)
    LSQBRACKET      reduce using rule 6 (concatenation -> simple basic .)
    PIPE            reduce using rule 6 (concatenation -> simple basic .)
    RPARENS         reduce using rule 6 (concatenation -> simple basic .)
    $end            reduce using rule 6 (concatenation -> simple basic .)


state 33

    (47) directionset -> CARET DIGIT .

    ASTERISK        reduce using rule 47 (directionset -> CARET DIGIT .)
    PLUS            reduce using rule 47 (directionset -> CARET DIGIT .)
    QMARK           reduce using rule 47 (directionset -> CARET DIGIT .)
    LBRACE          reduce using rule 47 (directionset -> CARET DIGIT .)
    LPARENS         reduce using rule 47 (directionset -> CARET DIGIT .)
    CARET           reduce using rule 47 (directionset -> CARET DIGIT .)
    COMMAND         reduce using rule 47 (directionset -> CARET DIGIT .)
    LITERAL         reduce using rule 47 (directionset -> CARET DIGIT .)
    DIGIT           reduce using rule 47 (directionset -> CARET DIGIT .)
    DOT             reduce using rule 47 (directionset -> CARET DIGIT .)
    EMARK           reduce using rule 47 (directionset -> CARET DIGIT .)
    DOLLAR          reduce using rule 47 (directionset -> CARET DIGIT .)
    LSQBRACKET      reduce using rule 47 (directionset -> CARET DIGIT .)
    PIPE            reduce using rule 47 (directionset -> CARET DIGIT .)
    $end            reduce using rule 47 (directionset -> CARET DIGIT .)
    RPARENS         reduce using rule 47 (directionset -> CARET DIGIT .)


state 34

    (23) nrepeat -> elementary LBRACE . number RBRACE
    (24) nrepeat -> elementary LBRACE . COMMA number RBRACE
    (25) nrepeat -> elementary LBRACE . number COMMA RBRACE
    (26) nrepeat -> elementary LBRACE . number COMMA number RBRACE
    (29) number -> . DIGIT
    (30) number -> . DIGIT number

    COMMA           shift and go to state 47
    DIGIT           shift and go to state 48

    number                         shift and go to state 46

state 35

    (22) optional -> elementary QMARK .

    LPARENS         reduce using rule 22 (optional -> elementary QMARK .)
    CARET           reduce using rule 22 (optional -> elementary QMARK .)
    COMMAND         reduce using rule 22 (optional -> elementary QMARK .)
    LITERAL         reduce using rule 22 (optional -> elementary QMARK .)
    DIGIT           reduce using rule 22 (optional -> elementary QMARK .)
    DOT             reduce using rule 22 (optional -> elementary QMARK .)
    EMARK           reduce using rule 22 (optional -> elementary QMARK .)
    DOLLAR          reduce using rule 22 (optional -> elementary QMARK .)
    LSQBRACKET      reduce using rule 22 (optional -> elementary QMARK .)
    PIPE            reduce using rule 22 (optional -> elementary QMARK .)
    RPARENS         reduce using rule 22 (optional -> elementary QMARK .)
    $end            reduce using rule 22 (optional -> elementary QMARK .)


state 36

    (20) asterisk -> elementary ASTERISK .

    LPARENS         reduce using rule 20 (asterisk -> elementary ASTERISK .)
    CARET           reduce using rule 20 (asterisk -> elementary ASTERISK .)
    COMMAND         reduce using rule 20 (asterisk -> elementary ASTERISK .)
    LITERAL         reduce using rule 20 (asterisk -> elementary ASTERISK .)
    DIGIT           reduce using rule 20 (asterisk -> elementary ASTERISK .)
    DOT             reduce using rule 20 (asterisk -> elementary ASTERISK .)
    EMARK           reduce using rule 20 (asterisk -> elementary ASTERISK .)
    DOLLAR          reduce using rule 20 (asterisk -> elementary ASTERISK .)
    LSQBRACKET      reduce using rule 20 (asterisk -> elementary ASTERISK .)
    PIPE            reduce using rule 20 (asterisk -> elementary ASTERISK .)
    RPARENS         reduce using rule 20 (asterisk -> elementary ASTERISK .)
    $end            reduce using rule 20 (asterisk -> elementary ASTERISK .)


state 37

    (21) plus -> elementary PLUS .

    LPARENS         reduce using rule 21 (plus -> elementary PLUS .)
    CARET           reduce using rule 21 (plus -> elementary PLUS .)
    COMMAND         reduce using rule 21 (plus -> elementary PLUS .)
    LITERAL         reduce using rule 21 (plus -> elementary PLUS .)
    DIGIT           reduce using rule 21 (plus -> elementary PLUS .)
    DOT             reduce using rule 21 (plus -> elementary PLUS .)
    EMARK           reduce using rule 21 (plus -> elementary PLUS .)
    DOLLAR          reduce using rule 21 (plus -> elementary PLUS .)
    LSQBRACKET      reduce using rule 21 (plus -> elementary PLUS .)
    PIPE            reduce using rule 21 (plus -> elementary PLUS .)
    RPARENS         reduce using rule 21 (plus -> elementary PLUS .)
    $end            reduce using rule 21 (plus -> elementary PLUS .)


state 38

    (32) groupbody -> QMARK . specialgroup
    (34) specialgroup -> . UNDERSCORE lengthcheck
    (35) specialgroup -> . PIPE stationarygroup
    (36) specialgroup -> . COLON nocapture

    UNDERSCORE      shift and go to state 49
    PIPE            shift and go to state 52
    COLON           shift and go to state 51

    specialgroup                   shift and go to state 50

state 39

    (40) basicgroup -> re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 40 (basicgroup -> re .)
    PIPE            shift and go to state 30


state 40

    (31) group -> LPARENS groupbody . RPARENS

    RPARENS         shift and go to state 53


state 41

    (33) groupbody -> basicgroup .

    RPARENS         reduce using rule 33 (groupbody -> basicgroup .)


state 42

    (45) classitems -> literal .
    (46) classitems -> literal . classitems
    (45) classitems -> . literal
    (46) classitems -> . literal classitems
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT

    RSQBRACKET      reduce using rule 45 (classitems -> literal .)
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13

    literal                        shift and go to state 42
    classitems                     shift and go to state 54

state 43

    (44) ncharclass -> LSQBRACKET CARET . classitems RSQBRACKET
    (45) classitems -> . literal
    (46) classitems -> . literal classitems
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT

    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13

    literal                        shift and go to state 42
    classitems                     shift and go to state 55

state 44

    (43) pcharclass -> LSQBRACKET classitems . RSQBRACKET

    RSQBRACKET      shift and go to state 56


state 45

    (3) alternation -> re PIPE simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    PIPE            reduce using rule 3 (alternation -> re PIPE simple .)
    RPARENS         reduce using rule 3 (alternation -> re PIPE simple .)
    $end            reduce using rule 3 (alternation -> re PIPE simple .)
    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    plus                           shift and go to state 15
    nodisplay                      shift and go to state 7
    ncharclass                     shift and go to state 27
    command                        shift and go to state 3
    any                            shift and go to state 4
    literal                        shift and go to state 18
    charclass                      shift and go to state 5
    basic                          shift and go to state 32
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    nrepeat                        shift and go to state 12
    anchor                         shift and go to state 8
    group                          shift and go to state 14

state 46

    (23) nrepeat -> elementary LBRACE number . RBRACE
    (25) nrepeat -> elementary LBRACE number . COMMA RBRACE
    (26) nrepeat -> elementary LBRACE number . COMMA number RBRACE

    RBRACE          shift and go to state 58
    COMMA           shift and go to state 57


state 47

    (24) nrepeat -> elementary LBRACE COMMA . number RBRACE
    (29) number -> . DIGIT
    (30) number -> . DIGIT number

    DIGIT           shift and go to state 48

    number                         shift and go to state 59

state 48

    (29) number -> DIGIT .
    (30) number -> DIGIT . number
    (29) number -> . DIGIT
    (30) number -> . DIGIT number

    RBRACE          reduce using rule 29 (number -> DIGIT .)
    COMMA           reduce using rule 29 (number -> DIGIT .)
    RPARENS         reduce using rule 29 (number -> DIGIT .)
    DIGIT           shift and go to state 48

    number                         shift and go to state 60

state 49

    (34) specialgroup -> UNDERSCORE . lengthcheck
    (37) lengthcheck -> . LPARENS number RPARENS re

    LPARENS         shift and go to state 62

    lengthcheck                    shift and go to state 61

state 50

    (32) groupbody -> QMARK specialgroup .

    RPARENS         reduce using rule 32 (groupbody -> QMARK specialgroup .)


state 51

    (36) specialgroup -> COLON . nocapture
    (39) nocapture -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    re                             shift and go to state 63
    nocapture                      shift and go to state 64
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    command                        shift and go to state 3
    nrepeat                        shift and go to state 12
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 17
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    alternation                    shift and go to state 29

state 52

    (35) specialgroup -> PIPE . stationarygroup
    (38) stationarygroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    re                             shift and go to state 65
    command                        shift and go to state 3
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    nrepeat                        shift and go to state 12
    stationarygroup                shift and go to state 66
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 17
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    alternation                    shift and go to state 29

state 53

    (31) group -> LPARENS groupbody RPARENS .

    ASTERISK        reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    PLUS            reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    QMARK           reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    LBRACE          reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    LPARENS         reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    CARET           reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    COMMAND         reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    LITERAL         reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    DIGIT           reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    DOT             reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    EMARK           reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    DOLLAR          reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    LSQBRACKET      reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    PIPE            reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    $end            reduce using rule 31 (group -> LPARENS groupbody RPARENS .)
    RPARENS         reduce using rule 31 (group -> LPARENS groupbody RPARENS .)


state 54

    (46) classitems -> literal classitems .

    RSQBRACKET      reduce using rule 46 (classitems -> literal classitems .)


state 55

    (44) ncharclass -> LSQBRACKET CARET classitems . RSQBRACKET

    RSQBRACKET      shift and go to state 67


state 56

    (43) pcharclass -> LSQBRACKET classitems RSQBRACKET .

    ASTERISK        reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    PLUS            reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    QMARK           reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LBRACE          reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LPARENS         reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    CARET           reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    COMMAND         reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LITERAL         reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    DIGIT           reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    DOT             reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    EMARK           reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    DOLLAR          reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    LSQBRACKET      reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    PIPE            reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    $end            reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)
    RPARENS         reduce using rule 43 (pcharclass -> LSQBRACKET classitems RSQBRACKET .)


state 57

    (25) nrepeat -> elementary LBRACE number COMMA . RBRACE
    (26) nrepeat -> elementary LBRACE number COMMA . number RBRACE
    (29) number -> . DIGIT
    (30) number -> . DIGIT number

    RBRACE          shift and go to state 69
    DIGIT           shift and go to state 48

    number                         shift and go to state 68

state 58

    (23) nrepeat -> elementary LBRACE number RBRACE .

    LPARENS         reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    CARET           reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    COMMAND         reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    LITERAL         reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    DIGIT           reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    DOT             reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    EMARK           reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    DOLLAR          reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    LSQBRACKET      reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    PIPE            reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    $end            reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)
    RPARENS         reduce using rule 23 (nrepeat -> elementary LBRACE number RBRACE .)


state 59

    (24) nrepeat -> elementary LBRACE COMMA number . RBRACE

    RBRACE          shift and go to state 70


state 60

    (30) number -> DIGIT number .

    RBRACE          reduce using rule 30 (number -> DIGIT number .)
    COMMA           reduce using rule 30 (number -> DIGIT number .)
    RPARENS         reduce using rule 30 (number -> DIGIT number .)


state 61

    (34) specialgroup -> UNDERSCORE lengthcheck .

    RPARENS         reduce using rule 34 (specialgroup -> UNDERSCORE lengthcheck .)


state 62

    (37) lengthcheck -> LPARENS . number RPARENS re
    (29) number -> . DIGIT
    (30) number -> . DIGIT number

    DIGIT           shift and go to state 48

    number                         shift and go to state 71

state 63

    (39) nocapture -> re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 39 (nocapture -> re .)
    PIPE            shift and go to state 30


state 64

    (36) specialgroup -> COLON nocapture .

    RPARENS         reduce using rule 36 (specialgroup -> COLON nocapture .)


state 65

    (38) stationarygroup -> re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 38 (stationarygroup -> re .)
    PIPE            shift and go to state 30


state 66

    (35) specialgroup -> PIPE stationarygroup .

    RPARENS         reduce using rule 35 (specialgroup -> PIPE stationarygroup .)


state 67

    (44) ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .

    ASTERISK        reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    PLUS            reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    QMARK           reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LBRACE          reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LPARENS         reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    CARET           reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    COMMAND         reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LITERAL         reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    DIGIT           reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    DOT             reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    EMARK           reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    DOLLAR          reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    LSQBRACKET      reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    PIPE            reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    $end            reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)
    RPARENS         reduce using rule 44 (ncharclass -> LSQBRACKET CARET classitems RSQBRACKET .)


state 68

    (26) nrepeat -> elementary LBRACE number COMMA number . RBRACE

    RBRACE          shift and go to state 72


state 69

    (25) nrepeat -> elementary LBRACE number COMMA RBRACE .

    LPARENS         reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    CARET           reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    COMMAND         reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    LITERAL         reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    DIGIT           reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    DOT             reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    EMARK           reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    DOLLAR          reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    LSQBRACKET      reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    PIPE            reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    $end            reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)
    RPARENS         reduce using rule 25 (nrepeat -> elementary LBRACE number COMMA RBRACE .)


state 70

    (24) nrepeat -> elementary LBRACE COMMA number RBRACE .

    LPARENS         reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    CARET           reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    COMMAND         reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    LITERAL         reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    DIGIT           reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    DOT             reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    EMARK           reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    DOLLAR          reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    LSQBRACKET      reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    PIPE            reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    $end            reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)
    RPARENS         reduce using rule 24 (nrepeat -> elementary LBRACE COMMA number RBRACE .)


state 71

    (37) lengthcheck -> LPARENS number . RPARENS re

    RPARENS         shift and go to state 73


state 72

    (26) nrepeat -> elementary LBRACE number COMMA number RBRACE .

    LPARENS         reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    CARET           reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    COMMAND         reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    LITERAL         reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    DIGIT           reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    DOT             reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    EMARK           reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    DOLLAR          reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    LSQBRACKET      reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    PIPE            reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    $end            reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)
    RPARENS         reduce using rule 26 (nrepeat -> elementary LBRACE number COMMA number RBRACE .)


state 73

    (37) lengthcheck -> LPARENS number RPARENS . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re PIPE simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . asterisk
    (9) basic -> . plus
    (10) basic -> . optional
    (11) basic -> . nrepeat
    (12) elementary -> . group
    (13) elementary -> . directionset
    (14) elementary -> . command
    (15) elementary -> . literal
    (16) elementary -> . charclass
    (17) elementary -> . any
    (18) elementary -> . nodisplay
    (19) elementary -> . anchor
    (20) asterisk -> . elementary ASTERISK
    (21) plus -> . elementary PLUS
    (22) optional -> . elementary QMARK
    (23) nrepeat -> . elementary LBRACE number RBRACE
    (24) nrepeat -> . elementary LBRACE COMMA number RBRACE
    (25) nrepeat -> . elementary LBRACE number COMMA RBRACE
    (26) nrepeat -> . elementary LBRACE number COMMA number RBRACE
    (31) group -> . LPARENS groupbody RPARENS
    (47) directionset -> . CARET DIGIT
    (49) command -> . COMMAND
    (50) literal -> . LITERAL
    (51) literal -> . DIGIT
    (41) charclass -> . pcharclass
    (42) charclass -> . ncharclass
    (27) any -> . DOT
    (28) nodisplay -> . EMARK
    (48) anchor -> . DOLLAR DIGIT
    (43) pcharclass -> . LSQBRACKET classitems RSQBRACKET
    (44) ncharclass -> . LSQBRACKET CARET classitems RSQBRACKET

    LPARENS         shift and go to state 24
    CARET           shift and go to state 19
    COMMAND         shift and go to state 1
    LITERAL         shift and go to state 16
    DIGIT           shift and go to state 13
    DOT             shift and go to state 11
    EMARK           shift and go to state 10
    DOLLAR          shift and go to state 9
    LSQBRACKET      shift and go to state 28

    re                             shift and go to state 74
    command                        shift and go to state 3
    any                            shift and go to state 4
    charclass                      shift and go to state 5
    basic                          shift and go to state 6
    nodisplay                      shift and go to state 7
    anchor                         shift and go to state 8
    nrepeat                        shift and go to state 12
    group                          shift and go to state 14
    plus                           shift and go to state 15
    simple                         shift and go to state 17
    literal                        shift and go to state 18
    ncharclass                     shift and go to state 27
    elementary                     shift and go to state 20
    directionset                   shift and go to state 21
    optional                       shift and go to state 22
    concatenation                  shift and go to state 23
    asterisk                       shift and go to state 25
    pcharclass                     shift and go to state 26
    alternation                    shift and go to state 29

state 74

    (37) lengthcheck -> LPARENS number RPARENS re .
    (3) alternation -> re . PIPE simple

    RPARENS         reduce using rule 37 (lengthcheck -> LPARENS number RPARENS re .)
    PIPE            shift and go to state 30

