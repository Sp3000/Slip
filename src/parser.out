Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> re
Rule 1     re -> alternation
Rule 2     re -> simple
Rule 3     re -> empty
Rule 4     empty -> <empty>
Rule 5     alternation -> re | simple
Rule 6     alternation -> re | empty
Rule 7     simple -> concatenation
Rule 8     simple -> basic
Rule 9     concatenation -> simple basic
Rule 10    basic -> elementary
Rule 11    basic -> quantifier
Rule 12    quantifier -> basequantifier
Rule 13    quantifier -> basequantifier ?
Rule 14    basequantifier -> asterisk
Rule 15    basequantifier -> plus
Rule 16    basequantifier -> optional
Rule 17    basequantifier -> nrepeat
Rule 18    elementary -> group
Rule 19    elementary -> directional
Rule 20    elementary -> command
Rule 21    elementary -> literal
Rule 22    elementary -> charclass
Rule 23    elementary -> anychar
Rule 24    elementary -> nodisplay
Rule 25    elementary -> nomatch
Rule 26    elementary -> nodispmatch
Rule 27    elementary -> anchor
Rule 28    elementary -> predefined
Rule 29    asterisk -> elementary *
Rule 30    plus -> elementary +
Rule 31    optional -> elementary ?
Rule 32    nrepeat -> elementary { number }
Rule 33    nrepeat -> elementary { , number }
Rule 34    nrepeat -> elementary { number , }
Rule 35    nrepeat -> elementary { number , number }
Rule 36    anychar -> .
Rule 37    nodisplay -> ,
Rule 38    nomatch -> :
Rule 39    nodispmatch -> ;
Rule 40    number -> DIGIT
Rule 41    number -> DIGIT number
Rule 42    group -> ( groupbody )
Rule 43    groupbody -> ? specialgroup
Rule 44    groupbody -> basicgroup
Rule 45    specialgroup -> _ lengthcheck
Rule 46    specialgroup -> | stationarygroup
Rule 47    specialgroup -> : nomatchgroup
Rule 48    specialgroup -> , nodispgroup
Rule 49    specialgroup -> ; nodispmatchgroup
Rule 50    specialgroup -> recursive
Rule 51    lengthcheck -> ( number ) re
Rule 52    stationarygroup -> re
Rule 53    nomatchgroup -> re
Rule 54    nodispgroup -> re
Rule 55    nodispmatchgroup -> re
Rule 56    recursive -> R
Rule 57    recursive -> number
Rule 58    basicgroup -> re
Rule 59    charclass -> [ classitems ]
Rule 60    classitems -> ^ baseitems
Rule 61    classitems -> classitems2
Rule 62    classitems2 -> baseitems
Rule 63    classitems2 -> baseitems | baseitems
Rule 64    baseitems -> classatom
Rule 65    baseitems -> classatom baseitems
Rule 66    classatom -> classliteral
Rule 67    classatom -> classrange
Rule 68    classliteral -> !
Rule 69    classliteral -> "
Rule 70    classliteral -> #
Rule 71    classliteral -> $
Rule 72    classliteral -> %
Rule 73    classliteral -> &
Rule 74    classliteral -> '
Rule 75    classliteral -> (
Rule 76    classliteral -> )
Rule 77    classliteral -> *
Rule 78    classliteral -> +
Rule 79    classliteral -> ,
Rule 80    classliteral -> .
Rule 81    classliteral -> /
Rule 82    classliteral -> :
Rule 83    classliteral -> ;
Rule 84    classliteral -> <
Rule 85    classliteral -> =
Rule 86    classliteral -> >
Rule 87    classliteral -> ?
Rule 88    classliteral -> @
Rule 89    classliteral -> [
Rule 90    classliteral -> \
Rule 91    classliteral -> _
Rule 92    classliteral -> `
Rule 93    classliteral -> {
Rule 94    classliteral -> }
Rule 95    classliteral -> ~
Rule 96    classliteral -> literal
Rule 97    classrange -> classliteral - classliteral
Rule 98    predefined -> ` alpha
Rule 99    directional -> ^ DIGIT
Rule 100   directional -> ^ alpha
Rule 101   directional -> ^ *
Rule 102   directional -> ^ +
Rule 103   anchor -> $ DIGIT
Rule 104   anchor -> $ alpha
Rule 105   anchor -> $ *
Rule 106   anchor -> $ +
Rule 107   anchor -> $ ^
Rule 108   command -> >
Rule 109   command -> <
Rule 110   command -> /
Rule 111   command -> \
Rule 112   command -> #
Rule 113   command -> %
Rule 114   literal -> ESCAPED
Rule 115   literal -> alpha
Rule 116   literal -> DIGIT
Rule 117   literal -> OTHER
Rule 118   alpha -> alpha_lower
Rule 119   alpha -> alpha_upper
Rule 120   alpha_lower -> a
Rule 121   alpha_lower -> b
Rule 122   alpha_lower -> c
Rule 123   alpha_lower -> d
Rule 124   alpha_lower -> e
Rule 125   alpha_lower -> f
Rule 126   alpha_lower -> g
Rule 127   alpha_lower -> h
Rule 128   alpha_lower -> i
Rule 129   alpha_lower -> j
Rule 130   alpha_lower -> k
Rule 131   alpha_lower -> l
Rule 132   alpha_lower -> m
Rule 133   alpha_lower -> n
Rule 134   alpha_lower -> o
Rule 135   alpha_lower -> p
Rule 136   alpha_lower -> q
Rule 137   alpha_lower -> r
Rule 138   alpha_lower -> s
Rule 139   alpha_lower -> t
Rule 140   alpha_lower -> u
Rule 141   alpha_lower -> v
Rule 142   alpha_lower -> w
Rule 143   alpha_lower -> x
Rule 144   alpha_lower -> y
Rule 145   alpha_lower -> z
Rule 146   alpha_upper -> A
Rule 147   alpha_upper -> B
Rule 148   alpha_upper -> C
Rule 149   alpha_upper -> D
Rule 150   alpha_upper -> E
Rule 151   alpha_upper -> F
Rule 152   alpha_upper -> G
Rule 153   alpha_upper -> H
Rule 154   alpha_upper -> I
Rule 155   alpha_upper -> J
Rule 156   alpha_upper -> K
Rule 157   alpha_upper -> L
Rule 158   alpha_upper -> M
Rule 159   alpha_upper -> N
Rule 160   alpha_upper -> O
Rule 161   alpha_upper -> P
Rule 162   alpha_upper -> Q
Rule 163   alpha_upper -> R
Rule 164   alpha_upper -> S
Rule 165   alpha_upper -> T
Rule 166   alpha_upper -> U
Rule 167   alpha_upper -> V
Rule 168   alpha_upper -> W
Rule 169   alpha_upper -> X
Rule 170   alpha_upper -> Y
Rule 171   alpha_upper -> Z

Terminals, with rules where they appear

!                    : 68
"                    : 69
#                    : 70 112
$                    : 71 103 104 105 106 107
%                    : 72 113
&                    : 73
'                    : 74
(                    : 42 51 75
)                    : 42 51 76
*                    : 29 77 101 105
+                    : 30 78 102 106
,                    : 33 34 35 37 48 79
-                    : 97
.                    : 36 80
/                    : 81 110
:                    : 38 47 82
;                    : 39 49 83
<                    : 84 109
=                    : 85
>                    : 86 108
?                    : 13 31 43 87
@                    : 88
A                    : 146
B                    : 147
C                    : 148
D                    : 149
DIGIT                : 40 41 99 103 116
E                    : 150
ESCAPED              : 114
F                    : 151
G                    : 152
H                    : 153
I                    : 154
J                    : 155
K                    : 156
L                    : 157
M                    : 158
N                    : 159
O                    : 160
OTHER                : 117
P                    : 161
Q                    : 162
R                    : 56 163
S                    : 164
T                    : 165
U                    : 166
V                    : 167
W                    : 168
X                    : 169
Y                    : 170
Z                    : 171
[                    : 59 89
\                    : 90 111
]                    : 59
^                    : 60 99 100 101 102 107
_                    : 45 91
`                    : 92 98
a                    : 120
b                    : 121
c                    : 122
d                    : 123
e                    : 124
error                : 
f                    : 125
g                    : 126
h                    : 127
i                    : 128
j                    : 129
k                    : 130
l                    : 131
m                    : 132
n                    : 133
o                    : 134
p                    : 135
q                    : 136
r                    : 137
s                    : 138
t                    : 139
u                    : 140
v                    : 141
w                    : 142
x                    : 143
y                    : 144
z                    : 145
{                    : 32 33 34 35 93
|                    : 5 6 46 63
}                    : 32 33 34 35 94
~                    : 95

Nonterminals, with rules where they appear

alpha                : 98 100 104 115
alpha_lower          : 118
alpha_upper          : 119
alternation          : 1
anchor               : 27
anychar              : 23
asterisk             : 14
baseitems            : 60 62 63 63 65
basequantifier       : 12 13
basic                : 8 9
basicgroup           : 44
charclass            : 22
classatom            : 64 65
classitems           : 59
classitems2          : 61
classliteral         : 66 97 97
classrange           : 67
command              : 20
concatenation        : 7
directional          : 19
elementary           : 10 29 30 31 32 33 34 35
empty                : 3 6
group                : 18
groupbody            : 42
lengthcheck          : 45
literal              : 21 96
nodispgroup          : 48
nodisplay            : 24
nodispmatch          : 26
nodispmatchgroup     : 49
nomatch              : 25
nomatchgroup         : 47
nrepeat              : 17
number               : 32 33 34 35 35 41 51 57
optional             : 16
plus                 : 15
predefined           : 28
quantifier           : 11
re                   : 5 6 51 52 53 54 55 58 0
recursive            : 50
simple               : 2 5 9
specialgroup         : 43
stationarygroup      : 46

Parsing method: LALR

state 0

    (0) S' -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 78
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 1

    (132) alpha_lower -> m .

    -               reduce using rule 132 (alpha_lower -> m .)
    !               reduce using rule 132 (alpha_lower -> m .)
    "               reduce using rule 132 (alpha_lower -> m .)
    #               reduce using rule 132 (alpha_lower -> m .)
    $               reduce using rule 132 (alpha_lower -> m .)
    %               reduce using rule 132 (alpha_lower -> m .)
    &               reduce using rule 132 (alpha_lower -> m .)
    '               reduce using rule 132 (alpha_lower -> m .)
    (               reduce using rule 132 (alpha_lower -> m .)
    )               reduce using rule 132 (alpha_lower -> m .)
    *               reduce using rule 132 (alpha_lower -> m .)
    +               reduce using rule 132 (alpha_lower -> m .)
    ,               reduce using rule 132 (alpha_lower -> m .)
    .               reduce using rule 132 (alpha_lower -> m .)
    /               reduce using rule 132 (alpha_lower -> m .)
    :               reduce using rule 132 (alpha_lower -> m .)
    ;               reduce using rule 132 (alpha_lower -> m .)
    <               reduce using rule 132 (alpha_lower -> m .)
    =               reduce using rule 132 (alpha_lower -> m .)
    >               reduce using rule 132 (alpha_lower -> m .)
    ?               reduce using rule 132 (alpha_lower -> m .)
    @               reduce using rule 132 (alpha_lower -> m .)
    [               reduce using rule 132 (alpha_lower -> m .)
    \               reduce using rule 132 (alpha_lower -> m .)
    _               reduce using rule 132 (alpha_lower -> m .)
    `               reduce using rule 132 (alpha_lower -> m .)
    {               reduce using rule 132 (alpha_lower -> m .)
    }               reduce using rule 132 (alpha_lower -> m .)
    ~               reduce using rule 132 (alpha_lower -> m .)
    ESCAPED         reduce using rule 132 (alpha_lower -> m .)
    DIGIT           reduce using rule 132 (alpha_lower -> m .)
    OTHER           reduce using rule 132 (alpha_lower -> m .)
    a               reduce using rule 132 (alpha_lower -> m .)
    b               reduce using rule 132 (alpha_lower -> m .)
    c               reduce using rule 132 (alpha_lower -> m .)
    d               reduce using rule 132 (alpha_lower -> m .)
    e               reduce using rule 132 (alpha_lower -> m .)
    f               reduce using rule 132 (alpha_lower -> m .)
    g               reduce using rule 132 (alpha_lower -> m .)
    h               reduce using rule 132 (alpha_lower -> m .)
    i               reduce using rule 132 (alpha_lower -> m .)
    j               reduce using rule 132 (alpha_lower -> m .)
    k               reduce using rule 132 (alpha_lower -> m .)
    l               reduce using rule 132 (alpha_lower -> m .)
    m               reduce using rule 132 (alpha_lower -> m .)
    n               reduce using rule 132 (alpha_lower -> m .)
    o               reduce using rule 132 (alpha_lower -> m .)
    p               reduce using rule 132 (alpha_lower -> m .)
    q               reduce using rule 132 (alpha_lower -> m .)
    r               reduce using rule 132 (alpha_lower -> m .)
    s               reduce using rule 132 (alpha_lower -> m .)
    t               reduce using rule 132 (alpha_lower -> m .)
    u               reduce using rule 132 (alpha_lower -> m .)
    v               reduce using rule 132 (alpha_lower -> m .)
    w               reduce using rule 132 (alpha_lower -> m .)
    x               reduce using rule 132 (alpha_lower -> m .)
    y               reduce using rule 132 (alpha_lower -> m .)
    z               reduce using rule 132 (alpha_lower -> m .)
    A               reduce using rule 132 (alpha_lower -> m .)
    B               reduce using rule 132 (alpha_lower -> m .)
    C               reduce using rule 132 (alpha_lower -> m .)
    D               reduce using rule 132 (alpha_lower -> m .)
    E               reduce using rule 132 (alpha_lower -> m .)
    F               reduce using rule 132 (alpha_lower -> m .)
    G               reduce using rule 132 (alpha_lower -> m .)
    H               reduce using rule 132 (alpha_lower -> m .)
    I               reduce using rule 132 (alpha_lower -> m .)
    J               reduce using rule 132 (alpha_lower -> m .)
    K               reduce using rule 132 (alpha_lower -> m .)
    L               reduce using rule 132 (alpha_lower -> m .)
    M               reduce using rule 132 (alpha_lower -> m .)
    N               reduce using rule 132 (alpha_lower -> m .)
    O               reduce using rule 132 (alpha_lower -> m .)
    P               reduce using rule 132 (alpha_lower -> m .)
    Q               reduce using rule 132 (alpha_lower -> m .)
    R               reduce using rule 132 (alpha_lower -> m .)
    S               reduce using rule 132 (alpha_lower -> m .)
    T               reduce using rule 132 (alpha_lower -> m .)
    U               reduce using rule 132 (alpha_lower -> m .)
    V               reduce using rule 132 (alpha_lower -> m .)
    W               reduce using rule 132 (alpha_lower -> m .)
    X               reduce using rule 132 (alpha_lower -> m .)
    Y               reduce using rule 132 (alpha_lower -> m .)
    Z               reduce using rule 132 (alpha_lower -> m .)
    ]               reduce using rule 132 (alpha_lower -> m .)
    ^               reduce using rule 132 (alpha_lower -> m .)
    |               reduce using rule 132 (alpha_lower -> m .)
    $end            reduce using rule 132 (alpha_lower -> m .)


state 2

    (36) anychar -> . .

    *               reduce using rule 36 (anychar -> . .)
    +               reduce using rule 36 (anychar -> . .)
    ?               reduce using rule 36 (anychar -> . .)
    {               reduce using rule 36 (anychar -> . .)
    (               reduce using rule 36 (anychar -> . .)
    ^               reduce using rule 36 (anychar -> . .)
    >               reduce using rule 36 (anychar -> . .)
    <               reduce using rule 36 (anychar -> . .)
    /               reduce using rule 36 (anychar -> . .)
    \               reduce using rule 36 (anychar -> . .)
    #               reduce using rule 36 (anychar -> . .)
    %               reduce using rule 36 (anychar -> . .)
    ESCAPED         reduce using rule 36 (anychar -> . .)
    DIGIT           reduce using rule 36 (anychar -> . .)
    OTHER           reduce using rule 36 (anychar -> . .)
    [               reduce using rule 36 (anychar -> . .)
    .               reduce using rule 36 (anychar -> . .)
    ,               reduce using rule 36 (anychar -> . .)
    :               reduce using rule 36 (anychar -> . .)
    ;               reduce using rule 36 (anychar -> . .)
    $               reduce using rule 36 (anychar -> . .)
    `               reduce using rule 36 (anychar -> . .)
    a               reduce using rule 36 (anychar -> . .)
    b               reduce using rule 36 (anychar -> . .)
    c               reduce using rule 36 (anychar -> . .)
    d               reduce using rule 36 (anychar -> . .)
    e               reduce using rule 36 (anychar -> . .)
    f               reduce using rule 36 (anychar -> . .)
    g               reduce using rule 36 (anychar -> . .)
    h               reduce using rule 36 (anychar -> . .)
    i               reduce using rule 36 (anychar -> . .)
    j               reduce using rule 36 (anychar -> . .)
    k               reduce using rule 36 (anychar -> . .)
    l               reduce using rule 36 (anychar -> . .)
    m               reduce using rule 36 (anychar -> . .)
    n               reduce using rule 36 (anychar -> . .)
    o               reduce using rule 36 (anychar -> . .)
    p               reduce using rule 36 (anychar -> . .)
    q               reduce using rule 36 (anychar -> . .)
    r               reduce using rule 36 (anychar -> . .)
    s               reduce using rule 36 (anychar -> . .)
    t               reduce using rule 36 (anychar -> . .)
    u               reduce using rule 36 (anychar -> . .)
    v               reduce using rule 36 (anychar -> . .)
    w               reduce using rule 36 (anychar -> . .)
    x               reduce using rule 36 (anychar -> . .)
    y               reduce using rule 36 (anychar -> . .)
    z               reduce using rule 36 (anychar -> . .)
    A               reduce using rule 36 (anychar -> . .)
    B               reduce using rule 36 (anychar -> . .)
    C               reduce using rule 36 (anychar -> . .)
    D               reduce using rule 36 (anychar -> . .)
    E               reduce using rule 36 (anychar -> . .)
    F               reduce using rule 36 (anychar -> . .)
    G               reduce using rule 36 (anychar -> . .)
    H               reduce using rule 36 (anychar -> . .)
    I               reduce using rule 36 (anychar -> . .)
    J               reduce using rule 36 (anychar -> . .)
    K               reduce using rule 36 (anychar -> . .)
    L               reduce using rule 36 (anychar -> . .)
    M               reduce using rule 36 (anychar -> . .)
    N               reduce using rule 36 (anychar -> . .)
    O               reduce using rule 36 (anychar -> . .)
    P               reduce using rule 36 (anychar -> . .)
    Q               reduce using rule 36 (anychar -> . .)
    R               reduce using rule 36 (anychar -> . .)
    S               reduce using rule 36 (anychar -> . .)
    T               reduce using rule 36 (anychar -> . .)
    U               reduce using rule 36 (anychar -> . .)
    V               reduce using rule 36 (anychar -> . .)
    W               reduce using rule 36 (anychar -> . .)
    X               reduce using rule 36 (anychar -> . .)
    Y               reduce using rule 36 (anychar -> . .)
    Z               reduce using rule 36 (anychar -> . .)
    |               reduce using rule 36 (anychar -> . .)
    $end            reduce using rule 36 (anychar -> . .)
    )               reduce using rule 36 (anychar -> . .)


state 3

    (22) elementary -> charclass .

    *               reduce using rule 22 (elementary -> charclass .)
    +               reduce using rule 22 (elementary -> charclass .)
    ?               reduce using rule 22 (elementary -> charclass .)
    {               reduce using rule 22 (elementary -> charclass .)
    (               reduce using rule 22 (elementary -> charclass .)
    ^               reduce using rule 22 (elementary -> charclass .)
    >               reduce using rule 22 (elementary -> charclass .)
    <               reduce using rule 22 (elementary -> charclass .)
    /               reduce using rule 22 (elementary -> charclass .)
    \               reduce using rule 22 (elementary -> charclass .)
    #               reduce using rule 22 (elementary -> charclass .)
    %               reduce using rule 22 (elementary -> charclass .)
    ESCAPED         reduce using rule 22 (elementary -> charclass .)
    DIGIT           reduce using rule 22 (elementary -> charclass .)
    OTHER           reduce using rule 22 (elementary -> charclass .)
    [               reduce using rule 22 (elementary -> charclass .)
    .               reduce using rule 22 (elementary -> charclass .)
    ,               reduce using rule 22 (elementary -> charclass .)
    :               reduce using rule 22 (elementary -> charclass .)
    ;               reduce using rule 22 (elementary -> charclass .)
    $               reduce using rule 22 (elementary -> charclass .)
    `               reduce using rule 22 (elementary -> charclass .)
    a               reduce using rule 22 (elementary -> charclass .)
    b               reduce using rule 22 (elementary -> charclass .)
    c               reduce using rule 22 (elementary -> charclass .)
    d               reduce using rule 22 (elementary -> charclass .)
    e               reduce using rule 22 (elementary -> charclass .)
    f               reduce using rule 22 (elementary -> charclass .)
    g               reduce using rule 22 (elementary -> charclass .)
    h               reduce using rule 22 (elementary -> charclass .)
    i               reduce using rule 22 (elementary -> charclass .)
    j               reduce using rule 22 (elementary -> charclass .)
    k               reduce using rule 22 (elementary -> charclass .)
    l               reduce using rule 22 (elementary -> charclass .)
    m               reduce using rule 22 (elementary -> charclass .)
    n               reduce using rule 22 (elementary -> charclass .)
    o               reduce using rule 22 (elementary -> charclass .)
    p               reduce using rule 22 (elementary -> charclass .)
    q               reduce using rule 22 (elementary -> charclass .)
    r               reduce using rule 22 (elementary -> charclass .)
    s               reduce using rule 22 (elementary -> charclass .)
    t               reduce using rule 22 (elementary -> charclass .)
    u               reduce using rule 22 (elementary -> charclass .)
    v               reduce using rule 22 (elementary -> charclass .)
    w               reduce using rule 22 (elementary -> charclass .)
    x               reduce using rule 22 (elementary -> charclass .)
    y               reduce using rule 22 (elementary -> charclass .)
    z               reduce using rule 22 (elementary -> charclass .)
    A               reduce using rule 22 (elementary -> charclass .)
    B               reduce using rule 22 (elementary -> charclass .)
    C               reduce using rule 22 (elementary -> charclass .)
    D               reduce using rule 22 (elementary -> charclass .)
    E               reduce using rule 22 (elementary -> charclass .)
    F               reduce using rule 22 (elementary -> charclass .)
    G               reduce using rule 22 (elementary -> charclass .)
    H               reduce using rule 22 (elementary -> charclass .)
    I               reduce using rule 22 (elementary -> charclass .)
    J               reduce using rule 22 (elementary -> charclass .)
    K               reduce using rule 22 (elementary -> charclass .)
    L               reduce using rule 22 (elementary -> charclass .)
    M               reduce using rule 22 (elementary -> charclass .)
    N               reduce using rule 22 (elementary -> charclass .)
    O               reduce using rule 22 (elementary -> charclass .)
    P               reduce using rule 22 (elementary -> charclass .)
    Q               reduce using rule 22 (elementary -> charclass .)
    R               reduce using rule 22 (elementary -> charclass .)
    S               reduce using rule 22 (elementary -> charclass .)
    T               reduce using rule 22 (elementary -> charclass .)
    U               reduce using rule 22 (elementary -> charclass .)
    V               reduce using rule 22 (elementary -> charclass .)
    W               reduce using rule 22 (elementary -> charclass .)
    X               reduce using rule 22 (elementary -> charclass .)
    Y               reduce using rule 22 (elementary -> charclass .)
    Z               reduce using rule 22 (elementary -> charclass .)
    |               reduce using rule 22 (elementary -> charclass .)
    )               reduce using rule 22 (elementary -> charclass .)
    $end            reduce using rule 22 (elementary -> charclass .)


state 4

    (166) alpha_upper -> U .

    *               reduce using rule 166 (alpha_upper -> U .)
    +               reduce using rule 166 (alpha_upper -> U .)
    ?               reduce using rule 166 (alpha_upper -> U .)
    {               reduce using rule 166 (alpha_upper -> U .)
    (               reduce using rule 166 (alpha_upper -> U .)
    ^               reduce using rule 166 (alpha_upper -> U .)
    >               reduce using rule 166 (alpha_upper -> U .)
    <               reduce using rule 166 (alpha_upper -> U .)
    /               reduce using rule 166 (alpha_upper -> U .)
    \               reduce using rule 166 (alpha_upper -> U .)
    #               reduce using rule 166 (alpha_upper -> U .)
    %               reduce using rule 166 (alpha_upper -> U .)
    ESCAPED         reduce using rule 166 (alpha_upper -> U .)
    DIGIT           reduce using rule 166 (alpha_upper -> U .)
    OTHER           reduce using rule 166 (alpha_upper -> U .)
    [               reduce using rule 166 (alpha_upper -> U .)
    .               reduce using rule 166 (alpha_upper -> U .)
    ,               reduce using rule 166 (alpha_upper -> U .)
    :               reduce using rule 166 (alpha_upper -> U .)
    ;               reduce using rule 166 (alpha_upper -> U .)
    $               reduce using rule 166 (alpha_upper -> U .)
    `               reduce using rule 166 (alpha_upper -> U .)
    a               reduce using rule 166 (alpha_upper -> U .)
    b               reduce using rule 166 (alpha_upper -> U .)
    c               reduce using rule 166 (alpha_upper -> U .)
    d               reduce using rule 166 (alpha_upper -> U .)
    e               reduce using rule 166 (alpha_upper -> U .)
    f               reduce using rule 166 (alpha_upper -> U .)
    g               reduce using rule 166 (alpha_upper -> U .)
    h               reduce using rule 166 (alpha_upper -> U .)
    i               reduce using rule 166 (alpha_upper -> U .)
    j               reduce using rule 166 (alpha_upper -> U .)
    k               reduce using rule 166 (alpha_upper -> U .)
    l               reduce using rule 166 (alpha_upper -> U .)
    m               reduce using rule 166 (alpha_upper -> U .)
    n               reduce using rule 166 (alpha_upper -> U .)
    o               reduce using rule 166 (alpha_upper -> U .)
    p               reduce using rule 166 (alpha_upper -> U .)
    q               reduce using rule 166 (alpha_upper -> U .)
    r               reduce using rule 166 (alpha_upper -> U .)
    s               reduce using rule 166 (alpha_upper -> U .)
    t               reduce using rule 166 (alpha_upper -> U .)
    u               reduce using rule 166 (alpha_upper -> U .)
    v               reduce using rule 166 (alpha_upper -> U .)
    w               reduce using rule 166 (alpha_upper -> U .)
    x               reduce using rule 166 (alpha_upper -> U .)
    y               reduce using rule 166 (alpha_upper -> U .)
    z               reduce using rule 166 (alpha_upper -> U .)
    A               reduce using rule 166 (alpha_upper -> U .)
    B               reduce using rule 166 (alpha_upper -> U .)
    C               reduce using rule 166 (alpha_upper -> U .)
    D               reduce using rule 166 (alpha_upper -> U .)
    E               reduce using rule 166 (alpha_upper -> U .)
    F               reduce using rule 166 (alpha_upper -> U .)
    G               reduce using rule 166 (alpha_upper -> U .)
    H               reduce using rule 166 (alpha_upper -> U .)
    I               reduce using rule 166 (alpha_upper -> U .)
    J               reduce using rule 166 (alpha_upper -> U .)
    K               reduce using rule 166 (alpha_upper -> U .)
    L               reduce using rule 166 (alpha_upper -> U .)
    M               reduce using rule 166 (alpha_upper -> U .)
    N               reduce using rule 166 (alpha_upper -> U .)
    O               reduce using rule 166 (alpha_upper -> U .)
    P               reduce using rule 166 (alpha_upper -> U .)
    Q               reduce using rule 166 (alpha_upper -> U .)
    R               reduce using rule 166 (alpha_upper -> U .)
    S               reduce using rule 166 (alpha_upper -> U .)
    T               reduce using rule 166 (alpha_upper -> U .)
    U               reduce using rule 166 (alpha_upper -> U .)
    V               reduce using rule 166 (alpha_upper -> U .)
    W               reduce using rule 166 (alpha_upper -> U .)
    X               reduce using rule 166 (alpha_upper -> U .)
    Y               reduce using rule 166 (alpha_upper -> U .)
    Z               reduce using rule 166 (alpha_upper -> U .)
    |               reduce using rule 166 (alpha_upper -> U .)
    $end            reduce using rule 166 (alpha_upper -> U .)
    )               reduce using rule 166 (alpha_upper -> U .)
    -               reduce using rule 166 (alpha_upper -> U .)
    !               reduce using rule 166 (alpha_upper -> U .)
    "               reduce using rule 166 (alpha_upper -> U .)
    &               reduce using rule 166 (alpha_upper -> U .)
    '               reduce using rule 166 (alpha_upper -> U .)
    =               reduce using rule 166 (alpha_upper -> U .)
    @               reduce using rule 166 (alpha_upper -> U .)
    _               reduce using rule 166 (alpha_upper -> U .)
    }               reduce using rule 166 (alpha_upper -> U .)
    ~               reduce using rule 166 (alpha_upper -> U .)
    ]               reduce using rule 166 (alpha_upper -> U .)


state 5

    (140) alpha_lower -> u .

    -               reduce using rule 140 (alpha_lower -> u .)
    !               reduce using rule 140 (alpha_lower -> u .)
    "               reduce using rule 140 (alpha_lower -> u .)
    #               reduce using rule 140 (alpha_lower -> u .)
    $               reduce using rule 140 (alpha_lower -> u .)
    %               reduce using rule 140 (alpha_lower -> u .)
    &               reduce using rule 140 (alpha_lower -> u .)
    '               reduce using rule 140 (alpha_lower -> u .)
    (               reduce using rule 140 (alpha_lower -> u .)
    )               reduce using rule 140 (alpha_lower -> u .)
    *               reduce using rule 140 (alpha_lower -> u .)
    +               reduce using rule 140 (alpha_lower -> u .)
    ,               reduce using rule 140 (alpha_lower -> u .)
    .               reduce using rule 140 (alpha_lower -> u .)
    /               reduce using rule 140 (alpha_lower -> u .)
    :               reduce using rule 140 (alpha_lower -> u .)
    ;               reduce using rule 140 (alpha_lower -> u .)
    <               reduce using rule 140 (alpha_lower -> u .)
    =               reduce using rule 140 (alpha_lower -> u .)
    >               reduce using rule 140 (alpha_lower -> u .)
    ?               reduce using rule 140 (alpha_lower -> u .)
    @               reduce using rule 140 (alpha_lower -> u .)
    [               reduce using rule 140 (alpha_lower -> u .)
    \               reduce using rule 140 (alpha_lower -> u .)
    _               reduce using rule 140 (alpha_lower -> u .)
    `               reduce using rule 140 (alpha_lower -> u .)
    {               reduce using rule 140 (alpha_lower -> u .)
    }               reduce using rule 140 (alpha_lower -> u .)
    ~               reduce using rule 140 (alpha_lower -> u .)
    ESCAPED         reduce using rule 140 (alpha_lower -> u .)
    DIGIT           reduce using rule 140 (alpha_lower -> u .)
    OTHER           reduce using rule 140 (alpha_lower -> u .)
    a               reduce using rule 140 (alpha_lower -> u .)
    b               reduce using rule 140 (alpha_lower -> u .)
    c               reduce using rule 140 (alpha_lower -> u .)
    d               reduce using rule 140 (alpha_lower -> u .)
    e               reduce using rule 140 (alpha_lower -> u .)
    f               reduce using rule 140 (alpha_lower -> u .)
    g               reduce using rule 140 (alpha_lower -> u .)
    h               reduce using rule 140 (alpha_lower -> u .)
    i               reduce using rule 140 (alpha_lower -> u .)
    j               reduce using rule 140 (alpha_lower -> u .)
    k               reduce using rule 140 (alpha_lower -> u .)
    l               reduce using rule 140 (alpha_lower -> u .)
    m               reduce using rule 140 (alpha_lower -> u .)
    n               reduce using rule 140 (alpha_lower -> u .)
    o               reduce using rule 140 (alpha_lower -> u .)
    p               reduce using rule 140 (alpha_lower -> u .)
    q               reduce using rule 140 (alpha_lower -> u .)
    r               reduce using rule 140 (alpha_lower -> u .)
    s               reduce using rule 140 (alpha_lower -> u .)
    t               reduce using rule 140 (alpha_lower -> u .)
    u               reduce using rule 140 (alpha_lower -> u .)
    v               reduce using rule 140 (alpha_lower -> u .)
    w               reduce using rule 140 (alpha_lower -> u .)
    x               reduce using rule 140 (alpha_lower -> u .)
    y               reduce using rule 140 (alpha_lower -> u .)
    z               reduce using rule 140 (alpha_lower -> u .)
    A               reduce using rule 140 (alpha_lower -> u .)
    B               reduce using rule 140 (alpha_lower -> u .)
    C               reduce using rule 140 (alpha_lower -> u .)
    D               reduce using rule 140 (alpha_lower -> u .)
    E               reduce using rule 140 (alpha_lower -> u .)
    F               reduce using rule 140 (alpha_lower -> u .)
    G               reduce using rule 140 (alpha_lower -> u .)
    H               reduce using rule 140 (alpha_lower -> u .)
    I               reduce using rule 140 (alpha_lower -> u .)
    J               reduce using rule 140 (alpha_lower -> u .)
    K               reduce using rule 140 (alpha_lower -> u .)
    L               reduce using rule 140 (alpha_lower -> u .)
    M               reduce using rule 140 (alpha_lower -> u .)
    N               reduce using rule 140 (alpha_lower -> u .)
    O               reduce using rule 140 (alpha_lower -> u .)
    P               reduce using rule 140 (alpha_lower -> u .)
    Q               reduce using rule 140 (alpha_lower -> u .)
    R               reduce using rule 140 (alpha_lower -> u .)
    S               reduce using rule 140 (alpha_lower -> u .)
    T               reduce using rule 140 (alpha_lower -> u .)
    U               reduce using rule 140 (alpha_lower -> u .)
    V               reduce using rule 140 (alpha_lower -> u .)
    W               reduce using rule 140 (alpha_lower -> u .)
    X               reduce using rule 140 (alpha_lower -> u .)
    Y               reduce using rule 140 (alpha_lower -> u .)
    Z               reduce using rule 140 (alpha_lower -> u .)
    ]               reduce using rule 140 (alpha_lower -> u .)
    ^               reduce using rule 140 (alpha_lower -> u .)
    |               reduce using rule 140 (alpha_lower -> u .)
    $end            reduce using rule 140 (alpha_lower -> u .)


state 6

    (99) directional -> ^ . DIGIT
    (100) directional -> ^ . alpha
    (101) directional -> ^ . *
    (102) directional -> ^ . +
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    DIGIT           shift and go to state 98
    *               shift and go to state 100
    +               shift and go to state 99
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    alpha                          shift and go to state 101

state 7

    (18) elementary -> group .

    *               reduce using rule 18 (elementary -> group .)
    +               reduce using rule 18 (elementary -> group .)
    ?               reduce using rule 18 (elementary -> group .)
    {               reduce using rule 18 (elementary -> group .)
    (               reduce using rule 18 (elementary -> group .)
    ^               reduce using rule 18 (elementary -> group .)
    >               reduce using rule 18 (elementary -> group .)
    <               reduce using rule 18 (elementary -> group .)
    /               reduce using rule 18 (elementary -> group .)
    \               reduce using rule 18 (elementary -> group .)
    #               reduce using rule 18 (elementary -> group .)
    %               reduce using rule 18 (elementary -> group .)
    ESCAPED         reduce using rule 18 (elementary -> group .)
    DIGIT           reduce using rule 18 (elementary -> group .)
    OTHER           reduce using rule 18 (elementary -> group .)
    [               reduce using rule 18 (elementary -> group .)
    .               reduce using rule 18 (elementary -> group .)
    ,               reduce using rule 18 (elementary -> group .)
    :               reduce using rule 18 (elementary -> group .)
    ;               reduce using rule 18 (elementary -> group .)
    $               reduce using rule 18 (elementary -> group .)
    `               reduce using rule 18 (elementary -> group .)
    a               reduce using rule 18 (elementary -> group .)
    b               reduce using rule 18 (elementary -> group .)
    c               reduce using rule 18 (elementary -> group .)
    d               reduce using rule 18 (elementary -> group .)
    e               reduce using rule 18 (elementary -> group .)
    f               reduce using rule 18 (elementary -> group .)
    g               reduce using rule 18 (elementary -> group .)
    h               reduce using rule 18 (elementary -> group .)
    i               reduce using rule 18 (elementary -> group .)
    j               reduce using rule 18 (elementary -> group .)
    k               reduce using rule 18 (elementary -> group .)
    l               reduce using rule 18 (elementary -> group .)
    m               reduce using rule 18 (elementary -> group .)
    n               reduce using rule 18 (elementary -> group .)
    o               reduce using rule 18 (elementary -> group .)
    p               reduce using rule 18 (elementary -> group .)
    q               reduce using rule 18 (elementary -> group .)
    r               reduce using rule 18 (elementary -> group .)
    s               reduce using rule 18 (elementary -> group .)
    t               reduce using rule 18 (elementary -> group .)
    u               reduce using rule 18 (elementary -> group .)
    v               reduce using rule 18 (elementary -> group .)
    w               reduce using rule 18 (elementary -> group .)
    x               reduce using rule 18 (elementary -> group .)
    y               reduce using rule 18 (elementary -> group .)
    z               reduce using rule 18 (elementary -> group .)
    A               reduce using rule 18 (elementary -> group .)
    B               reduce using rule 18 (elementary -> group .)
    C               reduce using rule 18 (elementary -> group .)
    D               reduce using rule 18 (elementary -> group .)
    E               reduce using rule 18 (elementary -> group .)
    F               reduce using rule 18 (elementary -> group .)
    G               reduce using rule 18 (elementary -> group .)
    H               reduce using rule 18 (elementary -> group .)
    I               reduce using rule 18 (elementary -> group .)
    J               reduce using rule 18 (elementary -> group .)
    K               reduce using rule 18 (elementary -> group .)
    L               reduce using rule 18 (elementary -> group .)
    M               reduce using rule 18 (elementary -> group .)
    N               reduce using rule 18 (elementary -> group .)
    O               reduce using rule 18 (elementary -> group .)
    P               reduce using rule 18 (elementary -> group .)
    Q               reduce using rule 18 (elementary -> group .)
    R               reduce using rule 18 (elementary -> group .)
    S               reduce using rule 18 (elementary -> group .)
    T               reduce using rule 18 (elementary -> group .)
    U               reduce using rule 18 (elementary -> group .)
    V               reduce using rule 18 (elementary -> group .)
    W               reduce using rule 18 (elementary -> group .)
    X               reduce using rule 18 (elementary -> group .)
    Y               reduce using rule 18 (elementary -> group .)
    Z               reduce using rule 18 (elementary -> group .)
    |               reduce using rule 18 (elementary -> group .)
    )               reduce using rule 18 (elementary -> group .)
    $end            reduce using rule 18 (elementary -> group .)


state 8

    (147) alpha_upper -> B .

    *               reduce using rule 147 (alpha_upper -> B .)
    +               reduce using rule 147 (alpha_upper -> B .)
    ?               reduce using rule 147 (alpha_upper -> B .)
    {               reduce using rule 147 (alpha_upper -> B .)
    (               reduce using rule 147 (alpha_upper -> B .)
    ^               reduce using rule 147 (alpha_upper -> B .)
    >               reduce using rule 147 (alpha_upper -> B .)
    <               reduce using rule 147 (alpha_upper -> B .)
    /               reduce using rule 147 (alpha_upper -> B .)
    \               reduce using rule 147 (alpha_upper -> B .)
    #               reduce using rule 147 (alpha_upper -> B .)
    %               reduce using rule 147 (alpha_upper -> B .)
    ESCAPED         reduce using rule 147 (alpha_upper -> B .)
    DIGIT           reduce using rule 147 (alpha_upper -> B .)
    OTHER           reduce using rule 147 (alpha_upper -> B .)
    [               reduce using rule 147 (alpha_upper -> B .)
    .               reduce using rule 147 (alpha_upper -> B .)
    ,               reduce using rule 147 (alpha_upper -> B .)
    :               reduce using rule 147 (alpha_upper -> B .)
    ;               reduce using rule 147 (alpha_upper -> B .)
    $               reduce using rule 147 (alpha_upper -> B .)
    `               reduce using rule 147 (alpha_upper -> B .)
    a               reduce using rule 147 (alpha_upper -> B .)
    b               reduce using rule 147 (alpha_upper -> B .)
    c               reduce using rule 147 (alpha_upper -> B .)
    d               reduce using rule 147 (alpha_upper -> B .)
    e               reduce using rule 147 (alpha_upper -> B .)
    f               reduce using rule 147 (alpha_upper -> B .)
    g               reduce using rule 147 (alpha_upper -> B .)
    h               reduce using rule 147 (alpha_upper -> B .)
    i               reduce using rule 147 (alpha_upper -> B .)
    j               reduce using rule 147 (alpha_upper -> B .)
    k               reduce using rule 147 (alpha_upper -> B .)
    l               reduce using rule 147 (alpha_upper -> B .)
    m               reduce using rule 147 (alpha_upper -> B .)
    n               reduce using rule 147 (alpha_upper -> B .)
    o               reduce using rule 147 (alpha_upper -> B .)
    p               reduce using rule 147 (alpha_upper -> B .)
    q               reduce using rule 147 (alpha_upper -> B .)
    r               reduce using rule 147 (alpha_upper -> B .)
    s               reduce using rule 147 (alpha_upper -> B .)
    t               reduce using rule 147 (alpha_upper -> B .)
    u               reduce using rule 147 (alpha_upper -> B .)
    v               reduce using rule 147 (alpha_upper -> B .)
    w               reduce using rule 147 (alpha_upper -> B .)
    x               reduce using rule 147 (alpha_upper -> B .)
    y               reduce using rule 147 (alpha_upper -> B .)
    z               reduce using rule 147 (alpha_upper -> B .)
    A               reduce using rule 147 (alpha_upper -> B .)
    B               reduce using rule 147 (alpha_upper -> B .)
    C               reduce using rule 147 (alpha_upper -> B .)
    D               reduce using rule 147 (alpha_upper -> B .)
    E               reduce using rule 147 (alpha_upper -> B .)
    F               reduce using rule 147 (alpha_upper -> B .)
    G               reduce using rule 147 (alpha_upper -> B .)
    H               reduce using rule 147 (alpha_upper -> B .)
    I               reduce using rule 147 (alpha_upper -> B .)
    J               reduce using rule 147 (alpha_upper -> B .)
    K               reduce using rule 147 (alpha_upper -> B .)
    L               reduce using rule 147 (alpha_upper -> B .)
    M               reduce using rule 147 (alpha_upper -> B .)
    N               reduce using rule 147 (alpha_upper -> B .)
    O               reduce using rule 147 (alpha_upper -> B .)
    P               reduce using rule 147 (alpha_upper -> B .)
    Q               reduce using rule 147 (alpha_upper -> B .)
    R               reduce using rule 147 (alpha_upper -> B .)
    S               reduce using rule 147 (alpha_upper -> B .)
    T               reduce using rule 147 (alpha_upper -> B .)
    U               reduce using rule 147 (alpha_upper -> B .)
    V               reduce using rule 147 (alpha_upper -> B .)
    W               reduce using rule 147 (alpha_upper -> B .)
    X               reduce using rule 147 (alpha_upper -> B .)
    Y               reduce using rule 147 (alpha_upper -> B .)
    Z               reduce using rule 147 (alpha_upper -> B .)
    |               reduce using rule 147 (alpha_upper -> B .)
    $end            reduce using rule 147 (alpha_upper -> B .)
    )               reduce using rule 147 (alpha_upper -> B .)
    -               reduce using rule 147 (alpha_upper -> B .)
    !               reduce using rule 147 (alpha_upper -> B .)
    "               reduce using rule 147 (alpha_upper -> B .)
    &               reduce using rule 147 (alpha_upper -> B .)
    '               reduce using rule 147 (alpha_upper -> B .)
    =               reduce using rule 147 (alpha_upper -> B .)
    @               reduce using rule 147 (alpha_upper -> B .)
    _               reduce using rule 147 (alpha_upper -> B .)
    }               reduce using rule 147 (alpha_upper -> B .)
    ~               reduce using rule 147 (alpha_upper -> B .)
    ]               reduce using rule 147 (alpha_upper -> B .)


state 9

    (167) alpha_upper -> V .

    *               reduce using rule 167 (alpha_upper -> V .)
    +               reduce using rule 167 (alpha_upper -> V .)
    ?               reduce using rule 167 (alpha_upper -> V .)
    {               reduce using rule 167 (alpha_upper -> V .)
    (               reduce using rule 167 (alpha_upper -> V .)
    ^               reduce using rule 167 (alpha_upper -> V .)
    >               reduce using rule 167 (alpha_upper -> V .)
    <               reduce using rule 167 (alpha_upper -> V .)
    /               reduce using rule 167 (alpha_upper -> V .)
    \               reduce using rule 167 (alpha_upper -> V .)
    #               reduce using rule 167 (alpha_upper -> V .)
    %               reduce using rule 167 (alpha_upper -> V .)
    ESCAPED         reduce using rule 167 (alpha_upper -> V .)
    DIGIT           reduce using rule 167 (alpha_upper -> V .)
    OTHER           reduce using rule 167 (alpha_upper -> V .)
    [               reduce using rule 167 (alpha_upper -> V .)
    .               reduce using rule 167 (alpha_upper -> V .)
    ,               reduce using rule 167 (alpha_upper -> V .)
    :               reduce using rule 167 (alpha_upper -> V .)
    ;               reduce using rule 167 (alpha_upper -> V .)
    $               reduce using rule 167 (alpha_upper -> V .)
    `               reduce using rule 167 (alpha_upper -> V .)
    a               reduce using rule 167 (alpha_upper -> V .)
    b               reduce using rule 167 (alpha_upper -> V .)
    c               reduce using rule 167 (alpha_upper -> V .)
    d               reduce using rule 167 (alpha_upper -> V .)
    e               reduce using rule 167 (alpha_upper -> V .)
    f               reduce using rule 167 (alpha_upper -> V .)
    g               reduce using rule 167 (alpha_upper -> V .)
    h               reduce using rule 167 (alpha_upper -> V .)
    i               reduce using rule 167 (alpha_upper -> V .)
    j               reduce using rule 167 (alpha_upper -> V .)
    k               reduce using rule 167 (alpha_upper -> V .)
    l               reduce using rule 167 (alpha_upper -> V .)
    m               reduce using rule 167 (alpha_upper -> V .)
    n               reduce using rule 167 (alpha_upper -> V .)
    o               reduce using rule 167 (alpha_upper -> V .)
    p               reduce using rule 167 (alpha_upper -> V .)
    q               reduce using rule 167 (alpha_upper -> V .)
    r               reduce using rule 167 (alpha_upper -> V .)
    s               reduce using rule 167 (alpha_upper -> V .)
    t               reduce using rule 167 (alpha_upper -> V .)
    u               reduce using rule 167 (alpha_upper -> V .)
    v               reduce using rule 167 (alpha_upper -> V .)
    w               reduce using rule 167 (alpha_upper -> V .)
    x               reduce using rule 167 (alpha_upper -> V .)
    y               reduce using rule 167 (alpha_upper -> V .)
    z               reduce using rule 167 (alpha_upper -> V .)
    A               reduce using rule 167 (alpha_upper -> V .)
    B               reduce using rule 167 (alpha_upper -> V .)
    C               reduce using rule 167 (alpha_upper -> V .)
    D               reduce using rule 167 (alpha_upper -> V .)
    E               reduce using rule 167 (alpha_upper -> V .)
    F               reduce using rule 167 (alpha_upper -> V .)
    G               reduce using rule 167 (alpha_upper -> V .)
    H               reduce using rule 167 (alpha_upper -> V .)
    I               reduce using rule 167 (alpha_upper -> V .)
    J               reduce using rule 167 (alpha_upper -> V .)
    K               reduce using rule 167 (alpha_upper -> V .)
    L               reduce using rule 167 (alpha_upper -> V .)
    M               reduce using rule 167 (alpha_upper -> V .)
    N               reduce using rule 167 (alpha_upper -> V .)
    O               reduce using rule 167 (alpha_upper -> V .)
    P               reduce using rule 167 (alpha_upper -> V .)
    Q               reduce using rule 167 (alpha_upper -> V .)
    R               reduce using rule 167 (alpha_upper -> V .)
    S               reduce using rule 167 (alpha_upper -> V .)
    T               reduce using rule 167 (alpha_upper -> V .)
    U               reduce using rule 167 (alpha_upper -> V .)
    V               reduce using rule 167 (alpha_upper -> V .)
    W               reduce using rule 167 (alpha_upper -> V .)
    X               reduce using rule 167 (alpha_upper -> V .)
    Y               reduce using rule 167 (alpha_upper -> V .)
    Z               reduce using rule 167 (alpha_upper -> V .)
    |               reduce using rule 167 (alpha_upper -> V .)
    $end            reduce using rule 167 (alpha_upper -> V .)
    )               reduce using rule 167 (alpha_upper -> V .)
    -               reduce using rule 167 (alpha_upper -> V .)
    !               reduce using rule 167 (alpha_upper -> V .)
    "               reduce using rule 167 (alpha_upper -> V .)
    &               reduce using rule 167 (alpha_upper -> V .)
    '               reduce using rule 167 (alpha_upper -> V .)
    =               reduce using rule 167 (alpha_upper -> V .)
    @               reduce using rule 167 (alpha_upper -> V .)
    _               reduce using rule 167 (alpha_upper -> V .)
    }               reduce using rule 167 (alpha_upper -> V .)
    ~               reduce using rule 167 (alpha_upper -> V .)
    ]               reduce using rule 167 (alpha_upper -> V .)


state 10

    (121) alpha_lower -> b .

    -               reduce using rule 121 (alpha_lower -> b .)
    !               reduce using rule 121 (alpha_lower -> b .)
    "               reduce using rule 121 (alpha_lower -> b .)
    #               reduce using rule 121 (alpha_lower -> b .)
    $               reduce using rule 121 (alpha_lower -> b .)
    %               reduce using rule 121 (alpha_lower -> b .)
    &               reduce using rule 121 (alpha_lower -> b .)
    '               reduce using rule 121 (alpha_lower -> b .)
    (               reduce using rule 121 (alpha_lower -> b .)
    )               reduce using rule 121 (alpha_lower -> b .)
    *               reduce using rule 121 (alpha_lower -> b .)
    +               reduce using rule 121 (alpha_lower -> b .)
    ,               reduce using rule 121 (alpha_lower -> b .)
    .               reduce using rule 121 (alpha_lower -> b .)
    /               reduce using rule 121 (alpha_lower -> b .)
    :               reduce using rule 121 (alpha_lower -> b .)
    ;               reduce using rule 121 (alpha_lower -> b .)
    <               reduce using rule 121 (alpha_lower -> b .)
    =               reduce using rule 121 (alpha_lower -> b .)
    >               reduce using rule 121 (alpha_lower -> b .)
    ?               reduce using rule 121 (alpha_lower -> b .)
    @               reduce using rule 121 (alpha_lower -> b .)
    [               reduce using rule 121 (alpha_lower -> b .)
    \               reduce using rule 121 (alpha_lower -> b .)
    _               reduce using rule 121 (alpha_lower -> b .)
    `               reduce using rule 121 (alpha_lower -> b .)
    {               reduce using rule 121 (alpha_lower -> b .)
    }               reduce using rule 121 (alpha_lower -> b .)
    ~               reduce using rule 121 (alpha_lower -> b .)
    ESCAPED         reduce using rule 121 (alpha_lower -> b .)
    DIGIT           reduce using rule 121 (alpha_lower -> b .)
    OTHER           reduce using rule 121 (alpha_lower -> b .)
    a               reduce using rule 121 (alpha_lower -> b .)
    b               reduce using rule 121 (alpha_lower -> b .)
    c               reduce using rule 121 (alpha_lower -> b .)
    d               reduce using rule 121 (alpha_lower -> b .)
    e               reduce using rule 121 (alpha_lower -> b .)
    f               reduce using rule 121 (alpha_lower -> b .)
    g               reduce using rule 121 (alpha_lower -> b .)
    h               reduce using rule 121 (alpha_lower -> b .)
    i               reduce using rule 121 (alpha_lower -> b .)
    j               reduce using rule 121 (alpha_lower -> b .)
    k               reduce using rule 121 (alpha_lower -> b .)
    l               reduce using rule 121 (alpha_lower -> b .)
    m               reduce using rule 121 (alpha_lower -> b .)
    n               reduce using rule 121 (alpha_lower -> b .)
    o               reduce using rule 121 (alpha_lower -> b .)
    p               reduce using rule 121 (alpha_lower -> b .)
    q               reduce using rule 121 (alpha_lower -> b .)
    r               reduce using rule 121 (alpha_lower -> b .)
    s               reduce using rule 121 (alpha_lower -> b .)
    t               reduce using rule 121 (alpha_lower -> b .)
    u               reduce using rule 121 (alpha_lower -> b .)
    v               reduce using rule 121 (alpha_lower -> b .)
    w               reduce using rule 121 (alpha_lower -> b .)
    x               reduce using rule 121 (alpha_lower -> b .)
    y               reduce using rule 121 (alpha_lower -> b .)
    z               reduce using rule 121 (alpha_lower -> b .)
    A               reduce using rule 121 (alpha_lower -> b .)
    B               reduce using rule 121 (alpha_lower -> b .)
    C               reduce using rule 121 (alpha_lower -> b .)
    D               reduce using rule 121 (alpha_lower -> b .)
    E               reduce using rule 121 (alpha_lower -> b .)
    F               reduce using rule 121 (alpha_lower -> b .)
    G               reduce using rule 121 (alpha_lower -> b .)
    H               reduce using rule 121 (alpha_lower -> b .)
    I               reduce using rule 121 (alpha_lower -> b .)
    J               reduce using rule 121 (alpha_lower -> b .)
    K               reduce using rule 121 (alpha_lower -> b .)
    L               reduce using rule 121 (alpha_lower -> b .)
    M               reduce using rule 121 (alpha_lower -> b .)
    N               reduce using rule 121 (alpha_lower -> b .)
    O               reduce using rule 121 (alpha_lower -> b .)
    P               reduce using rule 121 (alpha_lower -> b .)
    Q               reduce using rule 121 (alpha_lower -> b .)
    R               reduce using rule 121 (alpha_lower -> b .)
    S               reduce using rule 121 (alpha_lower -> b .)
    T               reduce using rule 121 (alpha_lower -> b .)
    U               reduce using rule 121 (alpha_lower -> b .)
    V               reduce using rule 121 (alpha_lower -> b .)
    W               reduce using rule 121 (alpha_lower -> b .)
    X               reduce using rule 121 (alpha_lower -> b .)
    Y               reduce using rule 121 (alpha_lower -> b .)
    Z               reduce using rule 121 (alpha_lower -> b .)
    ]               reduce using rule 121 (alpha_lower -> b .)
    ^               reduce using rule 121 (alpha_lower -> b .)
    |               reduce using rule 121 (alpha_lower -> b .)
    $end            reduce using rule 121 (alpha_lower -> b .)


state 11

    (145) alpha_lower -> z .

    -               reduce using rule 145 (alpha_lower -> z .)
    !               reduce using rule 145 (alpha_lower -> z .)
    "               reduce using rule 145 (alpha_lower -> z .)
    #               reduce using rule 145 (alpha_lower -> z .)
    $               reduce using rule 145 (alpha_lower -> z .)
    %               reduce using rule 145 (alpha_lower -> z .)
    &               reduce using rule 145 (alpha_lower -> z .)
    '               reduce using rule 145 (alpha_lower -> z .)
    (               reduce using rule 145 (alpha_lower -> z .)
    )               reduce using rule 145 (alpha_lower -> z .)
    *               reduce using rule 145 (alpha_lower -> z .)
    +               reduce using rule 145 (alpha_lower -> z .)
    ,               reduce using rule 145 (alpha_lower -> z .)
    .               reduce using rule 145 (alpha_lower -> z .)
    /               reduce using rule 145 (alpha_lower -> z .)
    :               reduce using rule 145 (alpha_lower -> z .)
    ;               reduce using rule 145 (alpha_lower -> z .)
    <               reduce using rule 145 (alpha_lower -> z .)
    =               reduce using rule 145 (alpha_lower -> z .)
    >               reduce using rule 145 (alpha_lower -> z .)
    ?               reduce using rule 145 (alpha_lower -> z .)
    @               reduce using rule 145 (alpha_lower -> z .)
    [               reduce using rule 145 (alpha_lower -> z .)
    \               reduce using rule 145 (alpha_lower -> z .)
    _               reduce using rule 145 (alpha_lower -> z .)
    `               reduce using rule 145 (alpha_lower -> z .)
    {               reduce using rule 145 (alpha_lower -> z .)
    }               reduce using rule 145 (alpha_lower -> z .)
    ~               reduce using rule 145 (alpha_lower -> z .)
    ESCAPED         reduce using rule 145 (alpha_lower -> z .)
    DIGIT           reduce using rule 145 (alpha_lower -> z .)
    OTHER           reduce using rule 145 (alpha_lower -> z .)
    a               reduce using rule 145 (alpha_lower -> z .)
    b               reduce using rule 145 (alpha_lower -> z .)
    c               reduce using rule 145 (alpha_lower -> z .)
    d               reduce using rule 145 (alpha_lower -> z .)
    e               reduce using rule 145 (alpha_lower -> z .)
    f               reduce using rule 145 (alpha_lower -> z .)
    g               reduce using rule 145 (alpha_lower -> z .)
    h               reduce using rule 145 (alpha_lower -> z .)
    i               reduce using rule 145 (alpha_lower -> z .)
    j               reduce using rule 145 (alpha_lower -> z .)
    k               reduce using rule 145 (alpha_lower -> z .)
    l               reduce using rule 145 (alpha_lower -> z .)
    m               reduce using rule 145 (alpha_lower -> z .)
    n               reduce using rule 145 (alpha_lower -> z .)
    o               reduce using rule 145 (alpha_lower -> z .)
    p               reduce using rule 145 (alpha_lower -> z .)
    q               reduce using rule 145 (alpha_lower -> z .)
    r               reduce using rule 145 (alpha_lower -> z .)
    s               reduce using rule 145 (alpha_lower -> z .)
    t               reduce using rule 145 (alpha_lower -> z .)
    u               reduce using rule 145 (alpha_lower -> z .)
    v               reduce using rule 145 (alpha_lower -> z .)
    w               reduce using rule 145 (alpha_lower -> z .)
    x               reduce using rule 145 (alpha_lower -> z .)
    y               reduce using rule 145 (alpha_lower -> z .)
    z               reduce using rule 145 (alpha_lower -> z .)
    A               reduce using rule 145 (alpha_lower -> z .)
    B               reduce using rule 145 (alpha_lower -> z .)
    C               reduce using rule 145 (alpha_lower -> z .)
    D               reduce using rule 145 (alpha_lower -> z .)
    E               reduce using rule 145 (alpha_lower -> z .)
    F               reduce using rule 145 (alpha_lower -> z .)
    G               reduce using rule 145 (alpha_lower -> z .)
    H               reduce using rule 145 (alpha_lower -> z .)
    I               reduce using rule 145 (alpha_lower -> z .)
    J               reduce using rule 145 (alpha_lower -> z .)
    K               reduce using rule 145 (alpha_lower -> z .)
    L               reduce using rule 145 (alpha_lower -> z .)
    M               reduce using rule 145 (alpha_lower -> z .)
    N               reduce using rule 145 (alpha_lower -> z .)
    O               reduce using rule 145 (alpha_lower -> z .)
    P               reduce using rule 145 (alpha_lower -> z .)
    Q               reduce using rule 145 (alpha_lower -> z .)
    R               reduce using rule 145 (alpha_lower -> z .)
    S               reduce using rule 145 (alpha_lower -> z .)
    T               reduce using rule 145 (alpha_lower -> z .)
    U               reduce using rule 145 (alpha_lower -> z .)
    V               reduce using rule 145 (alpha_lower -> z .)
    W               reduce using rule 145 (alpha_lower -> z .)
    X               reduce using rule 145 (alpha_lower -> z .)
    Y               reduce using rule 145 (alpha_lower -> z .)
    Z               reduce using rule 145 (alpha_lower -> z .)
    ]               reduce using rule 145 (alpha_lower -> z .)
    ^               reduce using rule 145 (alpha_lower -> z .)
    |               reduce using rule 145 (alpha_lower -> z .)
    $end            reduce using rule 145 (alpha_lower -> z .)


state 12

    (139) alpha_lower -> t .

    -               reduce using rule 139 (alpha_lower -> t .)
    !               reduce using rule 139 (alpha_lower -> t .)
    "               reduce using rule 139 (alpha_lower -> t .)
    #               reduce using rule 139 (alpha_lower -> t .)
    $               reduce using rule 139 (alpha_lower -> t .)
    %               reduce using rule 139 (alpha_lower -> t .)
    &               reduce using rule 139 (alpha_lower -> t .)
    '               reduce using rule 139 (alpha_lower -> t .)
    (               reduce using rule 139 (alpha_lower -> t .)
    )               reduce using rule 139 (alpha_lower -> t .)
    *               reduce using rule 139 (alpha_lower -> t .)
    +               reduce using rule 139 (alpha_lower -> t .)
    ,               reduce using rule 139 (alpha_lower -> t .)
    .               reduce using rule 139 (alpha_lower -> t .)
    /               reduce using rule 139 (alpha_lower -> t .)
    :               reduce using rule 139 (alpha_lower -> t .)
    ;               reduce using rule 139 (alpha_lower -> t .)
    <               reduce using rule 139 (alpha_lower -> t .)
    =               reduce using rule 139 (alpha_lower -> t .)
    >               reduce using rule 139 (alpha_lower -> t .)
    ?               reduce using rule 139 (alpha_lower -> t .)
    @               reduce using rule 139 (alpha_lower -> t .)
    [               reduce using rule 139 (alpha_lower -> t .)
    \               reduce using rule 139 (alpha_lower -> t .)
    _               reduce using rule 139 (alpha_lower -> t .)
    `               reduce using rule 139 (alpha_lower -> t .)
    {               reduce using rule 139 (alpha_lower -> t .)
    }               reduce using rule 139 (alpha_lower -> t .)
    ~               reduce using rule 139 (alpha_lower -> t .)
    ESCAPED         reduce using rule 139 (alpha_lower -> t .)
    DIGIT           reduce using rule 139 (alpha_lower -> t .)
    OTHER           reduce using rule 139 (alpha_lower -> t .)
    a               reduce using rule 139 (alpha_lower -> t .)
    b               reduce using rule 139 (alpha_lower -> t .)
    c               reduce using rule 139 (alpha_lower -> t .)
    d               reduce using rule 139 (alpha_lower -> t .)
    e               reduce using rule 139 (alpha_lower -> t .)
    f               reduce using rule 139 (alpha_lower -> t .)
    g               reduce using rule 139 (alpha_lower -> t .)
    h               reduce using rule 139 (alpha_lower -> t .)
    i               reduce using rule 139 (alpha_lower -> t .)
    j               reduce using rule 139 (alpha_lower -> t .)
    k               reduce using rule 139 (alpha_lower -> t .)
    l               reduce using rule 139 (alpha_lower -> t .)
    m               reduce using rule 139 (alpha_lower -> t .)
    n               reduce using rule 139 (alpha_lower -> t .)
    o               reduce using rule 139 (alpha_lower -> t .)
    p               reduce using rule 139 (alpha_lower -> t .)
    q               reduce using rule 139 (alpha_lower -> t .)
    r               reduce using rule 139 (alpha_lower -> t .)
    s               reduce using rule 139 (alpha_lower -> t .)
    t               reduce using rule 139 (alpha_lower -> t .)
    u               reduce using rule 139 (alpha_lower -> t .)
    v               reduce using rule 139 (alpha_lower -> t .)
    w               reduce using rule 139 (alpha_lower -> t .)
    x               reduce using rule 139 (alpha_lower -> t .)
    y               reduce using rule 139 (alpha_lower -> t .)
    z               reduce using rule 139 (alpha_lower -> t .)
    A               reduce using rule 139 (alpha_lower -> t .)
    B               reduce using rule 139 (alpha_lower -> t .)
    C               reduce using rule 139 (alpha_lower -> t .)
    D               reduce using rule 139 (alpha_lower -> t .)
    E               reduce using rule 139 (alpha_lower -> t .)
    F               reduce using rule 139 (alpha_lower -> t .)
    G               reduce using rule 139 (alpha_lower -> t .)
    H               reduce using rule 139 (alpha_lower -> t .)
    I               reduce using rule 139 (alpha_lower -> t .)
    J               reduce using rule 139 (alpha_lower -> t .)
    K               reduce using rule 139 (alpha_lower -> t .)
    L               reduce using rule 139 (alpha_lower -> t .)
    M               reduce using rule 139 (alpha_lower -> t .)
    N               reduce using rule 139 (alpha_lower -> t .)
    O               reduce using rule 139 (alpha_lower -> t .)
    P               reduce using rule 139 (alpha_lower -> t .)
    Q               reduce using rule 139 (alpha_lower -> t .)
    R               reduce using rule 139 (alpha_lower -> t .)
    S               reduce using rule 139 (alpha_lower -> t .)
    T               reduce using rule 139 (alpha_lower -> t .)
    U               reduce using rule 139 (alpha_lower -> t .)
    V               reduce using rule 139 (alpha_lower -> t .)
    W               reduce using rule 139 (alpha_lower -> t .)
    X               reduce using rule 139 (alpha_lower -> t .)
    Y               reduce using rule 139 (alpha_lower -> t .)
    Z               reduce using rule 139 (alpha_lower -> t .)
    ]               reduce using rule 139 (alpha_lower -> t .)
    ^               reduce using rule 139 (alpha_lower -> t .)
    |               reduce using rule 139 (alpha_lower -> t .)
    $end            reduce using rule 139 (alpha_lower -> t .)


state 13

    (152) alpha_upper -> G .

    *               reduce using rule 152 (alpha_upper -> G .)
    +               reduce using rule 152 (alpha_upper -> G .)
    ?               reduce using rule 152 (alpha_upper -> G .)
    {               reduce using rule 152 (alpha_upper -> G .)
    (               reduce using rule 152 (alpha_upper -> G .)
    ^               reduce using rule 152 (alpha_upper -> G .)
    >               reduce using rule 152 (alpha_upper -> G .)
    <               reduce using rule 152 (alpha_upper -> G .)
    /               reduce using rule 152 (alpha_upper -> G .)
    \               reduce using rule 152 (alpha_upper -> G .)
    #               reduce using rule 152 (alpha_upper -> G .)
    %               reduce using rule 152 (alpha_upper -> G .)
    ESCAPED         reduce using rule 152 (alpha_upper -> G .)
    DIGIT           reduce using rule 152 (alpha_upper -> G .)
    OTHER           reduce using rule 152 (alpha_upper -> G .)
    [               reduce using rule 152 (alpha_upper -> G .)
    .               reduce using rule 152 (alpha_upper -> G .)
    ,               reduce using rule 152 (alpha_upper -> G .)
    :               reduce using rule 152 (alpha_upper -> G .)
    ;               reduce using rule 152 (alpha_upper -> G .)
    $               reduce using rule 152 (alpha_upper -> G .)
    `               reduce using rule 152 (alpha_upper -> G .)
    a               reduce using rule 152 (alpha_upper -> G .)
    b               reduce using rule 152 (alpha_upper -> G .)
    c               reduce using rule 152 (alpha_upper -> G .)
    d               reduce using rule 152 (alpha_upper -> G .)
    e               reduce using rule 152 (alpha_upper -> G .)
    f               reduce using rule 152 (alpha_upper -> G .)
    g               reduce using rule 152 (alpha_upper -> G .)
    h               reduce using rule 152 (alpha_upper -> G .)
    i               reduce using rule 152 (alpha_upper -> G .)
    j               reduce using rule 152 (alpha_upper -> G .)
    k               reduce using rule 152 (alpha_upper -> G .)
    l               reduce using rule 152 (alpha_upper -> G .)
    m               reduce using rule 152 (alpha_upper -> G .)
    n               reduce using rule 152 (alpha_upper -> G .)
    o               reduce using rule 152 (alpha_upper -> G .)
    p               reduce using rule 152 (alpha_upper -> G .)
    q               reduce using rule 152 (alpha_upper -> G .)
    r               reduce using rule 152 (alpha_upper -> G .)
    s               reduce using rule 152 (alpha_upper -> G .)
    t               reduce using rule 152 (alpha_upper -> G .)
    u               reduce using rule 152 (alpha_upper -> G .)
    v               reduce using rule 152 (alpha_upper -> G .)
    w               reduce using rule 152 (alpha_upper -> G .)
    x               reduce using rule 152 (alpha_upper -> G .)
    y               reduce using rule 152 (alpha_upper -> G .)
    z               reduce using rule 152 (alpha_upper -> G .)
    A               reduce using rule 152 (alpha_upper -> G .)
    B               reduce using rule 152 (alpha_upper -> G .)
    C               reduce using rule 152 (alpha_upper -> G .)
    D               reduce using rule 152 (alpha_upper -> G .)
    E               reduce using rule 152 (alpha_upper -> G .)
    F               reduce using rule 152 (alpha_upper -> G .)
    G               reduce using rule 152 (alpha_upper -> G .)
    H               reduce using rule 152 (alpha_upper -> G .)
    I               reduce using rule 152 (alpha_upper -> G .)
    J               reduce using rule 152 (alpha_upper -> G .)
    K               reduce using rule 152 (alpha_upper -> G .)
    L               reduce using rule 152 (alpha_upper -> G .)
    M               reduce using rule 152 (alpha_upper -> G .)
    N               reduce using rule 152 (alpha_upper -> G .)
    O               reduce using rule 152 (alpha_upper -> G .)
    P               reduce using rule 152 (alpha_upper -> G .)
    Q               reduce using rule 152 (alpha_upper -> G .)
    R               reduce using rule 152 (alpha_upper -> G .)
    S               reduce using rule 152 (alpha_upper -> G .)
    T               reduce using rule 152 (alpha_upper -> G .)
    U               reduce using rule 152 (alpha_upper -> G .)
    V               reduce using rule 152 (alpha_upper -> G .)
    W               reduce using rule 152 (alpha_upper -> G .)
    X               reduce using rule 152 (alpha_upper -> G .)
    Y               reduce using rule 152 (alpha_upper -> G .)
    Z               reduce using rule 152 (alpha_upper -> G .)
    |               reduce using rule 152 (alpha_upper -> G .)
    $end            reduce using rule 152 (alpha_upper -> G .)
    )               reduce using rule 152 (alpha_upper -> G .)
    -               reduce using rule 152 (alpha_upper -> G .)
    !               reduce using rule 152 (alpha_upper -> G .)
    "               reduce using rule 152 (alpha_upper -> G .)
    &               reduce using rule 152 (alpha_upper -> G .)
    '               reduce using rule 152 (alpha_upper -> G .)
    =               reduce using rule 152 (alpha_upper -> G .)
    @               reduce using rule 152 (alpha_upper -> G .)
    _               reduce using rule 152 (alpha_upper -> G .)
    }               reduce using rule 152 (alpha_upper -> G .)
    ~               reduce using rule 152 (alpha_upper -> G .)
    ]               reduce using rule 152 (alpha_upper -> G .)


state 14

    (19) elementary -> directional .

    *               reduce using rule 19 (elementary -> directional .)
    +               reduce using rule 19 (elementary -> directional .)
    ?               reduce using rule 19 (elementary -> directional .)
    {               reduce using rule 19 (elementary -> directional .)
    (               reduce using rule 19 (elementary -> directional .)
    ^               reduce using rule 19 (elementary -> directional .)
    >               reduce using rule 19 (elementary -> directional .)
    <               reduce using rule 19 (elementary -> directional .)
    /               reduce using rule 19 (elementary -> directional .)
    \               reduce using rule 19 (elementary -> directional .)
    #               reduce using rule 19 (elementary -> directional .)
    %               reduce using rule 19 (elementary -> directional .)
    ESCAPED         reduce using rule 19 (elementary -> directional .)
    DIGIT           reduce using rule 19 (elementary -> directional .)
    OTHER           reduce using rule 19 (elementary -> directional .)
    [               reduce using rule 19 (elementary -> directional .)
    .               reduce using rule 19 (elementary -> directional .)
    ,               reduce using rule 19 (elementary -> directional .)
    :               reduce using rule 19 (elementary -> directional .)
    ;               reduce using rule 19 (elementary -> directional .)
    $               reduce using rule 19 (elementary -> directional .)
    `               reduce using rule 19 (elementary -> directional .)
    a               reduce using rule 19 (elementary -> directional .)
    b               reduce using rule 19 (elementary -> directional .)
    c               reduce using rule 19 (elementary -> directional .)
    d               reduce using rule 19 (elementary -> directional .)
    e               reduce using rule 19 (elementary -> directional .)
    f               reduce using rule 19 (elementary -> directional .)
    g               reduce using rule 19 (elementary -> directional .)
    h               reduce using rule 19 (elementary -> directional .)
    i               reduce using rule 19 (elementary -> directional .)
    j               reduce using rule 19 (elementary -> directional .)
    k               reduce using rule 19 (elementary -> directional .)
    l               reduce using rule 19 (elementary -> directional .)
    m               reduce using rule 19 (elementary -> directional .)
    n               reduce using rule 19 (elementary -> directional .)
    o               reduce using rule 19 (elementary -> directional .)
    p               reduce using rule 19 (elementary -> directional .)
    q               reduce using rule 19 (elementary -> directional .)
    r               reduce using rule 19 (elementary -> directional .)
    s               reduce using rule 19 (elementary -> directional .)
    t               reduce using rule 19 (elementary -> directional .)
    u               reduce using rule 19 (elementary -> directional .)
    v               reduce using rule 19 (elementary -> directional .)
    w               reduce using rule 19 (elementary -> directional .)
    x               reduce using rule 19 (elementary -> directional .)
    y               reduce using rule 19 (elementary -> directional .)
    z               reduce using rule 19 (elementary -> directional .)
    A               reduce using rule 19 (elementary -> directional .)
    B               reduce using rule 19 (elementary -> directional .)
    C               reduce using rule 19 (elementary -> directional .)
    D               reduce using rule 19 (elementary -> directional .)
    E               reduce using rule 19 (elementary -> directional .)
    F               reduce using rule 19 (elementary -> directional .)
    G               reduce using rule 19 (elementary -> directional .)
    H               reduce using rule 19 (elementary -> directional .)
    I               reduce using rule 19 (elementary -> directional .)
    J               reduce using rule 19 (elementary -> directional .)
    K               reduce using rule 19 (elementary -> directional .)
    L               reduce using rule 19 (elementary -> directional .)
    M               reduce using rule 19 (elementary -> directional .)
    N               reduce using rule 19 (elementary -> directional .)
    O               reduce using rule 19 (elementary -> directional .)
    P               reduce using rule 19 (elementary -> directional .)
    Q               reduce using rule 19 (elementary -> directional .)
    R               reduce using rule 19 (elementary -> directional .)
    S               reduce using rule 19 (elementary -> directional .)
    T               reduce using rule 19 (elementary -> directional .)
    U               reduce using rule 19 (elementary -> directional .)
    V               reduce using rule 19 (elementary -> directional .)
    W               reduce using rule 19 (elementary -> directional .)
    X               reduce using rule 19 (elementary -> directional .)
    Y               reduce using rule 19 (elementary -> directional .)
    Z               reduce using rule 19 (elementary -> directional .)
    |               reduce using rule 19 (elementary -> directional .)
    )               reduce using rule 19 (elementary -> directional .)
    $end            reduce using rule 19 (elementary -> directional .)


state 15

    (168) alpha_upper -> W .

    *               reduce using rule 168 (alpha_upper -> W .)
    +               reduce using rule 168 (alpha_upper -> W .)
    ?               reduce using rule 168 (alpha_upper -> W .)
    {               reduce using rule 168 (alpha_upper -> W .)
    (               reduce using rule 168 (alpha_upper -> W .)
    ^               reduce using rule 168 (alpha_upper -> W .)
    >               reduce using rule 168 (alpha_upper -> W .)
    <               reduce using rule 168 (alpha_upper -> W .)
    /               reduce using rule 168 (alpha_upper -> W .)
    \               reduce using rule 168 (alpha_upper -> W .)
    #               reduce using rule 168 (alpha_upper -> W .)
    %               reduce using rule 168 (alpha_upper -> W .)
    ESCAPED         reduce using rule 168 (alpha_upper -> W .)
    DIGIT           reduce using rule 168 (alpha_upper -> W .)
    OTHER           reduce using rule 168 (alpha_upper -> W .)
    [               reduce using rule 168 (alpha_upper -> W .)
    .               reduce using rule 168 (alpha_upper -> W .)
    ,               reduce using rule 168 (alpha_upper -> W .)
    :               reduce using rule 168 (alpha_upper -> W .)
    ;               reduce using rule 168 (alpha_upper -> W .)
    $               reduce using rule 168 (alpha_upper -> W .)
    `               reduce using rule 168 (alpha_upper -> W .)
    a               reduce using rule 168 (alpha_upper -> W .)
    b               reduce using rule 168 (alpha_upper -> W .)
    c               reduce using rule 168 (alpha_upper -> W .)
    d               reduce using rule 168 (alpha_upper -> W .)
    e               reduce using rule 168 (alpha_upper -> W .)
    f               reduce using rule 168 (alpha_upper -> W .)
    g               reduce using rule 168 (alpha_upper -> W .)
    h               reduce using rule 168 (alpha_upper -> W .)
    i               reduce using rule 168 (alpha_upper -> W .)
    j               reduce using rule 168 (alpha_upper -> W .)
    k               reduce using rule 168 (alpha_upper -> W .)
    l               reduce using rule 168 (alpha_upper -> W .)
    m               reduce using rule 168 (alpha_upper -> W .)
    n               reduce using rule 168 (alpha_upper -> W .)
    o               reduce using rule 168 (alpha_upper -> W .)
    p               reduce using rule 168 (alpha_upper -> W .)
    q               reduce using rule 168 (alpha_upper -> W .)
    r               reduce using rule 168 (alpha_upper -> W .)
    s               reduce using rule 168 (alpha_upper -> W .)
    t               reduce using rule 168 (alpha_upper -> W .)
    u               reduce using rule 168 (alpha_upper -> W .)
    v               reduce using rule 168 (alpha_upper -> W .)
    w               reduce using rule 168 (alpha_upper -> W .)
    x               reduce using rule 168 (alpha_upper -> W .)
    y               reduce using rule 168 (alpha_upper -> W .)
    z               reduce using rule 168 (alpha_upper -> W .)
    A               reduce using rule 168 (alpha_upper -> W .)
    B               reduce using rule 168 (alpha_upper -> W .)
    C               reduce using rule 168 (alpha_upper -> W .)
    D               reduce using rule 168 (alpha_upper -> W .)
    E               reduce using rule 168 (alpha_upper -> W .)
    F               reduce using rule 168 (alpha_upper -> W .)
    G               reduce using rule 168 (alpha_upper -> W .)
    H               reduce using rule 168 (alpha_upper -> W .)
    I               reduce using rule 168 (alpha_upper -> W .)
    J               reduce using rule 168 (alpha_upper -> W .)
    K               reduce using rule 168 (alpha_upper -> W .)
    L               reduce using rule 168 (alpha_upper -> W .)
    M               reduce using rule 168 (alpha_upper -> W .)
    N               reduce using rule 168 (alpha_upper -> W .)
    O               reduce using rule 168 (alpha_upper -> W .)
    P               reduce using rule 168 (alpha_upper -> W .)
    Q               reduce using rule 168 (alpha_upper -> W .)
    R               reduce using rule 168 (alpha_upper -> W .)
    S               reduce using rule 168 (alpha_upper -> W .)
    T               reduce using rule 168 (alpha_upper -> W .)
    U               reduce using rule 168 (alpha_upper -> W .)
    V               reduce using rule 168 (alpha_upper -> W .)
    W               reduce using rule 168 (alpha_upper -> W .)
    X               reduce using rule 168 (alpha_upper -> W .)
    Y               reduce using rule 168 (alpha_upper -> W .)
    Z               reduce using rule 168 (alpha_upper -> W .)
    |               reduce using rule 168 (alpha_upper -> W .)
    $end            reduce using rule 168 (alpha_upper -> W .)
    )               reduce using rule 168 (alpha_upper -> W .)
    -               reduce using rule 168 (alpha_upper -> W .)
    !               reduce using rule 168 (alpha_upper -> W .)
    "               reduce using rule 168 (alpha_upper -> W .)
    &               reduce using rule 168 (alpha_upper -> W .)
    '               reduce using rule 168 (alpha_upper -> W .)
    =               reduce using rule 168 (alpha_upper -> W .)
    @               reduce using rule 168 (alpha_upper -> W .)
    _               reduce using rule 168 (alpha_upper -> W .)
    }               reduce using rule 168 (alpha_upper -> W .)
    ~               reduce using rule 168 (alpha_upper -> W .)
    ]               reduce using rule 168 (alpha_upper -> W .)


state 16

    (8) simple -> basic .

    (               reduce using rule 8 (simple -> basic .)
    ^               reduce using rule 8 (simple -> basic .)
    >               reduce using rule 8 (simple -> basic .)
    <               reduce using rule 8 (simple -> basic .)
    /               reduce using rule 8 (simple -> basic .)
    \               reduce using rule 8 (simple -> basic .)
    #               reduce using rule 8 (simple -> basic .)
    %               reduce using rule 8 (simple -> basic .)
    ESCAPED         reduce using rule 8 (simple -> basic .)
    DIGIT           reduce using rule 8 (simple -> basic .)
    OTHER           reduce using rule 8 (simple -> basic .)
    [               reduce using rule 8 (simple -> basic .)
    .               reduce using rule 8 (simple -> basic .)
    ,               reduce using rule 8 (simple -> basic .)
    :               reduce using rule 8 (simple -> basic .)
    ;               reduce using rule 8 (simple -> basic .)
    $               reduce using rule 8 (simple -> basic .)
    `               reduce using rule 8 (simple -> basic .)
    a               reduce using rule 8 (simple -> basic .)
    b               reduce using rule 8 (simple -> basic .)
    c               reduce using rule 8 (simple -> basic .)
    d               reduce using rule 8 (simple -> basic .)
    e               reduce using rule 8 (simple -> basic .)
    f               reduce using rule 8 (simple -> basic .)
    g               reduce using rule 8 (simple -> basic .)
    h               reduce using rule 8 (simple -> basic .)
    i               reduce using rule 8 (simple -> basic .)
    j               reduce using rule 8 (simple -> basic .)
    k               reduce using rule 8 (simple -> basic .)
    l               reduce using rule 8 (simple -> basic .)
    m               reduce using rule 8 (simple -> basic .)
    n               reduce using rule 8 (simple -> basic .)
    o               reduce using rule 8 (simple -> basic .)
    p               reduce using rule 8 (simple -> basic .)
    q               reduce using rule 8 (simple -> basic .)
    r               reduce using rule 8 (simple -> basic .)
    s               reduce using rule 8 (simple -> basic .)
    t               reduce using rule 8 (simple -> basic .)
    u               reduce using rule 8 (simple -> basic .)
    v               reduce using rule 8 (simple -> basic .)
    w               reduce using rule 8 (simple -> basic .)
    x               reduce using rule 8 (simple -> basic .)
    y               reduce using rule 8 (simple -> basic .)
    z               reduce using rule 8 (simple -> basic .)
    A               reduce using rule 8 (simple -> basic .)
    B               reduce using rule 8 (simple -> basic .)
    C               reduce using rule 8 (simple -> basic .)
    D               reduce using rule 8 (simple -> basic .)
    E               reduce using rule 8 (simple -> basic .)
    F               reduce using rule 8 (simple -> basic .)
    G               reduce using rule 8 (simple -> basic .)
    H               reduce using rule 8 (simple -> basic .)
    I               reduce using rule 8 (simple -> basic .)
    J               reduce using rule 8 (simple -> basic .)
    K               reduce using rule 8 (simple -> basic .)
    L               reduce using rule 8 (simple -> basic .)
    M               reduce using rule 8 (simple -> basic .)
    N               reduce using rule 8 (simple -> basic .)
    O               reduce using rule 8 (simple -> basic .)
    P               reduce using rule 8 (simple -> basic .)
    Q               reduce using rule 8 (simple -> basic .)
    R               reduce using rule 8 (simple -> basic .)
    S               reduce using rule 8 (simple -> basic .)
    T               reduce using rule 8 (simple -> basic .)
    U               reduce using rule 8 (simple -> basic .)
    V               reduce using rule 8 (simple -> basic .)
    W               reduce using rule 8 (simple -> basic .)
    X               reduce using rule 8 (simple -> basic .)
    Y               reduce using rule 8 (simple -> basic .)
    Z               reduce using rule 8 (simple -> basic .)
    |               reduce using rule 8 (simple -> basic .)
    )               reduce using rule 8 (simple -> basic .)
    $end            reduce using rule 8 (simple -> basic .)


state 17

    (37) nodisplay -> , .

    *               reduce using rule 37 (nodisplay -> , .)
    +               reduce using rule 37 (nodisplay -> , .)
    ?               reduce using rule 37 (nodisplay -> , .)
    {               reduce using rule 37 (nodisplay -> , .)
    (               reduce using rule 37 (nodisplay -> , .)
    ^               reduce using rule 37 (nodisplay -> , .)
    >               reduce using rule 37 (nodisplay -> , .)
    <               reduce using rule 37 (nodisplay -> , .)
    /               reduce using rule 37 (nodisplay -> , .)
    \               reduce using rule 37 (nodisplay -> , .)
    #               reduce using rule 37 (nodisplay -> , .)
    %               reduce using rule 37 (nodisplay -> , .)
    ESCAPED         reduce using rule 37 (nodisplay -> , .)
    DIGIT           reduce using rule 37 (nodisplay -> , .)
    OTHER           reduce using rule 37 (nodisplay -> , .)
    [               reduce using rule 37 (nodisplay -> , .)
    .               reduce using rule 37 (nodisplay -> , .)
    ,               reduce using rule 37 (nodisplay -> , .)
    :               reduce using rule 37 (nodisplay -> , .)
    ;               reduce using rule 37 (nodisplay -> , .)
    $               reduce using rule 37 (nodisplay -> , .)
    `               reduce using rule 37 (nodisplay -> , .)
    a               reduce using rule 37 (nodisplay -> , .)
    b               reduce using rule 37 (nodisplay -> , .)
    c               reduce using rule 37 (nodisplay -> , .)
    d               reduce using rule 37 (nodisplay -> , .)
    e               reduce using rule 37 (nodisplay -> , .)
    f               reduce using rule 37 (nodisplay -> , .)
    g               reduce using rule 37 (nodisplay -> , .)
    h               reduce using rule 37 (nodisplay -> , .)
    i               reduce using rule 37 (nodisplay -> , .)
    j               reduce using rule 37 (nodisplay -> , .)
    k               reduce using rule 37 (nodisplay -> , .)
    l               reduce using rule 37 (nodisplay -> , .)
    m               reduce using rule 37 (nodisplay -> , .)
    n               reduce using rule 37 (nodisplay -> , .)
    o               reduce using rule 37 (nodisplay -> , .)
    p               reduce using rule 37 (nodisplay -> , .)
    q               reduce using rule 37 (nodisplay -> , .)
    r               reduce using rule 37 (nodisplay -> , .)
    s               reduce using rule 37 (nodisplay -> , .)
    t               reduce using rule 37 (nodisplay -> , .)
    u               reduce using rule 37 (nodisplay -> , .)
    v               reduce using rule 37 (nodisplay -> , .)
    w               reduce using rule 37 (nodisplay -> , .)
    x               reduce using rule 37 (nodisplay -> , .)
    y               reduce using rule 37 (nodisplay -> , .)
    z               reduce using rule 37 (nodisplay -> , .)
    A               reduce using rule 37 (nodisplay -> , .)
    B               reduce using rule 37 (nodisplay -> , .)
    C               reduce using rule 37 (nodisplay -> , .)
    D               reduce using rule 37 (nodisplay -> , .)
    E               reduce using rule 37 (nodisplay -> , .)
    F               reduce using rule 37 (nodisplay -> , .)
    G               reduce using rule 37 (nodisplay -> , .)
    H               reduce using rule 37 (nodisplay -> , .)
    I               reduce using rule 37 (nodisplay -> , .)
    J               reduce using rule 37 (nodisplay -> , .)
    K               reduce using rule 37 (nodisplay -> , .)
    L               reduce using rule 37 (nodisplay -> , .)
    M               reduce using rule 37 (nodisplay -> , .)
    N               reduce using rule 37 (nodisplay -> , .)
    O               reduce using rule 37 (nodisplay -> , .)
    P               reduce using rule 37 (nodisplay -> , .)
    Q               reduce using rule 37 (nodisplay -> , .)
    R               reduce using rule 37 (nodisplay -> , .)
    S               reduce using rule 37 (nodisplay -> , .)
    T               reduce using rule 37 (nodisplay -> , .)
    U               reduce using rule 37 (nodisplay -> , .)
    V               reduce using rule 37 (nodisplay -> , .)
    W               reduce using rule 37 (nodisplay -> , .)
    X               reduce using rule 37 (nodisplay -> , .)
    Y               reduce using rule 37 (nodisplay -> , .)
    Z               reduce using rule 37 (nodisplay -> , .)
    |               reduce using rule 37 (nodisplay -> , .)
    )               reduce using rule 37 (nodisplay -> , .)
    $end            reduce using rule 37 (nodisplay -> , .)


state 18

    (98) predefined -> ` . alpha
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    alpha                          shift and go to state 102

state 19

    (113) command -> % .

    *               reduce using rule 113 (command -> % .)
    +               reduce using rule 113 (command -> % .)
    ?               reduce using rule 113 (command -> % .)
    {               reduce using rule 113 (command -> % .)
    (               reduce using rule 113 (command -> % .)
    ^               reduce using rule 113 (command -> % .)
    >               reduce using rule 113 (command -> % .)
    <               reduce using rule 113 (command -> % .)
    /               reduce using rule 113 (command -> % .)
    \               reduce using rule 113 (command -> % .)
    #               reduce using rule 113 (command -> % .)
    %               reduce using rule 113 (command -> % .)
    ESCAPED         reduce using rule 113 (command -> % .)
    DIGIT           reduce using rule 113 (command -> % .)
    OTHER           reduce using rule 113 (command -> % .)
    [               reduce using rule 113 (command -> % .)
    .               reduce using rule 113 (command -> % .)
    ,               reduce using rule 113 (command -> % .)
    :               reduce using rule 113 (command -> % .)
    ;               reduce using rule 113 (command -> % .)
    $               reduce using rule 113 (command -> % .)
    `               reduce using rule 113 (command -> % .)
    a               reduce using rule 113 (command -> % .)
    b               reduce using rule 113 (command -> % .)
    c               reduce using rule 113 (command -> % .)
    d               reduce using rule 113 (command -> % .)
    e               reduce using rule 113 (command -> % .)
    f               reduce using rule 113 (command -> % .)
    g               reduce using rule 113 (command -> % .)
    h               reduce using rule 113 (command -> % .)
    i               reduce using rule 113 (command -> % .)
    j               reduce using rule 113 (command -> % .)
    k               reduce using rule 113 (command -> % .)
    l               reduce using rule 113 (command -> % .)
    m               reduce using rule 113 (command -> % .)
    n               reduce using rule 113 (command -> % .)
    o               reduce using rule 113 (command -> % .)
    p               reduce using rule 113 (command -> % .)
    q               reduce using rule 113 (command -> % .)
    r               reduce using rule 113 (command -> % .)
    s               reduce using rule 113 (command -> % .)
    t               reduce using rule 113 (command -> % .)
    u               reduce using rule 113 (command -> % .)
    v               reduce using rule 113 (command -> % .)
    w               reduce using rule 113 (command -> % .)
    x               reduce using rule 113 (command -> % .)
    y               reduce using rule 113 (command -> % .)
    z               reduce using rule 113 (command -> % .)
    A               reduce using rule 113 (command -> % .)
    B               reduce using rule 113 (command -> % .)
    C               reduce using rule 113 (command -> % .)
    D               reduce using rule 113 (command -> % .)
    E               reduce using rule 113 (command -> % .)
    F               reduce using rule 113 (command -> % .)
    G               reduce using rule 113 (command -> % .)
    H               reduce using rule 113 (command -> % .)
    I               reduce using rule 113 (command -> % .)
    J               reduce using rule 113 (command -> % .)
    K               reduce using rule 113 (command -> % .)
    L               reduce using rule 113 (command -> % .)
    M               reduce using rule 113 (command -> % .)
    N               reduce using rule 113 (command -> % .)
    O               reduce using rule 113 (command -> % .)
    P               reduce using rule 113 (command -> % .)
    Q               reduce using rule 113 (command -> % .)
    R               reduce using rule 113 (command -> % .)
    S               reduce using rule 113 (command -> % .)
    T               reduce using rule 113 (command -> % .)
    U               reduce using rule 113 (command -> % .)
    V               reduce using rule 113 (command -> % .)
    W               reduce using rule 113 (command -> % .)
    X               reduce using rule 113 (command -> % .)
    Y               reduce using rule 113 (command -> % .)
    Z               reduce using rule 113 (command -> % .)
    |               reduce using rule 113 (command -> % .)
    $end            reduce using rule 113 (command -> % .)
    )               reduce using rule 113 (command -> % .)


state 20

    (110) command -> / .

    *               reduce using rule 110 (command -> / .)
    +               reduce using rule 110 (command -> / .)
    ?               reduce using rule 110 (command -> / .)
    {               reduce using rule 110 (command -> / .)
    (               reduce using rule 110 (command -> / .)
    ^               reduce using rule 110 (command -> / .)
    >               reduce using rule 110 (command -> / .)
    <               reduce using rule 110 (command -> / .)
    /               reduce using rule 110 (command -> / .)
    \               reduce using rule 110 (command -> / .)
    #               reduce using rule 110 (command -> / .)
    %               reduce using rule 110 (command -> / .)
    ESCAPED         reduce using rule 110 (command -> / .)
    DIGIT           reduce using rule 110 (command -> / .)
    OTHER           reduce using rule 110 (command -> / .)
    [               reduce using rule 110 (command -> / .)
    .               reduce using rule 110 (command -> / .)
    ,               reduce using rule 110 (command -> / .)
    :               reduce using rule 110 (command -> / .)
    ;               reduce using rule 110 (command -> / .)
    $               reduce using rule 110 (command -> / .)
    `               reduce using rule 110 (command -> / .)
    a               reduce using rule 110 (command -> / .)
    b               reduce using rule 110 (command -> / .)
    c               reduce using rule 110 (command -> / .)
    d               reduce using rule 110 (command -> / .)
    e               reduce using rule 110 (command -> / .)
    f               reduce using rule 110 (command -> / .)
    g               reduce using rule 110 (command -> / .)
    h               reduce using rule 110 (command -> / .)
    i               reduce using rule 110 (command -> / .)
    j               reduce using rule 110 (command -> / .)
    k               reduce using rule 110 (command -> / .)
    l               reduce using rule 110 (command -> / .)
    m               reduce using rule 110 (command -> / .)
    n               reduce using rule 110 (command -> / .)
    o               reduce using rule 110 (command -> / .)
    p               reduce using rule 110 (command -> / .)
    q               reduce using rule 110 (command -> / .)
    r               reduce using rule 110 (command -> / .)
    s               reduce using rule 110 (command -> / .)
    t               reduce using rule 110 (command -> / .)
    u               reduce using rule 110 (command -> / .)
    v               reduce using rule 110 (command -> / .)
    w               reduce using rule 110 (command -> / .)
    x               reduce using rule 110 (command -> / .)
    y               reduce using rule 110 (command -> / .)
    z               reduce using rule 110 (command -> / .)
    A               reduce using rule 110 (command -> / .)
    B               reduce using rule 110 (command -> / .)
    C               reduce using rule 110 (command -> / .)
    D               reduce using rule 110 (command -> / .)
    E               reduce using rule 110 (command -> / .)
    F               reduce using rule 110 (command -> / .)
    G               reduce using rule 110 (command -> / .)
    H               reduce using rule 110 (command -> / .)
    I               reduce using rule 110 (command -> / .)
    J               reduce using rule 110 (command -> / .)
    K               reduce using rule 110 (command -> / .)
    L               reduce using rule 110 (command -> / .)
    M               reduce using rule 110 (command -> / .)
    N               reduce using rule 110 (command -> / .)
    O               reduce using rule 110 (command -> / .)
    P               reduce using rule 110 (command -> / .)
    Q               reduce using rule 110 (command -> / .)
    R               reduce using rule 110 (command -> / .)
    S               reduce using rule 110 (command -> / .)
    T               reduce using rule 110 (command -> / .)
    U               reduce using rule 110 (command -> / .)
    V               reduce using rule 110 (command -> / .)
    W               reduce using rule 110 (command -> / .)
    X               reduce using rule 110 (command -> / .)
    Y               reduce using rule 110 (command -> / .)
    Z               reduce using rule 110 (command -> / .)
    |               reduce using rule 110 (command -> / .)
    $end            reduce using rule 110 (command -> / .)
    )               reduce using rule 110 (command -> / .)


state 21

    (118) alpha -> alpha_lower .

    *               reduce using rule 118 (alpha -> alpha_lower .)
    +               reduce using rule 118 (alpha -> alpha_lower .)
    ?               reduce using rule 118 (alpha -> alpha_lower .)
    {               reduce using rule 118 (alpha -> alpha_lower .)
    (               reduce using rule 118 (alpha -> alpha_lower .)
    ^               reduce using rule 118 (alpha -> alpha_lower .)
    >               reduce using rule 118 (alpha -> alpha_lower .)
    <               reduce using rule 118 (alpha -> alpha_lower .)
    /               reduce using rule 118 (alpha -> alpha_lower .)
    \               reduce using rule 118 (alpha -> alpha_lower .)
    #               reduce using rule 118 (alpha -> alpha_lower .)
    %               reduce using rule 118 (alpha -> alpha_lower .)
    ESCAPED         reduce using rule 118 (alpha -> alpha_lower .)
    DIGIT           reduce using rule 118 (alpha -> alpha_lower .)
    OTHER           reduce using rule 118 (alpha -> alpha_lower .)
    [               reduce using rule 118 (alpha -> alpha_lower .)
    .               reduce using rule 118 (alpha -> alpha_lower .)
    ,               reduce using rule 118 (alpha -> alpha_lower .)
    :               reduce using rule 118 (alpha -> alpha_lower .)
    ;               reduce using rule 118 (alpha -> alpha_lower .)
    $               reduce using rule 118 (alpha -> alpha_lower .)
    `               reduce using rule 118 (alpha -> alpha_lower .)
    a               reduce using rule 118 (alpha -> alpha_lower .)
    b               reduce using rule 118 (alpha -> alpha_lower .)
    c               reduce using rule 118 (alpha -> alpha_lower .)
    d               reduce using rule 118 (alpha -> alpha_lower .)
    e               reduce using rule 118 (alpha -> alpha_lower .)
    f               reduce using rule 118 (alpha -> alpha_lower .)
    g               reduce using rule 118 (alpha -> alpha_lower .)
    h               reduce using rule 118 (alpha -> alpha_lower .)
    i               reduce using rule 118 (alpha -> alpha_lower .)
    j               reduce using rule 118 (alpha -> alpha_lower .)
    k               reduce using rule 118 (alpha -> alpha_lower .)
    l               reduce using rule 118 (alpha -> alpha_lower .)
    m               reduce using rule 118 (alpha -> alpha_lower .)
    n               reduce using rule 118 (alpha -> alpha_lower .)
    o               reduce using rule 118 (alpha -> alpha_lower .)
    p               reduce using rule 118 (alpha -> alpha_lower .)
    q               reduce using rule 118 (alpha -> alpha_lower .)
    r               reduce using rule 118 (alpha -> alpha_lower .)
    s               reduce using rule 118 (alpha -> alpha_lower .)
    t               reduce using rule 118 (alpha -> alpha_lower .)
    u               reduce using rule 118 (alpha -> alpha_lower .)
    v               reduce using rule 118 (alpha -> alpha_lower .)
    w               reduce using rule 118 (alpha -> alpha_lower .)
    x               reduce using rule 118 (alpha -> alpha_lower .)
    y               reduce using rule 118 (alpha -> alpha_lower .)
    z               reduce using rule 118 (alpha -> alpha_lower .)
    A               reduce using rule 118 (alpha -> alpha_lower .)
    B               reduce using rule 118 (alpha -> alpha_lower .)
    C               reduce using rule 118 (alpha -> alpha_lower .)
    D               reduce using rule 118 (alpha -> alpha_lower .)
    E               reduce using rule 118 (alpha -> alpha_lower .)
    F               reduce using rule 118 (alpha -> alpha_lower .)
    G               reduce using rule 118 (alpha -> alpha_lower .)
    H               reduce using rule 118 (alpha -> alpha_lower .)
    I               reduce using rule 118 (alpha -> alpha_lower .)
    J               reduce using rule 118 (alpha -> alpha_lower .)
    K               reduce using rule 118 (alpha -> alpha_lower .)
    L               reduce using rule 118 (alpha -> alpha_lower .)
    M               reduce using rule 118 (alpha -> alpha_lower .)
    N               reduce using rule 118 (alpha -> alpha_lower .)
    O               reduce using rule 118 (alpha -> alpha_lower .)
    P               reduce using rule 118 (alpha -> alpha_lower .)
    Q               reduce using rule 118 (alpha -> alpha_lower .)
    R               reduce using rule 118 (alpha -> alpha_lower .)
    S               reduce using rule 118 (alpha -> alpha_lower .)
    T               reduce using rule 118 (alpha -> alpha_lower .)
    U               reduce using rule 118 (alpha -> alpha_lower .)
    V               reduce using rule 118 (alpha -> alpha_lower .)
    W               reduce using rule 118 (alpha -> alpha_lower .)
    X               reduce using rule 118 (alpha -> alpha_lower .)
    Y               reduce using rule 118 (alpha -> alpha_lower .)
    Z               reduce using rule 118 (alpha -> alpha_lower .)
    |               reduce using rule 118 (alpha -> alpha_lower .)
    $end            reduce using rule 118 (alpha -> alpha_lower .)
    )               reduce using rule 118 (alpha -> alpha_lower .)
    -               reduce using rule 118 (alpha -> alpha_lower .)
    !               reduce using rule 118 (alpha -> alpha_lower .)
    "               reduce using rule 118 (alpha -> alpha_lower .)
    &               reduce using rule 118 (alpha -> alpha_lower .)
    '               reduce using rule 118 (alpha -> alpha_lower .)
    =               reduce using rule 118 (alpha -> alpha_lower .)
    @               reduce using rule 118 (alpha -> alpha_lower .)
    _               reduce using rule 118 (alpha -> alpha_lower .)
    }               reduce using rule 118 (alpha -> alpha_lower .)
    ~               reduce using rule 118 (alpha -> alpha_lower .)
    ]               reduce using rule 118 (alpha -> alpha_lower .)


state 22

    (20) elementary -> command .

    *               reduce using rule 20 (elementary -> command .)
    +               reduce using rule 20 (elementary -> command .)
    ?               reduce using rule 20 (elementary -> command .)
    {               reduce using rule 20 (elementary -> command .)
    (               reduce using rule 20 (elementary -> command .)
    ^               reduce using rule 20 (elementary -> command .)
    >               reduce using rule 20 (elementary -> command .)
    <               reduce using rule 20 (elementary -> command .)
    /               reduce using rule 20 (elementary -> command .)
    \               reduce using rule 20 (elementary -> command .)
    #               reduce using rule 20 (elementary -> command .)
    %               reduce using rule 20 (elementary -> command .)
    ESCAPED         reduce using rule 20 (elementary -> command .)
    DIGIT           reduce using rule 20 (elementary -> command .)
    OTHER           reduce using rule 20 (elementary -> command .)
    [               reduce using rule 20 (elementary -> command .)
    .               reduce using rule 20 (elementary -> command .)
    ,               reduce using rule 20 (elementary -> command .)
    :               reduce using rule 20 (elementary -> command .)
    ;               reduce using rule 20 (elementary -> command .)
    $               reduce using rule 20 (elementary -> command .)
    `               reduce using rule 20 (elementary -> command .)
    a               reduce using rule 20 (elementary -> command .)
    b               reduce using rule 20 (elementary -> command .)
    c               reduce using rule 20 (elementary -> command .)
    d               reduce using rule 20 (elementary -> command .)
    e               reduce using rule 20 (elementary -> command .)
    f               reduce using rule 20 (elementary -> command .)
    g               reduce using rule 20 (elementary -> command .)
    h               reduce using rule 20 (elementary -> command .)
    i               reduce using rule 20 (elementary -> command .)
    j               reduce using rule 20 (elementary -> command .)
    k               reduce using rule 20 (elementary -> command .)
    l               reduce using rule 20 (elementary -> command .)
    m               reduce using rule 20 (elementary -> command .)
    n               reduce using rule 20 (elementary -> command .)
    o               reduce using rule 20 (elementary -> command .)
    p               reduce using rule 20 (elementary -> command .)
    q               reduce using rule 20 (elementary -> command .)
    r               reduce using rule 20 (elementary -> command .)
    s               reduce using rule 20 (elementary -> command .)
    t               reduce using rule 20 (elementary -> command .)
    u               reduce using rule 20 (elementary -> command .)
    v               reduce using rule 20 (elementary -> command .)
    w               reduce using rule 20 (elementary -> command .)
    x               reduce using rule 20 (elementary -> command .)
    y               reduce using rule 20 (elementary -> command .)
    z               reduce using rule 20 (elementary -> command .)
    A               reduce using rule 20 (elementary -> command .)
    B               reduce using rule 20 (elementary -> command .)
    C               reduce using rule 20 (elementary -> command .)
    D               reduce using rule 20 (elementary -> command .)
    E               reduce using rule 20 (elementary -> command .)
    F               reduce using rule 20 (elementary -> command .)
    G               reduce using rule 20 (elementary -> command .)
    H               reduce using rule 20 (elementary -> command .)
    I               reduce using rule 20 (elementary -> command .)
    J               reduce using rule 20 (elementary -> command .)
    K               reduce using rule 20 (elementary -> command .)
    L               reduce using rule 20 (elementary -> command .)
    M               reduce using rule 20 (elementary -> command .)
    N               reduce using rule 20 (elementary -> command .)
    O               reduce using rule 20 (elementary -> command .)
    P               reduce using rule 20 (elementary -> command .)
    Q               reduce using rule 20 (elementary -> command .)
    R               reduce using rule 20 (elementary -> command .)
    S               reduce using rule 20 (elementary -> command .)
    T               reduce using rule 20 (elementary -> command .)
    U               reduce using rule 20 (elementary -> command .)
    V               reduce using rule 20 (elementary -> command .)
    W               reduce using rule 20 (elementary -> command .)
    X               reduce using rule 20 (elementary -> command .)
    Y               reduce using rule 20 (elementary -> command .)
    Z               reduce using rule 20 (elementary -> command .)
    |               reduce using rule 20 (elementary -> command .)
    )               reduce using rule 20 (elementary -> command .)
    $end            reduce using rule 20 (elementary -> command .)


state 23

    (150) alpha_upper -> E .

    *               reduce using rule 150 (alpha_upper -> E .)
    +               reduce using rule 150 (alpha_upper -> E .)
    ?               reduce using rule 150 (alpha_upper -> E .)
    {               reduce using rule 150 (alpha_upper -> E .)
    (               reduce using rule 150 (alpha_upper -> E .)
    ^               reduce using rule 150 (alpha_upper -> E .)
    >               reduce using rule 150 (alpha_upper -> E .)
    <               reduce using rule 150 (alpha_upper -> E .)
    /               reduce using rule 150 (alpha_upper -> E .)
    \               reduce using rule 150 (alpha_upper -> E .)
    #               reduce using rule 150 (alpha_upper -> E .)
    %               reduce using rule 150 (alpha_upper -> E .)
    ESCAPED         reduce using rule 150 (alpha_upper -> E .)
    DIGIT           reduce using rule 150 (alpha_upper -> E .)
    OTHER           reduce using rule 150 (alpha_upper -> E .)
    [               reduce using rule 150 (alpha_upper -> E .)
    .               reduce using rule 150 (alpha_upper -> E .)
    ,               reduce using rule 150 (alpha_upper -> E .)
    :               reduce using rule 150 (alpha_upper -> E .)
    ;               reduce using rule 150 (alpha_upper -> E .)
    $               reduce using rule 150 (alpha_upper -> E .)
    `               reduce using rule 150 (alpha_upper -> E .)
    a               reduce using rule 150 (alpha_upper -> E .)
    b               reduce using rule 150 (alpha_upper -> E .)
    c               reduce using rule 150 (alpha_upper -> E .)
    d               reduce using rule 150 (alpha_upper -> E .)
    e               reduce using rule 150 (alpha_upper -> E .)
    f               reduce using rule 150 (alpha_upper -> E .)
    g               reduce using rule 150 (alpha_upper -> E .)
    h               reduce using rule 150 (alpha_upper -> E .)
    i               reduce using rule 150 (alpha_upper -> E .)
    j               reduce using rule 150 (alpha_upper -> E .)
    k               reduce using rule 150 (alpha_upper -> E .)
    l               reduce using rule 150 (alpha_upper -> E .)
    m               reduce using rule 150 (alpha_upper -> E .)
    n               reduce using rule 150 (alpha_upper -> E .)
    o               reduce using rule 150 (alpha_upper -> E .)
    p               reduce using rule 150 (alpha_upper -> E .)
    q               reduce using rule 150 (alpha_upper -> E .)
    r               reduce using rule 150 (alpha_upper -> E .)
    s               reduce using rule 150 (alpha_upper -> E .)
    t               reduce using rule 150 (alpha_upper -> E .)
    u               reduce using rule 150 (alpha_upper -> E .)
    v               reduce using rule 150 (alpha_upper -> E .)
    w               reduce using rule 150 (alpha_upper -> E .)
    x               reduce using rule 150 (alpha_upper -> E .)
    y               reduce using rule 150 (alpha_upper -> E .)
    z               reduce using rule 150 (alpha_upper -> E .)
    A               reduce using rule 150 (alpha_upper -> E .)
    B               reduce using rule 150 (alpha_upper -> E .)
    C               reduce using rule 150 (alpha_upper -> E .)
    D               reduce using rule 150 (alpha_upper -> E .)
    E               reduce using rule 150 (alpha_upper -> E .)
    F               reduce using rule 150 (alpha_upper -> E .)
    G               reduce using rule 150 (alpha_upper -> E .)
    H               reduce using rule 150 (alpha_upper -> E .)
    I               reduce using rule 150 (alpha_upper -> E .)
    J               reduce using rule 150 (alpha_upper -> E .)
    K               reduce using rule 150 (alpha_upper -> E .)
    L               reduce using rule 150 (alpha_upper -> E .)
    M               reduce using rule 150 (alpha_upper -> E .)
    N               reduce using rule 150 (alpha_upper -> E .)
    O               reduce using rule 150 (alpha_upper -> E .)
    P               reduce using rule 150 (alpha_upper -> E .)
    Q               reduce using rule 150 (alpha_upper -> E .)
    R               reduce using rule 150 (alpha_upper -> E .)
    S               reduce using rule 150 (alpha_upper -> E .)
    T               reduce using rule 150 (alpha_upper -> E .)
    U               reduce using rule 150 (alpha_upper -> E .)
    V               reduce using rule 150 (alpha_upper -> E .)
    W               reduce using rule 150 (alpha_upper -> E .)
    X               reduce using rule 150 (alpha_upper -> E .)
    Y               reduce using rule 150 (alpha_upper -> E .)
    Z               reduce using rule 150 (alpha_upper -> E .)
    |               reduce using rule 150 (alpha_upper -> E .)
    $end            reduce using rule 150 (alpha_upper -> E .)
    )               reduce using rule 150 (alpha_upper -> E .)
    -               reduce using rule 150 (alpha_upper -> E .)
    !               reduce using rule 150 (alpha_upper -> E .)
    "               reduce using rule 150 (alpha_upper -> E .)
    &               reduce using rule 150 (alpha_upper -> E .)
    '               reduce using rule 150 (alpha_upper -> E .)
    =               reduce using rule 150 (alpha_upper -> E .)
    @               reduce using rule 150 (alpha_upper -> E .)
    _               reduce using rule 150 (alpha_upper -> E .)
    }               reduce using rule 150 (alpha_upper -> E .)
    ~               reduce using rule 150 (alpha_upper -> E .)
    ]               reduce using rule 150 (alpha_upper -> E .)


state 24

    (154) alpha_upper -> I .

    *               reduce using rule 154 (alpha_upper -> I .)
    +               reduce using rule 154 (alpha_upper -> I .)
    ?               reduce using rule 154 (alpha_upper -> I .)
    {               reduce using rule 154 (alpha_upper -> I .)
    (               reduce using rule 154 (alpha_upper -> I .)
    ^               reduce using rule 154 (alpha_upper -> I .)
    >               reduce using rule 154 (alpha_upper -> I .)
    <               reduce using rule 154 (alpha_upper -> I .)
    /               reduce using rule 154 (alpha_upper -> I .)
    \               reduce using rule 154 (alpha_upper -> I .)
    #               reduce using rule 154 (alpha_upper -> I .)
    %               reduce using rule 154 (alpha_upper -> I .)
    ESCAPED         reduce using rule 154 (alpha_upper -> I .)
    DIGIT           reduce using rule 154 (alpha_upper -> I .)
    OTHER           reduce using rule 154 (alpha_upper -> I .)
    [               reduce using rule 154 (alpha_upper -> I .)
    .               reduce using rule 154 (alpha_upper -> I .)
    ,               reduce using rule 154 (alpha_upper -> I .)
    :               reduce using rule 154 (alpha_upper -> I .)
    ;               reduce using rule 154 (alpha_upper -> I .)
    $               reduce using rule 154 (alpha_upper -> I .)
    `               reduce using rule 154 (alpha_upper -> I .)
    a               reduce using rule 154 (alpha_upper -> I .)
    b               reduce using rule 154 (alpha_upper -> I .)
    c               reduce using rule 154 (alpha_upper -> I .)
    d               reduce using rule 154 (alpha_upper -> I .)
    e               reduce using rule 154 (alpha_upper -> I .)
    f               reduce using rule 154 (alpha_upper -> I .)
    g               reduce using rule 154 (alpha_upper -> I .)
    h               reduce using rule 154 (alpha_upper -> I .)
    i               reduce using rule 154 (alpha_upper -> I .)
    j               reduce using rule 154 (alpha_upper -> I .)
    k               reduce using rule 154 (alpha_upper -> I .)
    l               reduce using rule 154 (alpha_upper -> I .)
    m               reduce using rule 154 (alpha_upper -> I .)
    n               reduce using rule 154 (alpha_upper -> I .)
    o               reduce using rule 154 (alpha_upper -> I .)
    p               reduce using rule 154 (alpha_upper -> I .)
    q               reduce using rule 154 (alpha_upper -> I .)
    r               reduce using rule 154 (alpha_upper -> I .)
    s               reduce using rule 154 (alpha_upper -> I .)
    t               reduce using rule 154 (alpha_upper -> I .)
    u               reduce using rule 154 (alpha_upper -> I .)
    v               reduce using rule 154 (alpha_upper -> I .)
    w               reduce using rule 154 (alpha_upper -> I .)
    x               reduce using rule 154 (alpha_upper -> I .)
    y               reduce using rule 154 (alpha_upper -> I .)
    z               reduce using rule 154 (alpha_upper -> I .)
    A               reduce using rule 154 (alpha_upper -> I .)
    B               reduce using rule 154 (alpha_upper -> I .)
    C               reduce using rule 154 (alpha_upper -> I .)
    D               reduce using rule 154 (alpha_upper -> I .)
    E               reduce using rule 154 (alpha_upper -> I .)
    F               reduce using rule 154 (alpha_upper -> I .)
    G               reduce using rule 154 (alpha_upper -> I .)
    H               reduce using rule 154 (alpha_upper -> I .)
    I               reduce using rule 154 (alpha_upper -> I .)
    J               reduce using rule 154 (alpha_upper -> I .)
    K               reduce using rule 154 (alpha_upper -> I .)
    L               reduce using rule 154 (alpha_upper -> I .)
    M               reduce using rule 154 (alpha_upper -> I .)
    N               reduce using rule 154 (alpha_upper -> I .)
    O               reduce using rule 154 (alpha_upper -> I .)
    P               reduce using rule 154 (alpha_upper -> I .)
    Q               reduce using rule 154 (alpha_upper -> I .)
    R               reduce using rule 154 (alpha_upper -> I .)
    S               reduce using rule 154 (alpha_upper -> I .)
    T               reduce using rule 154 (alpha_upper -> I .)
    U               reduce using rule 154 (alpha_upper -> I .)
    V               reduce using rule 154 (alpha_upper -> I .)
    W               reduce using rule 154 (alpha_upper -> I .)
    X               reduce using rule 154 (alpha_upper -> I .)
    Y               reduce using rule 154 (alpha_upper -> I .)
    Z               reduce using rule 154 (alpha_upper -> I .)
    |               reduce using rule 154 (alpha_upper -> I .)
    $end            reduce using rule 154 (alpha_upper -> I .)
    )               reduce using rule 154 (alpha_upper -> I .)
    -               reduce using rule 154 (alpha_upper -> I .)
    !               reduce using rule 154 (alpha_upper -> I .)
    "               reduce using rule 154 (alpha_upper -> I .)
    &               reduce using rule 154 (alpha_upper -> I .)
    '               reduce using rule 154 (alpha_upper -> I .)
    =               reduce using rule 154 (alpha_upper -> I .)
    @               reduce using rule 154 (alpha_upper -> I .)
    _               reduce using rule 154 (alpha_upper -> I .)
    }               reduce using rule 154 (alpha_upper -> I .)
    ~               reduce using rule 154 (alpha_upper -> I .)
    ]               reduce using rule 154 (alpha_upper -> I .)


state 25

    (111) command -> \ .

    *               reduce using rule 111 (command -> \ .)
    +               reduce using rule 111 (command -> \ .)
    ?               reduce using rule 111 (command -> \ .)
    {               reduce using rule 111 (command -> \ .)
    (               reduce using rule 111 (command -> \ .)
    ^               reduce using rule 111 (command -> \ .)
    >               reduce using rule 111 (command -> \ .)
    <               reduce using rule 111 (command -> \ .)
    /               reduce using rule 111 (command -> \ .)
    \               reduce using rule 111 (command -> \ .)
    #               reduce using rule 111 (command -> \ .)
    %               reduce using rule 111 (command -> \ .)
    ESCAPED         reduce using rule 111 (command -> \ .)
    DIGIT           reduce using rule 111 (command -> \ .)
    OTHER           reduce using rule 111 (command -> \ .)
    [               reduce using rule 111 (command -> \ .)
    .               reduce using rule 111 (command -> \ .)
    ,               reduce using rule 111 (command -> \ .)
    :               reduce using rule 111 (command -> \ .)
    ;               reduce using rule 111 (command -> \ .)
    $               reduce using rule 111 (command -> \ .)
    `               reduce using rule 111 (command -> \ .)
    a               reduce using rule 111 (command -> \ .)
    b               reduce using rule 111 (command -> \ .)
    c               reduce using rule 111 (command -> \ .)
    d               reduce using rule 111 (command -> \ .)
    e               reduce using rule 111 (command -> \ .)
    f               reduce using rule 111 (command -> \ .)
    g               reduce using rule 111 (command -> \ .)
    h               reduce using rule 111 (command -> \ .)
    i               reduce using rule 111 (command -> \ .)
    j               reduce using rule 111 (command -> \ .)
    k               reduce using rule 111 (command -> \ .)
    l               reduce using rule 111 (command -> \ .)
    m               reduce using rule 111 (command -> \ .)
    n               reduce using rule 111 (command -> \ .)
    o               reduce using rule 111 (command -> \ .)
    p               reduce using rule 111 (command -> \ .)
    q               reduce using rule 111 (command -> \ .)
    r               reduce using rule 111 (command -> \ .)
    s               reduce using rule 111 (command -> \ .)
    t               reduce using rule 111 (command -> \ .)
    u               reduce using rule 111 (command -> \ .)
    v               reduce using rule 111 (command -> \ .)
    w               reduce using rule 111 (command -> \ .)
    x               reduce using rule 111 (command -> \ .)
    y               reduce using rule 111 (command -> \ .)
    z               reduce using rule 111 (command -> \ .)
    A               reduce using rule 111 (command -> \ .)
    B               reduce using rule 111 (command -> \ .)
    C               reduce using rule 111 (command -> \ .)
    D               reduce using rule 111 (command -> \ .)
    E               reduce using rule 111 (command -> \ .)
    F               reduce using rule 111 (command -> \ .)
    G               reduce using rule 111 (command -> \ .)
    H               reduce using rule 111 (command -> \ .)
    I               reduce using rule 111 (command -> \ .)
    J               reduce using rule 111 (command -> \ .)
    K               reduce using rule 111 (command -> \ .)
    L               reduce using rule 111 (command -> \ .)
    M               reduce using rule 111 (command -> \ .)
    N               reduce using rule 111 (command -> \ .)
    O               reduce using rule 111 (command -> \ .)
    P               reduce using rule 111 (command -> \ .)
    Q               reduce using rule 111 (command -> \ .)
    R               reduce using rule 111 (command -> \ .)
    S               reduce using rule 111 (command -> \ .)
    T               reduce using rule 111 (command -> \ .)
    U               reduce using rule 111 (command -> \ .)
    V               reduce using rule 111 (command -> \ .)
    W               reduce using rule 111 (command -> \ .)
    X               reduce using rule 111 (command -> \ .)
    Y               reduce using rule 111 (command -> \ .)
    Z               reduce using rule 111 (command -> \ .)
    |               reduce using rule 111 (command -> \ .)
    $end            reduce using rule 111 (command -> \ .)
    )               reduce using rule 111 (command -> \ .)


state 26

    (1) re -> alternation .

    |               reduce using rule 1 (re -> alternation .)
    )               reduce using rule 1 (re -> alternation .)
    $end            reduce using rule 1 (re -> alternation .)


state 27

    (169) alpha_upper -> X .

    *               reduce using rule 169 (alpha_upper -> X .)
    +               reduce using rule 169 (alpha_upper -> X .)
    ?               reduce using rule 169 (alpha_upper -> X .)
    {               reduce using rule 169 (alpha_upper -> X .)
    (               reduce using rule 169 (alpha_upper -> X .)
    ^               reduce using rule 169 (alpha_upper -> X .)
    >               reduce using rule 169 (alpha_upper -> X .)
    <               reduce using rule 169 (alpha_upper -> X .)
    /               reduce using rule 169 (alpha_upper -> X .)
    \               reduce using rule 169 (alpha_upper -> X .)
    #               reduce using rule 169 (alpha_upper -> X .)
    %               reduce using rule 169 (alpha_upper -> X .)
    ESCAPED         reduce using rule 169 (alpha_upper -> X .)
    DIGIT           reduce using rule 169 (alpha_upper -> X .)
    OTHER           reduce using rule 169 (alpha_upper -> X .)
    [               reduce using rule 169 (alpha_upper -> X .)
    .               reduce using rule 169 (alpha_upper -> X .)
    ,               reduce using rule 169 (alpha_upper -> X .)
    :               reduce using rule 169 (alpha_upper -> X .)
    ;               reduce using rule 169 (alpha_upper -> X .)
    $               reduce using rule 169 (alpha_upper -> X .)
    `               reduce using rule 169 (alpha_upper -> X .)
    a               reduce using rule 169 (alpha_upper -> X .)
    b               reduce using rule 169 (alpha_upper -> X .)
    c               reduce using rule 169 (alpha_upper -> X .)
    d               reduce using rule 169 (alpha_upper -> X .)
    e               reduce using rule 169 (alpha_upper -> X .)
    f               reduce using rule 169 (alpha_upper -> X .)
    g               reduce using rule 169 (alpha_upper -> X .)
    h               reduce using rule 169 (alpha_upper -> X .)
    i               reduce using rule 169 (alpha_upper -> X .)
    j               reduce using rule 169 (alpha_upper -> X .)
    k               reduce using rule 169 (alpha_upper -> X .)
    l               reduce using rule 169 (alpha_upper -> X .)
    m               reduce using rule 169 (alpha_upper -> X .)
    n               reduce using rule 169 (alpha_upper -> X .)
    o               reduce using rule 169 (alpha_upper -> X .)
    p               reduce using rule 169 (alpha_upper -> X .)
    q               reduce using rule 169 (alpha_upper -> X .)
    r               reduce using rule 169 (alpha_upper -> X .)
    s               reduce using rule 169 (alpha_upper -> X .)
    t               reduce using rule 169 (alpha_upper -> X .)
    u               reduce using rule 169 (alpha_upper -> X .)
    v               reduce using rule 169 (alpha_upper -> X .)
    w               reduce using rule 169 (alpha_upper -> X .)
    x               reduce using rule 169 (alpha_upper -> X .)
    y               reduce using rule 169 (alpha_upper -> X .)
    z               reduce using rule 169 (alpha_upper -> X .)
    A               reduce using rule 169 (alpha_upper -> X .)
    B               reduce using rule 169 (alpha_upper -> X .)
    C               reduce using rule 169 (alpha_upper -> X .)
    D               reduce using rule 169 (alpha_upper -> X .)
    E               reduce using rule 169 (alpha_upper -> X .)
    F               reduce using rule 169 (alpha_upper -> X .)
    G               reduce using rule 169 (alpha_upper -> X .)
    H               reduce using rule 169 (alpha_upper -> X .)
    I               reduce using rule 169 (alpha_upper -> X .)
    J               reduce using rule 169 (alpha_upper -> X .)
    K               reduce using rule 169 (alpha_upper -> X .)
    L               reduce using rule 169 (alpha_upper -> X .)
    M               reduce using rule 169 (alpha_upper -> X .)
    N               reduce using rule 169 (alpha_upper -> X .)
    O               reduce using rule 169 (alpha_upper -> X .)
    P               reduce using rule 169 (alpha_upper -> X .)
    Q               reduce using rule 169 (alpha_upper -> X .)
    R               reduce using rule 169 (alpha_upper -> X .)
    S               reduce using rule 169 (alpha_upper -> X .)
    T               reduce using rule 169 (alpha_upper -> X .)
    U               reduce using rule 169 (alpha_upper -> X .)
    V               reduce using rule 169 (alpha_upper -> X .)
    W               reduce using rule 169 (alpha_upper -> X .)
    X               reduce using rule 169 (alpha_upper -> X .)
    Y               reduce using rule 169 (alpha_upper -> X .)
    Z               reduce using rule 169 (alpha_upper -> X .)
    |               reduce using rule 169 (alpha_upper -> X .)
    $end            reduce using rule 169 (alpha_upper -> X .)
    )               reduce using rule 169 (alpha_upper -> X .)
    -               reduce using rule 169 (alpha_upper -> X .)
    !               reduce using rule 169 (alpha_upper -> X .)
    "               reduce using rule 169 (alpha_upper -> X .)
    &               reduce using rule 169 (alpha_upper -> X .)
    '               reduce using rule 169 (alpha_upper -> X .)
    =               reduce using rule 169 (alpha_upper -> X .)
    @               reduce using rule 169 (alpha_upper -> X .)
    _               reduce using rule 169 (alpha_upper -> X .)
    }               reduce using rule 169 (alpha_upper -> X .)
    ~               reduce using rule 169 (alpha_upper -> X .)
    ]               reduce using rule 169 (alpha_upper -> X .)


state 28

    (129) alpha_lower -> j .

    -               reduce using rule 129 (alpha_lower -> j .)
    !               reduce using rule 129 (alpha_lower -> j .)
    "               reduce using rule 129 (alpha_lower -> j .)
    #               reduce using rule 129 (alpha_lower -> j .)
    $               reduce using rule 129 (alpha_lower -> j .)
    %               reduce using rule 129 (alpha_lower -> j .)
    &               reduce using rule 129 (alpha_lower -> j .)
    '               reduce using rule 129 (alpha_lower -> j .)
    (               reduce using rule 129 (alpha_lower -> j .)
    )               reduce using rule 129 (alpha_lower -> j .)
    *               reduce using rule 129 (alpha_lower -> j .)
    +               reduce using rule 129 (alpha_lower -> j .)
    ,               reduce using rule 129 (alpha_lower -> j .)
    .               reduce using rule 129 (alpha_lower -> j .)
    /               reduce using rule 129 (alpha_lower -> j .)
    :               reduce using rule 129 (alpha_lower -> j .)
    ;               reduce using rule 129 (alpha_lower -> j .)
    <               reduce using rule 129 (alpha_lower -> j .)
    =               reduce using rule 129 (alpha_lower -> j .)
    >               reduce using rule 129 (alpha_lower -> j .)
    ?               reduce using rule 129 (alpha_lower -> j .)
    @               reduce using rule 129 (alpha_lower -> j .)
    [               reduce using rule 129 (alpha_lower -> j .)
    \               reduce using rule 129 (alpha_lower -> j .)
    _               reduce using rule 129 (alpha_lower -> j .)
    `               reduce using rule 129 (alpha_lower -> j .)
    {               reduce using rule 129 (alpha_lower -> j .)
    }               reduce using rule 129 (alpha_lower -> j .)
    ~               reduce using rule 129 (alpha_lower -> j .)
    ESCAPED         reduce using rule 129 (alpha_lower -> j .)
    DIGIT           reduce using rule 129 (alpha_lower -> j .)
    OTHER           reduce using rule 129 (alpha_lower -> j .)
    a               reduce using rule 129 (alpha_lower -> j .)
    b               reduce using rule 129 (alpha_lower -> j .)
    c               reduce using rule 129 (alpha_lower -> j .)
    d               reduce using rule 129 (alpha_lower -> j .)
    e               reduce using rule 129 (alpha_lower -> j .)
    f               reduce using rule 129 (alpha_lower -> j .)
    g               reduce using rule 129 (alpha_lower -> j .)
    h               reduce using rule 129 (alpha_lower -> j .)
    i               reduce using rule 129 (alpha_lower -> j .)
    j               reduce using rule 129 (alpha_lower -> j .)
    k               reduce using rule 129 (alpha_lower -> j .)
    l               reduce using rule 129 (alpha_lower -> j .)
    m               reduce using rule 129 (alpha_lower -> j .)
    n               reduce using rule 129 (alpha_lower -> j .)
    o               reduce using rule 129 (alpha_lower -> j .)
    p               reduce using rule 129 (alpha_lower -> j .)
    q               reduce using rule 129 (alpha_lower -> j .)
    r               reduce using rule 129 (alpha_lower -> j .)
    s               reduce using rule 129 (alpha_lower -> j .)
    t               reduce using rule 129 (alpha_lower -> j .)
    u               reduce using rule 129 (alpha_lower -> j .)
    v               reduce using rule 129 (alpha_lower -> j .)
    w               reduce using rule 129 (alpha_lower -> j .)
    x               reduce using rule 129 (alpha_lower -> j .)
    y               reduce using rule 129 (alpha_lower -> j .)
    z               reduce using rule 129 (alpha_lower -> j .)
    A               reduce using rule 129 (alpha_lower -> j .)
    B               reduce using rule 129 (alpha_lower -> j .)
    C               reduce using rule 129 (alpha_lower -> j .)
    D               reduce using rule 129 (alpha_lower -> j .)
    E               reduce using rule 129 (alpha_lower -> j .)
    F               reduce using rule 129 (alpha_lower -> j .)
    G               reduce using rule 129 (alpha_lower -> j .)
    H               reduce using rule 129 (alpha_lower -> j .)
    I               reduce using rule 129 (alpha_lower -> j .)
    J               reduce using rule 129 (alpha_lower -> j .)
    K               reduce using rule 129 (alpha_lower -> j .)
    L               reduce using rule 129 (alpha_lower -> j .)
    M               reduce using rule 129 (alpha_lower -> j .)
    N               reduce using rule 129 (alpha_lower -> j .)
    O               reduce using rule 129 (alpha_lower -> j .)
    P               reduce using rule 129 (alpha_lower -> j .)
    Q               reduce using rule 129 (alpha_lower -> j .)
    R               reduce using rule 129 (alpha_lower -> j .)
    S               reduce using rule 129 (alpha_lower -> j .)
    T               reduce using rule 129 (alpha_lower -> j .)
    U               reduce using rule 129 (alpha_lower -> j .)
    V               reduce using rule 129 (alpha_lower -> j .)
    W               reduce using rule 129 (alpha_lower -> j .)
    X               reduce using rule 129 (alpha_lower -> j .)
    Y               reduce using rule 129 (alpha_lower -> j .)
    Z               reduce using rule 129 (alpha_lower -> j .)
    ]               reduce using rule 129 (alpha_lower -> j .)
    ^               reduce using rule 129 (alpha_lower -> j .)
    |               reduce using rule 129 (alpha_lower -> j .)
    $end            reduce using rule 129 (alpha_lower -> j .)


state 29

    (164) alpha_upper -> S .

    *               reduce using rule 164 (alpha_upper -> S .)
    +               reduce using rule 164 (alpha_upper -> S .)
    ?               reduce using rule 164 (alpha_upper -> S .)
    {               reduce using rule 164 (alpha_upper -> S .)
    (               reduce using rule 164 (alpha_upper -> S .)
    ^               reduce using rule 164 (alpha_upper -> S .)
    >               reduce using rule 164 (alpha_upper -> S .)
    <               reduce using rule 164 (alpha_upper -> S .)
    /               reduce using rule 164 (alpha_upper -> S .)
    \               reduce using rule 164 (alpha_upper -> S .)
    #               reduce using rule 164 (alpha_upper -> S .)
    %               reduce using rule 164 (alpha_upper -> S .)
    ESCAPED         reduce using rule 164 (alpha_upper -> S .)
    DIGIT           reduce using rule 164 (alpha_upper -> S .)
    OTHER           reduce using rule 164 (alpha_upper -> S .)
    [               reduce using rule 164 (alpha_upper -> S .)
    .               reduce using rule 164 (alpha_upper -> S .)
    ,               reduce using rule 164 (alpha_upper -> S .)
    :               reduce using rule 164 (alpha_upper -> S .)
    ;               reduce using rule 164 (alpha_upper -> S .)
    $               reduce using rule 164 (alpha_upper -> S .)
    `               reduce using rule 164 (alpha_upper -> S .)
    a               reduce using rule 164 (alpha_upper -> S .)
    b               reduce using rule 164 (alpha_upper -> S .)
    c               reduce using rule 164 (alpha_upper -> S .)
    d               reduce using rule 164 (alpha_upper -> S .)
    e               reduce using rule 164 (alpha_upper -> S .)
    f               reduce using rule 164 (alpha_upper -> S .)
    g               reduce using rule 164 (alpha_upper -> S .)
    h               reduce using rule 164 (alpha_upper -> S .)
    i               reduce using rule 164 (alpha_upper -> S .)
    j               reduce using rule 164 (alpha_upper -> S .)
    k               reduce using rule 164 (alpha_upper -> S .)
    l               reduce using rule 164 (alpha_upper -> S .)
    m               reduce using rule 164 (alpha_upper -> S .)
    n               reduce using rule 164 (alpha_upper -> S .)
    o               reduce using rule 164 (alpha_upper -> S .)
    p               reduce using rule 164 (alpha_upper -> S .)
    q               reduce using rule 164 (alpha_upper -> S .)
    r               reduce using rule 164 (alpha_upper -> S .)
    s               reduce using rule 164 (alpha_upper -> S .)
    t               reduce using rule 164 (alpha_upper -> S .)
    u               reduce using rule 164 (alpha_upper -> S .)
    v               reduce using rule 164 (alpha_upper -> S .)
    w               reduce using rule 164 (alpha_upper -> S .)
    x               reduce using rule 164 (alpha_upper -> S .)
    y               reduce using rule 164 (alpha_upper -> S .)
    z               reduce using rule 164 (alpha_upper -> S .)
    A               reduce using rule 164 (alpha_upper -> S .)
    B               reduce using rule 164 (alpha_upper -> S .)
    C               reduce using rule 164 (alpha_upper -> S .)
    D               reduce using rule 164 (alpha_upper -> S .)
    E               reduce using rule 164 (alpha_upper -> S .)
    F               reduce using rule 164 (alpha_upper -> S .)
    G               reduce using rule 164 (alpha_upper -> S .)
    H               reduce using rule 164 (alpha_upper -> S .)
    I               reduce using rule 164 (alpha_upper -> S .)
    J               reduce using rule 164 (alpha_upper -> S .)
    K               reduce using rule 164 (alpha_upper -> S .)
    L               reduce using rule 164 (alpha_upper -> S .)
    M               reduce using rule 164 (alpha_upper -> S .)
    N               reduce using rule 164 (alpha_upper -> S .)
    O               reduce using rule 164 (alpha_upper -> S .)
    P               reduce using rule 164 (alpha_upper -> S .)
    Q               reduce using rule 164 (alpha_upper -> S .)
    R               reduce using rule 164 (alpha_upper -> S .)
    S               reduce using rule 164 (alpha_upper -> S .)
    T               reduce using rule 164 (alpha_upper -> S .)
    U               reduce using rule 164 (alpha_upper -> S .)
    V               reduce using rule 164 (alpha_upper -> S .)
    W               reduce using rule 164 (alpha_upper -> S .)
    X               reduce using rule 164 (alpha_upper -> S .)
    Y               reduce using rule 164 (alpha_upper -> S .)
    Z               reduce using rule 164 (alpha_upper -> S .)
    |               reduce using rule 164 (alpha_upper -> S .)
    $end            reduce using rule 164 (alpha_upper -> S .)
    )               reduce using rule 164 (alpha_upper -> S .)
    -               reduce using rule 164 (alpha_upper -> S .)
    !               reduce using rule 164 (alpha_upper -> S .)
    "               reduce using rule 164 (alpha_upper -> S .)
    &               reduce using rule 164 (alpha_upper -> S .)
    '               reduce using rule 164 (alpha_upper -> S .)
    =               reduce using rule 164 (alpha_upper -> S .)
    @               reduce using rule 164 (alpha_upper -> S .)
    _               reduce using rule 164 (alpha_upper -> S .)
    }               reduce using rule 164 (alpha_upper -> S .)
    ~               reduce using rule 164 (alpha_upper -> S .)
    ]               reduce using rule 164 (alpha_upper -> S .)


state 30

    (128) alpha_lower -> i .

    -               reduce using rule 128 (alpha_lower -> i .)
    !               reduce using rule 128 (alpha_lower -> i .)
    "               reduce using rule 128 (alpha_lower -> i .)
    #               reduce using rule 128 (alpha_lower -> i .)
    $               reduce using rule 128 (alpha_lower -> i .)
    %               reduce using rule 128 (alpha_lower -> i .)
    &               reduce using rule 128 (alpha_lower -> i .)
    '               reduce using rule 128 (alpha_lower -> i .)
    (               reduce using rule 128 (alpha_lower -> i .)
    )               reduce using rule 128 (alpha_lower -> i .)
    *               reduce using rule 128 (alpha_lower -> i .)
    +               reduce using rule 128 (alpha_lower -> i .)
    ,               reduce using rule 128 (alpha_lower -> i .)
    .               reduce using rule 128 (alpha_lower -> i .)
    /               reduce using rule 128 (alpha_lower -> i .)
    :               reduce using rule 128 (alpha_lower -> i .)
    ;               reduce using rule 128 (alpha_lower -> i .)
    <               reduce using rule 128 (alpha_lower -> i .)
    =               reduce using rule 128 (alpha_lower -> i .)
    >               reduce using rule 128 (alpha_lower -> i .)
    ?               reduce using rule 128 (alpha_lower -> i .)
    @               reduce using rule 128 (alpha_lower -> i .)
    [               reduce using rule 128 (alpha_lower -> i .)
    \               reduce using rule 128 (alpha_lower -> i .)
    _               reduce using rule 128 (alpha_lower -> i .)
    `               reduce using rule 128 (alpha_lower -> i .)
    {               reduce using rule 128 (alpha_lower -> i .)
    }               reduce using rule 128 (alpha_lower -> i .)
    ~               reduce using rule 128 (alpha_lower -> i .)
    ESCAPED         reduce using rule 128 (alpha_lower -> i .)
    DIGIT           reduce using rule 128 (alpha_lower -> i .)
    OTHER           reduce using rule 128 (alpha_lower -> i .)
    a               reduce using rule 128 (alpha_lower -> i .)
    b               reduce using rule 128 (alpha_lower -> i .)
    c               reduce using rule 128 (alpha_lower -> i .)
    d               reduce using rule 128 (alpha_lower -> i .)
    e               reduce using rule 128 (alpha_lower -> i .)
    f               reduce using rule 128 (alpha_lower -> i .)
    g               reduce using rule 128 (alpha_lower -> i .)
    h               reduce using rule 128 (alpha_lower -> i .)
    i               reduce using rule 128 (alpha_lower -> i .)
    j               reduce using rule 128 (alpha_lower -> i .)
    k               reduce using rule 128 (alpha_lower -> i .)
    l               reduce using rule 128 (alpha_lower -> i .)
    m               reduce using rule 128 (alpha_lower -> i .)
    n               reduce using rule 128 (alpha_lower -> i .)
    o               reduce using rule 128 (alpha_lower -> i .)
    p               reduce using rule 128 (alpha_lower -> i .)
    q               reduce using rule 128 (alpha_lower -> i .)
    r               reduce using rule 128 (alpha_lower -> i .)
    s               reduce using rule 128 (alpha_lower -> i .)
    t               reduce using rule 128 (alpha_lower -> i .)
    u               reduce using rule 128 (alpha_lower -> i .)
    v               reduce using rule 128 (alpha_lower -> i .)
    w               reduce using rule 128 (alpha_lower -> i .)
    x               reduce using rule 128 (alpha_lower -> i .)
    y               reduce using rule 128 (alpha_lower -> i .)
    z               reduce using rule 128 (alpha_lower -> i .)
    A               reduce using rule 128 (alpha_lower -> i .)
    B               reduce using rule 128 (alpha_lower -> i .)
    C               reduce using rule 128 (alpha_lower -> i .)
    D               reduce using rule 128 (alpha_lower -> i .)
    E               reduce using rule 128 (alpha_lower -> i .)
    F               reduce using rule 128 (alpha_lower -> i .)
    G               reduce using rule 128 (alpha_lower -> i .)
    H               reduce using rule 128 (alpha_lower -> i .)
    I               reduce using rule 128 (alpha_lower -> i .)
    J               reduce using rule 128 (alpha_lower -> i .)
    K               reduce using rule 128 (alpha_lower -> i .)
    L               reduce using rule 128 (alpha_lower -> i .)
    M               reduce using rule 128 (alpha_lower -> i .)
    N               reduce using rule 128 (alpha_lower -> i .)
    O               reduce using rule 128 (alpha_lower -> i .)
    P               reduce using rule 128 (alpha_lower -> i .)
    Q               reduce using rule 128 (alpha_lower -> i .)
    R               reduce using rule 128 (alpha_lower -> i .)
    S               reduce using rule 128 (alpha_lower -> i .)
    T               reduce using rule 128 (alpha_lower -> i .)
    U               reduce using rule 128 (alpha_lower -> i .)
    V               reduce using rule 128 (alpha_lower -> i .)
    W               reduce using rule 128 (alpha_lower -> i .)
    X               reduce using rule 128 (alpha_lower -> i .)
    Y               reduce using rule 128 (alpha_lower -> i .)
    Z               reduce using rule 128 (alpha_lower -> i .)
    ]               reduce using rule 128 (alpha_lower -> i .)
    ^               reduce using rule 128 (alpha_lower -> i .)
    |               reduce using rule 128 (alpha_lower -> i .)
    $end            reduce using rule 128 (alpha_lower -> i .)


state 31

    (160) alpha_upper -> O .

    *               reduce using rule 160 (alpha_upper -> O .)
    +               reduce using rule 160 (alpha_upper -> O .)
    ?               reduce using rule 160 (alpha_upper -> O .)
    {               reduce using rule 160 (alpha_upper -> O .)
    (               reduce using rule 160 (alpha_upper -> O .)
    ^               reduce using rule 160 (alpha_upper -> O .)
    >               reduce using rule 160 (alpha_upper -> O .)
    <               reduce using rule 160 (alpha_upper -> O .)
    /               reduce using rule 160 (alpha_upper -> O .)
    \               reduce using rule 160 (alpha_upper -> O .)
    #               reduce using rule 160 (alpha_upper -> O .)
    %               reduce using rule 160 (alpha_upper -> O .)
    ESCAPED         reduce using rule 160 (alpha_upper -> O .)
    DIGIT           reduce using rule 160 (alpha_upper -> O .)
    OTHER           reduce using rule 160 (alpha_upper -> O .)
    [               reduce using rule 160 (alpha_upper -> O .)
    .               reduce using rule 160 (alpha_upper -> O .)
    ,               reduce using rule 160 (alpha_upper -> O .)
    :               reduce using rule 160 (alpha_upper -> O .)
    ;               reduce using rule 160 (alpha_upper -> O .)
    $               reduce using rule 160 (alpha_upper -> O .)
    `               reduce using rule 160 (alpha_upper -> O .)
    a               reduce using rule 160 (alpha_upper -> O .)
    b               reduce using rule 160 (alpha_upper -> O .)
    c               reduce using rule 160 (alpha_upper -> O .)
    d               reduce using rule 160 (alpha_upper -> O .)
    e               reduce using rule 160 (alpha_upper -> O .)
    f               reduce using rule 160 (alpha_upper -> O .)
    g               reduce using rule 160 (alpha_upper -> O .)
    h               reduce using rule 160 (alpha_upper -> O .)
    i               reduce using rule 160 (alpha_upper -> O .)
    j               reduce using rule 160 (alpha_upper -> O .)
    k               reduce using rule 160 (alpha_upper -> O .)
    l               reduce using rule 160 (alpha_upper -> O .)
    m               reduce using rule 160 (alpha_upper -> O .)
    n               reduce using rule 160 (alpha_upper -> O .)
    o               reduce using rule 160 (alpha_upper -> O .)
    p               reduce using rule 160 (alpha_upper -> O .)
    q               reduce using rule 160 (alpha_upper -> O .)
    r               reduce using rule 160 (alpha_upper -> O .)
    s               reduce using rule 160 (alpha_upper -> O .)
    t               reduce using rule 160 (alpha_upper -> O .)
    u               reduce using rule 160 (alpha_upper -> O .)
    v               reduce using rule 160 (alpha_upper -> O .)
    w               reduce using rule 160 (alpha_upper -> O .)
    x               reduce using rule 160 (alpha_upper -> O .)
    y               reduce using rule 160 (alpha_upper -> O .)
    z               reduce using rule 160 (alpha_upper -> O .)
    A               reduce using rule 160 (alpha_upper -> O .)
    B               reduce using rule 160 (alpha_upper -> O .)
    C               reduce using rule 160 (alpha_upper -> O .)
    D               reduce using rule 160 (alpha_upper -> O .)
    E               reduce using rule 160 (alpha_upper -> O .)
    F               reduce using rule 160 (alpha_upper -> O .)
    G               reduce using rule 160 (alpha_upper -> O .)
    H               reduce using rule 160 (alpha_upper -> O .)
    I               reduce using rule 160 (alpha_upper -> O .)
    J               reduce using rule 160 (alpha_upper -> O .)
    K               reduce using rule 160 (alpha_upper -> O .)
    L               reduce using rule 160 (alpha_upper -> O .)
    M               reduce using rule 160 (alpha_upper -> O .)
    N               reduce using rule 160 (alpha_upper -> O .)
    O               reduce using rule 160 (alpha_upper -> O .)
    P               reduce using rule 160 (alpha_upper -> O .)
    Q               reduce using rule 160 (alpha_upper -> O .)
    R               reduce using rule 160 (alpha_upper -> O .)
    S               reduce using rule 160 (alpha_upper -> O .)
    T               reduce using rule 160 (alpha_upper -> O .)
    U               reduce using rule 160 (alpha_upper -> O .)
    V               reduce using rule 160 (alpha_upper -> O .)
    W               reduce using rule 160 (alpha_upper -> O .)
    X               reduce using rule 160 (alpha_upper -> O .)
    Y               reduce using rule 160 (alpha_upper -> O .)
    Z               reduce using rule 160 (alpha_upper -> O .)
    |               reduce using rule 160 (alpha_upper -> O .)
    $end            reduce using rule 160 (alpha_upper -> O .)
    )               reduce using rule 160 (alpha_upper -> O .)
    -               reduce using rule 160 (alpha_upper -> O .)
    !               reduce using rule 160 (alpha_upper -> O .)
    "               reduce using rule 160 (alpha_upper -> O .)
    &               reduce using rule 160 (alpha_upper -> O .)
    '               reduce using rule 160 (alpha_upper -> O .)
    =               reduce using rule 160 (alpha_upper -> O .)
    @               reduce using rule 160 (alpha_upper -> O .)
    _               reduce using rule 160 (alpha_upper -> O .)
    }               reduce using rule 160 (alpha_upper -> O .)
    ~               reduce using rule 160 (alpha_upper -> O .)
    ]               reduce using rule 160 (alpha_upper -> O .)


state 32

    (133) alpha_lower -> n .

    -               reduce using rule 133 (alpha_lower -> n .)
    !               reduce using rule 133 (alpha_lower -> n .)
    "               reduce using rule 133 (alpha_lower -> n .)
    #               reduce using rule 133 (alpha_lower -> n .)
    $               reduce using rule 133 (alpha_lower -> n .)
    %               reduce using rule 133 (alpha_lower -> n .)
    &               reduce using rule 133 (alpha_lower -> n .)
    '               reduce using rule 133 (alpha_lower -> n .)
    (               reduce using rule 133 (alpha_lower -> n .)
    )               reduce using rule 133 (alpha_lower -> n .)
    *               reduce using rule 133 (alpha_lower -> n .)
    +               reduce using rule 133 (alpha_lower -> n .)
    ,               reduce using rule 133 (alpha_lower -> n .)
    .               reduce using rule 133 (alpha_lower -> n .)
    /               reduce using rule 133 (alpha_lower -> n .)
    :               reduce using rule 133 (alpha_lower -> n .)
    ;               reduce using rule 133 (alpha_lower -> n .)
    <               reduce using rule 133 (alpha_lower -> n .)
    =               reduce using rule 133 (alpha_lower -> n .)
    >               reduce using rule 133 (alpha_lower -> n .)
    ?               reduce using rule 133 (alpha_lower -> n .)
    @               reduce using rule 133 (alpha_lower -> n .)
    [               reduce using rule 133 (alpha_lower -> n .)
    \               reduce using rule 133 (alpha_lower -> n .)
    _               reduce using rule 133 (alpha_lower -> n .)
    `               reduce using rule 133 (alpha_lower -> n .)
    {               reduce using rule 133 (alpha_lower -> n .)
    }               reduce using rule 133 (alpha_lower -> n .)
    ~               reduce using rule 133 (alpha_lower -> n .)
    ESCAPED         reduce using rule 133 (alpha_lower -> n .)
    DIGIT           reduce using rule 133 (alpha_lower -> n .)
    OTHER           reduce using rule 133 (alpha_lower -> n .)
    a               reduce using rule 133 (alpha_lower -> n .)
    b               reduce using rule 133 (alpha_lower -> n .)
    c               reduce using rule 133 (alpha_lower -> n .)
    d               reduce using rule 133 (alpha_lower -> n .)
    e               reduce using rule 133 (alpha_lower -> n .)
    f               reduce using rule 133 (alpha_lower -> n .)
    g               reduce using rule 133 (alpha_lower -> n .)
    h               reduce using rule 133 (alpha_lower -> n .)
    i               reduce using rule 133 (alpha_lower -> n .)
    j               reduce using rule 133 (alpha_lower -> n .)
    k               reduce using rule 133 (alpha_lower -> n .)
    l               reduce using rule 133 (alpha_lower -> n .)
    m               reduce using rule 133 (alpha_lower -> n .)
    n               reduce using rule 133 (alpha_lower -> n .)
    o               reduce using rule 133 (alpha_lower -> n .)
    p               reduce using rule 133 (alpha_lower -> n .)
    q               reduce using rule 133 (alpha_lower -> n .)
    r               reduce using rule 133 (alpha_lower -> n .)
    s               reduce using rule 133 (alpha_lower -> n .)
    t               reduce using rule 133 (alpha_lower -> n .)
    u               reduce using rule 133 (alpha_lower -> n .)
    v               reduce using rule 133 (alpha_lower -> n .)
    w               reduce using rule 133 (alpha_lower -> n .)
    x               reduce using rule 133 (alpha_lower -> n .)
    y               reduce using rule 133 (alpha_lower -> n .)
    z               reduce using rule 133 (alpha_lower -> n .)
    A               reduce using rule 133 (alpha_lower -> n .)
    B               reduce using rule 133 (alpha_lower -> n .)
    C               reduce using rule 133 (alpha_lower -> n .)
    D               reduce using rule 133 (alpha_lower -> n .)
    E               reduce using rule 133 (alpha_lower -> n .)
    F               reduce using rule 133 (alpha_lower -> n .)
    G               reduce using rule 133 (alpha_lower -> n .)
    H               reduce using rule 133 (alpha_lower -> n .)
    I               reduce using rule 133 (alpha_lower -> n .)
    J               reduce using rule 133 (alpha_lower -> n .)
    K               reduce using rule 133 (alpha_lower -> n .)
    L               reduce using rule 133 (alpha_lower -> n .)
    M               reduce using rule 133 (alpha_lower -> n .)
    N               reduce using rule 133 (alpha_lower -> n .)
    O               reduce using rule 133 (alpha_lower -> n .)
    P               reduce using rule 133 (alpha_lower -> n .)
    Q               reduce using rule 133 (alpha_lower -> n .)
    R               reduce using rule 133 (alpha_lower -> n .)
    S               reduce using rule 133 (alpha_lower -> n .)
    T               reduce using rule 133 (alpha_lower -> n .)
    U               reduce using rule 133 (alpha_lower -> n .)
    V               reduce using rule 133 (alpha_lower -> n .)
    W               reduce using rule 133 (alpha_lower -> n .)
    X               reduce using rule 133 (alpha_lower -> n .)
    Y               reduce using rule 133 (alpha_lower -> n .)
    Z               reduce using rule 133 (alpha_lower -> n .)
    ]               reduce using rule 133 (alpha_lower -> n .)
    ^               reduce using rule 133 (alpha_lower -> n .)
    |               reduce using rule 133 (alpha_lower -> n .)
    $end            reduce using rule 133 (alpha_lower -> n .)


state 33

    (108) command -> > .

    *               reduce using rule 108 (command -> > .)
    +               reduce using rule 108 (command -> > .)
    ?               reduce using rule 108 (command -> > .)
    {               reduce using rule 108 (command -> > .)
    (               reduce using rule 108 (command -> > .)
    ^               reduce using rule 108 (command -> > .)
    >               reduce using rule 108 (command -> > .)
    <               reduce using rule 108 (command -> > .)
    /               reduce using rule 108 (command -> > .)
    \               reduce using rule 108 (command -> > .)
    #               reduce using rule 108 (command -> > .)
    %               reduce using rule 108 (command -> > .)
    ESCAPED         reduce using rule 108 (command -> > .)
    DIGIT           reduce using rule 108 (command -> > .)
    OTHER           reduce using rule 108 (command -> > .)
    [               reduce using rule 108 (command -> > .)
    .               reduce using rule 108 (command -> > .)
    ,               reduce using rule 108 (command -> > .)
    :               reduce using rule 108 (command -> > .)
    ;               reduce using rule 108 (command -> > .)
    $               reduce using rule 108 (command -> > .)
    `               reduce using rule 108 (command -> > .)
    a               reduce using rule 108 (command -> > .)
    b               reduce using rule 108 (command -> > .)
    c               reduce using rule 108 (command -> > .)
    d               reduce using rule 108 (command -> > .)
    e               reduce using rule 108 (command -> > .)
    f               reduce using rule 108 (command -> > .)
    g               reduce using rule 108 (command -> > .)
    h               reduce using rule 108 (command -> > .)
    i               reduce using rule 108 (command -> > .)
    j               reduce using rule 108 (command -> > .)
    k               reduce using rule 108 (command -> > .)
    l               reduce using rule 108 (command -> > .)
    m               reduce using rule 108 (command -> > .)
    n               reduce using rule 108 (command -> > .)
    o               reduce using rule 108 (command -> > .)
    p               reduce using rule 108 (command -> > .)
    q               reduce using rule 108 (command -> > .)
    r               reduce using rule 108 (command -> > .)
    s               reduce using rule 108 (command -> > .)
    t               reduce using rule 108 (command -> > .)
    u               reduce using rule 108 (command -> > .)
    v               reduce using rule 108 (command -> > .)
    w               reduce using rule 108 (command -> > .)
    x               reduce using rule 108 (command -> > .)
    y               reduce using rule 108 (command -> > .)
    z               reduce using rule 108 (command -> > .)
    A               reduce using rule 108 (command -> > .)
    B               reduce using rule 108 (command -> > .)
    C               reduce using rule 108 (command -> > .)
    D               reduce using rule 108 (command -> > .)
    E               reduce using rule 108 (command -> > .)
    F               reduce using rule 108 (command -> > .)
    G               reduce using rule 108 (command -> > .)
    H               reduce using rule 108 (command -> > .)
    I               reduce using rule 108 (command -> > .)
    J               reduce using rule 108 (command -> > .)
    K               reduce using rule 108 (command -> > .)
    L               reduce using rule 108 (command -> > .)
    M               reduce using rule 108 (command -> > .)
    N               reduce using rule 108 (command -> > .)
    O               reduce using rule 108 (command -> > .)
    P               reduce using rule 108 (command -> > .)
    Q               reduce using rule 108 (command -> > .)
    R               reduce using rule 108 (command -> > .)
    S               reduce using rule 108 (command -> > .)
    T               reduce using rule 108 (command -> > .)
    U               reduce using rule 108 (command -> > .)
    V               reduce using rule 108 (command -> > .)
    W               reduce using rule 108 (command -> > .)
    X               reduce using rule 108 (command -> > .)
    Y               reduce using rule 108 (command -> > .)
    Z               reduce using rule 108 (command -> > .)
    |               reduce using rule 108 (command -> > .)
    $end            reduce using rule 108 (command -> > .)
    )               reduce using rule 108 (command -> > .)


state 34

    (163) alpha_upper -> R .

    *               reduce using rule 163 (alpha_upper -> R .)
    +               reduce using rule 163 (alpha_upper -> R .)
    ?               reduce using rule 163 (alpha_upper -> R .)
    {               reduce using rule 163 (alpha_upper -> R .)
    (               reduce using rule 163 (alpha_upper -> R .)
    ^               reduce using rule 163 (alpha_upper -> R .)
    >               reduce using rule 163 (alpha_upper -> R .)
    <               reduce using rule 163 (alpha_upper -> R .)
    /               reduce using rule 163 (alpha_upper -> R .)
    \               reduce using rule 163 (alpha_upper -> R .)
    #               reduce using rule 163 (alpha_upper -> R .)
    %               reduce using rule 163 (alpha_upper -> R .)
    ESCAPED         reduce using rule 163 (alpha_upper -> R .)
    DIGIT           reduce using rule 163 (alpha_upper -> R .)
    OTHER           reduce using rule 163 (alpha_upper -> R .)
    [               reduce using rule 163 (alpha_upper -> R .)
    .               reduce using rule 163 (alpha_upper -> R .)
    ,               reduce using rule 163 (alpha_upper -> R .)
    :               reduce using rule 163 (alpha_upper -> R .)
    ;               reduce using rule 163 (alpha_upper -> R .)
    $               reduce using rule 163 (alpha_upper -> R .)
    `               reduce using rule 163 (alpha_upper -> R .)
    a               reduce using rule 163 (alpha_upper -> R .)
    b               reduce using rule 163 (alpha_upper -> R .)
    c               reduce using rule 163 (alpha_upper -> R .)
    d               reduce using rule 163 (alpha_upper -> R .)
    e               reduce using rule 163 (alpha_upper -> R .)
    f               reduce using rule 163 (alpha_upper -> R .)
    g               reduce using rule 163 (alpha_upper -> R .)
    h               reduce using rule 163 (alpha_upper -> R .)
    i               reduce using rule 163 (alpha_upper -> R .)
    j               reduce using rule 163 (alpha_upper -> R .)
    k               reduce using rule 163 (alpha_upper -> R .)
    l               reduce using rule 163 (alpha_upper -> R .)
    m               reduce using rule 163 (alpha_upper -> R .)
    n               reduce using rule 163 (alpha_upper -> R .)
    o               reduce using rule 163 (alpha_upper -> R .)
    p               reduce using rule 163 (alpha_upper -> R .)
    q               reduce using rule 163 (alpha_upper -> R .)
    r               reduce using rule 163 (alpha_upper -> R .)
    s               reduce using rule 163 (alpha_upper -> R .)
    t               reduce using rule 163 (alpha_upper -> R .)
    u               reduce using rule 163 (alpha_upper -> R .)
    v               reduce using rule 163 (alpha_upper -> R .)
    w               reduce using rule 163 (alpha_upper -> R .)
    x               reduce using rule 163 (alpha_upper -> R .)
    y               reduce using rule 163 (alpha_upper -> R .)
    z               reduce using rule 163 (alpha_upper -> R .)
    A               reduce using rule 163 (alpha_upper -> R .)
    B               reduce using rule 163 (alpha_upper -> R .)
    C               reduce using rule 163 (alpha_upper -> R .)
    D               reduce using rule 163 (alpha_upper -> R .)
    E               reduce using rule 163 (alpha_upper -> R .)
    F               reduce using rule 163 (alpha_upper -> R .)
    G               reduce using rule 163 (alpha_upper -> R .)
    H               reduce using rule 163 (alpha_upper -> R .)
    I               reduce using rule 163 (alpha_upper -> R .)
    J               reduce using rule 163 (alpha_upper -> R .)
    K               reduce using rule 163 (alpha_upper -> R .)
    L               reduce using rule 163 (alpha_upper -> R .)
    M               reduce using rule 163 (alpha_upper -> R .)
    N               reduce using rule 163 (alpha_upper -> R .)
    O               reduce using rule 163 (alpha_upper -> R .)
    P               reduce using rule 163 (alpha_upper -> R .)
    Q               reduce using rule 163 (alpha_upper -> R .)
    R               reduce using rule 163 (alpha_upper -> R .)
    S               reduce using rule 163 (alpha_upper -> R .)
    T               reduce using rule 163 (alpha_upper -> R .)
    U               reduce using rule 163 (alpha_upper -> R .)
    V               reduce using rule 163 (alpha_upper -> R .)
    W               reduce using rule 163 (alpha_upper -> R .)
    X               reduce using rule 163 (alpha_upper -> R .)
    Y               reduce using rule 163 (alpha_upper -> R .)
    Z               reduce using rule 163 (alpha_upper -> R .)
    |               reduce using rule 163 (alpha_upper -> R .)
    $end            reduce using rule 163 (alpha_upper -> R .)
    )               reduce using rule 163 (alpha_upper -> R .)
    -               reduce using rule 163 (alpha_upper -> R .)
    !               reduce using rule 163 (alpha_upper -> R .)
    "               reduce using rule 163 (alpha_upper -> R .)
    &               reduce using rule 163 (alpha_upper -> R .)
    '               reduce using rule 163 (alpha_upper -> R .)
    =               reduce using rule 163 (alpha_upper -> R .)
    @               reduce using rule 163 (alpha_upper -> R .)
    _               reduce using rule 163 (alpha_upper -> R .)
    }               reduce using rule 163 (alpha_upper -> R .)
    ~               reduce using rule 163 (alpha_upper -> R .)
    ]               reduce using rule 163 (alpha_upper -> R .)


state 35

    (119) alpha -> alpha_upper .

    *               reduce using rule 119 (alpha -> alpha_upper .)
    +               reduce using rule 119 (alpha -> alpha_upper .)
    ?               reduce using rule 119 (alpha -> alpha_upper .)
    {               reduce using rule 119 (alpha -> alpha_upper .)
    (               reduce using rule 119 (alpha -> alpha_upper .)
    ^               reduce using rule 119 (alpha -> alpha_upper .)
    >               reduce using rule 119 (alpha -> alpha_upper .)
    <               reduce using rule 119 (alpha -> alpha_upper .)
    /               reduce using rule 119 (alpha -> alpha_upper .)
    \               reduce using rule 119 (alpha -> alpha_upper .)
    #               reduce using rule 119 (alpha -> alpha_upper .)
    %               reduce using rule 119 (alpha -> alpha_upper .)
    ESCAPED         reduce using rule 119 (alpha -> alpha_upper .)
    DIGIT           reduce using rule 119 (alpha -> alpha_upper .)
    OTHER           reduce using rule 119 (alpha -> alpha_upper .)
    [               reduce using rule 119 (alpha -> alpha_upper .)
    .               reduce using rule 119 (alpha -> alpha_upper .)
    ,               reduce using rule 119 (alpha -> alpha_upper .)
    :               reduce using rule 119 (alpha -> alpha_upper .)
    ;               reduce using rule 119 (alpha -> alpha_upper .)
    $               reduce using rule 119 (alpha -> alpha_upper .)
    `               reduce using rule 119 (alpha -> alpha_upper .)
    a               reduce using rule 119 (alpha -> alpha_upper .)
    b               reduce using rule 119 (alpha -> alpha_upper .)
    c               reduce using rule 119 (alpha -> alpha_upper .)
    d               reduce using rule 119 (alpha -> alpha_upper .)
    e               reduce using rule 119 (alpha -> alpha_upper .)
    f               reduce using rule 119 (alpha -> alpha_upper .)
    g               reduce using rule 119 (alpha -> alpha_upper .)
    h               reduce using rule 119 (alpha -> alpha_upper .)
    i               reduce using rule 119 (alpha -> alpha_upper .)
    j               reduce using rule 119 (alpha -> alpha_upper .)
    k               reduce using rule 119 (alpha -> alpha_upper .)
    l               reduce using rule 119 (alpha -> alpha_upper .)
    m               reduce using rule 119 (alpha -> alpha_upper .)
    n               reduce using rule 119 (alpha -> alpha_upper .)
    o               reduce using rule 119 (alpha -> alpha_upper .)
    p               reduce using rule 119 (alpha -> alpha_upper .)
    q               reduce using rule 119 (alpha -> alpha_upper .)
    r               reduce using rule 119 (alpha -> alpha_upper .)
    s               reduce using rule 119 (alpha -> alpha_upper .)
    t               reduce using rule 119 (alpha -> alpha_upper .)
    u               reduce using rule 119 (alpha -> alpha_upper .)
    v               reduce using rule 119 (alpha -> alpha_upper .)
    w               reduce using rule 119 (alpha -> alpha_upper .)
    x               reduce using rule 119 (alpha -> alpha_upper .)
    y               reduce using rule 119 (alpha -> alpha_upper .)
    z               reduce using rule 119 (alpha -> alpha_upper .)
    A               reduce using rule 119 (alpha -> alpha_upper .)
    B               reduce using rule 119 (alpha -> alpha_upper .)
    C               reduce using rule 119 (alpha -> alpha_upper .)
    D               reduce using rule 119 (alpha -> alpha_upper .)
    E               reduce using rule 119 (alpha -> alpha_upper .)
    F               reduce using rule 119 (alpha -> alpha_upper .)
    G               reduce using rule 119 (alpha -> alpha_upper .)
    H               reduce using rule 119 (alpha -> alpha_upper .)
    I               reduce using rule 119 (alpha -> alpha_upper .)
    J               reduce using rule 119 (alpha -> alpha_upper .)
    K               reduce using rule 119 (alpha -> alpha_upper .)
    L               reduce using rule 119 (alpha -> alpha_upper .)
    M               reduce using rule 119 (alpha -> alpha_upper .)
    N               reduce using rule 119 (alpha -> alpha_upper .)
    O               reduce using rule 119 (alpha -> alpha_upper .)
    P               reduce using rule 119 (alpha -> alpha_upper .)
    Q               reduce using rule 119 (alpha -> alpha_upper .)
    R               reduce using rule 119 (alpha -> alpha_upper .)
    S               reduce using rule 119 (alpha -> alpha_upper .)
    T               reduce using rule 119 (alpha -> alpha_upper .)
    U               reduce using rule 119 (alpha -> alpha_upper .)
    V               reduce using rule 119 (alpha -> alpha_upper .)
    W               reduce using rule 119 (alpha -> alpha_upper .)
    X               reduce using rule 119 (alpha -> alpha_upper .)
    Y               reduce using rule 119 (alpha -> alpha_upper .)
    Z               reduce using rule 119 (alpha -> alpha_upper .)
    |               reduce using rule 119 (alpha -> alpha_upper .)
    $end            reduce using rule 119 (alpha -> alpha_upper .)
    )               reduce using rule 119 (alpha -> alpha_upper .)
    -               reduce using rule 119 (alpha -> alpha_upper .)
    !               reduce using rule 119 (alpha -> alpha_upper .)
    "               reduce using rule 119 (alpha -> alpha_upper .)
    &               reduce using rule 119 (alpha -> alpha_upper .)
    '               reduce using rule 119 (alpha -> alpha_upper .)
    =               reduce using rule 119 (alpha -> alpha_upper .)
    @               reduce using rule 119 (alpha -> alpha_upper .)
    _               reduce using rule 119 (alpha -> alpha_upper .)
    }               reduce using rule 119 (alpha -> alpha_upper .)
    ~               reduce using rule 119 (alpha -> alpha_upper .)
    ]               reduce using rule 119 (alpha -> alpha_upper .)


state 36

    (2) re -> simple .
    (9) concatenation -> simple . basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 2 (re -> simple .)
    )               reduce using rule 2 (re -> simple .)
    $end            reduce using rule 2 (re -> simple .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    command                        shift and go to state 22
    charclass                      shift and go to state 3
    elementary                     shift and go to state 79
    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    group                          shift and go to state 7
    nomatch                        shift and go to state 48
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 103
    predefined                     shift and go to state 42
    literal                        shift and go to state 74
    asterisk                       shift and go to state 97
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    quantifier                     shift and go to state 95
    plus                           shift and go to state 49
    anychar                        shift and go to state 45
    anchor                         shift and go to state 91

state 37

    (17) basequantifier -> nrepeat .

    ?               reduce using rule 17 (basequantifier -> nrepeat .)
    (               reduce using rule 17 (basequantifier -> nrepeat .)
    ^               reduce using rule 17 (basequantifier -> nrepeat .)
    >               reduce using rule 17 (basequantifier -> nrepeat .)
    <               reduce using rule 17 (basequantifier -> nrepeat .)
    /               reduce using rule 17 (basequantifier -> nrepeat .)
    \               reduce using rule 17 (basequantifier -> nrepeat .)
    #               reduce using rule 17 (basequantifier -> nrepeat .)
    %               reduce using rule 17 (basequantifier -> nrepeat .)
    ESCAPED         reduce using rule 17 (basequantifier -> nrepeat .)
    DIGIT           reduce using rule 17 (basequantifier -> nrepeat .)
    OTHER           reduce using rule 17 (basequantifier -> nrepeat .)
    [               reduce using rule 17 (basequantifier -> nrepeat .)
    .               reduce using rule 17 (basequantifier -> nrepeat .)
    ,               reduce using rule 17 (basequantifier -> nrepeat .)
    :               reduce using rule 17 (basequantifier -> nrepeat .)
    ;               reduce using rule 17 (basequantifier -> nrepeat .)
    $               reduce using rule 17 (basequantifier -> nrepeat .)
    `               reduce using rule 17 (basequantifier -> nrepeat .)
    a               reduce using rule 17 (basequantifier -> nrepeat .)
    b               reduce using rule 17 (basequantifier -> nrepeat .)
    c               reduce using rule 17 (basequantifier -> nrepeat .)
    d               reduce using rule 17 (basequantifier -> nrepeat .)
    e               reduce using rule 17 (basequantifier -> nrepeat .)
    f               reduce using rule 17 (basequantifier -> nrepeat .)
    g               reduce using rule 17 (basequantifier -> nrepeat .)
    h               reduce using rule 17 (basequantifier -> nrepeat .)
    i               reduce using rule 17 (basequantifier -> nrepeat .)
    j               reduce using rule 17 (basequantifier -> nrepeat .)
    k               reduce using rule 17 (basequantifier -> nrepeat .)
    l               reduce using rule 17 (basequantifier -> nrepeat .)
    m               reduce using rule 17 (basequantifier -> nrepeat .)
    n               reduce using rule 17 (basequantifier -> nrepeat .)
    o               reduce using rule 17 (basequantifier -> nrepeat .)
    p               reduce using rule 17 (basequantifier -> nrepeat .)
    q               reduce using rule 17 (basequantifier -> nrepeat .)
    r               reduce using rule 17 (basequantifier -> nrepeat .)
    s               reduce using rule 17 (basequantifier -> nrepeat .)
    t               reduce using rule 17 (basequantifier -> nrepeat .)
    u               reduce using rule 17 (basequantifier -> nrepeat .)
    v               reduce using rule 17 (basequantifier -> nrepeat .)
    w               reduce using rule 17 (basequantifier -> nrepeat .)
    x               reduce using rule 17 (basequantifier -> nrepeat .)
    y               reduce using rule 17 (basequantifier -> nrepeat .)
    z               reduce using rule 17 (basequantifier -> nrepeat .)
    A               reduce using rule 17 (basequantifier -> nrepeat .)
    B               reduce using rule 17 (basequantifier -> nrepeat .)
    C               reduce using rule 17 (basequantifier -> nrepeat .)
    D               reduce using rule 17 (basequantifier -> nrepeat .)
    E               reduce using rule 17 (basequantifier -> nrepeat .)
    F               reduce using rule 17 (basequantifier -> nrepeat .)
    G               reduce using rule 17 (basequantifier -> nrepeat .)
    H               reduce using rule 17 (basequantifier -> nrepeat .)
    I               reduce using rule 17 (basequantifier -> nrepeat .)
    J               reduce using rule 17 (basequantifier -> nrepeat .)
    K               reduce using rule 17 (basequantifier -> nrepeat .)
    L               reduce using rule 17 (basequantifier -> nrepeat .)
    M               reduce using rule 17 (basequantifier -> nrepeat .)
    N               reduce using rule 17 (basequantifier -> nrepeat .)
    O               reduce using rule 17 (basequantifier -> nrepeat .)
    P               reduce using rule 17 (basequantifier -> nrepeat .)
    Q               reduce using rule 17 (basequantifier -> nrepeat .)
    R               reduce using rule 17 (basequantifier -> nrepeat .)
    S               reduce using rule 17 (basequantifier -> nrepeat .)
    T               reduce using rule 17 (basequantifier -> nrepeat .)
    U               reduce using rule 17 (basequantifier -> nrepeat .)
    V               reduce using rule 17 (basequantifier -> nrepeat .)
    W               reduce using rule 17 (basequantifier -> nrepeat .)
    X               reduce using rule 17 (basequantifier -> nrepeat .)
    Y               reduce using rule 17 (basequantifier -> nrepeat .)
    Z               reduce using rule 17 (basequantifier -> nrepeat .)
    |               reduce using rule 17 (basequantifier -> nrepeat .)
    )               reduce using rule 17 (basequantifier -> nrepeat .)
    $end            reduce using rule 17 (basequantifier -> nrepeat .)


state 38

    (117) literal -> OTHER .

    *               reduce using rule 117 (literal -> OTHER .)
    +               reduce using rule 117 (literal -> OTHER .)
    ?               reduce using rule 117 (literal -> OTHER .)
    {               reduce using rule 117 (literal -> OTHER .)
    (               reduce using rule 117 (literal -> OTHER .)
    ^               reduce using rule 117 (literal -> OTHER .)
    >               reduce using rule 117 (literal -> OTHER .)
    <               reduce using rule 117 (literal -> OTHER .)
    /               reduce using rule 117 (literal -> OTHER .)
    \               reduce using rule 117 (literal -> OTHER .)
    #               reduce using rule 117 (literal -> OTHER .)
    %               reduce using rule 117 (literal -> OTHER .)
    ESCAPED         reduce using rule 117 (literal -> OTHER .)
    DIGIT           reduce using rule 117 (literal -> OTHER .)
    OTHER           reduce using rule 117 (literal -> OTHER .)
    [               reduce using rule 117 (literal -> OTHER .)
    .               reduce using rule 117 (literal -> OTHER .)
    ,               reduce using rule 117 (literal -> OTHER .)
    :               reduce using rule 117 (literal -> OTHER .)
    ;               reduce using rule 117 (literal -> OTHER .)
    $               reduce using rule 117 (literal -> OTHER .)
    `               reduce using rule 117 (literal -> OTHER .)
    a               reduce using rule 117 (literal -> OTHER .)
    b               reduce using rule 117 (literal -> OTHER .)
    c               reduce using rule 117 (literal -> OTHER .)
    d               reduce using rule 117 (literal -> OTHER .)
    e               reduce using rule 117 (literal -> OTHER .)
    f               reduce using rule 117 (literal -> OTHER .)
    g               reduce using rule 117 (literal -> OTHER .)
    h               reduce using rule 117 (literal -> OTHER .)
    i               reduce using rule 117 (literal -> OTHER .)
    j               reduce using rule 117 (literal -> OTHER .)
    k               reduce using rule 117 (literal -> OTHER .)
    l               reduce using rule 117 (literal -> OTHER .)
    m               reduce using rule 117 (literal -> OTHER .)
    n               reduce using rule 117 (literal -> OTHER .)
    o               reduce using rule 117 (literal -> OTHER .)
    p               reduce using rule 117 (literal -> OTHER .)
    q               reduce using rule 117 (literal -> OTHER .)
    r               reduce using rule 117 (literal -> OTHER .)
    s               reduce using rule 117 (literal -> OTHER .)
    t               reduce using rule 117 (literal -> OTHER .)
    u               reduce using rule 117 (literal -> OTHER .)
    v               reduce using rule 117 (literal -> OTHER .)
    w               reduce using rule 117 (literal -> OTHER .)
    x               reduce using rule 117 (literal -> OTHER .)
    y               reduce using rule 117 (literal -> OTHER .)
    z               reduce using rule 117 (literal -> OTHER .)
    A               reduce using rule 117 (literal -> OTHER .)
    B               reduce using rule 117 (literal -> OTHER .)
    C               reduce using rule 117 (literal -> OTHER .)
    D               reduce using rule 117 (literal -> OTHER .)
    E               reduce using rule 117 (literal -> OTHER .)
    F               reduce using rule 117 (literal -> OTHER .)
    G               reduce using rule 117 (literal -> OTHER .)
    H               reduce using rule 117 (literal -> OTHER .)
    I               reduce using rule 117 (literal -> OTHER .)
    J               reduce using rule 117 (literal -> OTHER .)
    K               reduce using rule 117 (literal -> OTHER .)
    L               reduce using rule 117 (literal -> OTHER .)
    M               reduce using rule 117 (literal -> OTHER .)
    N               reduce using rule 117 (literal -> OTHER .)
    O               reduce using rule 117 (literal -> OTHER .)
    P               reduce using rule 117 (literal -> OTHER .)
    Q               reduce using rule 117 (literal -> OTHER .)
    R               reduce using rule 117 (literal -> OTHER .)
    S               reduce using rule 117 (literal -> OTHER .)
    T               reduce using rule 117 (literal -> OTHER .)
    U               reduce using rule 117 (literal -> OTHER .)
    V               reduce using rule 117 (literal -> OTHER .)
    W               reduce using rule 117 (literal -> OTHER .)
    X               reduce using rule 117 (literal -> OTHER .)
    Y               reduce using rule 117 (literal -> OTHER .)
    Z               reduce using rule 117 (literal -> OTHER .)
    |               reduce using rule 117 (literal -> OTHER .)
    )               reduce using rule 117 (literal -> OTHER .)
    -               reduce using rule 117 (literal -> OTHER .)
    !               reduce using rule 117 (literal -> OTHER .)
    "               reduce using rule 117 (literal -> OTHER .)
    &               reduce using rule 117 (literal -> OTHER .)
    '               reduce using rule 117 (literal -> OTHER .)
    =               reduce using rule 117 (literal -> OTHER .)
    @               reduce using rule 117 (literal -> OTHER .)
    _               reduce using rule 117 (literal -> OTHER .)
    }               reduce using rule 117 (literal -> OTHER .)
    ~               reduce using rule 117 (literal -> OTHER .)
    ]               reduce using rule 117 (literal -> OTHER .)
    $end            reduce using rule 117 (literal -> OTHER .)


state 39

    (161) alpha_upper -> P .

    *               reduce using rule 161 (alpha_upper -> P .)
    +               reduce using rule 161 (alpha_upper -> P .)
    ?               reduce using rule 161 (alpha_upper -> P .)
    {               reduce using rule 161 (alpha_upper -> P .)
    (               reduce using rule 161 (alpha_upper -> P .)
    ^               reduce using rule 161 (alpha_upper -> P .)
    >               reduce using rule 161 (alpha_upper -> P .)
    <               reduce using rule 161 (alpha_upper -> P .)
    /               reduce using rule 161 (alpha_upper -> P .)
    \               reduce using rule 161 (alpha_upper -> P .)
    #               reduce using rule 161 (alpha_upper -> P .)
    %               reduce using rule 161 (alpha_upper -> P .)
    ESCAPED         reduce using rule 161 (alpha_upper -> P .)
    DIGIT           reduce using rule 161 (alpha_upper -> P .)
    OTHER           reduce using rule 161 (alpha_upper -> P .)
    [               reduce using rule 161 (alpha_upper -> P .)
    .               reduce using rule 161 (alpha_upper -> P .)
    ,               reduce using rule 161 (alpha_upper -> P .)
    :               reduce using rule 161 (alpha_upper -> P .)
    ;               reduce using rule 161 (alpha_upper -> P .)
    $               reduce using rule 161 (alpha_upper -> P .)
    `               reduce using rule 161 (alpha_upper -> P .)
    a               reduce using rule 161 (alpha_upper -> P .)
    b               reduce using rule 161 (alpha_upper -> P .)
    c               reduce using rule 161 (alpha_upper -> P .)
    d               reduce using rule 161 (alpha_upper -> P .)
    e               reduce using rule 161 (alpha_upper -> P .)
    f               reduce using rule 161 (alpha_upper -> P .)
    g               reduce using rule 161 (alpha_upper -> P .)
    h               reduce using rule 161 (alpha_upper -> P .)
    i               reduce using rule 161 (alpha_upper -> P .)
    j               reduce using rule 161 (alpha_upper -> P .)
    k               reduce using rule 161 (alpha_upper -> P .)
    l               reduce using rule 161 (alpha_upper -> P .)
    m               reduce using rule 161 (alpha_upper -> P .)
    n               reduce using rule 161 (alpha_upper -> P .)
    o               reduce using rule 161 (alpha_upper -> P .)
    p               reduce using rule 161 (alpha_upper -> P .)
    q               reduce using rule 161 (alpha_upper -> P .)
    r               reduce using rule 161 (alpha_upper -> P .)
    s               reduce using rule 161 (alpha_upper -> P .)
    t               reduce using rule 161 (alpha_upper -> P .)
    u               reduce using rule 161 (alpha_upper -> P .)
    v               reduce using rule 161 (alpha_upper -> P .)
    w               reduce using rule 161 (alpha_upper -> P .)
    x               reduce using rule 161 (alpha_upper -> P .)
    y               reduce using rule 161 (alpha_upper -> P .)
    z               reduce using rule 161 (alpha_upper -> P .)
    A               reduce using rule 161 (alpha_upper -> P .)
    B               reduce using rule 161 (alpha_upper -> P .)
    C               reduce using rule 161 (alpha_upper -> P .)
    D               reduce using rule 161 (alpha_upper -> P .)
    E               reduce using rule 161 (alpha_upper -> P .)
    F               reduce using rule 161 (alpha_upper -> P .)
    G               reduce using rule 161 (alpha_upper -> P .)
    H               reduce using rule 161 (alpha_upper -> P .)
    I               reduce using rule 161 (alpha_upper -> P .)
    J               reduce using rule 161 (alpha_upper -> P .)
    K               reduce using rule 161 (alpha_upper -> P .)
    L               reduce using rule 161 (alpha_upper -> P .)
    M               reduce using rule 161 (alpha_upper -> P .)
    N               reduce using rule 161 (alpha_upper -> P .)
    O               reduce using rule 161 (alpha_upper -> P .)
    P               reduce using rule 161 (alpha_upper -> P .)
    Q               reduce using rule 161 (alpha_upper -> P .)
    R               reduce using rule 161 (alpha_upper -> P .)
    S               reduce using rule 161 (alpha_upper -> P .)
    T               reduce using rule 161 (alpha_upper -> P .)
    U               reduce using rule 161 (alpha_upper -> P .)
    V               reduce using rule 161 (alpha_upper -> P .)
    W               reduce using rule 161 (alpha_upper -> P .)
    X               reduce using rule 161 (alpha_upper -> P .)
    Y               reduce using rule 161 (alpha_upper -> P .)
    Z               reduce using rule 161 (alpha_upper -> P .)
    |               reduce using rule 161 (alpha_upper -> P .)
    $end            reduce using rule 161 (alpha_upper -> P .)
    )               reduce using rule 161 (alpha_upper -> P .)
    -               reduce using rule 161 (alpha_upper -> P .)
    !               reduce using rule 161 (alpha_upper -> P .)
    "               reduce using rule 161 (alpha_upper -> P .)
    &               reduce using rule 161 (alpha_upper -> P .)
    '               reduce using rule 161 (alpha_upper -> P .)
    =               reduce using rule 161 (alpha_upper -> P .)
    @               reduce using rule 161 (alpha_upper -> P .)
    _               reduce using rule 161 (alpha_upper -> P .)
    }               reduce using rule 161 (alpha_upper -> P .)
    ~               reduce using rule 161 (alpha_upper -> P .)
    ]               reduce using rule 161 (alpha_upper -> P .)


state 40

    (148) alpha_upper -> C .

    *               reduce using rule 148 (alpha_upper -> C .)
    +               reduce using rule 148 (alpha_upper -> C .)
    ?               reduce using rule 148 (alpha_upper -> C .)
    {               reduce using rule 148 (alpha_upper -> C .)
    (               reduce using rule 148 (alpha_upper -> C .)
    ^               reduce using rule 148 (alpha_upper -> C .)
    >               reduce using rule 148 (alpha_upper -> C .)
    <               reduce using rule 148 (alpha_upper -> C .)
    /               reduce using rule 148 (alpha_upper -> C .)
    \               reduce using rule 148 (alpha_upper -> C .)
    #               reduce using rule 148 (alpha_upper -> C .)
    %               reduce using rule 148 (alpha_upper -> C .)
    ESCAPED         reduce using rule 148 (alpha_upper -> C .)
    DIGIT           reduce using rule 148 (alpha_upper -> C .)
    OTHER           reduce using rule 148 (alpha_upper -> C .)
    [               reduce using rule 148 (alpha_upper -> C .)
    .               reduce using rule 148 (alpha_upper -> C .)
    ,               reduce using rule 148 (alpha_upper -> C .)
    :               reduce using rule 148 (alpha_upper -> C .)
    ;               reduce using rule 148 (alpha_upper -> C .)
    $               reduce using rule 148 (alpha_upper -> C .)
    `               reduce using rule 148 (alpha_upper -> C .)
    a               reduce using rule 148 (alpha_upper -> C .)
    b               reduce using rule 148 (alpha_upper -> C .)
    c               reduce using rule 148 (alpha_upper -> C .)
    d               reduce using rule 148 (alpha_upper -> C .)
    e               reduce using rule 148 (alpha_upper -> C .)
    f               reduce using rule 148 (alpha_upper -> C .)
    g               reduce using rule 148 (alpha_upper -> C .)
    h               reduce using rule 148 (alpha_upper -> C .)
    i               reduce using rule 148 (alpha_upper -> C .)
    j               reduce using rule 148 (alpha_upper -> C .)
    k               reduce using rule 148 (alpha_upper -> C .)
    l               reduce using rule 148 (alpha_upper -> C .)
    m               reduce using rule 148 (alpha_upper -> C .)
    n               reduce using rule 148 (alpha_upper -> C .)
    o               reduce using rule 148 (alpha_upper -> C .)
    p               reduce using rule 148 (alpha_upper -> C .)
    q               reduce using rule 148 (alpha_upper -> C .)
    r               reduce using rule 148 (alpha_upper -> C .)
    s               reduce using rule 148 (alpha_upper -> C .)
    t               reduce using rule 148 (alpha_upper -> C .)
    u               reduce using rule 148 (alpha_upper -> C .)
    v               reduce using rule 148 (alpha_upper -> C .)
    w               reduce using rule 148 (alpha_upper -> C .)
    x               reduce using rule 148 (alpha_upper -> C .)
    y               reduce using rule 148 (alpha_upper -> C .)
    z               reduce using rule 148 (alpha_upper -> C .)
    A               reduce using rule 148 (alpha_upper -> C .)
    B               reduce using rule 148 (alpha_upper -> C .)
    C               reduce using rule 148 (alpha_upper -> C .)
    D               reduce using rule 148 (alpha_upper -> C .)
    E               reduce using rule 148 (alpha_upper -> C .)
    F               reduce using rule 148 (alpha_upper -> C .)
    G               reduce using rule 148 (alpha_upper -> C .)
    H               reduce using rule 148 (alpha_upper -> C .)
    I               reduce using rule 148 (alpha_upper -> C .)
    J               reduce using rule 148 (alpha_upper -> C .)
    K               reduce using rule 148 (alpha_upper -> C .)
    L               reduce using rule 148 (alpha_upper -> C .)
    M               reduce using rule 148 (alpha_upper -> C .)
    N               reduce using rule 148 (alpha_upper -> C .)
    O               reduce using rule 148 (alpha_upper -> C .)
    P               reduce using rule 148 (alpha_upper -> C .)
    Q               reduce using rule 148 (alpha_upper -> C .)
    R               reduce using rule 148 (alpha_upper -> C .)
    S               reduce using rule 148 (alpha_upper -> C .)
    T               reduce using rule 148 (alpha_upper -> C .)
    U               reduce using rule 148 (alpha_upper -> C .)
    V               reduce using rule 148 (alpha_upper -> C .)
    W               reduce using rule 148 (alpha_upper -> C .)
    X               reduce using rule 148 (alpha_upper -> C .)
    Y               reduce using rule 148 (alpha_upper -> C .)
    Z               reduce using rule 148 (alpha_upper -> C .)
    |               reduce using rule 148 (alpha_upper -> C .)
    $end            reduce using rule 148 (alpha_upper -> C .)
    )               reduce using rule 148 (alpha_upper -> C .)
    -               reduce using rule 148 (alpha_upper -> C .)
    !               reduce using rule 148 (alpha_upper -> C .)
    "               reduce using rule 148 (alpha_upper -> C .)
    &               reduce using rule 148 (alpha_upper -> C .)
    '               reduce using rule 148 (alpha_upper -> C .)
    =               reduce using rule 148 (alpha_upper -> C .)
    @               reduce using rule 148 (alpha_upper -> C .)
    _               reduce using rule 148 (alpha_upper -> C .)
    }               reduce using rule 148 (alpha_upper -> C .)
    ~               reduce using rule 148 (alpha_upper -> C .)
    ]               reduce using rule 148 (alpha_upper -> C .)


state 41

    (131) alpha_lower -> l .

    -               reduce using rule 131 (alpha_lower -> l .)
    !               reduce using rule 131 (alpha_lower -> l .)
    "               reduce using rule 131 (alpha_lower -> l .)
    #               reduce using rule 131 (alpha_lower -> l .)
    $               reduce using rule 131 (alpha_lower -> l .)
    %               reduce using rule 131 (alpha_lower -> l .)
    &               reduce using rule 131 (alpha_lower -> l .)
    '               reduce using rule 131 (alpha_lower -> l .)
    (               reduce using rule 131 (alpha_lower -> l .)
    )               reduce using rule 131 (alpha_lower -> l .)
    *               reduce using rule 131 (alpha_lower -> l .)
    +               reduce using rule 131 (alpha_lower -> l .)
    ,               reduce using rule 131 (alpha_lower -> l .)
    .               reduce using rule 131 (alpha_lower -> l .)
    /               reduce using rule 131 (alpha_lower -> l .)
    :               reduce using rule 131 (alpha_lower -> l .)
    ;               reduce using rule 131 (alpha_lower -> l .)
    <               reduce using rule 131 (alpha_lower -> l .)
    =               reduce using rule 131 (alpha_lower -> l .)
    >               reduce using rule 131 (alpha_lower -> l .)
    ?               reduce using rule 131 (alpha_lower -> l .)
    @               reduce using rule 131 (alpha_lower -> l .)
    [               reduce using rule 131 (alpha_lower -> l .)
    \               reduce using rule 131 (alpha_lower -> l .)
    _               reduce using rule 131 (alpha_lower -> l .)
    `               reduce using rule 131 (alpha_lower -> l .)
    {               reduce using rule 131 (alpha_lower -> l .)
    }               reduce using rule 131 (alpha_lower -> l .)
    ~               reduce using rule 131 (alpha_lower -> l .)
    ESCAPED         reduce using rule 131 (alpha_lower -> l .)
    DIGIT           reduce using rule 131 (alpha_lower -> l .)
    OTHER           reduce using rule 131 (alpha_lower -> l .)
    a               reduce using rule 131 (alpha_lower -> l .)
    b               reduce using rule 131 (alpha_lower -> l .)
    c               reduce using rule 131 (alpha_lower -> l .)
    d               reduce using rule 131 (alpha_lower -> l .)
    e               reduce using rule 131 (alpha_lower -> l .)
    f               reduce using rule 131 (alpha_lower -> l .)
    g               reduce using rule 131 (alpha_lower -> l .)
    h               reduce using rule 131 (alpha_lower -> l .)
    i               reduce using rule 131 (alpha_lower -> l .)
    j               reduce using rule 131 (alpha_lower -> l .)
    k               reduce using rule 131 (alpha_lower -> l .)
    l               reduce using rule 131 (alpha_lower -> l .)
    m               reduce using rule 131 (alpha_lower -> l .)
    n               reduce using rule 131 (alpha_lower -> l .)
    o               reduce using rule 131 (alpha_lower -> l .)
    p               reduce using rule 131 (alpha_lower -> l .)
    q               reduce using rule 131 (alpha_lower -> l .)
    r               reduce using rule 131 (alpha_lower -> l .)
    s               reduce using rule 131 (alpha_lower -> l .)
    t               reduce using rule 131 (alpha_lower -> l .)
    u               reduce using rule 131 (alpha_lower -> l .)
    v               reduce using rule 131 (alpha_lower -> l .)
    w               reduce using rule 131 (alpha_lower -> l .)
    x               reduce using rule 131 (alpha_lower -> l .)
    y               reduce using rule 131 (alpha_lower -> l .)
    z               reduce using rule 131 (alpha_lower -> l .)
    A               reduce using rule 131 (alpha_lower -> l .)
    B               reduce using rule 131 (alpha_lower -> l .)
    C               reduce using rule 131 (alpha_lower -> l .)
    D               reduce using rule 131 (alpha_lower -> l .)
    E               reduce using rule 131 (alpha_lower -> l .)
    F               reduce using rule 131 (alpha_lower -> l .)
    G               reduce using rule 131 (alpha_lower -> l .)
    H               reduce using rule 131 (alpha_lower -> l .)
    I               reduce using rule 131 (alpha_lower -> l .)
    J               reduce using rule 131 (alpha_lower -> l .)
    K               reduce using rule 131 (alpha_lower -> l .)
    L               reduce using rule 131 (alpha_lower -> l .)
    M               reduce using rule 131 (alpha_lower -> l .)
    N               reduce using rule 131 (alpha_lower -> l .)
    O               reduce using rule 131 (alpha_lower -> l .)
    P               reduce using rule 131 (alpha_lower -> l .)
    Q               reduce using rule 131 (alpha_lower -> l .)
    R               reduce using rule 131 (alpha_lower -> l .)
    S               reduce using rule 131 (alpha_lower -> l .)
    T               reduce using rule 131 (alpha_lower -> l .)
    U               reduce using rule 131 (alpha_lower -> l .)
    V               reduce using rule 131 (alpha_lower -> l .)
    W               reduce using rule 131 (alpha_lower -> l .)
    X               reduce using rule 131 (alpha_lower -> l .)
    Y               reduce using rule 131 (alpha_lower -> l .)
    Z               reduce using rule 131 (alpha_lower -> l .)
    ]               reduce using rule 131 (alpha_lower -> l .)
    ^               reduce using rule 131 (alpha_lower -> l .)
    |               reduce using rule 131 (alpha_lower -> l .)
    $end            reduce using rule 131 (alpha_lower -> l .)


state 42

    (28) elementary -> predefined .

    *               reduce using rule 28 (elementary -> predefined .)
    +               reduce using rule 28 (elementary -> predefined .)
    ?               reduce using rule 28 (elementary -> predefined .)
    {               reduce using rule 28 (elementary -> predefined .)
    (               reduce using rule 28 (elementary -> predefined .)
    ^               reduce using rule 28 (elementary -> predefined .)
    >               reduce using rule 28 (elementary -> predefined .)
    <               reduce using rule 28 (elementary -> predefined .)
    /               reduce using rule 28 (elementary -> predefined .)
    \               reduce using rule 28 (elementary -> predefined .)
    #               reduce using rule 28 (elementary -> predefined .)
    %               reduce using rule 28 (elementary -> predefined .)
    ESCAPED         reduce using rule 28 (elementary -> predefined .)
    DIGIT           reduce using rule 28 (elementary -> predefined .)
    OTHER           reduce using rule 28 (elementary -> predefined .)
    [               reduce using rule 28 (elementary -> predefined .)
    .               reduce using rule 28 (elementary -> predefined .)
    ,               reduce using rule 28 (elementary -> predefined .)
    :               reduce using rule 28 (elementary -> predefined .)
    ;               reduce using rule 28 (elementary -> predefined .)
    $               reduce using rule 28 (elementary -> predefined .)
    `               reduce using rule 28 (elementary -> predefined .)
    a               reduce using rule 28 (elementary -> predefined .)
    b               reduce using rule 28 (elementary -> predefined .)
    c               reduce using rule 28 (elementary -> predefined .)
    d               reduce using rule 28 (elementary -> predefined .)
    e               reduce using rule 28 (elementary -> predefined .)
    f               reduce using rule 28 (elementary -> predefined .)
    g               reduce using rule 28 (elementary -> predefined .)
    h               reduce using rule 28 (elementary -> predefined .)
    i               reduce using rule 28 (elementary -> predefined .)
    j               reduce using rule 28 (elementary -> predefined .)
    k               reduce using rule 28 (elementary -> predefined .)
    l               reduce using rule 28 (elementary -> predefined .)
    m               reduce using rule 28 (elementary -> predefined .)
    n               reduce using rule 28 (elementary -> predefined .)
    o               reduce using rule 28 (elementary -> predefined .)
    p               reduce using rule 28 (elementary -> predefined .)
    q               reduce using rule 28 (elementary -> predefined .)
    r               reduce using rule 28 (elementary -> predefined .)
    s               reduce using rule 28 (elementary -> predefined .)
    t               reduce using rule 28 (elementary -> predefined .)
    u               reduce using rule 28 (elementary -> predefined .)
    v               reduce using rule 28 (elementary -> predefined .)
    w               reduce using rule 28 (elementary -> predefined .)
    x               reduce using rule 28 (elementary -> predefined .)
    y               reduce using rule 28 (elementary -> predefined .)
    z               reduce using rule 28 (elementary -> predefined .)
    A               reduce using rule 28 (elementary -> predefined .)
    B               reduce using rule 28 (elementary -> predefined .)
    C               reduce using rule 28 (elementary -> predefined .)
    D               reduce using rule 28 (elementary -> predefined .)
    E               reduce using rule 28 (elementary -> predefined .)
    F               reduce using rule 28 (elementary -> predefined .)
    G               reduce using rule 28 (elementary -> predefined .)
    H               reduce using rule 28 (elementary -> predefined .)
    I               reduce using rule 28 (elementary -> predefined .)
    J               reduce using rule 28 (elementary -> predefined .)
    K               reduce using rule 28 (elementary -> predefined .)
    L               reduce using rule 28 (elementary -> predefined .)
    M               reduce using rule 28 (elementary -> predefined .)
    N               reduce using rule 28 (elementary -> predefined .)
    O               reduce using rule 28 (elementary -> predefined .)
    P               reduce using rule 28 (elementary -> predefined .)
    Q               reduce using rule 28 (elementary -> predefined .)
    R               reduce using rule 28 (elementary -> predefined .)
    S               reduce using rule 28 (elementary -> predefined .)
    T               reduce using rule 28 (elementary -> predefined .)
    U               reduce using rule 28 (elementary -> predefined .)
    V               reduce using rule 28 (elementary -> predefined .)
    W               reduce using rule 28 (elementary -> predefined .)
    X               reduce using rule 28 (elementary -> predefined .)
    Y               reduce using rule 28 (elementary -> predefined .)
    Z               reduce using rule 28 (elementary -> predefined .)
    |               reduce using rule 28 (elementary -> predefined .)
    )               reduce using rule 28 (elementary -> predefined .)
    $end            reduce using rule 28 (elementary -> predefined .)


state 43

    (125) alpha_lower -> f .

    -               reduce using rule 125 (alpha_lower -> f .)
    !               reduce using rule 125 (alpha_lower -> f .)
    "               reduce using rule 125 (alpha_lower -> f .)
    #               reduce using rule 125 (alpha_lower -> f .)
    $               reduce using rule 125 (alpha_lower -> f .)
    %               reduce using rule 125 (alpha_lower -> f .)
    &               reduce using rule 125 (alpha_lower -> f .)
    '               reduce using rule 125 (alpha_lower -> f .)
    (               reduce using rule 125 (alpha_lower -> f .)
    )               reduce using rule 125 (alpha_lower -> f .)
    *               reduce using rule 125 (alpha_lower -> f .)
    +               reduce using rule 125 (alpha_lower -> f .)
    ,               reduce using rule 125 (alpha_lower -> f .)
    .               reduce using rule 125 (alpha_lower -> f .)
    /               reduce using rule 125 (alpha_lower -> f .)
    :               reduce using rule 125 (alpha_lower -> f .)
    ;               reduce using rule 125 (alpha_lower -> f .)
    <               reduce using rule 125 (alpha_lower -> f .)
    =               reduce using rule 125 (alpha_lower -> f .)
    >               reduce using rule 125 (alpha_lower -> f .)
    ?               reduce using rule 125 (alpha_lower -> f .)
    @               reduce using rule 125 (alpha_lower -> f .)
    [               reduce using rule 125 (alpha_lower -> f .)
    \               reduce using rule 125 (alpha_lower -> f .)
    _               reduce using rule 125 (alpha_lower -> f .)
    `               reduce using rule 125 (alpha_lower -> f .)
    {               reduce using rule 125 (alpha_lower -> f .)
    }               reduce using rule 125 (alpha_lower -> f .)
    ~               reduce using rule 125 (alpha_lower -> f .)
    ESCAPED         reduce using rule 125 (alpha_lower -> f .)
    DIGIT           reduce using rule 125 (alpha_lower -> f .)
    OTHER           reduce using rule 125 (alpha_lower -> f .)
    a               reduce using rule 125 (alpha_lower -> f .)
    b               reduce using rule 125 (alpha_lower -> f .)
    c               reduce using rule 125 (alpha_lower -> f .)
    d               reduce using rule 125 (alpha_lower -> f .)
    e               reduce using rule 125 (alpha_lower -> f .)
    f               reduce using rule 125 (alpha_lower -> f .)
    g               reduce using rule 125 (alpha_lower -> f .)
    h               reduce using rule 125 (alpha_lower -> f .)
    i               reduce using rule 125 (alpha_lower -> f .)
    j               reduce using rule 125 (alpha_lower -> f .)
    k               reduce using rule 125 (alpha_lower -> f .)
    l               reduce using rule 125 (alpha_lower -> f .)
    m               reduce using rule 125 (alpha_lower -> f .)
    n               reduce using rule 125 (alpha_lower -> f .)
    o               reduce using rule 125 (alpha_lower -> f .)
    p               reduce using rule 125 (alpha_lower -> f .)
    q               reduce using rule 125 (alpha_lower -> f .)
    r               reduce using rule 125 (alpha_lower -> f .)
    s               reduce using rule 125 (alpha_lower -> f .)
    t               reduce using rule 125 (alpha_lower -> f .)
    u               reduce using rule 125 (alpha_lower -> f .)
    v               reduce using rule 125 (alpha_lower -> f .)
    w               reduce using rule 125 (alpha_lower -> f .)
    x               reduce using rule 125 (alpha_lower -> f .)
    y               reduce using rule 125 (alpha_lower -> f .)
    z               reduce using rule 125 (alpha_lower -> f .)
    A               reduce using rule 125 (alpha_lower -> f .)
    B               reduce using rule 125 (alpha_lower -> f .)
    C               reduce using rule 125 (alpha_lower -> f .)
    D               reduce using rule 125 (alpha_lower -> f .)
    E               reduce using rule 125 (alpha_lower -> f .)
    F               reduce using rule 125 (alpha_lower -> f .)
    G               reduce using rule 125 (alpha_lower -> f .)
    H               reduce using rule 125 (alpha_lower -> f .)
    I               reduce using rule 125 (alpha_lower -> f .)
    J               reduce using rule 125 (alpha_lower -> f .)
    K               reduce using rule 125 (alpha_lower -> f .)
    L               reduce using rule 125 (alpha_lower -> f .)
    M               reduce using rule 125 (alpha_lower -> f .)
    N               reduce using rule 125 (alpha_lower -> f .)
    O               reduce using rule 125 (alpha_lower -> f .)
    P               reduce using rule 125 (alpha_lower -> f .)
    Q               reduce using rule 125 (alpha_lower -> f .)
    R               reduce using rule 125 (alpha_lower -> f .)
    S               reduce using rule 125 (alpha_lower -> f .)
    T               reduce using rule 125 (alpha_lower -> f .)
    U               reduce using rule 125 (alpha_lower -> f .)
    V               reduce using rule 125 (alpha_lower -> f .)
    W               reduce using rule 125 (alpha_lower -> f .)
    X               reduce using rule 125 (alpha_lower -> f .)
    Y               reduce using rule 125 (alpha_lower -> f .)
    Z               reduce using rule 125 (alpha_lower -> f .)
    ]               reduce using rule 125 (alpha_lower -> f .)
    ^               reduce using rule 125 (alpha_lower -> f .)
    |               reduce using rule 125 (alpha_lower -> f .)
    $end            reduce using rule 125 (alpha_lower -> f .)


state 44

    (141) alpha_lower -> v .

    -               reduce using rule 141 (alpha_lower -> v .)
    !               reduce using rule 141 (alpha_lower -> v .)
    "               reduce using rule 141 (alpha_lower -> v .)
    #               reduce using rule 141 (alpha_lower -> v .)
    $               reduce using rule 141 (alpha_lower -> v .)
    %               reduce using rule 141 (alpha_lower -> v .)
    &               reduce using rule 141 (alpha_lower -> v .)
    '               reduce using rule 141 (alpha_lower -> v .)
    (               reduce using rule 141 (alpha_lower -> v .)
    )               reduce using rule 141 (alpha_lower -> v .)
    *               reduce using rule 141 (alpha_lower -> v .)
    +               reduce using rule 141 (alpha_lower -> v .)
    ,               reduce using rule 141 (alpha_lower -> v .)
    .               reduce using rule 141 (alpha_lower -> v .)
    /               reduce using rule 141 (alpha_lower -> v .)
    :               reduce using rule 141 (alpha_lower -> v .)
    ;               reduce using rule 141 (alpha_lower -> v .)
    <               reduce using rule 141 (alpha_lower -> v .)
    =               reduce using rule 141 (alpha_lower -> v .)
    >               reduce using rule 141 (alpha_lower -> v .)
    ?               reduce using rule 141 (alpha_lower -> v .)
    @               reduce using rule 141 (alpha_lower -> v .)
    [               reduce using rule 141 (alpha_lower -> v .)
    \               reduce using rule 141 (alpha_lower -> v .)
    _               reduce using rule 141 (alpha_lower -> v .)
    `               reduce using rule 141 (alpha_lower -> v .)
    {               reduce using rule 141 (alpha_lower -> v .)
    }               reduce using rule 141 (alpha_lower -> v .)
    ~               reduce using rule 141 (alpha_lower -> v .)
    ESCAPED         reduce using rule 141 (alpha_lower -> v .)
    DIGIT           reduce using rule 141 (alpha_lower -> v .)
    OTHER           reduce using rule 141 (alpha_lower -> v .)
    a               reduce using rule 141 (alpha_lower -> v .)
    b               reduce using rule 141 (alpha_lower -> v .)
    c               reduce using rule 141 (alpha_lower -> v .)
    d               reduce using rule 141 (alpha_lower -> v .)
    e               reduce using rule 141 (alpha_lower -> v .)
    f               reduce using rule 141 (alpha_lower -> v .)
    g               reduce using rule 141 (alpha_lower -> v .)
    h               reduce using rule 141 (alpha_lower -> v .)
    i               reduce using rule 141 (alpha_lower -> v .)
    j               reduce using rule 141 (alpha_lower -> v .)
    k               reduce using rule 141 (alpha_lower -> v .)
    l               reduce using rule 141 (alpha_lower -> v .)
    m               reduce using rule 141 (alpha_lower -> v .)
    n               reduce using rule 141 (alpha_lower -> v .)
    o               reduce using rule 141 (alpha_lower -> v .)
    p               reduce using rule 141 (alpha_lower -> v .)
    q               reduce using rule 141 (alpha_lower -> v .)
    r               reduce using rule 141 (alpha_lower -> v .)
    s               reduce using rule 141 (alpha_lower -> v .)
    t               reduce using rule 141 (alpha_lower -> v .)
    u               reduce using rule 141 (alpha_lower -> v .)
    v               reduce using rule 141 (alpha_lower -> v .)
    w               reduce using rule 141 (alpha_lower -> v .)
    x               reduce using rule 141 (alpha_lower -> v .)
    y               reduce using rule 141 (alpha_lower -> v .)
    z               reduce using rule 141 (alpha_lower -> v .)
    A               reduce using rule 141 (alpha_lower -> v .)
    B               reduce using rule 141 (alpha_lower -> v .)
    C               reduce using rule 141 (alpha_lower -> v .)
    D               reduce using rule 141 (alpha_lower -> v .)
    E               reduce using rule 141 (alpha_lower -> v .)
    F               reduce using rule 141 (alpha_lower -> v .)
    G               reduce using rule 141 (alpha_lower -> v .)
    H               reduce using rule 141 (alpha_lower -> v .)
    I               reduce using rule 141 (alpha_lower -> v .)
    J               reduce using rule 141 (alpha_lower -> v .)
    K               reduce using rule 141 (alpha_lower -> v .)
    L               reduce using rule 141 (alpha_lower -> v .)
    M               reduce using rule 141 (alpha_lower -> v .)
    N               reduce using rule 141 (alpha_lower -> v .)
    O               reduce using rule 141 (alpha_lower -> v .)
    P               reduce using rule 141 (alpha_lower -> v .)
    Q               reduce using rule 141 (alpha_lower -> v .)
    R               reduce using rule 141 (alpha_lower -> v .)
    S               reduce using rule 141 (alpha_lower -> v .)
    T               reduce using rule 141 (alpha_lower -> v .)
    U               reduce using rule 141 (alpha_lower -> v .)
    V               reduce using rule 141 (alpha_lower -> v .)
    W               reduce using rule 141 (alpha_lower -> v .)
    X               reduce using rule 141 (alpha_lower -> v .)
    Y               reduce using rule 141 (alpha_lower -> v .)
    Z               reduce using rule 141 (alpha_lower -> v .)
    ]               reduce using rule 141 (alpha_lower -> v .)
    ^               reduce using rule 141 (alpha_lower -> v .)
    |               reduce using rule 141 (alpha_lower -> v .)
    $end            reduce using rule 141 (alpha_lower -> v .)


state 45

    (23) elementary -> anychar .

    *               reduce using rule 23 (elementary -> anychar .)
    +               reduce using rule 23 (elementary -> anychar .)
    ?               reduce using rule 23 (elementary -> anychar .)
    {               reduce using rule 23 (elementary -> anychar .)
    (               reduce using rule 23 (elementary -> anychar .)
    ^               reduce using rule 23 (elementary -> anychar .)
    >               reduce using rule 23 (elementary -> anychar .)
    <               reduce using rule 23 (elementary -> anychar .)
    /               reduce using rule 23 (elementary -> anychar .)
    \               reduce using rule 23 (elementary -> anychar .)
    #               reduce using rule 23 (elementary -> anychar .)
    %               reduce using rule 23 (elementary -> anychar .)
    ESCAPED         reduce using rule 23 (elementary -> anychar .)
    DIGIT           reduce using rule 23 (elementary -> anychar .)
    OTHER           reduce using rule 23 (elementary -> anychar .)
    [               reduce using rule 23 (elementary -> anychar .)
    .               reduce using rule 23 (elementary -> anychar .)
    ,               reduce using rule 23 (elementary -> anychar .)
    :               reduce using rule 23 (elementary -> anychar .)
    ;               reduce using rule 23 (elementary -> anychar .)
    $               reduce using rule 23 (elementary -> anychar .)
    `               reduce using rule 23 (elementary -> anychar .)
    a               reduce using rule 23 (elementary -> anychar .)
    b               reduce using rule 23 (elementary -> anychar .)
    c               reduce using rule 23 (elementary -> anychar .)
    d               reduce using rule 23 (elementary -> anychar .)
    e               reduce using rule 23 (elementary -> anychar .)
    f               reduce using rule 23 (elementary -> anychar .)
    g               reduce using rule 23 (elementary -> anychar .)
    h               reduce using rule 23 (elementary -> anychar .)
    i               reduce using rule 23 (elementary -> anychar .)
    j               reduce using rule 23 (elementary -> anychar .)
    k               reduce using rule 23 (elementary -> anychar .)
    l               reduce using rule 23 (elementary -> anychar .)
    m               reduce using rule 23 (elementary -> anychar .)
    n               reduce using rule 23 (elementary -> anychar .)
    o               reduce using rule 23 (elementary -> anychar .)
    p               reduce using rule 23 (elementary -> anychar .)
    q               reduce using rule 23 (elementary -> anychar .)
    r               reduce using rule 23 (elementary -> anychar .)
    s               reduce using rule 23 (elementary -> anychar .)
    t               reduce using rule 23 (elementary -> anychar .)
    u               reduce using rule 23 (elementary -> anychar .)
    v               reduce using rule 23 (elementary -> anychar .)
    w               reduce using rule 23 (elementary -> anychar .)
    x               reduce using rule 23 (elementary -> anychar .)
    y               reduce using rule 23 (elementary -> anychar .)
    z               reduce using rule 23 (elementary -> anychar .)
    A               reduce using rule 23 (elementary -> anychar .)
    B               reduce using rule 23 (elementary -> anychar .)
    C               reduce using rule 23 (elementary -> anychar .)
    D               reduce using rule 23 (elementary -> anychar .)
    E               reduce using rule 23 (elementary -> anychar .)
    F               reduce using rule 23 (elementary -> anychar .)
    G               reduce using rule 23 (elementary -> anychar .)
    H               reduce using rule 23 (elementary -> anychar .)
    I               reduce using rule 23 (elementary -> anychar .)
    J               reduce using rule 23 (elementary -> anychar .)
    K               reduce using rule 23 (elementary -> anychar .)
    L               reduce using rule 23 (elementary -> anychar .)
    M               reduce using rule 23 (elementary -> anychar .)
    N               reduce using rule 23 (elementary -> anychar .)
    O               reduce using rule 23 (elementary -> anychar .)
    P               reduce using rule 23 (elementary -> anychar .)
    Q               reduce using rule 23 (elementary -> anychar .)
    R               reduce using rule 23 (elementary -> anychar .)
    S               reduce using rule 23 (elementary -> anychar .)
    T               reduce using rule 23 (elementary -> anychar .)
    U               reduce using rule 23 (elementary -> anychar .)
    V               reduce using rule 23 (elementary -> anychar .)
    W               reduce using rule 23 (elementary -> anychar .)
    X               reduce using rule 23 (elementary -> anychar .)
    Y               reduce using rule 23 (elementary -> anychar .)
    Z               reduce using rule 23 (elementary -> anychar .)
    |               reduce using rule 23 (elementary -> anychar .)
    )               reduce using rule 23 (elementary -> anychar .)
    $end            reduce using rule 23 (elementary -> anychar .)


state 46

    (130) alpha_lower -> k .

    -               reduce using rule 130 (alpha_lower -> k .)
    !               reduce using rule 130 (alpha_lower -> k .)
    "               reduce using rule 130 (alpha_lower -> k .)
    #               reduce using rule 130 (alpha_lower -> k .)
    $               reduce using rule 130 (alpha_lower -> k .)
    %               reduce using rule 130 (alpha_lower -> k .)
    &               reduce using rule 130 (alpha_lower -> k .)
    '               reduce using rule 130 (alpha_lower -> k .)
    (               reduce using rule 130 (alpha_lower -> k .)
    )               reduce using rule 130 (alpha_lower -> k .)
    *               reduce using rule 130 (alpha_lower -> k .)
    +               reduce using rule 130 (alpha_lower -> k .)
    ,               reduce using rule 130 (alpha_lower -> k .)
    .               reduce using rule 130 (alpha_lower -> k .)
    /               reduce using rule 130 (alpha_lower -> k .)
    :               reduce using rule 130 (alpha_lower -> k .)
    ;               reduce using rule 130 (alpha_lower -> k .)
    <               reduce using rule 130 (alpha_lower -> k .)
    =               reduce using rule 130 (alpha_lower -> k .)
    >               reduce using rule 130 (alpha_lower -> k .)
    ?               reduce using rule 130 (alpha_lower -> k .)
    @               reduce using rule 130 (alpha_lower -> k .)
    [               reduce using rule 130 (alpha_lower -> k .)
    \               reduce using rule 130 (alpha_lower -> k .)
    _               reduce using rule 130 (alpha_lower -> k .)
    `               reduce using rule 130 (alpha_lower -> k .)
    {               reduce using rule 130 (alpha_lower -> k .)
    }               reduce using rule 130 (alpha_lower -> k .)
    ~               reduce using rule 130 (alpha_lower -> k .)
    ESCAPED         reduce using rule 130 (alpha_lower -> k .)
    DIGIT           reduce using rule 130 (alpha_lower -> k .)
    OTHER           reduce using rule 130 (alpha_lower -> k .)
    a               reduce using rule 130 (alpha_lower -> k .)
    b               reduce using rule 130 (alpha_lower -> k .)
    c               reduce using rule 130 (alpha_lower -> k .)
    d               reduce using rule 130 (alpha_lower -> k .)
    e               reduce using rule 130 (alpha_lower -> k .)
    f               reduce using rule 130 (alpha_lower -> k .)
    g               reduce using rule 130 (alpha_lower -> k .)
    h               reduce using rule 130 (alpha_lower -> k .)
    i               reduce using rule 130 (alpha_lower -> k .)
    j               reduce using rule 130 (alpha_lower -> k .)
    k               reduce using rule 130 (alpha_lower -> k .)
    l               reduce using rule 130 (alpha_lower -> k .)
    m               reduce using rule 130 (alpha_lower -> k .)
    n               reduce using rule 130 (alpha_lower -> k .)
    o               reduce using rule 130 (alpha_lower -> k .)
    p               reduce using rule 130 (alpha_lower -> k .)
    q               reduce using rule 130 (alpha_lower -> k .)
    r               reduce using rule 130 (alpha_lower -> k .)
    s               reduce using rule 130 (alpha_lower -> k .)
    t               reduce using rule 130 (alpha_lower -> k .)
    u               reduce using rule 130 (alpha_lower -> k .)
    v               reduce using rule 130 (alpha_lower -> k .)
    w               reduce using rule 130 (alpha_lower -> k .)
    x               reduce using rule 130 (alpha_lower -> k .)
    y               reduce using rule 130 (alpha_lower -> k .)
    z               reduce using rule 130 (alpha_lower -> k .)
    A               reduce using rule 130 (alpha_lower -> k .)
    B               reduce using rule 130 (alpha_lower -> k .)
    C               reduce using rule 130 (alpha_lower -> k .)
    D               reduce using rule 130 (alpha_lower -> k .)
    E               reduce using rule 130 (alpha_lower -> k .)
    F               reduce using rule 130 (alpha_lower -> k .)
    G               reduce using rule 130 (alpha_lower -> k .)
    H               reduce using rule 130 (alpha_lower -> k .)
    I               reduce using rule 130 (alpha_lower -> k .)
    J               reduce using rule 130 (alpha_lower -> k .)
    K               reduce using rule 130 (alpha_lower -> k .)
    L               reduce using rule 130 (alpha_lower -> k .)
    M               reduce using rule 130 (alpha_lower -> k .)
    N               reduce using rule 130 (alpha_lower -> k .)
    O               reduce using rule 130 (alpha_lower -> k .)
    P               reduce using rule 130 (alpha_lower -> k .)
    Q               reduce using rule 130 (alpha_lower -> k .)
    R               reduce using rule 130 (alpha_lower -> k .)
    S               reduce using rule 130 (alpha_lower -> k .)
    T               reduce using rule 130 (alpha_lower -> k .)
    U               reduce using rule 130 (alpha_lower -> k .)
    V               reduce using rule 130 (alpha_lower -> k .)
    W               reduce using rule 130 (alpha_lower -> k .)
    X               reduce using rule 130 (alpha_lower -> k .)
    Y               reduce using rule 130 (alpha_lower -> k .)
    Z               reduce using rule 130 (alpha_lower -> k .)
    ]               reduce using rule 130 (alpha_lower -> k .)
    ^               reduce using rule 130 (alpha_lower -> k .)
    |               reduce using rule 130 (alpha_lower -> k .)
    $end            reduce using rule 130 (alpha_lower -> k .)


state 47

    (12) quantifier -> basequantifier .
    (13) quantifier -> basequantifier . ?

    (               reduce using rule 12 (quantifier -> basequantifier .)
    ^               reduce using rule 12 (quantifier -> basequantifier .)
    >               reduce using rule 12 (quantifier -> basequantifier .)
    <               reduce using rule 12 (quantifier -> basequantifier .)
    /               reduce using rule 12 (quantifier -> basequantifier .)
    \               reduce using rule 12 (quantifier -> basequantifier .)
    #               reduce using rule 12 (quantifier -> basequantifier .)
    %               reduce using rule 12 (quantifier -> basequantifier .)
    ESCAPED         reduce using rule 12 (quantifier -> basequantifier .)
    DIGIT           reduce using rule 12 (quantifier -> basequantifier .)
    OTHER           reduce using rule 12 (quantifier -> basequantifier .)
    [               reduce using rule 12 (quantifier -> basequantifier .)
    .               reduce using rule 12 (quantifier -> basequantifier .)
    ,               reduce using rule 12 (quantifier -> basequantifier .)
    :               reduce using rule 12 (quantifier -> basequantifier .)
    ;               reduce using rule 12 (quantifier -> basequantifier .)
    $               reduce using rule 12 (quantifier -> basequantifier .)
    `               reduce using rule 12 (quantifier -> basequantifier .)
    a               reduce using rule 12 (quantifier -> basequantifier .)
    b               reduce using rule 12 (quantifier -> basequantifier .)
    c               reduce using rule 12 (quantifier -> basequantifier .)
    d               reduce using rule 12 (quantifier -> basequantifier .)
    e               reduce using rule 12 (quantifier -> basequantifier .)
    f               reduce using rule 12 (quantifier -> basequantifier .)
    g               reduce using rule 12 (quantifier -> basequantifier .)
    h               reduce using rule 12 (quantifier -> basequantifier .)
    i               reduce using rule 12 (quantifier -> basequantifier .)
    j               reduce using rule 12 (quantifier -> basequantifier .)
    k               reduce using rule 12 (quantifier -> basequantifier .)
    l               reduce using rule 12 (quantifier -> basequantifier .)
    m               reduce using rule 12 (quantifier -> basequantifier .)
    n               reduce using rule 12 (quantifier -> basequantifier .)
    o               reduce using rule 12 (quantifier -> basequantifier .)
    p               reduce using rule 12 (quantifier -> basequantifier .)
    q               reduce using rule 12 (quantifier -> basequantifier .)
    r               reduce using rule 12 (quantifier -> basequantifier .)
    s               reduce using rule 12 (quantifier -> basequantifier .)
    t               reduce using rule 12 (quantifier -> basequantifier .)
    u               reduce using rule 12 (quantifier -> basequantifier .)
    v               reduce using rule 12 (quantifier -> basequantifier .)
    w               reduce using rule 12 (quantifier -> basequantifier .)
    x               reduce using rule 12 (quantifier -> basequantifier .)
    y               reduce using rule 12 (quantifier -> basequantifier .)
    z               reduce using rule 12 (quantifier -> basequantifier .)
    A               reduce using rule 12 (quantifier -> basequantifier .)
    B               reduce using rule 12 (quantifier -> basequantifier .)
    C               reduce using rule 12 (quantifier -> basequantifier .)
    D               reduce using rule 12 (quantifier -> basequantifier .)
    E               reduce using rule 12 (quantifier -> basequantifier .)
    F               reduce using rule 12 (quantifier -> basequantifier .)
    G               reduce using rule 12 (quantifier -> basequantifier .)
    H               reduce using rule 12 (quantifier -> basequantifier .)
    I               reduce using rule 12 (quantifier -> basequantifier .)
    J               reduce using rule 12 (quantifier -> basequantifier .)
    K               reduce using rule 12 (quantifier -> basequantifier .)
    L               reduce using rule 12 (quantifier -> basequantifier .)
    M               reduce using rule 12 (quantifier -> basequantifier .)
    N               reduce using rule 12 (quantifier -> basequantifier .)
    O               reduce using rule 12 (quantifier -> basequantifier .)
    P               reduce using rule 12 (quantifier -> basequantifier .)
    Q               reduce using rule 12 (quantifier -> basequantifier .)
    R               reduce using rule 12 (quantifier -> basequantifier .)
    S               reduce using rule 12 (quantifier -> basequantifier .)
    T               reduce using rule 12 (quantifier -> basequantifier .)
    U               reduce using rule 12 (quantifier -> basequantifier .)
    V               reduce using rule 12 (quantifier -> basequantifier .)
    W               reduce using rule 12 (quantifier -> basequantifier .)
    X               reduce using rule 12 (quantifier -> basequantifier .)
    Y               reduce using rule 12 (quantifier -> basequantifier .)
    Z               reduce using rule 12 (quantifier -> basequantifier .)
    |               reduce using rule 12 (quantifier -> basequantifier .)
    $end            reduce using rule 12 (quantifier -> basequantifier .)
    )               reduce using rule 12 (quantifier -> basequantifier .)
    ?               shift and go to state 104


state 48

    (25) elementary -> nomatch .

    *               reduce using rule 25 (elementary -> nomatch .)
    +               reduce using rule 25 (elementary -> nomatch .)
    ?               reduce using rule 25 (elementary -> nomatch .)
    {               reduce using rule 25 (elementary -> nomatch .)
    (               reduce using rule 25 (elementary -> nomatch .)
    ^               reduce using rule 25 (elementary -> nomatch .)
    >               reduce using rule 25 (elementary -> nomatch .)
    <               reduce using rule 25 (elementary -> nomatch .)
    /               reduce using rule 25 (elementary -> nomatch .)
    \               reduce using rule 25 (elementary -> nomatch .)
    #               reduce using rule 25 (elementary -> nomatch .)
    %               reduce using rule 25 (elementary -> nomatch .)
    ESCAPED         reduce using rule 25 (elementary -> nomatch .)
    DIGIT           reduce using rule 25 (elementary -> nomatch .)
    OTHER           reduce using rule 25 (elementary -> nomatch .)
    [               reduce using rule 25 (elementary -> nomatch .)
    .               reduce using rule 25 (elementary -> nomatch .)
    ,               reduce using rule 25 (elementary -> nomatch .)
    :               reduce using rule 25 (elementary -> nomatch .)
    ;               reduce using rule 25 (elementary -> nomatch .)
    $               reduce using rule 25 (elementary -> nomatch .)
    `               reduce using rule 25 (elementary -> nomatch .)
    a               reduce using rule 25 (elementary -> nomatch .)
    b               reduce using rule 25 (elementary -> nomatch .)
    c               reduce using rule 25 (elementary -> nomatch .)
    d               reduce using rule 25 (elementary -> nomatch .)
    e               reduce using rule 25 (elementary -> nomatch .)
    f               reduce using rule 25 (elementary -> nomatch .)
    g               reduce using rule 25 (elementary -> nomatch .)
    h               reduce using rule 25 (elementary -> nomatch .)
    i               reduce using rule 25 (elementary -> nomatch .)
    j               reduce using rule 25 (elementary -> nomatch .)
    k               reduce using rule 25 (elementary -> nomatch .)
    l               reduce using rule 25 (elementary -> nomatch .)
    m               reduce using rule 25 (elementary -> nomatch .)
    n               reduce using rule 25 (elementary -> nomatch .)
    o               reduce using rule 25 (elementary -> nomatch .)
    p               reduce using rule 25 (elementary -> nomatch .)
    q               reduce using rule 25 (elementary -> nomatch .)
    r               reduce using rule 25 (elementary -> nomatch .)
    s               reduce using rule 25 (elementary -> nomatch .)
    t               reduce using rule 25 (elementary -> nomatch .)
    u               reduce using rule 25 (elementary -> nomatch .)
    v               reduce using rule 25 (elementary -> nomatch .)
    w               reduce using rule 25 (elementary -> nomatch .)
    x               reduce using rule 25 (elementary -> nomatch .)
    y               reduce using rule 25 (elementary -> nomatch .)
    z               reduce using rule 25 (elementary -> nomatch .)
    A               reduce using rule 25 (elementary -> nomatch .)
    B               reduce using rule 25 (elementary -> nomatch .)
    C               reduce using rule 25 (elementary -> nomatch .)
    D               reduce using rule 25 (elementary -> nomatch .)
    E               reduce using rule 25 (elementary -> nomatch .)
    F               reduce using rule 25 (elementary -> nomatch .)
    G               reduce using rule 25 (elementary -> nomatch .)
    H               reduce using rule 25 (elementary -> nomatch .)
    I               reduce using rule 25 (elementary -> nomatch .)
    J               reduce using rule 25 (elementary -> nomatch .)
    K               reduce using rule 25 (elementary -> nomatch .)
    L               reduce using rule 25 (elementary -> nomatch .)
    M               reduce using rule 25 (elementary -> nomatch .)
    N               reduce using rule 25 (elementary -> nomatch .)
    O               reduce using rule 25 (elementary -> nomatch .)
    P               reduce using rule 25 (elementary -> nomatch .)
    Q               reduce using rule 25 (elementary -> nomatch .)
    R               reduce using rule 25 (elementary -> nomatch .)
    S               reduce using rule 25 (elementary -> nomatch .)
    T               reduce using rule 25 (elementary -> nomatch .)
    U               reduce using rule 25 (elementary -> nomatch .)
    V               reduce using rule 25 (elementary -> nomatch .)
    W               reduce using rule 25 (elementary -> nomatch .)
    X               reduce using rule 25 (elementary -> nomatch .)
    Y               reduce using rule 25 (elementary -> nomatch .)
    Z               reduce using rule 25 (elementary -> nomatch .)
    |               reduce using rule 25 (elementary -> nomatch .)
    )               reduce using rule 25 (elementary -> nomatch .)
    $end            reduce using rule 25 (elementary -> nomatch .)


state 49

    (15) basequantifier -> plus .

    ?               reduce using rule 15 (basequantifier -> plus .)
    (               reduce using rule 15 (basequantifier -> plus .)
    ^               reduce using rule 15 (basequantifier -> plus .)
    >               reduce using rule 15 (basequantifier -> plus .)
    <               reduce using rule 15 (basequantifier -> plus .)
    /               reduce using rule 15 (basequantifier -> plus .)
    \               reduce using rule 15 (basequantifier -> plus .)
    #               reduce using rule 15 (basequantifier -> plus .)
    %               reduce using rule 15 (basequantifier -> plus .)
    ESCAPED         reduce using rule 15 (basequantifier -> plus .)
    DIGIT           reduce using rule 15 (basequantifier -> plus .)
    OTHER           reduce using rule 15 (basequantifier -> plus .)
    [               reduce using rule 15 (basequantifier -> plus .)
    .               reduce using rule 15 (basequantifier -> plus .)
    ,               reduce using rule 15 (basequantifier -> plus .)
    :               reduce using rule 15 (basequantifier -> plus .)
    ;               reduce using rule 15 (basequantifier -> plus .)
    $               reduce using rule 15 (basequantifier -> plus .)
    `               reduce using rule 15 (basequantifier -> plus .)
    a               reduce using rule 15 (basequantifier -> plus .)
    b               reduce using rule 15 (basequantifier -> plus .)
    c               reduce using rule 15 (basequantifier -> plus .)
    d               reduce using rule 15 (basequantifier -> plus .)
    e               reduce using rule 15 (basequantifier -> plus .)
    f               reduce using rule 15 (basequantifier -> plus .)
    g               reduce using rule 15 (basequantifier -> plus .)
    h               reduce using rule 15 (basequantifier -> plus .)
    i               reduce using rule 15 (basequantifier -> plus .)
    j               reduce using rule 15 (basequantifier -> plus .)
    k               reduce using rule 15 (basequantifier -> plus .)
    l               reduce using rule 15 (basequantifier -> plus .)
    m               reduce using rule 15 (basequantifier -> plus .)
    n               reduce using rule 15 (basequantifier -> plus .)
    o               reduce using rule 15 (basequantifier -> plus .)
    p               reduce using rule 15 (basequantifier -> plus .)
    q               reduce using rule 15 (basequantifier -> plus .)
    r               reduce using rule 15 (basequantifier -> plus .)
    s               reduce using rule 15 (basequantifier -> plus .)
    t               reduce using rule 15 (basequantifier -> plus .)
    u               reduce using rule 15 (basequantifier -> plus .)
    v               reduce using rule 15 (basequantifier -> plus .)
    w               reduce using rule 15 (basequantifier -> plus .)
    x               reduce using rule 15 (basequantifier -> plus .)
    y               reduce using rule 15 (basequantifier -> plus .)
    z               reduce using rule 15 (basequantifier -> plus .)
    A               reduce using rule 15 (basequantifier -> plus .)
    B               reduce using rule 15 (basequantifier -> plus .)
    C               reduce using rule 15 (basequantifier -> plus .)
    D               reduce using rule 15 (basequantifier -> plus .)
    E               reduce using rule 15 (basequantifier -> plus .)
    F               reduce using rule 15 (basequantifier -> plus .)
    G               reduce using rule 15 (basequantifier -> plus .)
    H               reduce using rule 15 (basequantifier -> plus .)
    I               reduce using rule 15 (basequantifier -> plus .)
    J               reduce using rule 15 (basequantifier -> plus .)
    K               reduce using rule 15 (basequantifier -> plus .)
    L               reduce using rule 15 (basequantifier -> plus .)
    M               reduce using rule 15 (basequantifier -> plus .)
    N               reduce using rule 15 (basequantifier -> plus .)
    O               reduce using rule 15 (basequantifier -> plus .)
    P               reduce using rule 15 (basequantifier -> plus .)
    Q               reduce using rule 15 (basequantifier -> plus .)
    R               reduce using rule 15 (basequantifier -> plus .)
    S               reduce using rule 15 (basequantifier -> plus .)
    T               reduce using rule 15 (basequantifier -> plus .)
    U               reduce using rule 15 (basequantifier -> plus .)
    V               reduce using rule 15 (basequantifier -> plus .)
    W               reduce using rule 15 (basequantifier -> plus .)
    X               reduce using rule 15 (basequantifier -> plus .)
    Y               reduce using rule 15 (basequantifier -> plus .)
    Z               reduce using rule 15 (basequantifier -> plus .)
    |               reduce using rule 15 (basequantifier -> plus .)
    )               reduce using rule 15 (basequantifier -> plus .)
    $end            reduce using rule 15 (basequantifier -> plus .)


state 50

    (158) alpha_upper -> M .

    *               reduce using rule 158 (alpha_upper -> M .)
    +               reduce using rule 158 (alpha_upper -> M .)
    ?               reduce using rule 158 (alpha_upper -> M .)
    {               reduce using rule 158 (alpha_upper -> M .)
    (               reduce using rule 158 (alpha_upper -> M .)
    ^               reduce using rule 158 (alpha_upper -> M .)
    >               reduce using rule 158 (alpha_upper -> M .)
    <               reduce using rule 158 (alpha_upper -> M .)
    /               reduce using rule 158 (alpha_upper -> M .)
    \               reduce using rule 158 (alpha_upper -> M .)
    #               reduce using rule 158 (alpha_upper -> M .)
    %               reduce using rule 158 (alpha_upper -> M .)
    ESCAPED         reduce using rule 158 (alpha_upper -> M .)
    DIGIT           reduce using rule 158 (alpha_upper -> M .)
    OTHER           reduce using rule 158 (alpha_upper -> M .)
    [               reduce using rule 158 (alpha_upper -> M .)
    .               reduce using rule 158 (alpha_upper -> M .)
    ,               reduce using rule 158 (alpha_upper -> M .)
    :               reduce using rule 158 (alpha_upper -> M .)
    ;               reduce using rule 158 (alpha_upper -> M .)
    $               reduce using rule 158 (alpha_upper -> M .)
    `               reduce using rule 158 (alpha_upper -> M .)
    a               reduce using rule 158 (alpha_upper -> M .)
    b               reduce using rule 158 (alpha_upper -> M .)
    c               reduce using rule 158 (alpha_upper -> M .)
    d               reduce using rule 158 (alpha_upper -> M .)
    e               reduce using rule 158 (alpha_upper -> M .)
    f               reduce using rule 158 (alpha_upper -> M .)
    g               reduce using rule 158 (alpha_upper -> M .)
    h               reduce using rule 158 (alpha_upper -> M .)
    i               reduce using rule 158 (alpha_upper -> M .)
    j               reduce using rule 158 (alpha_upper -> M .)
    k               reduce using rule 158 (alpha_upper -> M .)
    l               reduce using rule 158 (alpha_upper -> M .)
    m               reduce using rule 158 (alpha_upper -> M .)
    n               reduce using rule 158 (alpha_upper -> M .)
    o               reduce using rule 158 (alpha_upper -> M .)
    p               reduce using rule 158 (alpha_upper -> M .)
    q               reduce using rule 158 (alpha_upper -> M .)
    r               reduce using rule 158 (alpha_upper -> M .)
    s               reduce using rule 158 (alpha_upper -> M .)
    t               reduce using rule 158 (alpha_upper -> M .)
    u               reduce using rule 158 (alpha_upper -> M .)
    v               reduce using rule 158 (alpha_upper -> M .)
    w               reduce using rule 158 (alpha_upper -> M .)
    x               reduce using rule 158 (alpha_upper -> M .)
    y               reduce using rule 158 (alpha_upper -> M .)
    z               reduce using rule 158 (alpha_upper -> M .)
    A               reduce using rule 158 (alpha_upper -> M .)
    B               reduce using rule 158 (alpha_upper -> M .)
    C               reduce using rule 158 (alpha_upper -> M .)
    D               reduce using rule 158 (alpha_upper -> M .)
    E               reduce using rule 158 (alpha_upper -> M .)
    F               reduce using rule 158 (alpha_upper -> M .)
    G               reduce using rule 158 (alpha_upper -> M .)
    H               reduce using rule 158 (alpha_upper -> M .)
    I               reduce using rule 158 (alpha_upper -> M .)
    J               reduce using rule 158 (alpha_upper -> M .)
    K               reduce using rule 158 (alpha_upper -> M .)
    L               reduce using rule 158 (alpha_upper -> M .)
    M               reduce using rule 158 (alpha_upper -> M .)
    N               reduce using rule 158 (alpha_upper -> M .)
    O               reduce using rule 158 (alpha_upper -> M .)
    P               reduce using rule 158 (alpha_upper -> M .)
    Q               reduce using rule 158 (alpha_upper -> M .)
    R               reduce using rule 158 (alpha_upper -> M .)
    S               reduce using rule 158 (alpha_upper -> M .)
    T               reduce using rule 158 (alpha_upper -> M .)
    U               reduce using rule 158 (alpha_upper -> M .)
    V               reduce using rule 158 (alpha_upper -> M .)
    W               reduce using rule 158 (alpha_upper -> M .)
    X               reduce using rule 158 (alpha_upper -> M .)
    Y               reduce using rule 158 (alpha_upper -> M .)
    Z               reduce using rule 158 (alpha_upper -> M .)
    |               reduce using rule 158 (alpha_upper -> M .)
    $end            reduce using rule 158 (alpha_upper -> M .)
    )               reduce using rule 158 (alpha_upper -> M .)
    -               reduce using rule 158 (alpha_upper -> M .)
    !               reduce using rule 158 (alpha_upper -> M .)
    "               reduce using rule 158 (alpha_upper -> M .)
    &               reduce using rule 158 (alpha_upper -> M .)
    '               reduce using rule 158 (alpha_upper -> M .)
    =               reduce using rule 158 (alpha_upper -> M .)
    @               reduce using rule 158 (alpha_upper -> M .)
    _               reduce using rule 158 (alpha_upper -> M .)
    }               reduce using rule 158 (alpha_upper -> M .)
    ~               reduce using rule 158 (alpha_upper -> M .)
    ]               reduce using rule 158 (alpha_upper -> M .)


state 51

    (103) anchor -> $ . DIGIT
    (104) anchor -> $ . alpha
    (105) anchor -> $ . *
    (106) anchor -> $ . +
    (107) anchor -> $ . ^
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    DIGIT           shift and go to state 105
    *               shift and go to state 108
    +               shift and go to state 107
    ^               shift and go to state 106
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    alpha                          shift and go to state 109

state 52

    (156) alpha_upper -> K .

    *               reduce using rule 156 (alpha_upper -> K .)
    +               reduce using rule 156 (alpha_upper -> K .)
    ?               reduce using rule 156 (alpha_upper -> K .)
    {               reduce using rule 156 (alpha_upper -> K .)
    (               reduce using rule 156 (alpha_upper -> K .)
    ^               reduce using rule 156 (alpha_upper -> K .)
    >               reduce using rule 156 (alpha_upper -> K .)
    <               reduce using rule 156 (alpha_upper -> K .)
    /               reduce using rule 156 (alpha_upper -> K .)
    \               reduce using rule 156 (alpha_upper -> K .)
    #               reduce using rule 156 (alpha_upper -> K .)
    %               reduce using rule 156 (alpha_upper -> K .)
    ESCAPED         reduce using rule 156 (alpha_upper -> K .)
    DIGIT           reduce using rule 156 (alpha_upper -> K .)
    OTHER           reduce using rule 156 (alpha_upper -> K .)
    [               reduce using rule 156 (alpha_upper -> K .)
    .               reduce using rule 156 (alpha_upper -> K .)
    ,               reduce using rule 156 (alpha_upper -> K .)
    :               reduce using rule 156 (alpha_upper -> K .)
    ;               reduce using rule 156 (alpha_upper -> K .)
    $               reduce using rule 156 (alpha_upper -> K .)
    `               reduce using rule 156 (alpha_upper -> K .)
    a               reduce using rule 156 (alpha_upper -> K .)
    b               reduce using rule 156 (alpha_upper -> K .)
    c               reduce using rule 156 (alpha_upper -> K .)
    d               reduce using rule 156 (alpha_upper -> K .)
    e               reduce using rule 156 (alpha_upper -> K .)
    f               reduce using rule 156 (alpha_upper -> K .)
    g               reduce using rule 156 (alpha_upper -> K .)
    h               reduce using rule 156 (alpha_upper -> K .)
    i               reduce using rule 156 (alpha_upper -> K .)
    j               reduce using rule 156 (alpha_upper -> K .)
    k               reduce using rule 156 (alpha_upper -> K .)
    l               reduce using rule 156 (alpha_upper -> K .)
    m               reduce using rule 156 (alpha_upper -> K .)
    n               reduce using rule 156 (alpha_upper -> K .)
    o               reduce using rule 156 (alpha_upper -> K .)
    p               reduce using rule 156 (alpha_upper -> K .)
    q               reduce using rule 156 (alpha_upper -> K .)
    r               reduce using rule 156 (alpha_upper -> K .)
    s               reduce using rule 156 (alpha_upper -> K .)
    t               reduce using rule 156 (alpha_upper -> K .)
    u               reduce using rule 156 (alpha_upper -> K .)
    v               reduce using rule 156 (alpha_upper -> K .)
    w               reduce using rule 156 (alpha_upper -> K .)
    x               reduce using rule 156 (alpha_upper -> K .)
    y               reduce using rule 156 (alpha_upper -> K .)
    z               reduce using rule 156 (alpha_upper -> K .)
    A               reduce using rule 156 (alpha_upper -> K .)
    B               reduce using rule 156 (alpha_upper -> K .)
    C               reduce using rule 156 (alpha_upper -> K .)
    D               reduce using rule 156 (alpha_upper -> K .)
    E               reduce using rule 156 (alpha_upper -> K .)
    F               reduce using rule 156 (alpha_upper -> K .)
    G               reduce using rule 156 (alpha_upper -> K .)
    H               reduce using rule 156 (alpha_upper -> K .)
    I               reduce using rule 156 (alpha_upper -> K .)
    J               reduce using rule 156 (alpha_upper -> K .)
    K               reduce using rule 156 (alpha_upper -> K .)
    L               reduce using rule 156 (alpha_upper -> K .)
    M               reduce using rule 156 (alpha_upper -> K .)
    N               reduce using rule 156 (alpha_upper -> K .)
    O               reduce using rule 156 (alpha_upper -> K .)
    P               reduce using rule 156 (alpha_upper -> K .)
    Q               reduce using rule 156 (alpha_upper -> K .)
    R               reduce using rule 156 (alpha_upper -> K .)
    S               reduce using rule 156 (alpha_upper -> K .)
    T               reduce using rule 156 (alpha_upper -> K .)
    U               reduce using rule 156 (alpha_upper -> K .)
    V               reduce using rule 156 (alpha_upper -> K .)
    W               reduce using rule 156 (alpha_upper -> K .)
    X               reduce using rule 156 (alpha_upper -> K .)
    Y               reduce using rule 156 (alpha_upper -> K .)
    Z               reduce using rule 156 (alpha_upper -> K .)
    |               reduce using rule 156 (alpha_upper -> K .)
    $end            reduce using rule 156 (alpha_upper -> K .)
    )               reduce using rule 156 (alpha_upper -> K .)
    -               reduce using rule 156 (alpha_upper -> K .)
    !               reduce using rule 156 (alpha_upper -> K .)
    "               reduce using rule 156 (alpha_upper -> K .)
    &               reduce using rule 156 (alpha_upper -> K .)
    '               reduce using rule 156 (alpha_upper -> K .)
    =               reduce using rule 156 (alpha_upper -> K .)
    @               reduce using rule 156 (alpha_upper -> K .)
    _               reduce using rule 156 (alpha_upper -> K .)
    }               reduce using rule 156 (alpha_upper -> K .)
    ~               reduce using rule 156 (alpha_upper -> K .)
    ]               reduce using rule 156 (alpha_upper -> K .)


state 53

    (38) nomatch -> : .

    *               reduce using rule 38 (nomatch -> : .)
    +               reduce using rule 38 (nomatch -> : .)
    ?               reduce using rule 38 (nomatch -> : .)
    {               reduce using rule 38 (nomatch -> : .)
    (               reduce using rule 38 (nomatch -> : .)
    ^               reduce using rule 38 (nomatch -> : .)
    >               reduce using rule 38 (nomatch -> : .)
    <               reduce using rule 38 (nomatch -> : .)
    /               reduce using rule 38 (nomatch -> : .)
    \               reduce using rule 38 (nomatch -> : .)
    #               reduce using rule 38 (nomatch -> : .)
    %               reduce using rule 38 (nomatch -> : .)
    ESCAPED         reduce using rule 38 (nomatch -> : .)
    DIGIT           reduce using rule 38 (nomatch -> : .)
    OTHER           reduce using rule 38 (nomatch -> : .)
    [               reduce using rule 38 (nomatch -> : .)
    .               reduce using rule 38 (nomatch -> : .)
    ,               reduce using rule 38 (nomatch -> : .)
    :               reduce using rule 38 (nomatch -> : .)
    ;               reduce using rule 38 (nomatch -> : .)
    $               reduce using rule 38 (nomatch -> : .)
    `               reduce using rule 38 (nomatch -> : .)
    a               reduce using rule 38 (nomatch -> : .)
    b               reduce using rule 38 (nomatch -> : .)
    c               reduce using rule 38 (nomatch -> : .)
    d               reduce using rule 38 (nomatch -> : .)
    e               reduce using rule 38 (nomatch -> : .)
    f               reduce using rule 38 (nomatch -> : .)
    g               reduce using rule 38 (nomatch -> : .)
    h               reduce using rule 38 (nomatch -> : .)
    i               reduce using rule 38 (nomatch -> : .)
    j               reduce using rule 38 (nomatch -> : .)
    k               reduce using rule 38 (nomatch -> : .)
    l               reduce using rule 38 (nomatch -> : .)
    m               reduce using rule 38 (nomatch -> : .)
    n               reduce using rule 38 (nomatch -> : .)
    o               reduce using rule 38 (nomatch -> : .)
    p               reduce using rule 38 (nomatch -> : .)
    q               reduce using rule 38 (nomatch -> : .)
    r               reduce using rule 38 (nomatch -> : .)
    s               reduce using rule 38 (nomatch -> : .)
    t               reduce using rule 38 (nomatch -> : .)
    u               reduce using rule 38 (nomatch -> : .)
    v               reduce using rule 38 (nomatch -> : .)
    w               reduce using rule 38 (nomatch -> : .)
    x               reduce using rule 38 (nomatch -> : .)
    y               reduce using rule 38 (nomatch -> : .)
    z               reduce using rule 38 (nomatch -> : .)
    A               reduce using rule 38 (nomatch -> : .)
    B               reduce using rule 38 (nomatch -> : .)
    C               reduce using rule 38 (nomatch -> : .)
    D               reduce using rule 38 (nomatch -> : .)
    E               reduce using rule 38 (nomatch -> : .)
    F               reduce using rule 38 (nomatch -> : .)
    G               reduce using rule 38 (nomatch -> : .)
    H               reduce using rule 38 (nomatch -> : .)
    I               reduce using rule 38 (nomatch -> : .)
    J               reduce using rule 38 (nomatch -> : .)
    K               reduce using rule 38 (nomatch -> : .)
    L               reduce using rule 38 (nomatch -> : .)
    M               reduce using rule 38 (nomatch -> : .)
    N               reduce using rule 38 (nomatch -> : .)
    O               reduce using rule 38 (nomatch -> : .)
    P               reduce using rule 38 (nomatch -> : .)
    Q               reduce using rule 38 (nomatch -> : .)
    R               reduce using rule 38 (nomatch -> : .)
    S               reduce using rule 38 (nomatch -> : .)
    T               reduce using rule 38 (nomatch -> : .)
    U               reduce using rule 38 (nomatch -> : .)
    V               reduce using rule 38 (nomatch -> : .)
    W               reduce using rule 38 (nomatch -> : .)
    X               reduce using rule 38 (nomatch -> : .)
    Y               reduce using rule 38 (nomatch -> : .)
    Z               reduce using rule 38 (nomatch -> : .)
    |               reduce using rule 38 (nomatch -> : .)
    $end            reduce using rule 38 (nomatch -> : .)
    )               reduce using rule 38 (nomatch -> : .)


state 54

    (116) literal -> DIGIT .

    *               reduce using rule 116 (literal -> DIGIT .)
    +               reduce using rule 116 (literal -> DIGIT .)
    ?               reduce using rule 116 (literal -> DIGIT .)
    {               reduce using rule 116 (literal -> DIGIT .)
    (               reduce using rule 116 (literal -> DIGIT .)
    ^               reduce using rule 116 (literal -> DIGIT .)
    >               reduce using rule 116 (literal -> DIGIT .)
    <               reduce using rule 116 (literal -> DIGIT .)
    /               reduce using rule 116 (literal -> DIGIT .)
    \               reduce using rule 116 (literal -> DIGIT .)
    #               reduce using rule 116 (literal -> DIGIT .)
    %               reduce using rule 116 (literal -> DIGIT .)
    ESCAPED         reduce using rule 116 (literal -> DIGIT .)
    DIGIT           reduce using rule 116 (literal -> DIGIT .)
    OTHER           reduce using rule 116 (literal -> DIGIT .)
    [               reduce using rule 116 (literal -> DIGIT .)
    .               reduce using rule 116 (literal -> DIGIT .)
    ,               reduce using rule 116 (literal -> DIGIT .)
    :               reduce using rule 116 (literal -> DIGIT .)
    ;               reduce using rule 116 (literal -> DIGIT .)
    $               reduce using rule 116 (literal -> DIGIT .)
    `               reduce using rule 116 (literal -> DIGIT .)
    a               reduce using rule 116 (literal -> DIGIT .)
    b               reduce using rule 116 (literal -> DIGIT .)
    c               reduce using rule 116 (literal -> DIGIT .)
    d               reduce using rule 116 (literal -> DIGIT .)
    e               reduce using rule 116 (literal -> DIGIT .)
    f               reduce using rule 116 (literal -> DIGIT .)
    g               reduce using rule 116 (literal -> DIGIT .)
    h               reduce using rule 116 (literal -> DIGIT .)
    i               reduce using rule 116 (literal -> DIGIT .)
    j               reduce using rule 116 (literal -> DIGIT .)
    k               reduce using rule 116 (literal -> DIGIT .)
    l               reduce using rule 116 (literal -> DIGIT .)
    m               reduce using rule 116 (literal -> DIGIT .)
    n               reduce using rule 116 (literal -> DIGIT .)
    o               reduce using rule 116 (literal -> DIGIT .)
    p               reduce using rule 116 (literal -> DIGIT .)
    q               reduce using rule 116 (literal -> DIGIT .)
    r               reduce using rule 116 (literal -> DIGIT .)
    s               reduce using rule 116 (literal -> DIGIT .)
    t               reduce using rule 116 (literal -> DIGIT .)
    u               reduce using rule 116 (literal -> DIGIT .)
    v               reduce using rule 116 (literal -> DIGIT .)
    w               reduce using rule 116 (literal -> DIGIT .)
    x               reduce using rule 116 (literal -> DIGIT .)
    y               reduce using rule 116 (literal -> DIGIT .)
    z               reduce using rule 116 (literal -> DIGIT .)
    A               reduce using rule 116 (literal -> DIGIT .)
    B               reduce using rule 116 (literal -> DIGIT .)
    C               reduce using rule 116 (literal -> DIGIT .)
    D               reduce using rule 116 (literal -> DIGIT .)
    E               reduce using rule 116 (literal -> DIGIT .)
    F               reduce using rule 116 (literal -> DIGIT .)
    G               reduce using rule 116 (literal -> DIGIT .)
    H               reduce using rule 116 (literal -> DIGIT .)
    I               reduce using rule 116 (literal -> DIGIT .)
    J               reduce using rule 116 (literal -> DIGIT .)
    K               reduce using rule 116 (literal -> DIGIT .)
    L               reduce using rule 116 (literal -> DIGIT .)
    M               reduce using rule 116 (literal -> DIGIT .)
    N               reduce using rule 116 (literal -> DIGIT .)
    O               reduce using rule 116 (literal -> DIGIT .)
    P               reduce using rule 116 (literal -> DIGIT .)
    Q               reduce using rule 116 (literal -> DIGIT .)
    R               reduce using rule 116 (literal -> DIGIT .)
    S               reduce using rule 116 (literal -> DIGIT .)
    T               reduce using rule 116 (literal -> DIGIT .)
    U               reduce using rule 116 (literal -> DIGIT .)
    V               reduce using rule 116 (literal -> DIGIT .)
    W               reduce using rule 116 (literal -> DIGIT .)
    X               reduce using rule 116 (literal -> DIGIT .)
    Y               reduce using rule 116 (literal -> DIGIT .)
    Z               reduce using rule 116 (literal -> DIGIT .)
    |               reduce using rule 116 (literal -> DIGIT .)
    )               reduce using rule 116 (literal -> DIGIT .)
    -               reduce using rule 116 (literal -> DIGIT .)
    !               reduce using rule 116 (literal -> DIGIT .)
    "               reduce using rule 116 (literal -> DIGIT .)
    &               reduce using rule 116 (literal -> DIGIT .)
    '               reduce using rule 116 (literal -> DIGIT .)
    =               reduce using rule 116 (literal -> DIGIT .)
    @               reduce using rule 116 (literal -> DIGIT .)
    _               reduce using rule 116 (literal -> DIGIT .)
    }               reduce using rule 116 (literal -> DIGIT .)
    ~               reduce using rule 116 (literal -> DIGIT .)
    ]               reduce using rule 116 (literal -> DIGIT .)
    $end            reduce using rule 116 (literal -> DIGIT .)


state 55

    (165) alpha_upper -> T .

    *               reduce using rule 165 (alpha_upper -> T .)
    +               reduce using rule 165 (alpha_upper -> T .)
    ?               reduce using rule 165 (alpha_upper -> T .)
    {               reduce using rule 165 (alpha_upper -> T .)
    (               reduce using rule 165 (alpha_upper -> T .)
    ^               reduce using rule 165 (alpha_upper -> T .)
    >               reduce using rule 165 (alpha_upper -> T .)
    <               reduce using rule 165 (alpha_upper -> T .)
    /               reduce using rule 165 (alpha_upper -> T .)
    \               reduce using rule 165 (alpha_upper -> T .)
    #               reduce using rule 165 (alpha_upper -> T .)
    %               reduce using rule 165 (alpha_upper -> T .)
    ESCAPED         reduce using rule 165 (alpha_upper -> T .)
    DIGIT           reduce using rule 165 (alpha_upper -> T .)
    OTHER           reduce using rule 165 (alpha_upper -> T .)
    [               reduce using rule 165 (alpha_upper -> T .)
    .               reduce using rule 165 (alpha_upper -> T .)
    ,               reduce using rule 165 (alpha_upper -> T .)
    :               reduce using rule 165 (alpha_upper -> T .)
    ;               reduce using rule 165 (alpha_upper -> T .)
    $               reduce using rule 165 (alpha_upper -> T .)
    `               reduce using rule 165 (alpha_upper -> T .)
    a               reduce using rule 165 (alpha_upper -> T .)
    b               reduce using rule 165 (alpha_upper -> T .)
    c               reduce using rule 165 (alpha_upper -> T .)
    d               reduce using rule 165 (alpha_upper -> T .)
    e               reduce using rule 165 (alpha_upper -> T .)
    f               reduce using rule 165 (alpha_upper -> T .)
    g               reduce using rule 165 (alpha_upper -> T .)
    h               reduce using rule 165 (alpha_upper -> T .)
    i               reduce using rule 165 (alpha_upper -> T .)
    j               reduce using rule 165 (alpha_upper -> T .)
    k               reduce using rule 165 (alpha_upper -> T .)
    l               reduce using rule 165 (alpha_upper -> T .)
    m               reduce using rule 165 (alpha_upper -> T .)
    n               reduce using rule 165 (alpha_upper -> T .)
    o               reduce using rule 165 (alpha_upper -> T .)
    p               reduce using rule 165 (alpha_upper -> T .)
    q               reduce using rule 165 (alpha_upper -> T .)
    r               reduce using rule 165 (alpha_upper -> T .)
    s               reduce using rule 165 (alpha_upper -> T .)
    t               reduce using rule 165 (alpha_upper -> T .)
    u               reduce using rule 165 (alpha_upper -> T .)
    v               reduce using rule 165 (alpha_upper -> T .)
    w               reduce using rule 165 (alpha_upper -> T .)
    x               reduce using rule 165 (alpha_upper -> T .)
    y               reduce using rule 165 (alpha_upper -> T .)
    z               reduce using rule 165 (alpha_upper -> T .)
    A               reduce using rule 165 (alpha_upper -> T .)
    B               reduce using rule 165 (alpha_upper -> T .)
    C               reduce using rule 165 (alpha_upper -> T .)
    D               reduce using rule 165 (alpha_upper -> T .)
    E               reduce using rule 165 (alpha_upper -> T .)
    F               reduce using rule 165 (alpha_upper -> T .)
    G               reduce using rule 165 (alpha_upper -> T .)
    H               reduce using rule 165 (alpha_upper -> T .)
    I               reduce using rule 165 (alpha_upper -> T .)
    J               reduce using rule 165 (alpha_upper -> T .)
    K               reduce using rule 165 (alpha_upper -> T .)
    L               reduce using rule 165 (alpha_upper -> T .)
    M               reduce using rule 165 (alpha_upper -> T .)
    N               reduce using rule 165 (alpha_upper -> T .)
    O               reduce using rule 165 (alpha_upper -> T .)
    P               reduce using rule 165 (alpha_upper -> T .)
    Q               reduce using rule 165 (alpha_upper -> T .)
    R               reduce using rule 165 (alpha_upper -> T .)
    S               reduce using rule 165 (alpha_upper -> T .)
    T               reduce using rule 165 (alpha_upper -> T .)
    U               reduce using rule 165 (alpha_upper -> T .)
    V               reduce using rule 165 (alpha_upper -> T .)
    W               reduce using rule 165 (alpha_upper -> T .)
    X               reduce using rule 165 (alpha_upper -> T .)
    Y               reduce using rule 165 (alpha_upper -> T .)
    Z               reduce using rule 165 (alpha_upper -> T .)
    |               reduce using rule 165 (alpha_upper -> T .)
    $end            reduce using rule 165 (alpha_upper -> T .)
    )               reduce using rule 165 (alpha_upper -> T .)
    -               reduce using rule 165 (alpha_upper -> T .)
    !               reduce using rule 165 (alpha_upper -> T .)
    "               reduce using rule 165 (alpha_upper -> T .)
    &               reduce using rule 165 (alpha_upper -> T .)
    '               reduce using rule 165 (alpha_upper -> T .)
    =               reduce using rule 165 (alpha_upper -> T .)
    @               reduce using rule 165 (alpha_upper -> T .)
    _               reduce using rule 165 (alpha_upper -> T .)
    }               reduce using rule 165 (alpha_upper -> T .)
    ~               reduce using rule 165 (alpha_upper -> T .)
    ]               reduce using rule 165 (alpha_upper -> T .)


state 56

    (146) alpha_upper -> A .

    *               reduce using rule 146 (alpha_upper -> A .)
    +               reduce using rule 146 (alpha_upper -> A .)
    ?               reduce using rule 146 (alpha_upper -> A .)
    {               reduce using rule 146 (alpha_upper -> A .)
    (               reduce using rule 146 (alpha_upper -> A .)
    ^               reduce using rule 146 (alpha_upper -> A .)
    >               reduce using rule 146 (alpha_upper -> A .)
    <               reduce using rule 146 (alpha_upper -> A .)
    /               reduce using rule 146 (alpha_upper -> A .)
    \               reduce using rule 146 (alpha_upper -> A .)
    #               reduce using rule 146 (alpha_upper -> A .)
    %               reduce using rule 146 (alpha_upper -> A .)
    ESCAPED         reduce using rule 146 (alpha_upper -> A .)
    DIGIT           reduce using rule 146 (alpha_upper -> A .)
    OTHER           reduce using rule 146 (alpha_upper -> A .)
    [               reduce using rule 146 (alpha_upper -> A .)
    .               reduce using rule 146 (alpha_upper -> A .)
    ,               reduce using rule 146 (alpha_upper -> A .)
    :               reduce using rule 146 (alpha_upper -> A .)
    ;               reduce using rule 146 (alpha_upper -> A .)
    $               reduce using rule 146 (alpha_upper -> A .)
    `               reduce using rule 146 (alpha_upper -> A .)
    a               reduce using rule 146 (alpha_upper -> A .)
    b               reduce using rule 146 (alpha_upper -> A .)
    c               reduce using rule 146 (alpha_upper -> A .)
    d               reduce using rule 146 (alpha_upper -> A .)
    e               reduce using rule 146 (alpha_upper -> A .)
    f               reduce using rule 146 (alpha_upper -> A .)
    g               reduce using rule 146 (alpha_upper -> A .)
    h               reduce using rule 146 (alpha_upper -> A .)
    i               reduce using rule 146 (alpha_upper -> A .)
    j               reduce using rule 146 (alpha_upper -> A .)
    k               reduce using rule 146 (alpha_upper -> A .)
    l               reduce using rule 146 (alpha_upper -> A .)
    m               reduce using rule 146 (alpha_upper -> A .)
    n               reduce using rule 146 (alpha_upper -> A .)
    o               reduce using rule 146 (alpha_upper -> A .)
    p               reduce using rule 146 (alpha_upper -> A .)
    q               reduce using rule 146 (alpha_upper -> A .)
    r               reduce using rule 146 (alpha_upper -> A .)
    s               reduce using rule 146 (alpha_upper -> A .)
    t               reduce using rule 146 (alpha_upper -> A .)
    u               reduce using rule 146 (alpha_upper -> A .)
    v               reduce using rule 146 (alpha_upper -> A .)
    w               reduce using rule 146 (alpha_upper -> A .)
    x               reduce using rule 146 (alpha_upper -> A .)
    y               reduce using rule 146 (alpha_upper -> A .)
    z               reduce using rule 146 (alpha_upper -> A .)
    A               reduce using rule 146 (alpha_upper -> A .)
    B               reduce using rule 146 (alpha_upper -> A .)
    C               reduce using rule 146 (alpha_upper -> A .)
    D               reduce using rule 146 (alpha_upper -> A .)
    E               reduce using rule 146 (alpha_upper -> A .)
    F               reduce using rule 146 (alpha_upper -> A .)
    G               reduce using rule 146 (alpha_upper -> A .)
    H               reduce using rule 146 (alpha_upper -> A .)
    I               reduce using rule 146 (alpha_upper -> A .)
    J               reduce using rule 146 (alpha_upper -> A .)
    K               reduce using rule 146 (alpha_upper -> A .)
    L               reduce using rule 146 (alpha_upper -> A .)
    M               reduce using rule 146 (alpha_upper -> A .)
    N               reduce using rule 146 (alpha_upper -> A .)
    O               reduce using rule 146 (alpha_upper -> A .)
    P               reduce using rule 146 (alpha_upper -> A .)
    Q               reduce using rule 146 (alpha_upper -> A .)
    R               reduce using rule 146 (alpha_upper -> A .)
    S               reduce using rule 146 (alpha_upper -> A .)
    T               reduce using rule 146 (alpha_upper -> A .)
    U               reduce using rule 146 (alpha_upper -> A .)
    V               reduce using rule 146 (alpha_upper -> A .)
    W               reduce using rule 146 (alpha_upper -> A .)
    X               reduce using rule 146 (alpha_upper -> A .)
    Y               reduce using rule 146 (alpha_upper -> A .)
    Z               reduce using rule 146 (alpha_upper -> A .)
    |               reduce using rule 146 (alpha_upper -> A .)
    $end            reduce using rule 146 (alpha_upper -> A .)
    )               reduce using rule 146 (alpha_upper -> A .)
    -               reduce using rule 146 (alpha_upper -> A .)
    !               reduce using rule 146 (alpha_upper -> A .)
    "               reduce using rule 146 (alpha_upper -> A .)
    &               reduce using rule 146 (alpha_upper -> A .)
    '               reduce using rule 146 (alpha_upper -> A .)
    =               reduce using rule 146 (alpha_upper -> A .)
    @               reduce using rule 146 (alpha_upper -> A .)
    _               reduce using rule 146 (alpha_upper -> A .)
    }               reduce using rule 146 (alpha_upper -> A .)
    ~               reduce using rule 146 (alpha_upper -> A .)
    ]               reduce using rule 146 (alpha_upper -> A .)


state 57

    (155) alpha_upper -> J .

    *               reduce using rule 155 (alpha_upper -> J .)
    +               reduce using rule 155 (alpha_upper -> J .)
    ?               reduce using rule 155 (alpha_upper -> J .)
    {               reduce using rule 155 (alpha_upper -> J .)
    (               reduce using rule 155 (alpha_upper -> J .)
    ^               reduce using rule 155 (alpha_upper -> J .)
    >               reduce using rule 155 (alpha_upper -> J .)
    <               reduce using rule 155 (alpha_upper -> J .)
    /               reduce using rule 155 (alpha_upper -> J .)
    \               reduce using rule 155 (alpha_upper -> J .)
    #               reduce using rule 155 (alpha_upper -> J .)
    %               reduce using rule 155 (alpha_upper -> J .)
    ESCAPED         reduce using rule 155 (alpha_upper -> J .)
    DIGIT           reduce using rule 155 (alpha_upper -> J .)
    OTHER           reduce using rule 155 (alpha_upper -> J .)
    [               reduce using rule 155 (alpha_upper -> J .)
    .               reduce using rule 155 (alpha_upper -> J .)
    ,               reduce using rule 155 (alpha_upper -> J .)
    :               reduce using rule 155 (alpha_upper -> J .)
    ;               reduce using rule 155 (alpha_upper -> J .)
    $               reduce using rule 155 (alpha_upper -> J .)
    `               reduce using rule 155 (alpha_upper -> J .)
    a               reduce using rule 155 (alpha_upper -> J .)
    b               reduce using rule 155 (alpha_upper -> J .)
    c               reduce using rule 155 (alpha_upper -> J .)
    d               reduce using rule 155 (alpha_upper -> J .)
    e               reduce using rule 155 (alpha_upper -> J .)
    f               reduce using rule 155 (alpha_upper -> J .)
    g               reduce using rule 155 (alpha_upper -> J .)
    h               reduce using rule 155 (alpha_upper -> J .)
    i               reduce using rule 155 (alpha_upper -> J .)
    j               reduce using rule 155 (alpha_upper -> J .)
    k               reduce using rule 155 (alpha_upper -> J .)
    l               reduce using rule 155 (alpha_upper -> J .)
    m               reduce using rule 155 (alpha_upper -> J .)
    n               reduce using rule 155 (alpha_upper -> J .)
    o               reduce using rule 155 (alpha_upper -> J .)
    p               reduce using rule 155 (alpha_upper -> J .)
    q               reduce using rule 155 (alpha_upper -> J .)
    r               reduce using rule 155 (alpha_upper -> J .)
    s               reduce using rule 155 (alpha_upper -> J .)
    t               reduce using rule 155 (alpha_upper -> J .)
    u               reduce using rule 155 (alpha_upper -> J .)
    v               reduce using rule 155 (alpha_upper -> J .)
    w               reduce using rule 155 (alpha_upper -> J .)
    x               reduce using rule 155 (alpha_upper -> J .)
    y               reduce using rule 155 (alpha_upper -> J .)
    z               reduce using rule 155 (alpha_upper -> J .)
    A               reduce using rule 155 (alpha_upper -> J .)
    B               reduce using rule 155 (alpha_upper -> J .)
    C               reduce using rule 155 (alpha_upper -> J .)
    D               reduce using rule 155 (alpha_upper -> J .)
    E               reduce using rule 155 (alpha_upper -> J .)
    F               reduce using rule 155 (alpha_upper -> J .)
    G               reduce using rule 155 (alpha_upper -> J .)
    H               reduce using rule 155 (alpha_upper -> J .)
    I               reduce using rule 155 (alpha_upper -> J .)
    J               reduce using rule 155 (alpha_upper -> J .)
    K               reduce using rule 155 (alpha_upper -> J .)
    L               reduce using rule 155 (alpha_upper -> J .)
    M               reduce using rule 155 (alpha_upper -> J .)
    N               reduce using rule 155 (alpha_upper -> J .)
    O               reduce using rule 155 (alpha_upper -> J .)
    P               reduce using rule 155 (alpha_upper -> J .)
    Q               reduce using rule 155 (alpha_upper -> J .)
    R               reduce using rule 155 (alpha_upper -> J .)
    S               reduce using rule 155 (alpha_upper -> J .)
    T               reduce using rule 155 (alpha_upper -> J .)
    U               reduce using rule 155 (alpha_upper -> J .)
    V               reduce using rule 155 (alpha_upper -> J .)
    W               reduce using rule 155 (alpha_upper -> J .)
    X               reduce using rule 155 (alpha_upper -> J .)
    Y               reduce using rule 155 (alpha_upper -> J .)
    Z               reduce using rule 155 (alpha_upper -> J .)
    |               reduce using rule 155 (alpha_upper -> J .)
    $end            reduce using rule 155 (alpha_upper -> J .)
    )               reduce using rule 155 (alpha_upper -> J .)
    -               reduce using rule 155 (alpha_upper -> J .)
    !               reduce using rule 155 (alpha_upper -> J .)
    "               reduce using rule 155 (alpha_upper -> J .)
    &               reduce using rule 155 (alpha_upper -> J .)
    '               reduce using rule 155 (alpha_upper -> J .)
    =               reduce using rule 155 (alpha_upper -> J .)
    @               reduce using rule 155 (alpha_upper -> J .)
    _               reduce using rule 155 (alpha_upper -> J .)
    }               reduce using rule 155 (alpha_upper -> J .)
    ~               reduce using rule 155 (alpha_upper -> J .)
    ]               reduce using rule 155 (alpha_upper -> J .)


state 58

    (39) nodispmatch -> ; .

    *               reduce using rule 39 (nodispmatch -> ; .)
    +               reduce using rule 39 (nodispmatch -> ; .)
    ?               reduce using rule 39 (nodispmatch -> ; .)
    {               reduce using rule 39 (nodispmatch -> ; .)
    (               reduce using rule 39 (nodispmatch -> ; .)
    ^               reduce using rule 39 (nodispmatch -> ; .)
    >               reduce using rule 39 (nodispmatch -> ; .)
    <               reduce using rule 39 (nodispmatch -> ; .)
    /               reduce using rule 39 (nodispmatch -> ; .)
    \               reduce using rule 39 (nodispmatch -> ; .)
    #               reduce using rule 39 (nodispmatch -> ; .)
    %               reduce using rule 39 (nodispmatch -> ; .)
    ESCAPED         reduce using rule 39 (nodispmatch -> ; .)
    DIGIT           reduce using rule 39 (nodispmatch -> ; .)
    OTHER           reduce using rule 39 (nodispmatch -> ; .)
    [               reduce using rule 39 (nodispmatch -> ; .)
    .               reduce using rule 39 (nodispmatch -> ; .)
    ,               reduce using rule 39 (nodispmatch -> ; .)
    :               reduce using rule 39 (nodispmatch -> ; .)
    ;               reduce using rule 39 (nodispmatch -> ; .)
    $               reduce using rule 39 (nodispmatch -> ; .)
    `               reduce using rule 39 (nodispmatch -> ; .)
    a               reduce using rule 39 (nodispmatch -> ; .)
    b               reduce using rule 39 (nodispmatch -> ; .)
    c               reduce using rule 39 (nodispmatch -> ; .)
    d               reduce using rule 39 (nodispmatch -> ; .)
    e               reduce using rule 39 (nodispmatch -> ; .)
    f               reduce using rule 39 (nodispmatch -> ; .)
    g               reduce using rule 39 (nodispmatch -> ; .)
    h               reduce using rule 39 (nodispmatch -> ; .)
    i               reduce using rule 39 (nodispmatch -> ; .)
    j               reduce using rule 39 (nodispmatch -> ; .)
    k               reduce using rule 39 (nodispmatch -> ; .)
    l               reduce using rule 39 (nodispmatch -> ; .)
    m               reduce using rule 39 (nodispmatch -> ; .)
    n               reduce using rule 39 (nodispmatch -> ; .)
    o               reduce using rule 39 (nodispmatch -> ; .)
    p               reduce using rule 39 (nodispmatch -> ; .)
    q               reduce using rule 39 (nodispmatch -> ; .)
    r               reduce using rule 39 (nodispmatch -> ; .)
    s               reduce using rule 39 (nodispmatch -> ; .)
    t               reduce using rule 39 (nodispmatch -> ; .)
    u               reduce using rule 39 (nodispmatch -> ; .)
    v               reduce using rule 39 (nodispmatch -> ; .)
    w               reduce using rule 39 (nodispmatch -> ; .)
    x               reduce using rule 39 (nodispmatch -> ; .)
    y               reduce using rule 39 (nodispmatch -> ; .)
    z               reduce using rule 39 (nodispmatch -> ; .)
    A               reduce using rule 39 (nodispmatch -> ; .)
    B               reduce using rule 39 (nodispmatch -> ; .)
    C               reduce using rule 39 (nodispmatch -> ; .)
    D               reduce using rule 39 (nodispmatch -> ; .)
    E               reduce using rule 39 (nodispmatch -> ; .)
    F               reduce using rule 39 (nodispmatch -> ; .)
    G               reduce using rule 39 (nodispmatch -> ; .)
    H               reduce using rule 39 (nodispmatch -> ; .)
    I               reduce using rule 39 (nodispmatch -> ; .)
    J               reduce using rule 39 (nodispmatch -> ; .)
    K               reduce using rule 39 (nodispmatch -> ; .)
    L               reduce using rule 39 (nodispmatch -> ; .)
    M               reduce using rule 39 (nodispmatch -> ; .)
    N               reduce using rule 39 (nodispmatch -> ; .)
    O               reduce using rule 39 (nodispmatch -> ; .)
    P               reduce using rule 39 (nodispmatch -> ; .)
    Q               reduce using rule 39 (nodispmatch -> ; .)
    R               reduce using rule 39 (nodispmatch -> ; .)
    S               reduce using rule 39 (nodispmatch -> ; .)
    T               reduce using rule 39 (nodispmatch -> ; .)
    U               reduce using rule 39 (nodispmatch -> ; .)
    V               reduce using rule 39 (nodispmatch -> ; .)
    W               reduce using rule 39 (nodispmatch -> ; .)
    X               reduce using rule 39 (nodispmatch -> ; .)
    Y               reduce using rule 39 (nodispmatch -> ; .)
    Z               reduce using rule 39 (nodispmatch -> ; .)
    |               reduce using rule 39 (nodispmatch -> ; .)
    )               reduce using rule 39 (nodispmatch -> ; .)
    $end            reduce using rule 39 (nodispmatch -> ; .)


state 59

    (162) alpha_upper -> Q .

    *               reduce using rule 162 (alpha_upper -> Q .)
    +               reduce using rule 162 (alpha_upper -> Q .)
    ?               reduce using rule 162 (alpha_upper -> Q .)
    {               reduce using rule 162 (alpha_upper -> Q .)
    (               reduce using rule 162 (alpha_upper -> Q .)
    ^               reduce using rule 162 (alpha_upper -> Q .)
    >               reduce using rule 162 (alpha_upper -> Q .)
    <               reduce using rule 162 (alpha_upper -> Q .)
    /               reduce using rule 162 (alpha_upper -> Q .)
    \               reduce using rule 162 (alpha_upper -> Q .)
    #               reduce using rule 162 (alpha_upper -> Q .)
    %               reduce using rule 162 (alpha_upper -> Q .)
    ESCAPED         reduce using rule 162 (alpha_upper -> Q .)
    DIGIT           reduce using rule 162 (alpha_upper -> Q .)
    OTHER           reduce using rule 162 (alpha_upper -> Q .)
    [               reduce using rule 162 (alpha_upper -> Q .)
    .               reduce using rule 162 (alpha_upper -> Q .)
    ,               reduce using rule 162 (alpha_upper -> Q .)
    :               reduce using rule 162 (alpha_upper -> Q .)
    ;               reduce using rule 162 (alpha_upper -> Q .)
    $               reduce using rule 162 (alpha_upper -> Q .)
    `               reduce using rule 162 (alpha_upper -> Q .)
    a               reduce using rule 162 (alpha_upper -> Q .)
    b               reduce using rule 162 (alpha_upper -> Q .)
    c               reduce using rule 162 (alpha_upper -> Q .)
    d               reduce using rule 162 (alpha_upper -> Q .)
    e               reduce using rule 162 (alpha_upper -> Q .)
    f               reduce using rule 162 (alpha_upper -> Q .)
    g               reduce using rule 162 (alpha_upper -> Q .)
    h               reduce using rule 162 (alpha_upper -> Q .)
    i               reduce using rule 162 (alpha_upper -> Q .)
    j               reduce using rule 162 (alpha_upper -> Q .)
    k               reduce using rule 162 (alpha_upper -> Q .)
    l               reduce using rule 162 (alpha_upper -> Q .)
    m               reduce using rule 162 (alpha_upper -> Q .)
    n               reduce using rule 162 (alpha_upper -> Q .)
    o               reduce using rule 162 (alpha_upper -> Q .)
    p               reduce using rule 162 (alpha_upper -> Q .)
    q               reduce using rule 162 (alpha_upper -> Q .)
    r               reduce using rule 162 (alpha_upper -> Q .)
    s               reduce using rule 162 (alpha_upper -> Q .)
    t               reduce using rule 162 (alpha_upper -> Q .)
    u               reduce using rule 162 (alpha_upper -> Q .)
    v               reduce using rule 162 (alpha_upper -> Q .)
    w               reduce using rule 162 (alpha_upper -> Q .)
    x               reduce using rule 162 (alpha_upper -> Q .)
    y               reduce using rule 162 (alpha_upper -> Q .)
    z               reduce using rule 162 (alpha_upper -> Q .)
    A               reduce using rule 162 (alpha_upper -> Q .)
    B               reduce using rule 162 (alpha_upper -> Q .)
    C               reduce using rule 162 (alpha_upper -> Q .)
    D               reduce using rule 162 (alpha_upper -> Q .)
    E               reduce using rule 162 (alpha_upper -> Q .)
    F               reduce using rule 162 (alpha_upper -> Q .)
    G               reduce using rule 162 (alpha_upper -> Q .)
    H               reduce using rule 162 (alpha_upper -> Q .)
    I               reduce using rule 162 (alpha_upper -> Q .)
    J               reduce using rule 162 (alpha_upper -> Q .)
    K               reduce using rule 162 (alpha_upper -> Q .)
    L               reduce using rule 162 (alpha_upper -> Q .)
    M               reduce using rule 162 (alpha_upper -> Q .)
    N               reduce using rule 162 (alpha_upper -> Q .)
    O               reduce using rule 162 (alpha_upper -> Q .)
    P               reduce using rule 162 (alpha_upper -> Q .)
    Q               reduce using rule 162 (alpha_upper -> Q .)
    R               reduce using rule 162 (alpha_upper -> Q .)
    S               reduce using rule 162 (alpha_upper -> Q .)
    T               reduce using rule 162 (alpha_upper -> Q .)
    U               reduce using rule 162 (alpha_upper -> Q .)
    V               reduce using rule 162 (alpha_upper -> Q .)
    W               reduce using rule 162 (alpha_upper -> Q .)
    X               reduce using rule 162 (alpha_upper -> Q .)
    Y               reduce using rule 162 (alpha_upper -> Q .)
    Z               reduce using rule 162 (alpha_upper -> Q .)
    |               reduce using rule 162 (alpha_upper -> Q .)
    $end            reduce using rule 162 (alpha_upper -> Q .)
    )               reduce using rule 162 (alpha_upper -> Q .)
    -               reduce using rule 162 (alpha_upper -> Q .)
    !               reduce using rule 162 (alpha_upper -> Q .)
    "               reduce using rule 162 (alpha_upper -> Q .)
    &               reduce using rule 162 (alpha_upper -> Q .)
    '               reduce using rule 162 (alpha_upper -> Q .)
    =               reduce using rule 162 (alpha_upper -> Q .)
    @               reduce using rule 162 (alpha_upper -> Q .)
    _               reduce using rule 162 (alpha_upper -> Q .)
    }               reduce using rule 162 (alpha_upper -> Q .)
    ~               reduce using rule 162 (alpha_upper -> Q .)
    ]               reduce using rule 162 (alpha_upper -> Q .)


state 60

    (138) alpha_lower -> s .

    -               reduce using rule 138 (alpha_lower -> s .)
    !               reduce using rule 138 (alpha_lower -> s .)
    "               reduce using rule 138 (alpha_lower -> s .)
    #               reduce using rule 138 (alpha_lower -> s .)
    $               reduce using rule 138 (alpha_lower -> s .)
    %               reduce using rule 138 (alpha_lower -> s .)
    &               reduce using rule 138 (alpha_lower -> s .)
    '               reduce using rule 138 (alpha_lower -> s .)
    (               reduce using rule 138 (alpha_lower -> s .)
    )               reduce using rule 138 (alpha_lower -> s .)
    *               reduce using rule 138 (alpha_lower -> s .)
    +               reduce using rule 138 (alpha_lower -> s .)
    ,               reduce using rule 138 (alpha_lower -> s .)
    .               reduce using rule 138 (alpha_lower -> s .)
    /               reduce using rule 138 (alpha_lower -> s .)
    :               reduce using rule 138 (alpha_lower -> s .)
    ;               reduce using rule 138 (alpha_lower -> s .)
    <               reduce using rule 138 (alpha_lower -> s .)
    =               reduce using rule 138 (alpha_lower -> s .)
    >               reduce using rule 138 (alpha_lower -> s .)
    ?               reduce using rule 138 (alpha_lower -> s .)
    @               reduce using rule 138 (alpha_lower -> s .)
    [               reduce using rule 138 (alpha_lower -> s .)
    \               reduce using rule 138 (alpha_lower -> s .)
    _               reduce using rule 138 (alpha_lower -> s .)
    `               reduce using rule 138 (alpha_lower -> s .)
    {               reduce using rule 138 (alpha_lower -> s .)
    }               reduce using rule 138 (alpha_lower -> s .)
    ~               reduce using rule 138 (alpha_lower -> s .)
    ESCAPED         reduce using rule 138 (alpha_lower -> s .)
    DIGIT           reduce using rule 138 (alpha_lower -> s .)
    OTHER           reduce using rule 138 (alpha_lower -> s .)
    a               reduce using rule 138 (alpha_lower -> s .)
    b               reduce using rule 138 (alpha_lower -> s .)
    c               reduce using rule 138 (alpha_lower -> s .)
    d               reduce using rule 138 (alpha_lower -> s .)
    e               reduce using rule 138 (alpha_lower -> s .)
    f               reduce using rule 138 (alpha_lower -> s .)
    g               reduce using rule 138 (alpha_lower -> s .)
    h               reduce using rule 138 (alpha_lower -> s .)
    i               reduce using rule 138 (alpha_lower -> s .)
    j               reduce using rule 138 (alpha_lower -> s .)
    k               reduce using rule 138 (alpha_lower -> s .)
    l               reduce using rule 138 (alpha_lower -> s .)
    m               reduce using rule 138 (alpha_lower -> s .)
    n               reduce using rule 138 (alpha_lower -> s .)
    o               reduce using rule 138 (alpha_lower -> s .)
    p               reduce using rule 138 (alpha_lower -> s .)
    q               reduce using rule 138 (alpha_lower -> s .)
    r               reduce using rule 138 (alpha_lower -> s .)
    s               reduce using rule 138 (alpha_lower -> s .)
    t               reduce using rule 138 (alpha_lower -> s .)
    u               reduce using rule 138 (alpha_lower -> s .)
    v               reduce using rule 138 (alpha_lower -> s .)
    w               reduce using rule 138 (alpha_lower -> s .)
    x               reduce using rule 138 (alpha_lower -> s .)
    y               reduce using rule 138 (alpha_lower -> s .)
    z               reduce using rule 138 (alpha_lower -> s .)
    A               reduce using rule 138 (alpha_lower -> s .)
    B               reduce using rule 138 (alpha_lower -> s .)
    C               reduce using rule 138 (alpha_lower -> s .)
    D               reduce using rule 138 (alpha_lower -> s .)
    E               reduce using rule 138 (alpha_lower -> s .)
    F               reduce using rule 138 (alpha_lower -> s .)
    G               reduce using rule 138 (alpha_lower -> s .)
    H               reduce using rule 138 (alpha_lower -> s .)
    I               reduce using rule 138 (alpha_lower -> s .)
    J               reduce using rule 138 (alpha_lower -> s .)
    K               reduce using rule 138 (alpha_lower -> s .)
    L               reduce using rule 138 (alpha_lower -> s .)
    M               reduce using rule 138 (alpha_lower -> s .)
    N               reduce using rule 138 (alpha_lower -> s .)
    O               reduce using rule 138 (alpha_lower -> s .)
    P               reduce using rule 138 (alpha_lower -> s .)
    Q               reduce using rule 138 (alpha_lower -> s .)
    R               reduce using rule 138 (alpha_lower -> s .)
    S               reduce using rule 138 (alpha_lower -> s .)
    T               reduce using rule 138 (alpha_lower -> s .)
    U               reduce using rule 138 (alpha_lower -> s .)
    V               reduce using rule 138 (alpha_lower -> s .)
    W               reduce using rule 138 (alpha_lower -> s .)
    X               reduce using rule 138 (alpha_lower -> s .)
    Y               reduce using rule 138 (alpha_lower -> s .)
    Z               reduce using rule 138 (alpha_lower -> s .)
    ]               reduce using rule 138 (alpha_lower -> s .)
    ^               reduce using rule 138 (alpha_lower -> s .)
    |               reduce using rule 138 (alpha_lower -> s .)
    $end            reduce using rule 138 (alpha_lower -> s .)


state 61

    (124) alpha_lower -> e .

    -               reduce using rule 124 (alpha_lower -> e .)
    !               reduce using rule 124 (alpha_lower -> e .)
    "               reduce using rule 124 (alpha_lower -> e .)
    #               reduce using rule 124 (alpha_lower -> e .)
    $               reduce using rule 124 (alpha_lower -> e .)
    %               reduce using rule 124 (alpha_lower -> e .)
    &               reduce using rule 124 (alpha_lower -> e .)
    '               reduce using rule 124 (alpha_lower -> e .)
    (               reduce using rule 124 (alpha_lower -> e .)
    )               reduce using rule 124 (alpha_lower -> e .)
    *               reduce using rule 124 (alpha_lower -> e .)
    +               reduce using rule 124 (alpha_lower -> e .)
    ,               reduce using rule 124 (alpha_lower -> e .)
    .               reduce using rule 124 (alpha_lower -> e .)
    /               reduce using rule 124 (alpha_lower -> e .)
    :               reduce using rule 124 (alpha_lower -> e .)
    ;               reduce using rule 124 (alpha_lower -> e .)
    <               reduce using rule 124 (alpha_lower -> e .)
    =               reduce using rule 124 (alpha_lower -> e .)
    >               reduce using rule 124 (alpha_lower -> e .)
    ?               reduce using rule 124 (alpha_lower -> e .)
    @               reduce using rule 124 (alpha_lower -> e .)
    [               reduce using rule 124 (alpha_lower -> e .)
    \               reduce using rule 124 (alpha_lower -> e .)
    _               reduce using rule 124 (alpha_lower -> e .)
    `               reduce using rule 124 (alpha_lower -> e .)
    {               reduce using rule 124 (alpha_lower -> e .)
    }               reduce using rule 124 (alpha_lower -> e .)
    ~               reduce using rule 124 (alpha_lower -> e .)
    ESCAPED         reduce using rule 124 (alpha_lower -> e .)
    DIGIT           reduce using rule 124 (alpha_lower -> e .)
    OTHER           reduce using rule 124 (alpha_lower -> e .)
    a               reduce using rule 124 (alpha_lower -> e .)
    b               reduce using rule 124 (alpha_lower -> e .)
    c               reduce using rule 124 (alpha_lower -> e .)
    d               reduce using rule 124 (alpha_lower -> e .)
    e               reduce using rule 124 (alpha_lower -> e .)
    f               reduce using rule 124 (alpha_lower -> e .)
    g               reduce using rule 124 (alpha_lower -> e .)
    h               reduce using rule 124 (alpha_lower -> e .)
    i               reduce using rule 124 (alpha_lower -> e .)
    j               reduce using rule 124 (alpha_lower -> e .)
    k               reduce using rule 124 (alpha_lower -> e .)
    l               reduce using rule 124 (alpha_lower -> e .)
    m               reduce using rule 124 (alpha_lower -> e .)
    n               reduce using rule 124 (alpha_lower -> e .)
    o               reduce using rule 124 (alpha_lower -> e .)
    p               reduce using rule 124 (alpha_lower -> e .)
    q               reduce using rule 124 (alpha_lower -> e .)
    r               reduce using rule 124 (alpha_lower -> e .)
    s               reduce using rule 124 (alpha_lower -> e .)
    t               reduce using rule 124 (alpha_lower -> e .)
    u               reduce using rule 124 (alpha_lower -> e .)
    v               reduce using rule 124 (alpha_lower -> e .)
    w               reduce using rule 124 (alpha_lower -> e .)
    x               reduce using rule 124 (alpha_lower -> e .)
    y               reduce using rule 124 (alpha_lower -> e .)
    z               reduce using rule 124 (alpha_lower -> e .)
    A               reduce using rule 124 (alpha_lower -> e .)
    B               reduce using rule 124 (alpha_lower -> e .)
    C               reduce using rule 124 (alpha_lower -> e .)
    D               reduce using rule 124 (alpha_lower -> e .)
    E               reduce using rule 124 (alpha_lower -> e .)
    F               reduce using rule 124 (alpha_lower -> e .)
    G               reduce using rule 124 (alpha_lower -> e .)
    H               reduce using rule 124 (alpha_lower -> e .)
    I               reduce using rule 124 (alpha_lower -> e .)
    J               reduce using rule 124 (alpha_lower -> e .)
    K               reduce using rule 124 (alpha_lower -> e .)
    L               reduce using rule 124 (alpha_lower -> e .)
    M               reduce using rule 124 (alpha_lower -> e .)
    N               reduce using rule 124 (alpha_lower -> e .)
    O               reduce using rule 124 (alpha_lower -> e .)
    P               reduce using rule 124 (alpha_lower -> e .)
    Q               reduce using rule 124 (alpha_lower -> e .)
    R               reduce using rule 124 (alpha_lower -> e .)
    S               reduce using rule 124 (alpha_lower -> e .)
    T               reduce using rule 124 (alpha_lower -> e .)
    U               reduce using rule 124 (alpha_lower -> e .)
    V               reduce using rule 124 (alpha_lower -> e .)
    W               reduce using rule 124 (alpha_lower -> e .)
    X               reduce using rule 124 (alpha_lower -> e .)
    Y               reduce using rule 124 (alpha_lower -> e .)
    Z               reduce using rule 124 (alpha_lower -> e .)
    ]               reduce using rule 124 (alpha_lower -> e .)
    ^               reduce using rule 124 (alpha_lower -> e .)
    |               reduce using rule 124 (alpha_lower -> e .)
    $end            reduce using rule 124 (alpha_lower -> e .)


state 62

    (112) command -> # .

    *               reduce using rule 112 (command -> # .)
    +               reduce using rule 112 (command -> # .)
    ?               reduce using rule 112 (command -> # .)
    {               reduce using rule 112 (command -> # .)
    (               reduce using rule 112 (command -> # .)
    ^               reduce using rule 112 (command -> # .)
    >               reduce using rule 112 (command -> # .)
    <               reduce using rule 112 (command -> # .)
    /               reduce using rule 112 (command -> # .)
    \               reduce using rule 112 (command -> # .)
    #               reduce using rule 112 (command -> # .)
    %               reduce using rule 112 (command -> # .)
    ESCAPED         reduce using rule 112 (command -> # .)
    DIGIT           reduce using rule 112 (command -> # .)
    OTHER           reduce using rule 112 (command -> # .)
    [               reduce using rule 112 (command -> # .)
    .               reduce using rule 112 (command -> # .)
    ,               reduce using rule 112 (command -> # .)
    :               reduce using rule 112 (command -> # .)
    ;               reduce using rule 112 (command -> # .)
    $               reduce using rule 112 (command -> # .)
    `               reduce using rule 112 (command -> # .)
    a               reduce using rule 112 (command -> # .)
    b               reduce using rule 112 (command -> # .)
    c               reduce using rule 112 (command -> # .)
    d               reduce using rule 112 (command -> # .)
    e               reduce using rule 112 (command -> # .)
    f               reduce using rule 112 (command -> # .)
    g               reduce using rule 112 (command -> # .)
    h               reduce using rule 112 (command -> # .)
    i               reduce using rule 112 (command -> # .)
    j               reduce using rule 112 (command -> # .)
    k               reduce using rule 112 (command -> # .)
    l               reduce using rule 112 (command -> # .)
    m               reduce using rule 112 (command -> # .)
    n               reduce using rule 112 (command -> # .)
    o               reduce using rule 112 (command -> # .)
    p               reduce using rule 112 (command -> # .)
    q               reduce using rule 112 (command -> # .)
    r               reduce using rule 112 (command -> # .)
    s               reduce using rule 112 (command -> # .)
    t               reduce using rule 112 (command -> # .)
    u               reduce using rule 112 (command -> # .)
    v               reduce using rule 112 (command -> # .)
    w               reduce using rule 112 (command -> # .)
    x               reduce using rule 112 (command -> # .)
    y               reduce using rule 112 (command -> # .)
    z               reduce using rule 112 (command -> # .)
    A               reduce using rule 112 (command -> # .)
    B               reduce using rule 112 (command -> # .)
    C               reduce using rule 112 (command -> # .)
    D               reduce using rule 112 (command -> # .)
    E               reduce using rule 112 (command -> # .)
    F               reduce using rule 112 (command -> # .)
    G               reduce using rule 112 (command -> # .)
    H               reduce using rule 112 (command -> # .)
    I               reduce using rule 112 (command -> # .)
    J               reduce using rule 112 (command -> # .)
    K               reduce using rule 112 (command -> # .)
    L               reduce using rule 112 (command -> # .)
    M               reduce using rule 112 (command -> # .)
    N               reduce using rule 112 (command -> # .)
    O               reduce using rule 112 (command -> # .)
    P               reduce using rule 112 (command -> # .)
    Q               reduce using rule 112 (command -> # .)
    R               reduce using rule 112 (command -> # .)
    S               reduce using rule 112 (command -> # .)
    T               reduce using rule 112 (command -> # .)
    U               reduce using rule 112 (command -> # .)
    V               reduce using rule 112 (command -> # .)
    W               reduce using rule 112 (command -> # .)
    X               reduce using rule 112 (command -> # .)
    Y               reduce using rule 112 (command -> # .)
    Z               reduce using rule 112 (command -> # .)
    |               reduce using rule 112 (command -> # .)
    $end            reduce using rule 112 (command -> # .)
    )               reduce using rule 112 (command -> # .)


state 63

    (134) alpha_lower -> o .

    -               reduce using rule 134 (alpha_lower -> o .)
    !               reduce using rule 134 (alpha_lower -> o .)
    "               reduce using rule 134 (alpha_lower -> o .)
    #               reduce using rule 134 (alpha_lower -> o .)
    $               reduce using rule 134 (alpha_lower -> o .)
    %               reduce using rule 134 (alpha_lower -> o .)
    &               reduce using rule 134 (alpha_lower -> o .)
    '               reduce using rule 134 (alpha_lower -> o .)
    (               reduce using rule 134 (alpha_lower -> o .)
    )               reduce using rule 134 (alpha_lower -> o .)
    *               reduce using rule 134 (alpha_lower -> o .)
    +               reduce using rule 134 (alpha_lower -> o .)
    ,               reduce using rule 134 (alpha_lower -> o .)
    .               reduce using rule 134 (alpha_lower -> o .)
    /               reduce using rule 134 (alpha_lower -> o .)
    :               reduce using rule 134 (alpha_lower -> o .)
    ;               reduce using rule 134 (alpha_lower -> o .)
    <               reduce using rule 134 (alpha_lower -> o .)
    =               reduce using rule 134 (alpha_lower -> o .)
    >               reduce using rule 134 (alpha_lower -> o .)
    ?               reduce using rule 134 (alpha_lower -> o .)
    @               reduce using rule 134 (alpha_lower -> o .)
    [               reduce using rule 134 (alpha_lower -> o .)
    \               reduce using rule 134 (alpha_lower -> o .)
    _               reduce using rule 134 (alpha_lower -> o .)
    `               reduce using rule 134 (alpha_lower -> o .)
    {               reduce using rule 134 (alpha_lower -> o .)
    }               reduce using rule 134 (alpha_lower -> o .)
    ~               reduce using rule 134 (alpha_lower -> o .)
    ESCAPED         reduce using rule 134 (alpha_lower -> o .)
    DIGIT           reduce using rule 134 (alpha_lower -> o .)
    OTHER           reduce using rule 134 (alpha_lower -> o .)
    a               reduce using rule 134 (alpha_lower -> o .)
    b               reduce using rule 134 (alpha_lower -> o .)
    c               reduce using rule 134 (alpha_lower -> o .)
    d               reduce using rule 134 (alpha_lower -> o .)
    e               reduce using rule 134 (alpha_lower -> o .)
    f               reduce using rule 134 (alpha_lower -> o .)
    g               reduce using rule 134 (alpha_lower -> o .)
    h               reduce using rule 134 (alpha_lower -> o .)
    i               reduce using rule 134 (alpha_lower -> o .)
    j               reduce using rule 134 (alpha_lower -> o .)
    k               reduce using rule 134 (alpha_lower -> o .)
    l               reduce using rule 134 (alpha_lower -> o .)
    m               reduce using rule 134 (alpha_lower -> o .)
    n               reduce using rule 134 (alpha_lower -> o .)
    o               reduce using rule 134 (alpha_lower -> o .)
    p               reduce using rule 134 (alpha_lower -> o .)
    q               reduce using rule 134 (alpha_lower -> o .)
    r               reduce using rule 134 (alpha_lower -> o .)
    s               reduce using rule 134 (alpha_lower -> o .)
    t               reduce using rule 134 (alpha_lower -> o .)
    u               reduce using rule 134 (alpha_lower -> o .)
    v               reduce using rule 134 (alpha_lower -> o .)
    w               reduce using rule 134 (alpha_lower -> o .)
    x               reduce using rule 134 (alpha_lower -> o .)
    y               reduce using rule 134 (alpha_lower -> o .)
    z               reduce using rule 134 (alpha_lower -> o .)
    A               reduce using rule 134 (alpha_lower -> o .)
    B               reduce using rule 134 (alpha_lower -> o .)
    C               reduce using rule 134 (alpha_lower -> o .)
    D               reduce using rule 134 (alpha_lower -> o .)
    E               reduce using rule 134 (alpha_lower -> o .)
    F               reduce using rule 134 (alpha_lower -> o .)
    G               reduce using rule 134 (alpha_lower -> o .)
    H               reduce using rule 134 (alpha_lower -> o .)
    I               reduce using rule 134 (alpha_lower -> o .)
    J               reduce using rule 134 (alpha_lower -> o .)
    K               reduce using rule 134 (alpha_lower -> o .)
    L               reduce using rule 134 (alpha_lower -> o .)
    M               reduce using rule 134 (alpha_lower -> o .)
    N               reduce using rule 134 (alpha_lower -> o .)
    O               reduce using rule 134 (alpha_lower -> o .)
    P               reduce using rule 134 (alpha_lower -> o .)
    Q               reduce using rule 134 (alpha_lower -> o .)
    R               reduce using rule 134 (alpha_lower -> o .)
    S               reduce using rule 134 (alpha_lower -> o .)
    T               reduce using rule 134 (alpha_lower -> o .)
    U               reduce using rule 134 (alpha_lower -> o .)
    V               reduce using rule 134 (alpha_lower -> o .)
    W               reduce using rule 134 (alpha_lower -> o .)
    X               reduce using rule 134 (alpha_lower -> o .)
    Y               reduce using rule 134 (alpha_lower -> o .)
    Z               reduce using rule 134 (alpha_lower -> o .)
    ]               reduce using rule 134 (alpha_lower -> o .)
    ^               reduce using rule 134 (alpha_lower -> o .)
    |               reduce using rule 134 (alpha_lower -> o .)
    $end            reduce using rule 134 (alpha_lower -> o .)


state 64

    (24) elementary -> nodisplay .

    *               reduce using rule 24 (elementary -> nodisplay .)
    +               reduce using rule 24 (elementary -> nodisplay .)
    ?               reduce using rule 24 (elementary -> nodisplay .)
    {               reduce using rule 24 (elementary -> nodisplay .)
    (               reduce using rule 24 (elementary -> nodisplay .)
    ^               reduce using rule 24 (elementary -> nodisplay .)
    >               reduce using rule 24 (elementary -> nodisplay .)
    <               reduce using rule 24 (elementary -> nodisplay .)
    /               reduce using rule 24 (elementary -> nodisplay .)
    \               reduce using rule 24 (elementary -> nodisplay .)
    #               reduce using rule 24 (elementary -> nodisplay .)
    %               reduce using rule 24 (elementary -> nodisplay .)
    ESCAPED         reduce using rule 24 (elementary -> nodisplay .)
    DIGIT           reduce using rule 24 (elementary -> nodisplay .)
    OTHER           reduce using rule 24 (elementary -> nodisplay .)
    [               reduce using rule 24 (elementary -> nodisplay .)
    .               reduce using rule 24 (elementary -> nodisplay .)
    ,               reduce using rule 24 (elementary -> nodisplay .)
    :               reduce using rule 24 (elementary -> nodisplay .)
    ;               reduce using rule 24 (elementary -> nodisplay .)
    $               reduce using rule 24 (elementary -> nodisplay .)
    `               reduce using rule 24 (elementary -> nodisplay .)
    a               reduce using rule 24 (elementary -> nodisplay .)
    b               reduce using rule 24 (elementary -> nodisplay .)
    c               reduce using rule 24 (elementary -> nodisplay .)
    d               reduce using rule 24 (elementary -> nodisplay .)
    e               reduce using rule 24 (elementary -> nodisplay .)
    f               reduce using rule 24 (elementary -> nodisplay .)
    g               reduce using rule 24 (elementary -> nodisplay .)
    h               reduce using rule 24 (elementary -> nodisplay .)
    i               reduce using rule 24 (elementary -> nodisplay .)
    j               reduce using rule 24 (elementary -> nodisplay .)
    k               reduce using rule 24 (elementary -> nodisplay .)
    l               reduce using rule 24 (elementary -> nodisplay .)
    m               reduce using rule 24 (elementary -> nodisplay .)
    n               reduce using rule 24 (elementary -> nodisplay .)
    o               reduce using rule 24 (elementary -> nodisplay .)
    p               reduce using rule 24 (elementary -> nodisplay .)
    q               reduce using rule 24 (elementary -> nodisplay .)
    r               reduce using rule 24 (elementary -> nodisplay .)
    s               reduce using rule 24 (elementary -> nodisplay .)
    t               reduce using rule 24 (elementary -> nodisplay .)
    u               reduce using rule 24 (elementary -> nodisplay .)
    v               reduce using rule 24 (elementary -> nodisplay .)
    w               reduce using rule 24 (elementary -> nodisplay .)
    x               reduce using rule 24 (elementary -> nodisplay .)
    y               reduce using rule 24 (elementary -> nodisplay .)
    z               reduce using rule 24 (elementary -> nodisplay .)
    A               reduce using rule 24 (elementary -> nodisplay .)
    B               reduce using rule 24 (elementary -> nodisplay .)
    C               reduce using rule 24 (elementary -> nodisplay .)
    D               reduce using rule 24 (elementary -> nodisplay .)
    E               reduce using rule 24 (elementary -> nodisplay .)
    F               reduce using rule 24 (elementary -> nodisplay .)
    G               reduce using rule 24 (elementary -> nodisplay .)
    H               reduce using rule 24 (elementary -> nodisplay .)
    I               reduce using rule 24 (elementary -> nodisplay .)
    J               reduce using rule 24 (elementary -> nodisplay .)
    K               reduce using rule 24 (elementary -> nodisplay .)
    L               reduce using rule 24 (elementary -> nodisplay .)
    M               reduce using rule 24 (elementary -> nodisplay .)
    N               reduce using rule 24 (elementary -> nodisplay .)
    O               reduce using rule 24 (elementary -> nodisplay .)
    P               reduce using rule 24 (elementary -> nodisplay .)
    Q               reduce using rule 24 (elementary -> nodisplay .)
    R               reduce using rule 24 (elementary -> nodisplay .)
    S               reduce using rule 24 (elementary -> nodisplay .)
    T               reduce using rule 24 (elementary -> nodisplay .)
    U               reduce using rule 24 (elementary -> nodisplay .)
    V               reduce using rule 24 (elementary -> nodisplay .)
    W               reduce using rule 24 (elementary -> nodisplay .)
    X               reduce using rule 24 (elementary -> nodisplay .)
    Y               reduce using rule 24 (elementary -> nodisplay .)
    Z               reduce using rule 24 (elementary -> nodisplay .)
    |               reduce using rule 24 (elementary -> nodisplay .)
    )               reduce using rule 24 (elementary -> nodisplay .)
    $end            reduce using rule 24 (elementary -> nodisplay .)


state 65

    (136) alpha_lower -> q .

    -               reduce using rule 136 (alpha_lower -> q .)
    !               reduce using rule 136 (alpha_lower -> q .)
    "               reduce using rule 136 (alpha_lower -> q .)
    #               reduce using rule 136 (alpha_lower -> q .)
    $               reduce using rule 136 (alpha_lower -> q .)
    %               reduce using rule 136 (alpha_lower -> q .)
    &               reduce using rule 136 (alpha_lower -> q .)
    '               reduce using rule 136 (alpha_lower -> q .)
    (               reduce using rule 136 (alpha_lower -> q .)
    )               reduce using rule 136 (alpha_lower -> q .)
    *               reduce using rule 136 (alpha_lower -> q .)
    +               reduce using rule 136 (alpha_lower -> q .)
    ,               reduce using rule 136 (alpha_lower -> q .)
    .               reduce using rule 136 (alpha_lower -> q .)
    /               reduce using rule 136 (alpha_lower -> q .)
    :               reduce using rule 136 (alpha_lower -> q .)
    ;               reduce using rule 136 (alpha_lower -> q .)
    <               reduce using rule 136 (alpha_lower -> q .)
    =               reduce using rule 136 (alpha_lower -> q .)
    >               reduce using rule 136 (alpha_lower -> q .)
    ?               reduce using rule 136 (alpha_lower -> q .)
    @               reduce using rule 136 (alpha_lower -> q .)
    [               reduce using rule 136 (alpha_lower -> q .)
    \               reduce using rule 136 (alpha_lower -> q .)
    _               reduce using rule 136 (alpha_lower -> q .)
    `               reduce using rule 136 (alpha_lower -> q .)
    {               reduce using rule 136 (alpha_lower -> q .)
    }               reduce using rule 136 (alpha_lower -> q .)
    ~               reduce using rule 136 (alpha_lower -> q .)
    ESCAPED         reduce using rule 136 (alpha_lower -> q .)
    DIGIT           reduce using rule 136 (alpha_lower -> q .)
    OTHER           reduce using rule 136 (alpha_lower -> q .)
    a               reduce using rule 136 (alpha_lower -> q .)
    b               reduce using rule 136 (alpha_lower -> q .)
    c               reduce using rule 136 (alpha_lower -> q .)
    d               reduce using rule 136 (alpha_lower -> q .)
    e               reduce using rule 136 (alpha_lower -> q .)
    f               reduce using rule 136 (alpha_lower -> q .)
    g               reduce using rule 136 (alpha_lower -> q .)
    h               reduce using rule 136 (alpha_lower -> q .)
    i               reduce using rule 136 (alpha_lower -> q .)
    j               reduce using rule 136 (alpha_lower -> q .)
    k               reduce using rule 136 (alpha_lower -> q .)
    l               reduce using rule 136 (alpha_lower -> q .)
    m               reduce using rule 136 (alpha_lower -> q .)
    n               reduce using rule 136 (alpha_lower -> q .)
    o               reduce using rule 136 (alpha_lower -> q .)
    p               reduce using rule 136 (alpha_lower -> q .)
    q               reduce using rule 136 (alpha_lower -> q .)
    r               reduce using rule 136 (alpha_lower -> q .)
    s               reduce using rule 136 (alpha_lower -> q .)
    t               reduce using rule 136 (alpha_lower -> q .)
    u               reduce using rule 136 (alpha_lower -> q .)
    v               reduce using rule 136 (alpha_lower -> q .)
    w               reduce using rule 136 (alpha_lower -> q .)
    x               reduce using rule 136 (alpha_lower -> q .)
    y               reduce using rule 136 (alpha_lower -> q .)
    z               reduce using rule 136 (alpha_lower -> q .)
    A               reduce using rule 136 (alpha_lower -> q .)
    B               reduce using rule 136 (alpha_lower -> q .)
    C               reduce using rule 136 (alpha_lower -> q .)
    D               reduce using rule 136 (alpha_lower -> q .)
    E               reduce using rule 136 (alpha_lower -> q .)
    F               reduce using rule 136 (alpha_lower -> q .)
    G               reduce using rule 136 (alpha_lower -> q .)
    H               reduce using rule 136 (alpha_lower -> q .)
    I               reduce using rule 136 (alpha_lower -> q .)
    J               reduce using rule 136 (alpha_lower -> q .)
    K               reduce using rule 136 (alpha_lower -> q .)
    L               reduce using rule 136 (alpha_lower -> q .)
    M               reduce using rule 136 (alpha_lower -> q .)
    N               reduce using rule 136 (alpha_lower -> q .)
    O               reduce using rule 136 (alpha_lower -> q .)
    P               reduce using rule 136 (alpha_lower -> q .)
    Q               reduce using rule 136 (alpha_lower -> q .)
    R               reduce using rule 136 (alpha_lower -> q .)
    S               reduce using rule 136 (alpha_lower -> q .)
    T               reduce using rule 136 (alpha_lower -> q .)
    U               reduce using rule 136 (alpha_lower -> q .)
    V               reduce using rule 136 (alpha_lower -> q .)
    W               reduce using rule 136 (alpha_lower -> q .)
    X               reduce using rule 136 (alpha_lower -> q .)
    Y               reduce using rule 136 (alpha_lower -> q .)
    Z               reduce using rule 136 (alpha_lower -> q .)
    ]               reduce using rule 136 (alpha_lower -> q .)
    ^               reduce using rule 136 (alpha_lower -> q .)
    |               reduce using rule 136 (alpha_lower -> q .)
    $end            reduce using rule 136 (alpha_lower -> q .)


state 66

    (26) elementary -> nodispmatch .

    *               reduce using rule 26 (elementary -> nodispmatch .)
    +               reduce using rule 26 (elementary -> nodispmatch .)
    ?               reduce using rule 26 (elementary -> nodispmatch .)
    {               reduce using rule 26 (elementary -> nodispmatch .)
    (               reduce using rule 26 (elementary -> nodispmatch .)
    ^               reduce using rule 26 (elementary -> nodispmatch .)
    >               reduce using rule 26 (elementary -> nodispmatch .)
    <               reduce using rule 26 (elementary -> nodispmatch .)
    /               reduce using rule 26 (elementary -> nodispmatch .)
    \               reduce using rule 26 (elementary -> nodispmatch .)
    #               reduce using rule 26 (elementary -> nodispmatch .)
    %               reduce using rule 26 (elementary -> nodispmatch .)
    ESCAPED         reduce using rule 26 (elementary -> nodispmatch .)
    DIGIT           reduce using rule 26 (elementary -> nodispmatch .)
    OTHER           reduce using rule 26 (elementary -> nodispmatch .)
    [               reduce using rule 26 (elementary -> nodispmatch .)
    .               reduce using rule 26 (elementary -> nodispmatch .)
    ,               reduce using rule 26 (elementary -> nodispmatch .)
    :               reduce using rule 26 (elementary -> nodispmatch .)
    ;               reduce using rule 26 (elementary -> nodispmatch .)
    $               reduce using rule 26 (elementary -> nodispmatch .)
    `               reduce using rule 26 (elementary -> nodispmatch .)
    a               reduce using rule 26 (elementary -> nodispmatch .)
    b               reduce using rule 26 (elementary -> nodispmatch .)
    c               reduce using rule 26 (elementary -> nodispmatch .)
    d               reduce using rule 26 (elementary -> nodispmatch .)
    e               reduce using rule 26 (elementary -> nodispmatch .)
    f               reduce using rule 26 (elementary -> nodispmatch .)
    g               reduce using rule 26 (elementary -> nodispmatch .)
    h               reduce using rule 26 (elementary -> nodispmatch .)
    i               reduce using rule 26 (elementary -> nodispmatch .)
    j               reduce using rule 26 (elementary -> nodispmatch .)
    k               reduce using rule 26 (elementary -> nodispmatch .)
    l               reduce using rule 26 (elementary -> nodispmatch .)
    m               reduce using rule 26 (elementary -> nodispmatch .)
    n               reduce using rule 26 (elementary -> nodispmatch .)
    o               reduce using rule 26 (elementary -> nodispmatch .)
    p               reduce using rule 26 (elementary -> nodispmatch .)
    q               reduce using rule 26 (elementary -> nodispmatch .)
    r               reduce using rule 26 (elementary -> nodispmatch .)
    s               reduce using rule 26 (elementary -> nodispmatch .)
    t               reduce using rule 26 (elementary -> nodispmatch .)
    u               reduce using rule 26 (elementary -> nodispmatch .)
    v               reduce using rule 26 (elementary -> nodispmatch .)
    w               reduce using rule 26 (elementary -> nodispmatch .)
    x               reduce using rule 26 (elementary -> nodispmatch .)
    y               reduce using rule 26 (elementary -> nodispmatch .)
    z               reduce using rule 26 (elementary -> nodispmatch .)
    A               reduce using rule 26 (elementary -> nodispmatch .)
    B               reduce using rule 26 (elementary -> nodispmatch .)
    C               reduce using rule 26 (elementary -> nodispmatch .)
    D               reduce using rule 26 (elementary -> nodispmatch .)
    E               reduce using rule 26 (elementary -> nodispmatch .)
    F               reduce using rule 26 (elementary -> nodispmatch .)
    G               reduce using rule 26 (elementary -> nodispmatch .)
    H               reduce using rule 26 (elementary -> nodispmatch .)
    I               reduce using rule 26 (elementary -> nodispmatch .)
    J               reduce using rule 26 (elementary -> nodispmatch .)
    K               reduce using rule 26 (elementary -> nodispmatch .)
    L               reduce using rule 26 (elementary -> nodispmatch .)
    M               reduce using rule 26 (elementary -> nodispmatch .)
    N               reduce using rule 26 (elementary -> nodispmatch .)
    O               reduce using rule 26 (elementary -> nodispmatch .)
    P               reduce using rule 26 (elementary -> nodispmatch .)
    Q               reduce using rule 26 (elementary -> nodispmatch .)
    R               reduce using rule 26 (elementary -> nodispmatch .)
    S               reduce using rule 26 (elementary -> nodispmatch .)
    T               reduce using rule 26 (elementary -> nodispmatch .)
    U               reduce using rule 26 (elementary -> nodispmatch .)
    V               reduce using rule 26 (elementary -> nodispmatch .)
    W               reduce using rule 26 (elementary -> nodispmatch .)
    X               reduce using rule 26 (elementary -> nodispmatch .)
    Y               reduce using rule 26 (elementary -> nodispmatch .)
    Z               reduce using rule 26 (elementary -> nodispmatch .)
    |               reduce using rule 26 (elementary -> nodispmatch .)
    )               reduce using rule 26 (elementary -> nodispmatch .)
    $end            reduce using rule 26 (elementary -> nodispmatch .)


state 67

    (151) alpha_upper -> F .

    *               reduce using rule 151 (alpha_upper -> F .)
    +               reduce using rule 151 (alpha_upper -> F .)
    ?               reduce using rule 151 (alpha_upper -> F .)
    {               reduce using rule 151 (alpha_upper -> F .)
    (               reduce using rule 151 (alpha_upper -> F .)
    ^               reduce using rule 151 (alpha_upper -> F .)
    >               reduce using rule 151 (alpha_upper -> F .)
    <               reduce using rule 151 (alpha_upper -> F .)
    /               reduce using rule 151 (alpha_upper -> F .)
    \               reduce using rule 151 (alpha_upper -> F .)
    #               reduce using rule 151 (alpha_upper -> F .)
    %               reduce using rule 151 (alpha_upper -> F .)
    ESCAPED         reduce using rule 151 (alpha_upper -> F .)
    DIGIT           reduce using rule 151 (alpha_upper -> F .)
    OTHER           reduce using rule 151 (alpha_upper -> F .)
    [               reduce using rule 151 (alpha_upper -> F .)
    .               reduce using rule 151 (alpha_upper -> F .)
    ,               reduce using rule 151 (alpha_upper -> F .)
    :               reduce using rule 151 (alpha_upper -> F .)
    ;               reduce using rule 151 (alpha_upper -> F .)
    $               reduce using rule 151 (alpha_upper -> F .)
    `               reduce using rule 151 (alpha_upper -> F .)
    a               reduce using rule 151 (alpha_upper -> F .)
    b               reduce using rule 151 (alpha_upper -> F .)
    c               reduce using rule 151 (alpha_upper -> F .)
    d               reduce using rule 151 (alpha_upper -> F .)
    e               reduce using rule 151 (alpha_upper -> F .)
    f               reduce using rule 151 (alpha_upper -> F .)
    g               reduce using rule 151 (alpha_upper -> F .)
    h               reduce using rule 151 (alpha_upper -> F .)
    i               reduce using rule 151 (alpha_upper -> F .)
    j               reduce using rule 151 (alpha_upper -> F .)
    k               reduce using rule 151 (alpha_upper -> F .)
    l               reduce using rule 151 (alpha_upper -> F .)
    m               reduce using rule 151 (alpha_upper -> F .)
    n               reduce using rule 151 (alpha_upper -> F .)
    o               reduce using rule 151 (alpha_upper -> F .)
    p               reduce using rule 151 (alpha_upper -> F .)
    q               reduce using rule 151 (alpha_upper -> F .)
    r               reduce using rule 151 (alpha_upper -> F .)
    s               reduce using rule 151 (alpha_upper -> F .)
    t               reduce using rule 151 (alpha_upper -> F .)
    u               reduce using rule 151 (alpha_upper -> F .)
    v               reduce using rule 151 (alpha_upper -> F .)
    w               reduce using rule 151 (alpha_upper -> F .)
    x               reduce using rule 151 (alpha_upper -> F .)
    y               reduce using rule 151 (alpha_upper -> F .)
    z               reduce using rule 151 (alpha_upper -> F .)
    A               reduce using rule 151 (alpha_upper -> F .)
    B               reduce using rule 151 (alpha_upper -> F .)
    C               reduce using rule 151 (alpha_upper -> F .)
    D               reduce using rule 151 (alpha_upper -> F .)
    E               reduce using rule 151 (alpha_upper -> F .)
    F               reduce using rule 151 (alpha_upper -> F .)
    G               reduce using rule 151 (alpha_upper -> F .)
    H               reduce using rule 151 (alpha_upper -> F .)
    I               reduce using rule 151 (alpha_upper -> F .)
    J               reduce using rule 151 (alpha_upper -> F .)
    K               reduce using rule 151 (alpha_upper -> F .)
    L               reduce using rule 151 (alpha_upper -> F .)
    M               reduce using rule 151 (alpha_upper -> F .)
    N               reduce using rule 151 (alpha_upper -> F .)
    O               reduce using rule 151 (alpha_upper -> F .)
    P               reduce using rule 151 (alpha_upper -> F .)
    Q               reduce using rule 151 (alpha_upper -> F .)
    R               reduce using rule 151 (alpha_upper -> F .)
    S               reduce using rule 151 (alpha_upper -> F .)
    T               reduce using rule 151 (alpha_upper -> F .)
    U               reduce using rule 151 (alpha_upper -> F .)
    V               reduce using rule 151 (alpha_upper -> F .)
    W               reduce using rule 151 (alpha_upper -> F .)
    X               reduce using rule 151 (alpha_upper -> F .)
    Y               reduce using rule 151 (alpha_upper -> F .)
    Z               reduce using rule 151 (alpha_upper -> F .)
    |               reduce using rule 151 (alpha_upper -> F .)
    $end            reduce using rule 151 (alpha_upper -> F .)
    )               reduce using rule 151 (alpha_upper -> F .)
    -               reduce using rule 151 (alpha_upper -> F .)
    !               reduce using rule 151 (alpha_upper -> F .)
    "               reduce using rule 151 (alpha_upper -> F .)
    &               reduce using rule 151 (alpha_upper -> F .)
    '               reduce using rule 151 (alpha_upper -> F .)
    =               reduce using rule 151 (alpha_upper -> F .)
    @               reduce using rule 151 (alpha_upper -> F .)
    _               reduce using rule 151 (alpha_upper -> F .)
    }               reduce using rule 151 (alpha_upper -> F .)
    ~               reduce using rule 151 (alpha_upper -> F .)
    ]               reduce using rule 151 (alpha_upper -> F .)


state 68

    (142) alpha_lower -> w .

    -               reduce using rule 142 (alpha_lower -> w .)
    !               reduce using rule 142 (alpha_lower -> w .)
    "               reduce using rule 142 (alpha_lower -> w .)
    #               reduce using rule 142 (alpha_lower -> w .)
    $               reduce using rule 142 (alpha_lower -> w .)
    %               reduce using rule 142 (alpha_lower -> w .)
    &               reduce using rule 142 (alpha_lower -> w .)
    '               reduce using rule 142 (alpha_lower -> w .)
    (               reduce using rule 142 (alpha_lower -> w .)
    )               reduce using rule 142 (alpha_lower -> w .)
    *               reduce using rule 142 (alpha_lower -> w .)
    +               reduce using rule 142 (alpha_lower -> w .)
    ,               reduce using rule 142 (alpha_lower -> w .)
    .               reduce using rule 142 (alpha_lower -> w .)
    /               reduce using rule 142 (alpha_lower -> w .)
    :               reduce using rule 142 (alpha_lower -> w .)
    ;               reduce using rule 142 (alpha_lower -> w .)
    <               reduce using rule 142 (alpha_lower -> w .)
    =               reduce using rule 142 (alpha_lower -> w .)
    >               reduce using rule 142 (alpha_lower -> w .)
    ?               reduce using rule 142 (alpha_lower -> w .)
    @               reduce using rule 142 (alpha_lower -> w .)
    [               reduce using rule 142 (alpha_lower -> w .)
    \               reduce using rule 142 (alpha_lower -> w .)
    _               reduce using rule 142 (alpha_lower -> w .)
    `               reduce using rule 142 (alpha_lower -> w .)
    {               reduce using rule 142 (alpha_lower -> w .)
    }               reduce using rule 142 (alpha_lower -> w .)
    ~               reduce using rule 142 (alpha_lower -> w .)
    ESCAPED         reduce using rule 142 (alpha_lower -> w .)
    DIGIT           reduce using rule 142 (alpha_lower -> w .)
    OTHER           reduce using rule 142 (alpha_lower -> w .)
    a               reduce using rule 142 (alpha_lower -> w .)
    b               reduce using rule 142 (alpha_lower -> w .)
    c               reduce using rule 142 (alpha_lower -> w .)
    d               reduce using rule 142 (alpha_lower -> w .)
    e               reduce using rule 142 (alpha_lower -> w .)
    f               reduce using rule 142 (alpha_lower -> w .)
    g               reduce using rule 142 (alpha_lower -> w .)
    h               reduce using rule 142 (alpha_lower -> w .)
    i               reduce using rule 142 (alpha_lower -> w .)
    j               reduce using rule 142 (alpha_lower -> w .)
    k               reduce using rule 142 (alpha_lower -> w .)
    l               reduce using rule 142 (alpha_lower -> w .)
    m               reduce using rule 142 (alpha_lower -> w .)
    n               reduce using rule 142 (alpha_lower -> w .)
    o               reduce using rule 142 (alpha_lower -> w .)
    p               reduce using rule 142 (alpha_lower -> w .)
    q               reduce using rule 142 (alpha_lower -> w .)
    r               reduce using rule 142 (alpha_lower -> w .)
    s               reduce using rule 142 (alpha_lower -> w .)
    t               reduce using rule 142 (alpha_lower -> w .)
    u               reduce using rule 142 (alpha_lower -> w .)
    v               reduce using rule 142 (alpha_lower -> w .)
    w               reduce using rule 142 (alpha_lower -> w .)
    x               reduce using rule 142 (alpha_lower -> w .)
    y               reduce using rule 142 (alpha_lower -> w .)
    z               reduce using rule 142 (alpha_lower -> w .)
    A               reduce using rule 142 (alpha_lower -> w .)
    B               reduce using rule 142 (alpha_lower -> w .)
    C               reduce using rule 142 (alpha_lower -> w .)
    D               reduce using rule 142 (alpha_lower -> w .)
    E               reduce using rule 142 (alpha_lower -> w .)
    F               reduce using rule 142 (alpha_lower -> w .)
    G               reduce using rule 142 (alpha_lower -> w .)
    H               reduce using rule 142 (alpha_lower -> w .)
    I               reduce using rule 142 (alpha_lower -> w .)
    J               reduce using rule 142 (alpha_lower -> w .)
    K               reduce using rule 142 (alpha_lower -> w .)
    L               reduce using rule 142 (alpha_lower -> w .)
    M               reduce using rule 142 (alpha_lower -> w .)
    N               reduce using rule 142 (alpha_lower -> w .)
    O               reduce using rule 142 (alpha_lower -> w .)
    P               reduce using rule 142 (alpha_lower -> w .)
    Q               reduce using rule 142 (alpha_lower -> w .)
    R               reduce using rule 142 (alpha_lower -> w .)
    S               reduce using rule 142 (alpha_lower -> w .)
    T               reduce using rule 142 (alpha_lower -> w .)
    U               reduce using rule 142 (alpha_lower -> w .)
    V               reduce using rule 142 (alpha_lower -> w .)
    W               reduce using rule 142 (alpha_lower -> w .)
    X               reduce using rule 142 (alpha_lower -> w .)
    Y               reduce using rule 142 (alpha_lower -> w .)
    Z               reduce using rule 142 (alpha_lower -> w .)
    ]               reduce using rule 142 (alpha_lower -> w .)
    ^               reduce using rule 142 (alpha_lower -> w .)
    |               reduce using rule 142 (alpha_lower -> w .)
    $end            reduce using rule 142 (alpha_lower -> w .)


state 69

    (115) literal -> alpha .

    *               reduce using rule 115 (literal -> alpha .)
    +               reduce using rule 115 (literal -> alpha .)
    ?               reduce using rule 115 (literal -> alpha .)
    {               reduce using rule 115 (literal -> alpha .)
    (               reduce using rule 115 (literal -> alpha .)
    ^               reduce using rule 115 (literal -> alpha .)
    >               reduce using rule 115 (literal -> alpha .)
    <               reduce using rule 115 (literal -> alpha .)
    /               reduce using rule 115 (literal -> alpha .)
    \               reduce using rule 115 (literal -> alpha .)
    #               reduce using rule 115 (literal -> alpha .)
    %               reduce using rule 115 (literal -> alpha .)
    ESCAPED         reduce using rule 115 (literal -> alpha .)
    DIGIT           reduce using rule 115 (literal -> alpha .)
    OTHER           reduce using rule 115 (literal -> alpha .)
    [               reduce using rule 115 (literal -> alpha .)
    .               reduce using rule 115 (literal -> alpha .)
    ,               reduce using rule 115 (literal -> alpha .)
    :               reduce using rule 115 (literal -> alpha .)
    ;               reduce using rule 115 (literal -> alpha .)
    $               reduce using rule 115 (literal -> alpha .)
    `               reduce using rule 115 (literal -> alpha .)
    a               reduce using rule 115 (literal -> alpha .)
    b               reduce using rule 115 (literal -> alpha .)
    c               reduce using rule 115 (literal -> alpha .)
    d               reduce using rule 115 (literal -> alpha .)
    e               reduce using rule 115 (literal -> alpha .)
    f               reduce using rule 115 (literal -> alpha .)
    g               reduce using rule 115 (literal -> alpha .)
    h               reduce using rule 115 (literal -> alpha .)
    i               reduce using rule 115 (literal -> alpha .)
    j               reduce using rule 115 (literal -> alpha .)
    k               reduce using rule 115 (literal -> alpha .)
    l               reduce using rule 115 (literal -> alpha .)
    m               reduce using rule 115 (literal -> alpha .)
    n               reduce using rule 115 (literal -> alpha .)
    o               reduce using rule 115 (literal -> alpha .)
    p               reduce using rule 115 (literal -> alpha .)
    q               reduce using rule 115 (literal -> alpha .)
    r               reduce using rule 115 (literal -> alpha .)
    s               reduce using rule 115 (literal -> alpha .)
    t               reduce using rule 115 (literal -> alpha .)
    u               reduce using rule 115 (literal -> alpha .)
    v               reduce using rule 115 (literal -> alpha .)
    w               reduce using rule 115 (literal -> alpha .)
    x               reduce using rule 115 (literal -> alpha .)
    y               reduce using rule 115 (literal -> alpha .)
    z               reduce using rule 115 (literal -> alpha .)
    A               reduce using rule 115 (literal -> alpha .)
    B               reduce using rule 115 (literal -> alpha .)
    C               reduce using rule 115 (literal -> alpha .)
    D               reduce using rule 115 (literal -> alpha .)
    E               reduce using rule 115 (literal -> alpha .)
    F               reduce using rule 115 (literal -> alpha .)
    G               reduce using rule 115 (literal -> alpha .)
    H               reduce using rule 115 (literal -> alpha .)
    I               reduce using rule 115 (literal -> alpha .)
    J               reduce using rule 115 (literal -> alpha .)
    K               reduce using rule 115 (literal -> alpha .)
    L               reduce using rule 115 (literal -> alpha .)
    M               reduce using rule 115 (literal -> alpha .)
    N               reduce using rule 115 (literal -> alpha .)
    O               reduce using rule 115 (literal -> alpha .)
    P               reduce using rule 115 (literal -> alpha .)
    Q               reduce using rule 115 (literal -> alpha .)
    R               reduce using rule 115 (literal -> alpha .)
    S               reduce using rule 115 (literal -> alpha .)
    T               reduce using rule 115 (literal -> alpha .)
    U               reduce using rule 115 (literal -> alpha .)
    V               reduce using rule 115 (literal -> alpha .)
    W               reduce using rule 115 (literal -> alpha .)
    X               reduce using rule 115 (literal -> alpha .)
    Y               reduce using rule 115 (literal -> alpha .)
    Z               reduce using rule 115 (literal -> alpha .)
    |               reduce using rule 115 (literal -> alpha .)
    )               reduce using rule 115 (literal -> alpha .)
    -               reduce using rule 115 (literal -> alpha .)
    !               reduce using rule 115 (literal -> alpha .)
    "               reduce using rule 115 (literal -> alpha .)
    &               reduce using rule 115 (literal -> alpha .)
    '               reduce using rule 115 (literal -> alpha .)
    =               reduce using rule 115 (literal -> alpha .)
    @               reduce using rule 115 (literal -> alpha .)
    _               reduce using rule 115 (literal -> alpha .)
    }               reduce using rule 115 (literal -> alpha .)
    ~               reduce using rule 115 (literal -> alpha .)
    ]               reduce using rule 115 (literal -> alpha .)
    $end            reduce using rule 115 (literal -> alpha .)


state 70

    (120) alpha_lower -> a .

    -               reduce using rule 120 (alpha_lower -> a .)
    !               reduce using rule 120 (alpha_lower -> a .)
    "               reduce using rule 120 (alpha_lower -> a .)
    #               reduce using rule 120 (alpha_lower -> a .)
    $               reduce using rule 120 (alpha_lower -> a .)
    %               reduce using rule 120 (alpha_lower -> a .)
    &               reduce using rule 120 (alpha_lower -> a .)
    '               reduce using rule 120 (alpha_lower -> a .)
    (               reduce using rule 120 (alpha_lower -> a .)
    )               reduce using rule 120 (alpha_lower -> a .)
    *               reduce using rule 120 (alpha_lower -> a .)
    +               reduce using rule 120 (alpha_lower -> a .)
    ,               reduce using rule 120 (alpha_lower -> a .)
    .               reduce using rule 120 (alpha_lower -> a .)
    /               reduce using rule 120 (alpha_lower -> a .)
    :               reduce using rule 120 (alpha_lower -> a .)
    ;               reduce using rule 120 (alpha_lower -> a .)
    <               reduce using rule 120 (alpha_lower -> a .)
    =               reduce using rule 120 (alpha_lower -> a .)
    >               reduce using rule 120 (alpha_lower -> a .)
    ?               reduce using rule 120 (alpha_lower -> a .)
    @               reduce using rule 120 (alpha_lower -> a .)
    [               reduce using rule 120 (alpha_lower -> a .)
    \               reduce using rule 120 (alpha_lower -> a .)
    _               reduce using rule 120 (alpha_lower -> a .)
    `               reduce using rule 120 (alpha_lower -> a .)
    {               reduce using rule 120 (alpha_lower -> a .)
    }               reduce using rule 120 (alpha_lower -> a .)
    ~               reduce using rule 120 (alpha_lower -> a .)
    ESCAPED         reduce using rule 120 (alpha_lower -> a .)
    DIGIT           reduce using rule 120 (alpha_lower -> a .)
    OTHER           reduce using rule 120 (alpha_lower -> a .)
    a               reduce using rule 120 (alpha_lower -> a .)
    b               reduce using rule 120 (alpha_lower -> a .)
    c               reduce using rule 120 (alpha_lower -> a .)
    d               reduce using rule 120 (alpha_lower -> a .)
    e               reduce using rule 120 (alpha_lower -> a .)
    f               reduce using rule 120 (alpha_lower -> a .)
    g               reduce using rule 120 (alpha_lower -> a .)
    h               reduce using rule 120 (alpha_lower -> a .)
    i               reduce using rule 120 (alpha_lower -> a .)
    j               reduce using rule 120 (alpha_lower -> a .)
    k               reduce using rule 120 (alpha_lower -> a .)
    l               reduce using rule 120 (alpha_lower -> a .)
    m               reduce using rule 120 (alpha_lower -> a .)
    n               reduce using rule 120 (alpha_lower -> a .)
    o               reduce using rule 120 (alpha_lower -> a .)
    p               reduce using rule 120 (alpha_lower -> a .)
    q               reduce using rule 120 (alpha_lower -> a .)
    r               reduce using rule 120 (alpha_lower -> a .)
    s               reduce using rule 120 (alpha_lower -> a .)
    t               reduce using rule 120 (alpha_lower -> a .)
    u               reduce using rule 120 (alpha_lower -> a .)
    v               reduce using rule 120 (alpha_lower -> a .)
    w               reduce using rule 120 (alpha_lower -> a .)
    x               reduce using rule 120 (alpha_lower -> a .)
    y               reduce using rule 120 (alpha_lower -> a .)
    z               reduce using rule 120 (alpha_lower -> a .)
    A               reduce using rule 120 (alpha_lower -> a .)
    B               reduce using rule 120 (alpha_lower -> a .)
    C               reduce using rule 120 (alpha_lower -> a .)
    D               reduce using rule 120 (alpha_lower -> a .)
    E               reduce using rule 120 (alpha_lower -> a .)
    F               reduce using rule 120 (alpha_lower -> a .)
    G               reduce using rule 120 (alpha_lower -> a .)
    H               reduce using rule 120 (alpha_lower -> a .)
    I               reduce using rule 120 (alpha_lower -> a .)
    J               reduce using rule 120 (alpha_lower -> a .)
    K               reduce using rule 120 (alpha_lower -> a .)
    L               reduce using rule 120 (alpha_lower -> a .)
    M               reduce using rule 120 (alpha_lower -> a .)
    N               reduce using rule 120 (alpha_lower -> a .)
    O               reduce using rule 120 (alpha_lower -> a .)
    P               reduce using rule 120 (alpha_lower -> a .)
    Q               reduce using rule 120 (alpha_lower -> a .)
    R               reduce using rule 120 (alpha_lower -> a .)
    S               reduce using rule 120 (alpha_lower -> a .)
    T               reduce using rule 120 (alpha_lower -> a .)
    U               reduce using rule 120 (alpha_lower -> a .)
    V               reduce using rule 120 (alpha_lower -> a .)
    W               reduce using rule 120 (alpha_lower -> a .)
    X               reduce using rule 120 (alpha_lower -> a .)
    Y               reduce using rule 120 (alpha_lower -> a .)
    Z               reduce using rule 120 (alpha_lower -> a .)
    ]               reduce using rule 120 (alpha_lower -> a .)
    ^               reduce using rule 120 (alpha_lower -> a .)
    |               reduce using rule 120 (alpha_lower -> a .)
    $end            reduce using rule 120 (alpha_lower -> a .)


state 71

    (42) group -> ( . groupbody )
    (43) groupbody -> . ? specialgroup
    (44) groupbody -> . basicgroup
    (58) basicgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    ?               shift and go to state 112
    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 113
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    basequantifier                 shift and go to state 47
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    anychar                        shift and go to state 45
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    groupbody                      shift and go to state 111
    quantifier                     shift and go to state 95
    command                        shift and go to state 22
    anchor                         shift and go to state 91
    asterisk                       shift and go to state 97
    basicgroup                     shift and go to state 110
    nomatch                        shift and go to state 48

state 72

    (59) charclass -> [ . classitems ]
    (60) classitems -> . ^ baseitems
    (61) classitems -> . classitems2
    (62) classitems2 -> . baseitems
    (63) classitems2 -> . baseitems | baseitems
    (64) baseitems -> . classatom
    (65) baseitems -> . classatom baseitems
    (66) classatom -> . classliteral
    (67) classatom -> . classrange
    (68) classliteral -> . !
    (69) classliteral -> . "
    (70) classliteral -> . #
    (71) classliteral -> . $
    (72) classliteral -> . %
    (73) classliteral -> . &
    (74) classliteral -> . '
    (75) classliteral -> . (
    (76) classliteral -> . )
    (77) classliteral -> . *
    (78) classliteral -> . +
    (79) classliteral -> . ,
    (80) classliteral -> . .
    (81) classliteral -> . /
    (82) classliteral -> . :
    (83) classliteral -> . ;
    (84) classliteral -> . <
    (85) classliteral -> . =
    (86) classliteral -> . >
    (87) classliteral -> . ?
    (88) classliteral -> . @
    (89) classliteral -> . [
    (90) classliteral -> . \
    (91) classliteral -> . _
    (92) classliteral -> . `
    (93) classliteral -> . {
    (94) classliteral -> . }
    (95) classliteral -> . ~
    (96) classliteral -> . literal
    (97) classrange -> . classliteral - classliteral
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    ^               shift and go to state 117
    !               shift and go to state 132
    "               shift and go to state 119
    #               shift and go to state 139
    $               shift and go to state 135
    %               shift and go to state 124
    &               shift and go to state 127
    '               shift and go to state 114
    (               shift and go to state 134
    )               shift and go to state 129
    *               shift and go to state 131
    +               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 116
    /               shift and go to state 125
    :               shift and go to state 136
    ;               shift and go to state 137
    <               shift and go to state 118
    =               shift and go to state 144
    >               shift and go to state 130
    ?               shift and go to state 145
    @               shift and go to state 138
    [               shift and go to state 142
    \               shift and go to state 128
    _               shift and go to state 148
    `               shift and go to state 123
    {               shift and go to state 147
    }               shift and go to state 120
    ~               shift and go to state 146
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    alpha                          shift and go to state 69
    classrange                     shift and go to state 140
    classitems2                    shift and go to state 115
    classliteral                   shift and go to state 126
    alpha_upper                    shift and go to state 35
    classitems                     shift and go to state 149
    literal                        shift and go to state 143
    baseitems                      shift and go to state 133
    classatom                      shift and go to state 122

state 73

    (137) alpha_lower -> r .

    -               reduce using rule 137 (alpha_lower -> r .)
    !               reduce using rule 137 (alpha_lower -> r .)
    "               reduce using rule 137 (alpha_lower -> r .)
    #               reduce using rule 137 (alpha_lower -> r .)
    $               reduce using rule 137 (alpha_lower -> r .)
    %               reduce using rule 137 (alpha_lower -> r .)
    &               reduce using rule 137 (alpha_lower -> r .)
    '               reduce using rule 137 (alpha_lower -> r .)
    (               reduce using rule 137 (alpha_lower -> r .)
    )               reduce using rule 137 (alpha_lower -> r .)
    *               reduce using rule 137 (alpha_lower -> r .)
    +               reduce using rule 137 (alpha_lower -> r .)
    ,               reduce using rule 137 (alpha_lower -> r .)
    .               reduce using rule 137 (alpha_lower -> r .)
    /               reduce using rule 137 (alpha_lower -> r .)
    :               reduce using rule 137 (alpha_lower -> r .)
    ;               reduce using rule 137 (alpha_lower -> r .)
    <               reduce using rule 137 (alpha_lower -> r .)
    =               reduce using rule 137 (alpha_lower -> r .)
    >               reduce using rule 137 (alpha_lower -> r .)
    ?               reduce using rule 137 (alpha_lower -> r .)
    @               reduce using rule 137 (alpha_lower -> r .)
    [               reduce using rule 137 (alpha_lower -> r .)
    \               reduce using rule 137 (alpha_lower -> r .)
    _               reduce using rule 137 (alpha_lower -> r .)
    `               reduce using rule 137 (alpha_lower -> r .)
    {               reduce using rule 137 (alpha_lower -> r .)
    }               reduce using rule 137 (alpha_lower -> r .)
    ~               reduce using rule 137 (alpha_lower -> r .)
    ESCAPED         reduce using rule 137 (alpha_lower -> r .)
    DIGIT           reduce using rule 137 (alpha_lower -> r .)
    OTHER           reduce using rule 137 (alpha_lower -> r .)
    a               reduce using rule 137 (alpha_lower -> r .)
    b               reduce using rule 137 (alpha_lower -> r .)
    c               reduce using rule 137 (alpha_lower -> r .)
    d               reduce using rule 137 (alpha_lower -> r .)
    e               reduce using rule 137 (alpha_lower -> r .)
    f               reduce using rule 137 (alpha_lower -> r .)
    g               reduce using rule 137 (alpha_lower -> r .)
    h               reduce using rule 137 (alpha_lower -> r .)
    i               reduce using rule 137 (alpha_lower -> r .)
    j               reduce using rule 137 (alpha_lower -> r .)
    k               reduce using rule 137 (alpha_lower -> r .)
    l               reduce using rule 137 (alpha_lower -> r .)
    m               reduce using rule 137 (alpha_lower -> r .)
    n               reduce using rule 137 (alpha_lower -> r .)
    o               reduce using rule 137 (alpha_lower -> r .)
    p               reduce using rule 137 (alpha_lower -> r .)
    q               reduce using rule 137 (alpha_lower -> r .)
    r               reduce using rule 137 (alpha_lower -> r .)
    s               reduce using rule 137 (alpha_lower -> r .)
    t               reduce using rule 137 (alpha_lower -> r .)
    u               reduce using rule 137 (alpha_lower -> r .)
    v               reduce using rule 137 (alpha_lower -> r .)
    w               reduce using rule 137 (alpha_lower -> r .)
    x               reduce using rule 137 (alpha_lower -> r .)
    y               reduce using rule 137 (alpha_lower -> r .)
    z               reduce using rule 137 (alpha_lower -> r .)
    A               reduce using rule 137 (alpha_lower -> r .)
    B               reduce using rule 137 (alpha_lower -> r .)
    C               reduce using rule 137 (alpha_lower -> r .)
    D               reduce using rule 137 (alpha_lower -> r .)
    E               reduce using rule 137 (alpha_lower -> r .)
    F               reduce using rule 137 (alpha_lower -> r .)
    G               reduce using rule 137 (alpha_lower -> r .)
    H               reduce using rule 137 (alpha_lower -> r .)
    I               reduce using rule 137 (alpha_lower -> r .)
    J               reduce using rule 137 (alpha_lower -> r .)
    K               reduce using rule 137 (alpha_lower -> r .)
    L               reduce using rule 137 (alpha_lower -> r .)
    M               reduce using rule 137 (alpha_lower -> r .)
    N               reduce using rule 137 (alpha_lower -> r .)
    O               reduce using rule 137 (alpha_lower -> r .)
    P               reduce using rule 137 (alpha_lower -> r .)
    Q               reduce using rule 137 (alpha_lower -> r .)
    R               reduce using rule 137 (alpha_lower -> r .)
    S               reduce using rule 137 (alpha_lower -> r .)
    T               reduce using rule 137 (alpha_lower -> r .)
    U               reduce using rule 137 (alpha_lower -> r .)
    V               reduce using rule 137 (alpha_lower -> r .)
    W               reduce using rule 137 (alpha_lower -> r .)
    X               reduce using rule 137 (alpha_lower -> r .)
    Y               reduce using rule 137 (alpha_lower -> r .)
    Z               reduce using rule 137 (alpha_lower -> r .)
    ]               reduce using rule 137 (alpha_lower -> r .)
    ^               reduce using rule 137 (alpha_lower -> r .)
    |               reduce using rule 137 (alpha_lower -> r .)
    $end            reduce using rule 137 (alpha_lower -> r .)


state 74

    (21) elementary -> literal .

    *               reduce using rule 21 (elementary -> literal .)
    +               reduce using rule 21 (elementary -> literal .)
    ?               reduce using rule 21 (elementary -> literal .)
    {               reduce using rule 21 (elementary -> literal .)
    (               reduce using rule 21 (elementary -> literal .)
    ^               reduce using rule 21 (elementary -> literal .)
    >               reduce using rule 21 (elementary -> literal .)
    <               reduce using rule 21 (elementary -> literal .)
    /               reduce using rule 21 (elementary -> literal .)
    \               reduce using rule 21 (elementary -> literal .)
    #               reduce using rule 21 (elementary -> literal .)
    %               reduce using rule 21 (elementary -> literal .)
    ESCAPED         reduce using rule 21 (elementary -> literal .)
    DIGIT           reduce using rule 21 (elementary -> literal .)
    OTHER           reduce using rule 21 (elementary -> literal .)
    [               reduce using rule 21 (elementary -> literal .)
    .               reduce using rule 21 (elementary -> literal .)
    ,               reduce using rule 21 (elementary -> literal .)
    :               reduce using rule 21 (elementary -> literal .)
    ;               reduce using rule 21 (elementary -> literal .)
    $               reduce using rule 21 (elementary -> literal .)
    `               reduce using rule 21 (elementary -> literal .)
    a               reduce using rule 21 (elementary -> literal .)
    b               reduce using rule 21 (elementary -> literal .)
    c               reduce using rule 21 (elementary -> literal .)
    d               reduce using rule 21 (elementary -> literal .)
    e               reduce using rule 21 (elementary -> literal .)
    f               reduce using rule 21 (elementary -> literal .)
    g               reduce using rule 21 (elementary -> literal .)
    h               reduce using rule 21 (elementary -> literal .)
    i               reduce using rule 21 (elementary -> literal .)
    j               reduce using rule 21 (elementary -> literal .)
    k               reduce using rule 21 (elementary -> literal .)
    l               reduce using rule 21 (elementary -> literal .)
    m               reduce using rule 21 (elementary -> literal .)
    n               reduce using rule 21 (elementary -> literal .)
    o               reduce using rule 21 (elementary -> literal .)
    p               reduce using rule 21 (elementary -> literal .)
    q               reduce using rule 21 (elementary -> literal .)
    r               reduce using rule 21 (elementary -> literal .)
    s               reduce using rule 21 (elementary -> literal .)
    t               reduce using rule 21 (elementary -> literal .)
    u               reduce using rule 21 (elementary -> literal .)
    v               reduce using rule 21 (elementary -> literal .)
    w               reduce using rule 21 (elementary -> literal .)
    x               reduce using rule 21 (elementary -> literal .)
    y               reduce using rule 21 (elementary -> literal .)
    z               reduce using rule 21 (elementary -> literal .)
    A               reduce using rule 21 (elementary -> literal .)
    B               reduce using rule 21 (elementary -> literal .)
    C               reduce using rule 21 (elementary -> literal .)
    D               reduce using rule 21 (elementary -> literal .)
    E               reduce using rule 21 (elementary -> literal .)
    F               reduce using rule 21 (elementary -> literal .)
    G               reduce using rule 21 (elementary -> literal .)
    H               reduce using rule 21 (elementary -> literal .)
    I               reduce using rule 21 (elementary -> literal .)
    J               reduce using rule 21 (elementary -> literal .)
    K               reduce using rule 21 (elementary -> literal .)
    L               reduce using rule 21 (elementary -> literal .)
    M               reduce using rule 21 (elementary -> literal .)
    N               reduce using rule 21 (elementary -> literal .)
    O               reduce using rule 21 (elementary -> literal .)
    P               reduce using rule 21 (elementary -> literal .)
    Q               reduce using rule 21 (elementary -> literal .)
    R               reduce using rule 21 (elementary -> literal .)
    S               reduce using rule 21 (elementary -> literal .)
    T               reduce using rule 21 (elementary -> literal .)
    U               reduce using rule 21 (elementary -> literal .)
    V               reduce using rule 21 (elementary -> literal .)
    W               reduce using rule 21 (elementary -> literal .)
    X               reduce using rule 21 (elementary -> literal .)
    Y               reduce using rule 21 (elementary -> literal .)
    Z               reduce using rule 21 (elementary -> literal .)
    |               reduce using rule 21 (elementary -> literal .)
    )               reduce using rule 21 (elementary -> literal .)
    $end            reduce using rule 21 (elementary -> literal .)


state 75

    (7) simple -> concatenation .

    (               reduce using rule 7 (simple -> concatenation .)
    ^               reduce using rule 7 (simple -> concatenation .)
    >               reduce using rule 7 (simple -> concatenation .)
    <               reduce using rule 7 (simple -> concatenation .)
    /               reduce using rule 7 (simple -> concatenation .)
    \               reduce using rule 7 (simple -> concatenation .)
    #               reduce using rule 7 (simple -> concatenation .)
    %               reduce using rule 7 (simple -> concatenation .)
    ESCAPED         reduce using rule 7 (simple -> concatenation .)
    DIGIT           reduce using rule 7 (simple -> concatenation .)
    OTHER           reduce using rule 7 (simple -> concatenation .)
    [               reduce using rule 7 (simple -> concatenation .)
    .               reduce using rule 7 (simple -> concatenation .)
    ,               reduce using rule 7 (simple -> concatenation .)
    :               reduce using rule 7 (simple -> concatenation .)
    ;               reduce using rule 7 (simple -> concatenation .)
    $               reduce using rule 7 (simple -> concatenation .)
    `               reduce using rule 7 (simple -> concatenation .)
    a               reduce using rule 7 (simple -> concatenation .)
    b               reduce using rule 7 (simple -> concatenation .)
    c               reduce using rule 7 (simple -> concatenation .)
    d               reduce using rule 7 (simple -> concatenation .)
    e               reduce using rule 7 (simple -> concatenation .)
    f               reduce using rule 7 (simple -> concatenation .)
    g               reduce using rule 7 (simple -> concatenation .)
    h               reduce using rule 7 (simple -> concatenation .)
    i               reduce using rule 7 (simple -> concatenation .)
    j               reduce using rule 7 (simple -> concatenation .)
    k               reduce using rule 7 (simple -> concatenation .)
    l               reduce using rule 7 (simple -> concatenation .)
    m               reduce using rule 7 (simple -> concatenation .)
    n               reduce using rule 7 (simple -> concatenation .)
    o               reduce using rule 7 (simple -> concatenation .)
    p               reduce using rule 7 (simple -> concatenation .)
    q               reduce using rule 7 (simple -> concatenation .)
    r               reduce using rule 7 (simple -> concatenation .)
    s               reduce using rule 7 (simple -> concatenation .)
    t               reduce using rule 7 (simple -> concatenation .)
    u               reduce using rule 7 (simple -> concatenation .)
    v               reduce using rule 7 (simple -> concatenation .)
    w               reduce using rule 7 (simple -> concatenation .)
    x               reduce using rule 7 (simple -> concatenation .)
    y               reduce using rule 7 (simple -> concatenation .)
    z               reduce using rule 7 (simple -> concatenation .)
    A               reduce using rule 7 (simple -> concatenation .)
    B               reduce using rule 7 (simple -> concatenation .)
    C               reduce using rule 7 (simple -> concatenation .)
    D               reduce using rule 7 (simple -> concatenation .)
    E               reduce using rule 7 (simple -> concatenation .)
    F               reduce using rule 7 (simple -> concatenation .)
    G               reduce using rule 7 (simple -> concatenation .)
    H               reduce using rule 7 (simple -> concatenation .)
    I               reduce using rule 7 (simple -> concatenation .)
    J               reduce using rule 7 (simple -> concatenation .)
    K               reduce using rule 7 (simple -> concatenation .)
    L               reduce using rule 7 (simple -> concatenation .)
    M               reduce using rule 7 (simple -> concatenation .)
    N               reduce using rule 7 (simple -> concatenation .)
    O               reduce using rule 7 (simple -> concatenation .)
    P               reduce using rule 7 (simple -> concatenation .)
    Q               reduce using rule 7 (simple -> concatenation .)
    R               reduce using rule 7 (simple -> concatenation .)
    S               reduce using rule 7 (simple -> concatenation .)
    T               reduce using rule 7 (simple -> concatenation .)
    U               reduce using rule 7 (simple -> concatenation .)
    V               reduce using rule 7 (simple -> concatenation .)
    W               reduce using rule 7 (simple -> concatenation .)
    X               reduce using rule 7 (simple -> concatenation .)
    Y               reduce using rule 7 (simple -> concatenation .)
    Z               reduce using rule 7 (simple -> concatenation .)
    |               reduce using rule 7 (simple -> concatenation .)
    )               reduce using rule 7 (simple -> concatenation .)
    $end            reduce using rule 7 (simple -> concatenation .)


state 76

    (149) alpha_upper -> D .

    *               reduce using rule 149 (alpha_upper -> D .)
    +               reduce using rule 149 (alpha_upper -> D .)
    ?               reduce using rule 149 (alpha_upper -> D .)
    {               reduce using rule 149 (alpha_upper -> D .)
    (               reduce using rule 149 (alpha_upper -> D .)
    ^               reduce using rule 149 (alpha_upper -> D .)
    >               reduce using rule 149 (alpha_upper -> D .)
    <               reduce using rule 149 (alpha_upper -> D .)
    /               reduce using rule 149 (alpha_upper -> D .)
    \               reduce using rule 149 (alpha_upper -> D .)
    #               reduce using rule 149 (alpha_upper -> D .)
    %               reduce using rule 149 (alpha_upper -> D .)
    ESCAPED         reduce using rule 149 (alpha_upper -> D .)
    DIGIT           reduce using rule 149 (alpha_upper -> D .)
    OTHER           reduce using rule 149 (alpha_upper -> D .)
    [               reduce using rule 149 (alpha_upper -> D .)
    .               reduce using rule 149 (alpha_upper -> D .)
    ,               reduce using rule 149 (alpha_upper -> D .)
    :               reduce using rule 149 (alpha_upper -> D .)
    ;               reduce using rule 149 (alpha_upper -> D .)
    $               reduce using rule 149 (alpha_upper -> D .)
    `               reduce using rule 149 (alpha_upper -> D .)
    a               reduce using rule 149 (alpha_upper -> D .)
    b               reduce using rule 149 (alpha_upper -> D .)
    c               reduce using rule 149 (alpha_upper -> D .)
    d               reduce using rule 149 (alpha_upper -> D .)
    e               reduce using rule 149 (alpha_upper -> D .)
    f               reduce using rule 149 (alpha_upper -> D .)
    g               reduce using rule 149 (alpha_upper -> D .)
    h               reduce using rule 149 (alpha_upper -> D .)
    i               reduce using rule 149 (alpha_upper -> D .)
    j               reduce using rule 149 (alpha_upper -> D .)
    k               reduce using rule 149 (alpha_upper -> D .)
    l               reduce using rule 149 (alpha_upper -> D .)
    m               reduce using rule 149 (alpha_upper -> D .)
    n               reduce using rule 149 (alpha_upper -> D .)
    o               reduce using rule 149 (alpha_upper -> D .)
    p               reduce using rule 149 (alpha_upper -> D .)
    q               reduce using rule 149 (alpha_upper -> D .)
    r               reduce using rule 149 (alpha_upper -> D .)
    s               reduce using rule 149 (alpha_upper -> D .)
    t               reduce using rule 149 (alpha_upper -> D .)
    u               reduce using rule 149 (alpha_upper -> D .)
    v               reduce using rule 149 (alpha_upper -> D .)
    w               reduce using rule 149 (alpha_upper -> D .)
    x               reduce using rule 149 (alpha_upper -> D .)
    y               reduce using rule 149 (alpha_upper -> D .)
    z               reduce using rule 149 (alpha_upper -> D .)
    A               reduce using rule 149 (alpha_upper -> D .)
    B               reduce using rule 149 (alpha_upper -> D .)
    C               reduce using rule 149 (alpha_upper -> D .)
    D               reduce using rule 149 (alpha_upper -> D .)
    E               reduce using rule 149 (alpha_upper -> D .)
    F               reduce using rule 149 (alpha_upper -> D .)
    G               reduce using rule 149 (alpha_upper -> D .)
    H               reduce using rule 149 (alpha_upper -> D .)
    I               reduce using rule 149 (alpha_upper -> D .)
    J               reduce using rule 149 (alpha_upper -> D .)
    K               reduce using rule 149 (alpha_upper -> D .)
    L               reduce using rule 149 (alpha_upper -> D .)
    M               reduce using rule 149 (alpha_upper -> D .)
    N               reduce using rule 149 (alpha_upper -> D .)
    O               reduce using rule 149 (alpha_upper -> D .)
    P               reduce using rule 149 (alpha_upper -> D .)
    Q               reduce using rule 149 (alpha_upper -> D .)
    R               reduce using rule 149 (alpha_upper -> D .)
    S               reduce using rule 149 (alpha_upper -> D .)
    T               reduce using rule 149 (alpha_upper -> D .)
    U               reduce using rule 149 (alpha_upper -> D .)
    V               reduce using rule 149 (alpha_upper -> D .)
    W               reduce using rule 149 (alpha_upper -> D .)
    X               reduce using rule 149 (alpha_upper -> D .)
    Y               reduce using rule 149 (alpha_upper -> D .)
    Z               reduce using rule 149 (alpha_upper -> D .)
    |               reduce using rule 149 (alpha_upper -> D .)
    $end            reduce using rule 149 (alpha_upper -> D .)
    )               reduce using rule 149 (alpha_upper -> D .)
    -               reduce using rule 149 (alpha_upper -> D .)
    !               reduce using rule 149 (alpha_upper -> D .)
    "               reduce using rule 149 (alpha_upper -> D .)
    &               reduce using rule 149 (alpha_upper -> D .)
    '               reduce using rule 149 (alpha_upper -> D .)
    =               reduce using rule 149 (alpha_upper -> D .)
    @               reduce using rule 149 (alpha_upper -> D .)
    _               reduce using rule 149 (alpha_upper -> D .)
    }               reduce using rule 149 (alpha_upper -> D .)
    ~               reduce using rule 149 (alpha_upper -> D .)
    ]               reduce using rule 149 (alpha_upper -> D .)


state 77

    (143) alpha_lower -> x .

    -               reduce using rule 143 (alpha_lower -> x .)
    !               reduce using rule 143 (alpha_lower -> x .)
    "               reduce using rule 143 (alpha_lower -> x .)
    #               reduce using rule 143 (alpha_lower -> x .)
    $               reduce using rule 143 (alpha_lower -> x .)
    %               reduce using rule 143 (alpha_lower -> x .)
    &               reduce using rule 143 (alpha_lower -> x .)
    '               reduce using rule 143 (alpha_lower -> x .)
    (               reduce using rule 143 (alpha_lower -> x .)
    )               reduce using rule 143 (alpha_lower -> x .)
    *               reduce using rule 143 (alpha_lower -> x .)
    +               reduce using rule 143 (alpha_lower -> x .)
    ,               reduce using rule 143 (alpha_lower -> x .)
    .               reduce using rule 143 (alpha_lower -> x .)
    /               reduce using rule 143 (alpha_lower -> x .)
    :               reduce using rule 143 (alpha_lower -> x .)
    ;               reduce using rule 143 (alpha_lower -> x .)
    <               reduce using rule 143 (alpha_lower -> x .)
    =               reduce using rule 143 (alpha_lower -> x .)
    >               reduce using rule 143 (alpha_lower -> x .)
    ?               reduce using rule 143 (alpha_lower -> x .)
    @               reduce using rule 143 (alpha_lower -> x .)
    [               reduce using rule 143 (alpha_lower -> x .)
    \               reduce using rule 143 (alpha_lower -> x .)
    _               reduce using rule 143 (alpha_lower -> x .)
    `               reduce using rule 143 (alpha_lower -> x .)
    {               reduce using rule 143 (alpha_lower -> x .)
    }               reduce using rule 143 (alpha_lower -> x .)
    ~               reduce using rule 143 (alpha_lower -> x .)
    ESCAPED         reduce using rule 143 (alpha_lower -> x .)
    DIGIT           reduce using rule 143 (alpha_lower -> x .)
    OTHER           reduce using rule 143 (alpha_lower -> x .)
    a               reduce using rule 143 (alpha_lower -> x .)
    b               reduce using rule 143 (alpha_lower -> x .)
    c               reduce using rule 143 (alpha_lower -> x .)
    d               reduce using rule 143 (alpha_lower -> x .)
    e               reduce using rule 143 (alpha_lower -> x .)
    f               reduce using rule 143 (alpha_lower -> x .)
    g               reduce using rule 143 (alpha_lower -> x .)
    h               reduce using rule 143 (alpha_lower -> x .)
    i               reduce using rule 143 (alpha_lower -> x .)
    j               reduce using rule 143 (alpha_lower -> x .)
    k               reduce using rule 143 (alpha_lower -> x .)
    l               reduce using rule 143 (alpha_lower -> x .)
    m               reduce using rule 143 (alpha_lower -> x .)
    n               reduce using rule 143 (alpha_lower -> x .)
    o               reduce using rule 143 (alpha_lower -> x .)
    p               reduce using rule 143 (alpha_lower -> x .)
    q               reduce using rule 143 (alpha_lower -> x .)
    r               reduce using rule 143 (alpha_lower -> x .)
    s               reduce using rule 143 (alpha_lower -> x .)
    t               reduce using rule 143 (alpha_lower -> x .)
    u               reduce using rule 143 (alpha_lower -> x .)
    v               reduce using rule 143 (alpha_lower -> x .)
    w               reduce using rule 143 (alpha_lower -> x .)
    x               reduce using rule 143 (alpha_lower -> x .)
    y               reduce using rule 143 (alpha_lower -> x .)
    z               reduce using rule 143 (alpha_lower -> x .)
    A               reduce using rule 143 (alpha_lower -> x .)
    B               reduce using rule 143 (alpha_lower -> x .)
    C               reduce using rule 143 (alpha_lower -> x .)
    D               reduce using rule 143 (alpha_lower -> x .)
    E               reduce using rule 143 (alpha_lower -> x .)
    F               reduce using rule 143 (alpha_lower -> x .)
    G               reduce using rule 143 (alpha_lower -> x .)
    H               reduce using rule 143 (alpha_lower -> x .)
    I               reduce using rule 143 (alpha_lower -> x .)
    J               reduce using rule 143 (alpha_lower -> x .)
    K               reduce using rule 143 (alpha_lower -> x .)
    L               reduce using rule 143 (alpha_lower -> x .)
    M               reduce using rule 143 (alpha_lower -> x .)
    N               reduce using rule 143 (alpha_lower -> x .)
    O               reduce using rule 143 (alpha_lower -> x .)
    P               reduce using rule 143 (alpha_lower -> x .)
    Q               reduce using rule 143 (alpha_lower -> x .)
    R               reduce using rule 143 (alpha_lower -> x .)
    S               reduce using rule 143 (alpha_lower -> x .)
    T               reduce using rule 143 (alpha_lower -> x .)
    U               reduce using rule 143 (alpha_lower -> x .)
    V               reduce using rule 143 (alpha_lower -> x .)
    W               reduce using rule 143 (alpha_lower -> x .)
    X               reduce using rule 143 (alpha_lower -> x .)
    Y               reduce using rule 143 (alpha_lower -> x .)
    Z               reduce using rule 143 (alpha_lower -> x .)
    ]               reduce using rule 143 (alpha_lower -> x .)
    ^               reduce using rule 143 (alpha_lower -> x .)
    |               reduce using rule 143 (alpha_lower -> x .)
    $end            reduce using rule 143 (alpha_lower -> x .)


state 78

    (0) S' -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    |               shift and go to state 150


state 79

    (10) basic -> elementary .
    (29) asterisk -> elementary . *
    (30) plus -> elementary . +
    (31) optional -> elementary . ?
    (32) nrepeat -> elementary . { number }
    (33) nrepeat -> elementary . { , number }
    (34) nrepeat -> elementary . { number , }
    (35) nrepeat -> elementary . { number , number }

    (               reduce using rule 10 (basic -> elementary .)
    ^               reduce using rule 10 (basic -> elementary .)
    >               reduce using rule 10 (basic -> elementary .)
    <               reduce using rule 10 (basic -> elementary .)
    /               reduce using rule 10 (basic -> elementary .)
    \               reduce using rule 10 (basic -> elementary .)
    #               reduce using rule 10 (basic -> elementary .)
    %               reduce using rule 10 (basic -> elementary .)
    ESCAPED         reduce using rule 10 (basic -> elementary .)
    DIGIT           reduce using rule 10 (basic -> elementary .)
    OTHER           reduce using rule 10 (basic -> elementary .)
    [               reduce using rule 10 (basic -> elementary .)
    .               reduce using rule 10 (basic -> elementary .)
    ,               reduce using rule 10 (basic -> elementary .)
    :               reduce using rule 10 (basic -> elementary .)
    ;               reduce using rule 10 (basic -> elementary .)
    $               reduce using rule 10 (basic -> elementary .)
    `               reduce using rule 10 (basic -> elementary .)
    a               reduce using rule 10 (basic -> elementary .)
    b               reduce using rule 10 (basic -> elementary .)
    c               reduce using rule 10 (basic -> elementary .)
    d               reduce using rule 10 (basic -> elementary .)
    e               reduce using rule 10 (basic -> elementary .)
    f               reduce using rule 10 (basic -> elementary .)
    g               reduce using rule 10 (basic -> elementary .)
    h               reduce using rule 10 (basic -> elementary .)
    i               reduce using rule 10 (basic -> elementary .)
    j               reduce using rule 10 (basic -> elementary .)
    k               reduce using rule 10 (basic -> elementary .)
    l               reduce using rule 10 (basic -> elementary .)
    m               reduce using rule 10 (basic -> elementary .)
    n               reduce using rule 10 (basic -> elementary .)
    o               reduce using rule 10 (basic -> elementary .)
    p               reduce using rule 10 (basic -> elementary .)
    q               reduce using rule 10 (basic -> elementary .)
    r               reduce using rule 10 (basic -> elementary .)
    s               reduce using rule 10 (basic -> elementary .)
    t               reduce using rule 10 (basic -> elementary .)
    u               reduce using rule 10 (basic -> elementary .)
    v               reduce using rule 10 (basic -> elementary .)
    w               reduce using rule 10 (basic -> elementary .)
    x               reduce using rule 10 (basic -> elementary .)
    y               reduce using rule 10 (basic -> elementary .)
    z               reduce using rule 10 (basic -> elementary .)
    A               reduce using rule 10 (basic -> elementary .)
    B               reduce using rule 10 (basic -> elementary .)
    C               reduce using rule 10 (basic -> elementary .)
    D               reduce using rule 10 (basic -> elementary .)
    E               reduce using rule 10 (basic -> elementary .)
    F               reduce using rule 10 (basic -> elementary .)
    G               reduce using rule 10 (basic -> elementary .)
    H               reduce using rule 10 (basic -> elementary .)
    I               reduce using rule 10 (basic -> elementary .)
    J               reduce using rule 10 (basic -> elementary .)
    K               reduce using rule 10 (basic -> elementary .)
    L               reduce using rule 10 (basic -> elementary .)
    M               reduce using rule 10 (basic -> elementary .)
    N               reduce using rule 10 (basic -> elementary .)
    O               reduce using rule 10 (basic -> elementary .)
    P               reduce using rule 10 (basic -> elementary .)
    Q               reduce using rule 10 (basic -> elementary .)
    R               reduce using rule 10 (basic -> elementary .)
    S               reduce using rule 10 (basic -> elementary .)
    T               reduce using rule 10 (basic -> elementary .)
    U               reduce using rule 10 (basic -> elementary .)
    V               reduce using rule 10 (basic -> elementary .)
    W               reduce using rule 10 (basic -> elementary .)
    X               reduce using rule 10 (basic -> elementary .)
    Y               reduce using rule 10 (basic -> elementary .)
    Z               reduce using rule 10 (basic -> elementary .)
    |               reduce using rule 10 (basic -> elementary .)
    )               reduce using rule 10 (basic -> elementary .)
    $end            reduce using rule 10 (basic -> elementary .)
    *               shift and go to state 154
    +               shift and go to state 151
    ?               shift and go to state 153
    {               shift and go to state 152


state 80

    (171) alpha_upper -> Z .

    *               reduce using rule 171 (alpha_upper -> Z .)
    +               reduce using rule 171 (alpha_upper -> Z .)
    ?               reduce using rule 171 (alpha_upper -> Z .)
    {               reduce using rule 171 (alpha_upper -> Z .)
    (               reduce using rule 171 (alpha_upper -> Z .)
    ^               reduce using rule 171 (alpha_upper -> Z .)
    >               reduce using rule 171 (alpha_upper -> Z .)
    <               reduce using rule 171 (alpha_upper -> Z .)
    /               reduce using rule 171 (alpha_upper -> Z .)
    \               reduce using rule 171 (alpha_upper -> Z .)
    #               reduce using rule 171 (alpha_upper -> Z .)
    %               reduce using rule 171 (alpha_upper -> Z .)
    ESCAPED         reduce using rule 171 (alpha_upper -> Z .)
    DIGIT           reduce using rule 171 (alpha_upper -> Z .)
    OTHER           reduce using rule 171 (alpha_upper -> Z .)
    [               reduce using rule 171 (alpha_upper -> Z .)
    .               reduce using rule 171 (alpha_upper -> Z .)
    ,               reduce using rule 171 (alpha_upper -> Z .)
    :               reduce using rule 171 (alpha_upper -> Z .)
    ;               reduce using rule 171 (alpha_upper -> Z .)
    $               reduce using rule 171 (alpha_upper -> Z .)
    `               reduce using rule 171 (alpha_upper -> Z .)
    a               reduce using rule 171 (alpha_upper -> Z .)
    b               reduce using rule 171 (alpha_upper -> Z .)
    c               reduce using rule 171 (alpha_upper -> Z .)
    d               reduce using rule 171 (alpha_upper -> Z .)
    e               reduce using rule 171 (alpha_upper -> Z .)
    f               reduce using rule 171 (alpha_upper -> Z .)
    g               reduce using rule 171 (alpha_upper -> Z .)
    h               reduce using rule 171 (alpha_upper -> Z .)
    i               reduce using rule 171 (alpha_upper -> Z .)
    j               reduce using rule 171 (alpha_upper -> Z .)
    k               reduce using rule 171 (alpha_upper -> Z .)
    l               reduce using rule 171 (alpha_upper -> Z .)
    m               reduce using rule 171 (alpha_upper -> Z .)
    n               reduce using rule 171 (alpha_upper -> Z .)
    o               reduce using rule 171 (alpha_upper -> Z .)
    p               reduce using rule 171 (alpha_upper -> Z .)
    q               reduce using rule 171 (alpha_upper -> Z .)
    r               reduce using rule 171 (alpha_upper -> Z .)
    s               reduce using rule 171 (alpha_upper -> Z .)
    t               reduce using rule 171 (alpha_upper -> Z .)
    u               reduce using rule 171 (alpha_upper -> Z .)
    v               reduce using rule 171 (alpha_upper -> Z .)
    w               reduce using rule 171 (alpha_upper -> Z .)
    x               reduce using rule 171 (alpha_upper -> Z .)
    y               reduce using rule 171 (alpha_upper -> Z .)
    z               reduce using rule 171 (alpha_upper -> Z .)
    A               reduce using rule 171 (alpha_upper -> Z .)
    B               reduce using rule 171 (alpha_upper -> Z .)
    C               reduce using rule 171 (alpha_upper -> Z .)
    D               reduce using rule 171 (alpha_upper -> Z .)
    E               reduce using rule 171 (alpha_upper -> Z .)
    F               reduce using rule 171 (alpha_upper -> Z .)
    G               reduce using rule 171 (alpha_upper -> Z .)
    H               reduce using rule 171 (alpha_upper -> Z .)
    I               reduce using rule 171 (alpha_upper -> Z .)
    J               reduce using rule 171 (alpha_upper -> Z .)
    K               reduce using rule 171 (alpha_upper -> Z .)
    L               reduce using rule 171 (alpha_upper -> Z .)
    M               reduce using rule 171 (alpha_upper -> Z .)
    N               reduce using rule 171 (alpha_upper -> Z .)
    O               reduce using rule 171 (alpha_upper -> Z .)
    P               reduce using rule 171 (alpha_upper -> Z .)
    Q               reduce using rule 171 (alpha_upper -> Z .)
    R               reduce using rule 171 (alpha_upper -> Z .)
    S               reduce using rule 171 (alpha_upper -> Z .)
    T               reduce using rule 171 (alpha_upper -> Z .)
    U               reduce using rule 171 (alpha_upper -> Z .)
    V               reduce using rule 171 (alpha_upper -> Z .)
    W               reduce using rule 171 (alpha_upper -> Z .)
    X               reduce using rule 171 (alpha_upper -> Z .)
    Y               reduce using rule 171 (alpha_upper -> Z .)
    Z               reduce using rule 171 (alpha_upper -> Z .)
    |               reduce using rule 171 (alpha_upper -> Z .)
    $end            reduce using rule 171 (alpha_upper -> Z .)
    )               reduce using rule 171 (alpha_upper -> Z .)
    -               reduce using rule 171 (alpha_upper -> Z .)
    !               reduce using rule 171 (alpha_upper -> Z .)
    "               reduce using rule 171 (alpha_upper -> Z .)
    &               reduce using rule 171 (alpha_upper -> Z .)
    '               reduce using rule 171 (alpha_upper -> Z .)
    =               reduce using rule 171 (alpha_upper -> Z .)
    @               reduce using rule 171 (alpha_upper -> Z .)
    _               reduce using rule 171 (alpha_upper -> Z .)
    }               reduce using rule 171 (alpha_upper -> Z .)
    ~               reduce using rule 171 (alpha_upper -> Z .)
    ]               reduce using rule 171 (alpha_upper -> Z .)


state 81

    (144) alpha_lower -> y .

    -               reduce using rule 144 (alpha_lower -> y .)
    !               reduce using rule 144 (alpha_lower -> y .)
    "               reduce using rule 144 (alpha_lower -> y .)
    #               reduce using rule 144 (alpha_lower -> y .)
    $               reduce using rule 144 (alpha_lower -> y .)
    %               reduce using rule 144 (alpha_lower -> y .)
    &               reduce using rule 144 (alpha_lower -> y .)
    '               reduce using rule 144 (alpha_lower -> y .)
    (               reduce using rule 144 (alpha_lower -> y .)
    )               reduce using rule 144 (alpha_lower -> y .)
    *               reduce using rule 144 (alpha_lower -> y .)
    +               reduce using rule 144 (alpha_lower -> y .)
    ,               reduce using rule 144 (alpha_lower -> y .)
    .               reduce using rule 144 (alpha_lower -> y .)
    /               reduce using rule 144 (alpha_lower -> y .)
    :               reduce using rule 144 (alpha_lower -> y .)
    ;               reduce using rule 144 (alpha_lower -> y .)
    <               reduce using rule 144 (alpha_lower -> y .)
    =               reduce using rule 144 (alpha_lower -> y .)
    >               reduce using rule 144 (alpha_lower -> y .)
    ?               reduce using rule 144 (alpha_lower -> y .)
    @               reduce using rule 144 (alpha_lower -> y .)
    [               reduce using rule 144 (alpha_lower -> y .)
    \               reduce using rule 144 (alpha_lower -> y .)
    _               reduce using rule 144 (alpha_lower -> y .)
    `               reduce using rule 144 (alpha_lower -> y .)
    {               reduce using rule 144 (alpha_lower -> y .)
    }               reduce using rule 144 (alpha_lower -> y .)
    ~               reduce using rule 144 (alpha_lower -> y .)
    ESCAPED         reduce using rule 144 (alpha_lower -> y .)
    DIGIT           reduce using rule 144 (alpha_lower -> y .)
    OTHER           reduce using rule 144 (alpha_lower -> y .)
    a               reduce using rule 144 (alpha_lower -> y .)
    b               reduce using rule 144 (alpha_lower -> y .)
    c               reduce using rule 144 (alpha_lower -> y .)
    d               reduce using rule 144 (alpha_lower -> y .)
    e               reduce using rule 144 (alpha_lower -> y .)
    f               reduce using rule 144 (alpha_lower -> y .)
    g               reduce using rule 144 (alpha_lower -> y .)
    h               reduce using rule 144 (alpha_lower -> y .)
    i               reduce using rule 144 (alpha_lower -> y .)
    j               reduce using rule 144 (alpha_lower -> y .)
    k               reduce using rule 144 (alpha_lower -> y .)
    l               reduce using rule 144 (alpha_lower -> y .)
    m               reduce using rule 144 (alpha_lower -> y .)
    n               reduce using rule 144 (alpha_lower -> y .)
    o               reduce using rule 144 (alpha_lower -> y .)
    p               reduce using rule 144 (alpha_lower -> y .)
    q               reduce using rule 144 (alpha_lower -> y .)
    r               reduce using rule 144 (alpha_lower -> y .)
    s               reduce using rule 144 (alpha_lower -> y .)
    t               reduce using rule 144 (alpha_lower -> y .)
    u               reduce using rule 144 (alpha_lower -> y .)
    v               reduce using rule 144 (alpha_lower -> y .)
    w               reduce using rule 144 (alpha_lower -> y .)
    x               reduce using rule 144 (alpha_lower -> y .)
    y               reduce using rule 144 (alpha_lower -> y .)
    z               reduce using rule 144 (alpha_lower -> y .)
    A               reduce using rule 144 (alpha_lower -> y .)
    B               reduce using rule 144 (alpha_lower -> y .)
    C               reduce using rule 144 (alpha_lower -> y .)
    D               reduce using rule 144 (alpha_lower -> y .)
    E               reduce using rule 144 (alpha_lower -> y .)
    F               reduce using rule 144 (alpha_lower -> y .)
    G               reduce using rule 144 (alpha_lower -> y .)
    H               reduce using rule 144 (alpha_lower -> y .)
    I               reduce using rule 144 (alpha_lower -> y .)
    J               reduce using rule 144 (alpha_lower -> y .)
    K               reduce using rule 144 (alpha_lower -> y .)
    L               reduce using rule 144 (alpha_lower -> y .)
    M               reduce using rule 144 (alpha_lower -> y .)
    N               reduce using rule 144 (alpha_lower -> y .)
    O               reduce using rule 144 (alpha_lower -> y .)
    P               reduce using rule 144 (alpha_lower -> y .)
    Q               reduce using rule 144 (alpha_lower -> y .)
    R               reduce using rule 144 (alpha_lower -> y .)
    S               reduce using rule 144 (alpha_lower -> y .)
    T               reduce using rule 144 (alpha_lower -> y .)
    U               reduce using rule 144 (alpha_lower -> y .)
    V               reduce using rule 144 (alpha_lower -> y .)
    W               reduce using rule 144 (alpha_lower -> y .)
    X               reduce using rule 144 (alpha_lower -> y .)
    Y               reduce using rule 144 (alpha_lower -> y .)
    Z               reduce using rule 144 (alpha_lower -> y .)
    ]               reduce using rule 144 (alpha_lower -> y .)
    ^               reduce using rule 144 (alpha_lower -> y .)
    |               reduce using rule 144 (alpha_lower -> y .)
    $end            reduce using rule 144 (alpha_lower -> y .)


state 82

    (127) alpha_lower -> h .

    -               reduce using rule 127 (alpha_lower -> h .)
    !               reduce using rule 127 (alpha_lower -> h .)
    "               reduce using rule 127 (alpha_lower -> h .)
    #               reduce using rule 127 (alpha_lower -> h .)
    $               reduce using rule 127 (alpha_lower -> h .)
    %               reduce using rule 127 (alpha_lower -> h .)
    &               reduce using rule 127 (alpha_lower -> h .)
    '               reduce using rule 127 (alpha_lower -> h .)
    (               reduce using rule 127 (alpha_lower -> h .)
    )               reduce using rule 127 (alpha_lower -> h .)
    *               reduce using rule 127 (alpha_lower -> h .)
    +               reduce using rule 127 (alpha_lower -> h .)
    ,               reduce using rule 127 (alpha_lower -> h .)
    .               reduce using rule 127 (alpha_lower -> h .)
    /               reduce using rule 127 (alpha_lower -> h .)
    :               reduce using rule 127 (alpha_lower -> h .)
    ;               reduce using rule 127 (alpha_lower -> h .)
    <               reduce using rule 127 (alpha_lower -> h .)
    =               reduce using rule 127 (alpha_lower -> h .)
    >               reduce using rule 127 (alpha_lower -> h .)
    ?               reduce using rule 127 (alpha_lower -> h .)
    @               reduce using rule 127 (alpha_lower -> h .)
    [               reduce using rule 127 (alpha_lower -> h .)
    \               reduce using rule 127 (alpha_lower -> h .)
    _               reduce using rule 127 (alpha_lower -> h .)
    `               reduce using rule 127 (alpha_lower -> h .)
    {               reduce using rule 127 (alpha_lower -> h .)
    }               reduce using rule 127 (alpha_lower -> h .)
    ~               reduce using rule 127 (alpha_lower -> h .)
    ESCAPED         reduce using rule 127 (alpha_lower -> h .)
    DIGIT           reduce using rule 127 (alpha_lower -> h .)
    OTHER           reduce using rule 127 (alpha_lower -> h .)
    a               reduce using rule 127 (alpha_lower -> h .)
    b               reduce using rule 127 (alpha_lower -> h .)
    c               reduce using rule 127 (alpha_lower -> h .)
    d               reduce using rule 127 (alpha_lower -> h .)
    e               reduce using rule 127 (alpha_lower -> h .)
    f               reduce using rule 127 (alpha_lower -> h .)
    g               reduce using rule 127 (alpha_lower -> h .)
    h               reduce using rule 127 (alpha_lower -> h .)
    i               reduce using rule 127 (alpha_lower -> h .)
    j               reduce using rule 127 (alpha_lower -> h .)
    k               reduce using rule 127 (alpha_lower -> h .)
    l               reduce using rule 127 (alpha_lower -> h .)
    m               reduce using rule 127 (alpha_lower -> h .)
    n               reduce using rule 127 (alpha_lower -> h .)
    o               reduce using rule 127 (alpha_lower -> h .)
    p               reduce using rule 127 (alpha_lower -> h .)
    q               reduce using rule 127 (alpha_lower -> h .)
    r               reduce using rule 127 (alpha_lower -> h .)
    s               reduce using rule 127 (alpha_lower -> h .)
    t               reduce using rule 127 (alpha_lower -> h .)
    u               reduce using rule 127 (alpha_lower -> h .)
    v               reduce using rule 127 (alpha_lower -> h .)
    w               reduce using rule 127 (alpha_lower -> h .)
    x               reduce using rule 127 (alpha_lower -> h .)
    y               reduce using rule 127 (alpha_lower -> h .)
    z               reduce using rule 127 (alpha_lower -> h .)
    A               reduce using rule 127 (alpha_lower -> h .)
    B               reduce using rule 127 (alpha_lower -> h .)
    C               reduce using rule 127 (alpha_lower -> h .)
    D               reduce using rule 127 (alpha_lower -> h .)
    E               reduce using rule 127 (alpha_lower -> h .)
    F               reduce using rule 127 (alpha_lower -> h .)
    G               reduce using rule 127 (alpha_lower -> h .)
    H               reduce using rule 127 (alpha_lower -> h .)
    I               reduce using rule 127 (alpha_lower -> h .)
    J               reduce using rule 127 (alpha_lower -> h .)
    K               reduce using rule 127 (alpha_lower -> h .)
    L               reduce using rule 127 (alpha_lower -> h .)
    M               reduce using rule 127 (alpha_lower -> h .)
    N               reduce using rule 127 (alpha_lower -> h .)
    O               reduce using rule 127 (alpha_lower -> h .)
    P               reduce using rule 127 (alpha_lower -> h .)
    Q               reduce using rule 127 (alpha_lower -> h .)
    R               reduce using rule 127 (alpha_lower -> h .)
    S               reduce using rule 127 (alpha_lower -> h .)
    T               reduce using rule 127 (alpha_lower -> h .)
    U               reduce using rule 127 (alpha_lower -> h .)
    V               reduce using rule 127 (alpha_lower -> h .)
    W               reduce using rule 127 (alpha_lower -> h .)
    X               reduce using rule 127 (alpha_lower -> h .)
    Y               reduce using rule 127 (alpha_lower -> h .)
    Z               reduce using rule 127 (alpha_lower -> h .)
    ]               reduce using rule 127 (alpha_lower -> h .)
    ^               reduce using rule 127 (alpha_lower -> h .)
    |               reduce using rule 127 (alpha_lower -> h .)
    $end            reduce using rule 127 (alpha_lower -> h .)


state 83

    (170) alpha_upper -> Y .

    *               reduce using rule 170 (alpha_upper -> Y .)
    +               reduce using rule 170 (alpha_upper -> Y .)
    ?               reduce using rule 170 (alpha_upper -> Y .)
    {               reduce using rule 170 (alpha_upper -> Y .)
    (               reduce using rule 170 (alpha_upper -> Y .)
    ^               reduce using rule 170 (alpha_upper -> Y .)
    >               reduce using rule 170 (alpha_upper -> Y .)
    <               reduce using rule 170 (alpha_upper -> Y .)
    /               reduce using rule 170 (alpha_upper -> Y .)
    \               reduce using rule 170 (alpha_upper -> Y .)
    #               reduce using rule 170 (alpha_upper -> Y .)
    %               reduce using rule 170 (alpha_upper -> Y .)
    ESCAPED         reduce using rule 170 (alpha_upper -> Y .)
    DIGIT           reduce using rule 170 (alpha_upper -> Y .)
    OTHER           reduce using rule 170 (alpha_upper -> Y .)
    [               reduce using rule 170 (alpha_upper -> Y .)
    .               reduce using rule 170 (alpha_upper -> Y .)
    ,               reduce using rule 170 (alpha_upper -> Y .)
    :               reduce using rule 170 (alpha_upper -> Y .)
    ;               reduce using rule 170 (alpha_upper -> Y .)
    $               reduce using rule 170 (alpha_upper -> Y .)
    `               reduce using rule 170 (alpha_upper -> Y .)
    a               reduce using rule 170 (alpha_upper -> Y .)
    b               reduce using rule 170 (alpha_upper -> Y .)
    c               reduce using rule 170 (alpha_upper -> Y .)
    d               reduce using rule 170 (alpha_upper -> Y .)
    e               reduce using rule 170 (alpha_upper -> Y .)
    f               reduce using rule 170 (alpha_upper -> Y .)
    g               reduce using rule 170 (alpha_upper -> Y .)
    h               reduce using rule 170 (alpha_upper -> Y .)
    i               reduce using rule 170 (alpha_upper -> Y .)
    j               reduce using rule 170 (alpha_upper -> Y .)
    k               reduce using rule 170 (alpha_upper -> Y .)
    l               reduce using rule 170 (alpha_upper -> Y .)
    m               reduce using rule 170 (alpha_upper -> Y .)
    n               reduce using rule 170 (alpha_upper -> Y .)
    o               reduce using rule 170 (alpha_upper -> Y .)
    p               reduce using rule 170 (alpha_upper -> Y .)
    q               reduce using rule 170 (alpha_upper -> Y .)
    r               reduce using rule 170 (alpha_upper -> Y .)
    s               reduce using rule 170 (alpha_upper -> Y .)
    t               reduce using rule 170 (alpha_upper -> Y .)
    u               reduce using rule 170 (alpha_upper -> Y .)
    v               reduce using rule 170 (alpha_upper -> Y .)
    w               reduce using rule 170 (alpha_upper -> Y .)
    x               reduce using rule 170 (alpha_upper -> Y .)
    y               reduce using rule 170 (alpha_upper -> Y .)
    z               reduce using rule 170 (alpha_upper -> Y .)
    A               reduce using rule 170 (alpha_upper -> Y .)
    B               reduce using rule 170 (alpha_upper -> Y .)
    C               reduce using rule 170 (alpha_upper -> Y .)
    D               reduce using rule 170 (alpha_upper -> Y .)
    E               reduce using rule 170 (alpha_upper -> Y .)
    F               reduce using rule 170 (alpha_upper -> Y .)
    G               reduce using rule 170 (alpha_upper -> Y .)
    H               reduce using rule 170 (alpha_upper -> Y .)
    I               reduce using rule 170 (alpha_upper -> Y .)
    J               reduce using rule 170 (alpha_upper -> Y .)
    K               reduce using rule 170 (alpha_upper -> Y .)
    L               reduce using rule 170 (alpha_upper -> Y .)
    M               reduce using rule 170 (alpha_upper -> Y .)
    N               reduce using rule 170 (alpha_upper -> Y .)
    O               reduce using rule 170 (alpha_upper -> Y .)
    P               reduce using rule 170 (alpha_upper -> Y .)
    Q               reduce using rule 170 (alpha_upper -> Y .)
    R               reduce using rule 170 (alpha_upper -> Y .)
    S               reduce using rule 170 (alpha_upper -> Y .)
    T               reduce using rule 170 (alpha_upper -> Y .)
    U               reduce using rule 170 (alpha_upper -> Y .)
    V               reduce using rule 170 (alpha_upper -> Y .)
    W               reduce using rule 170 (alpha_upper -> Y .)
    X               reduce using rule 170 (alpha_upper -> Y .)
    Y               reduce using rule 170 (alpha_upper -> Y .)
    Z               reduce using rule 170 (alpha_upper -> Y .)
    |               reduce using rule 170 (alpha_upper -> Y .)
    $end            reduce using rule 170 (alpha_upper -> Y .)
    )               reduce using rule 170 (alpha_upper -> Y .)
    -               reduce using rule 170 (alpha_upper -> Y .)
    !               reduce using rule 170 (alpha_upper -> Y .)
    "               reduce using rule 170 (alpha_upper -> Y .)
    &               reduce using rule 170 (alpha_upper -> Y .)
    '               reduce using rule 170 (alpha_upper -> Y .)
    =               reduce using rule 170 (alpha_upper -> Y .)
    @               reduce using rule 170 (alpha_upper -> Y .)
    _               reduce using rule 170 (alpha_upper -> Y .)
    }               reduce using rule 170 (alpha_upper -> Y .)
    ~               reduce using rule 170 (alpha_upper -> Y .)
    ]               reduce using rule 170 (alpha_upper -> Y .)


state 84

    (16) basequantifier -> optional .

    ?               reduce using rule 16 (basequantifier -> optional .)
    (               reduce using rule 16 (basequantifier -> optional .)
    ^               reduce using rule 16 (basequantifier -> optional .)
    >               reduce using rule 16 (basequantifier -> optional .)
    <               reduce using rule 16 (basequantifier -> optional .)
    /               reduce using rule 16 (basequantifier -> optional .)
    \               reduce using rule 16 (basequantifier -> optional .)
    #               reduce using rule 16 (basequantifier -> optional .)
    %               reduce using rule 16 (basequantifier -> optional .)
    ESCAPED         reduce using rule 16 (basequantifier -> optional .)
    DIGIT           reduce using rule 16 (basequantifier -> optional .)
    OTHER           reduce using rule 16 (basequantifier -> optional .)
    [               reduce using rule 16 (basequantifier -> optional .)
    .               reduce using rule 16 (basequantifier -> optional .)
    ,               reduce using rule 16 (basequantifier -> optional .)
    :               reduce using rule 16 (basequantifier -> optional .)
    ;               reduce using rule 16 (basequantifier -> optional .)
    $               reduce using rule 16 (basequantifier -> optional .)
    `               reduce using rule 16 (basequantifier -> optional .)
    a               reduce using rule 16 (basequantifier -> optional .)
    b               reduce using rule 16 (basequantifier -> optional .)
    c               reduce using rule 16 (basequantifier -> optional .)
    d               reduce using rule 16 (basequantifier -> optional .)
    e               reduce using rule 16 (basequantifier -> optional .)
    f               reduce using rule 16 (basequantifier -> optional .)
    g               reduce using rule 16 (basequantifier -> optional .)
    h               reduce using rule 16 (basequantifier -> optional .)
    i               reduce using rule 16 (basequantifier -> optional .)
    j               reduce using rule 16 (basequantifier -> optional .)
    k               reduce using rule 16 (basequantifier -> optional .)
    l               reduce using rule 16 (basequantifier -> optional .)
    m               reduce using rule 16 (basequantifier -> optional .)
    n               reduce using rule 16 (basequantifier -> optional .)
    o               reduce using rule 16 (basequantifier -> optional .)
    p               reduce using rule 16 (basequantifier -> optional .)
    q               reduce using rule 16 (basequantifier -> optional .)
    r               reduce using rule 16 (basequantifier -> optional .)
    s               reduce using rule 16 (basequantifier -> optional .)
    t               reduce using rule 16 (basequantifier -> optional .)
    u               reduce using rule 16 (basequantifier -> optional .)
    v               reduce using rule 16 (basequantifier -> optional .)
    w               reduce using rule 16 (basequantifier -> optional .)
    x               reduce using rule 16 (basequantifier -> optional .)
    y               reduce using rule 16 (basequantifier -> optional .)
    z               reduce using rule 16 (basequantifier -> optional .)
    A               reduce using rule 16 (basequantifier -> optional .)
    B               reduce using rule 16 (basequantifier -> optional .)
    C               reduce using rule 16 (basequantifier -> optional .)
    D               reduce using rule 16 (basequantifier -> optional .)
    E               reduce using rule 16 (basequantifier -> optional .)
    F               reduce using rule 16 (basequantifier -> optional .)
    G               reduce using rule 16 (basequantifier -> optional .)
    H               reduce using rule 16 (basequantifier -> optional .)
    I               reduce using rule 16 (basequantifier -> optional .)
    J               reduce using rule 16 (basequantifier -> optional .)
    K               reduce using rule 16 (basequantifier -> optional .)
    L               reduce using rule 16 (basequantifier -> optional .)
    M               reduce using rule 16 (basequantifier -> optional .)
    N               reduce using rule 16 (basequantifier -> optional .)
    O               reduce using rule 16 (basequantifier -> optional .)
    P               reduce using rule 16 (basequantifier -> optional .)
    Q               reduce using rule 16 (basequantifier -> optional .)
    R               reduce using rule 16 (basequantifier -> optional .)
    S               reduce using rule 16 (basequantifier -> optional .)
    T               reduce using rule 16 (basequantifier -> optional .)
    U               reduce using rule 16 (basequantifier -> optional .)
    V               reduce using rule 16 (basequantifier -> optional .)
    W               reduce using rule 16 (basequantifier -> optional .)
    X               reduce using rule 16 (basequantifier -> optional .)
    Y               reduce using rule 16 (basequantifier -> optional .)
    Z               reduce using rule 16 (basequantifier -> optional .)
    |               reduce using rule 16 (basequantifier -> optional .)
    )               reduce using rule 16 (basequantifier -> optional .)
    $end            reduce using rule 16 (basequantifier -> optional .)


state 85

    (153) alpha_upper -> H .

    *               reduce using rule 153 (alpha_upper -> H .)
    +               reduce using rule 153 (alpha_upper -> H .)
    ?               reduce using rule 153 (alpha_upper -> H .)
    {               reduce using rule 153 (alpha_upper -> H .)
    (               reduce using rule 153 (alpha_upper -> H .)
    ^               reduce using rule 153 (alpha_upper -> H .)
    >               reduce using rule 153 (alpha_upper -> H .)
    <               reduce using rule 153 (alpha_upper -> H .)
    /               reduce using rule 153 (alpha_upper -> H .)
    \               reduce using rule 153 (alpha_upper -> H .)
    #               reduce using rule 153 (alpha_upper -> H .)
    %               reduce using rule 153 (alpha_upper -> H .)
    ESCAPED         reduce using rule 153 (alpha_upper -> H .)
    DIGIT           reduce using rule 153 (alpha_upper -> H .)
    OTHER           reduce using rule 153 (alpha_upper -> H .)
    [               reduce using rule 153 (alpha_upper -> H .)
    .               reduce using rule 153 (alpha_upper -> H .)
    ,               reduce using rule 153 (alpha_upper -> H .)
    :               reduce using rule 153 (alpha_upper -> H .)
    ;               reduce using rule 153 (alpha_upper -> H .)
    $               reduce using rule 153 (alpha_upper -> H .)
    `               reduce using rule 153 (alpha_upper -> H .)
    a               reduce using rule 153 (alpha_upper -> H .)
    b               reduce using rule 153 (alpha_upper -> H .)
    c               reduce using rule 153 (alpha_upper -> H .)
    d               reduce using rule 153 (alpha_upper -> H .)
    e               reduce using rule 153 (alpha_upper -> H .)
    f               reduce using rule 153 (alpha_upper -> H .)
    g               reduce using rule 153 (alpha_upper -> H .)
    h               reduce using rule 153 (alpha_upper -> H .)
    i               reduce using rule 153 (alpha_upper -> H .)
    j               reduce using rule 153 (alpha_upper -> H .)
    k               reduce using rule 153 (alpha_upper -> H .)
    l               reduce using rule 153 (alpha_upper -> H .)
    m               reduce using rule 153 (alpha_upper -> H .)
    n               reduce using rule 153 (alpha_upper -> H .)
    o               reduce using rule 153 (alpha_upper -> H .)
    p               reduce using rule 153 (alpha_upper -> H .)
    q               reduce using rule 153 (alpha_upper -> H .)
    r               reduce using rule 153 (alpha_upper -> H .)
    s               reduce using rule 153 (alpha_upper -> H .)
    t               reduce using rule 153 (alpha_upper -> H .)
    u               reduce using rule 153 (alpha_upper -> H .)
    v               reduce using rule 153 (alpha_upper -> H .)
    w               reduce using rule 153 (alpha_upper -> H .)
    x               reduce using rule 153 (alpha_upper -> H .)
    y               reduce using rule 153 (alpha_upper -> H .)
    z               reduce using rule 153 (alpha_upper -> H .)
    A               reduce using rule 153 (alpha_upper -> H .)
    B               reduce using rule 153 (alpha_upper -> H .)
    C               reduce using rule 153 (alpha_upper -> H .)
    D               reduce using rule 153 (alpha_upper -> H .)
    E               reduce using rule 153 (alpha_upper -> H .)
    F               reduce using rule 153 (alpha_upper -> H .)
    G               reduce using rule 153 (alpha_upper -> H .)
    H               reduce using rule 153 (alpha_upper -> H .)
    I               reduce using rule 153 (alpha_upper -> H .)
    J               reduce using rule 153 (alpha_upper -> H .)
    K               reduce using rule 153 (alpha_upper -> H .)
    L               reduce using rule 153 (alpha_upper -> H .)
    M               reduce using rule 153 (alpha_upper -> H .)
    N               reduce using rule 153 (alpha_upper -> H .)
    O               reduce using rule 153 (alpha_upper -> H .)
    P               reduce using rule 153 (alpha_upper -> H .)
    Q               reduce using rule 153 (alpha_upper -> H .)
    R               reduce using rule 153 (alpha_upper -> H .)
    S               reduce using rule 153 (alpha_upper -> H .)
    T               reduce using rule 153 (alpha_upper -> H .)
    U               reduce using rule 153 (alpha_upper -> H .)
    V               reduce using rule 153 (alpha_upper -> H .)
    W               reduce using rule 153 (alpha_upper -> H .)
    X               reduce using rule 153 (alpha_upper -> H .)
    Y               reduce using rule 153 (alpha_upper -> H .)
    Z               reduce using rule 153 (alpha_upper -> H .)
    |               reduce using rule 153 (alpha_upper -> H .)
    $end            reduce using rule 153 (alpha_upper -> H .)
    )               reduce using rule 153 (alpha_upper -> H .)
    -               reduce using rule 153 (alpha_upper -> H .)
    !               reduce using rule 153 (alpha_upper -> H .)
    "               reduce using rule 153 (alpha_upper -> H .)
    &               reduce using rule 153 (alpha_upper -> H .)
    '               reduce using rule 153 (alpha_upper -> H .)
    =               reduce using rule 153 (alpha_upper -> H .)
    @               reduce using rule 153 (alpha_upper -> H .)
    _               reduce using rule 153 (alpha_upper -> H .)
    }               reduce using rule 153 (alpha_upper -> H .)
    ~               reduce using rule 153 (alpha_upper -> H .)
    ]               reduce using rule 153 (alpha_upper -> H .)


state 86

    (122) alpha_lower -> c .

    -               reduce using rule 122 (alpha_lower -> c .)
    !               reduce using rule 122 (alpha_lower -> c .)
    "               reduce using rule 122 (alpha_lower -> c .)
    #               reduce using rule 122 (alpha_lower -> c .)
    $               reduce using rule 122 (alpha_lower -> c .)
    %               reduce using rule 122 (alpha_lower -> c .)
    &               reduce using rule 122 (alpha_lower -> c .)
    '               reduce using rule 122 (alpha_lower -> c .)
    (               reduce using rule 122 (alpha_lower -> c .)
    )               reduce using rule 122 (alpha_lower -> c .)
    *               reduce using rule 122 (alpha_lower -> c .)
    +               reduce using rule 122 (alpha_lower -> c .)
    ,               reduce using rule 122 (alpha_lower -> c .)
    .               reduce using rule 122 (alpha_lower -> c .)
    /               reduce using rule 122 (alpha_lower -> c .)
    :               reduce using rule 122 (alpha_lower -> c .)
    ;               reduce using rule 122 (alpha_lower -> c .)
    <               reduce using rule 122 (alpha_lower -> c .)
    =               reduce using rule 122 (alpha_lower -> c .)
    >               reduce using rule 122 (alpha_lower -> c .)
    ?               reduce using rule 122 (alpha_lower -> c .)
    @               reduce using rule 122 (alpha_lower -> c .)
    [               reduce using rule 122 (alpha_lower -> c .)
    \               reduce using rule 122 (alpha_lower -> c .)
    _               reduce using rule 122 (alpha_lower -> c .)
    `               reduce using rule 122 (alpha_lower -> c .)
    {               reduce using rule 122 (alpha_lower -> c .)
    }               reduce using rule 122 (alpha_lower -> c .)
    ~               reduce using rule 122 (alpha_lower -> c .)
    ESCAPED         reduce using rule 122 (alpha_lower -> c .)
    DIGIT           reduce using rule 122 (alpha_lower -> c .)
    OTHER           reduce using rule 122 (alpha_lower -> c .)
    a               reduce using rule 122 (alpha_lower -> c .)
    b               reduce using rule 122 (alpha_lower -> c .)
    c               reduce using rule 122 (alpha_lower -> c .)
    d               reduce using rule 122 (alpha_lower -> c .)
    e               reduce using rule 122 (alpha_lower -> c .)
    f               reduce using rule 122 (alpha_lower -> c .)
    g               reduce using rule 122 (alpha_lower -> c .)
    h               reduce using rule 122 (alpha_lower -> c .)
    i               reduce using rule 122 (alpha_lower -> c .)
    j               reduce using rule 122 (alpha_lower -> c .)
    k               reduce using rule 122 (alpha_lower -> c .)
    l               reduce using rule 122 (alpha_lower -> c .)
    m               reduce using rule 122 (alpha_lower -> c .)
    n               reduce using rule 122 (alpha_lower -> c .)
    o               reduce using rule 122 (alpha_lower -> c .)
    p               reduce using rule 122 (alpha_lower -> c .)
    q               reduce using rule 122 (alpha_lower -> c .)
    r               reduce using rule 122 (alpha_lower -> c .)
    s               reduce using rule 122 (alpha_lower -> c .)
    t               reduce using rule 122 (alpha_lower -> c .)
    u               reduce using rule 122 (alpha_lower -> c .)
    v               reduce using rule 122 (alpha_lower -> c .)
    w               reduce using rule 122 (alpha_lower -> c .)
    x               reduce using rule 122 (alpha_lower -> c .)
    y               reduce using rule 122 (alpha_lower -> c .)
    z               reduce using rule 122 (alpha_lower -> c .)
    A               reduce using rule 122 (alpha_lower -> c .)
    B               reduce using rule 122 (alpha_lower -> c .)
    C               reduce using rule 122 (alpha_lower -> c .)
    D               reduce using rule 122 (alpha_lower -> c .)
    E               reduce using rule 122 (alpha_lower -> c .)
    F               reduce using rule 122 (alpha_lower -> c .)
    G               reduce using rule 122 (alpha_lower -> c .)
    H               reduce using rule 122 (alpha_lower -> c .)
    I               reduce using rule 122 (alpha_lower -> c .)
    J               reduce using rule 122 (alpha_lower -> c .)
    K               reduce using rule 122 (alpha_lower -> c .)
    L               reduce using rule 122 (alpha_lower -> c .)
    M               reduce using rule 122 (alpha_lower -> c .)
    N               reduce using rule 122 (alpha_lower -> c .)
    O               reduce using rule 122 (alpha_lower -> c .)
    P               reduce using rule 122 (alpha_lower -> c .)
    Q               reduce using rule 122 (alpha_lower -> c .)
    R               reduce using rule 122 (alpha_lower -> c .)
    S               reduce using rule 122 (alpha_lower -> c .)
    T               reduce using rule 122 (alpha_lower -> c .)
    U               reduce using rule 122 (alpha_lower -> c .)
    V               reduce using rule 122 (alpha_lower -> c .)
    W               reduce using rule 122 (alpha_lower -> c .)
    X               reduce using rule 122 (alpha_lower -> c .)
    Y               reduce using rule 122 (alpha_lower -> c .)
    Z               reduce using rule 122 (alpha_lower -> c .)
    ]               reduce using rule 122 (alpha_lower -> c .)
    ^               reduce using rule 122 (alpha_lower -> c .)
    |               reduce using rule 122 (alpha_lower -> c .)
    $end            reduce using rule 122 (alpha_lower -> c .)


state 87

    (123) alpha_lower -> d .

    -               reduce using rule 123 (alpha_lower -> d .)
    !               reduce using rule 123 (alpha_lower -> d .)
    "               reduce using rule 123 (alpha_lower -> d .)
    #               reduce using rule 123 (alpha_lower -> d .)
    $               reduce using rule 123 (alpha_lower -> d .)
    %               reduce using rule 123 (alpha_lower -> d .)
    &               reduce using rule 123 (alpha_lower -> d .)
    '               reduce using rule 123 (alpha_lower -> d .)
    (               reduce using rule 123 (alpha_lower -> d .)
    )               reduce using rule 123 (alpha_lower -> d .)
    *               reduce using rule 123 (alpha_lower -> d .)
    +               reduce using rule 123 (alpha_lower -> d .)
    ,               reduce using rule 123 (alpha_lower -> d .)
    .               reduce using rule 123 (alpha_lower -> d .)
    /               reduce using rule 123 (alpha_lower -> d .)
    :               reduce using rule 123 (alpha_lower -> d .)
    ;               reduce using rule 123 (alpha_lower -> d .)
    <               reduce using rule 123 (alpha_lower -> d .)
    =               reduce using rule 123 (alpha_lower -> d .)
    >               reduce using rule 123 (alpha_lower -> d .)
    ?               reduce using rule 123 (alpha_lower -> d .)
    @               reduce using rule 123 (alpha_lower -> d .)
    [               reduce using rule 123 (alpha_lower -> d .)
    \               reduce using rule 123 (alpha_lower -> d .)
    _               reduce using rule 123 (alpha_lower -> d .)
    `               reduce using rule 123 (alpha_lower -> d .)
    {               reduce using rule 123 (alpha_lower -> d .)
    }               reduce using rule 123 (alpha_lower -> d .)
    ~               reduce using rule 123 (alpha_lower -> d .)
    ESCAPED         reduce using rule 123 (alpha_lower -> d .)
    DIGIT           reduce using rule 123 (alpha_lower -> d .)
    OTHER           reduce using rule 123 (alpha_lower -> d .)
    a               reduce using rule 123 (alpha_lower -> d .)
    b               reduce using rule 123 (alpha_lower -> d .)
    c               reduce using rule 123 (alpha_lower -> d .)
    d               reduce using rule 123 (alpha_lower -> d .)
    e               reduce using rule 123 (alpha_lower -> d .)
    f               reduce using rule 123 (alpha_lower -> d .)
    g               reduce using rule 123 (alpha_lower -> d .)
    h               reduce using rule 123 (alpha_lower -> d .)
    i               reduce using rule 123 (alpha_lower -> d .)
    j               reduce using rule 123 (alpha_lower -> d .)
    k               reduce using rule 123 (alpha_lower -> d .)
    l               reduce using rule 123 (alpha_lower -> d .)
    m               reduce using rule 123 (alpha_lower -> d .)
    n               reduce using rule 123 (alpha_lower -> d .)
    o               reduce using rule 123 (alpha_lower -> d .)
    p               reduce using rule 123 (alpha_lower -> d .)
    q               reduce using rule 123 (alpha_lower -> d .)
    r               reduce using rule 123 (alpha_lower -> d .)
    s               reduce using rule 123 (alpha_lower -> d .)
    t               reduce using rule 123 (alpha_lower -> d .)
    u               reduce using rule 123 (alpha_lower -> d .)
    v               reduce using rule 123 (alpha_lower -> d .)
    w               reduce using rule 123 (alpha_lower -> d .)
    x               reduce using rule 123 (alpha_lower -> d .)
    y               reduce using rule 123 (alpha_lower -> d .)
    z               reduce using rule 123 (alpha_lower -> d .)
    A               reduce using rule 123 (alpha_lower -> d .)
    B               reduce using rule 123 (alpha_lower -> d .)
    C               reduce using rule 123 (alpha_lower -> d .)
    D               reduce using rule 123 (alpha_lower -> d .)
    E               reduce using rule 123 (alpha_lower -> d .)
    F               reduce using rule 123 (alpha_lower -> d .)
    G               reduce using rule 123 (alpha_lower -> d .)
    H               reduce using rule 123 (alpha_lower -> d .)
    I               reduce using rule 123 (alpha_lower -> d .)
    J               reduce using rule 123 (alpha_lower -> d .)
    K               reduce using rule 123 (alpha_lower -> d .)
    L               reduce using rule 123 (alpha_lower -> d .)
    M               reduce using rule 123 (alpha_lower -> d .)
    N               reduce using rule 123 (alpha_lower -> d .)
    O               reduce using rule 123 (alpha_lower -> d .)
    P               reduce using rule 123 (alpha_lower -> d .)
    Q               reduce using rule 123 (alpha_lower -> d .)
    R               reduce using rule 123 (alpha_lower -> d .)
    S               reduce using rule 123 (alpha_lower -> d .)
    T               reduce using rule 123 (alpha_lower -> d .)
    U               reduce using rule 123 (alpha_lower -> d .)
    V               reduce using rule 123 (alpha_lower -> d .)
    W               reduce using rule 123 (alpha_lower -> d .)
    X               reduce using rule 123 (alpha_lower -> d .)
    Y               reduce using rule 123 (alpha_lower -> d .)
    Z               reduce using rule 123 (alpha_lower -> d .)
    ]               reduce using rule 123 (alpha_lower -> d .)
    ^               reduce using rule 123 (alpha_lower -> d .)
    |               reduce using rule 123 (alpha_lower -> d .)
    $end            reduce using rule 123 (alpha_lower -> d .)


state 88

    (159) alpha_upper -> N .

    *               reduce using rule 159 (alpha_upper -> N .)
    +               reduce using rule 159 (alpha_upper -> N .)
    ?               reduce using rule 159 (alpha_upper -> N .)
    {               reduce using rule 159 (alpha_upper -> N .)
    (               reduce using rule 159 (alpha_upper -> N .)
    ^               reduce using rule 159 (alpha_upper -> N .)
    >               reduce using rule 159 (alpha_upper -> N .)
    <               reduce using rule 159 (alpha_upper -> N .)
    /               reduce using rule 159 (alpha_upper -> N .)
    \               reduce using rule 159 (alpha_upper -> N .)
    #               reduce using rule 159 (alpha_upper -> N .)
    %               reduce using rule 159 (alpha_upper -> N .)
    ESCAPED         reduce using rule 159 (alpha_upper -> N .)
    DIGIT           reduce using rule 159 (alpha_upper -> N .)
    OTHER           reduce using rule 159 (alpha_upper -> N .)
    [               reduce using rule 159 (alpha_upper -> N .)
    .               reduce using rule 159 (alpha_upper -> N .)
    ,               reduce using rule 159 (alpha_upper -> N .)
    :               reduce using rule 159 (alpha_upper -> N .)
    ;               reduce using rule 159 (alpha_upper -> N .)
    $               reduce using rule 159 (alpha_upper -> N .)
    `               reduce using rule 159 (alpha_upper -> N .)
    a               reduce using rule 159 (alpha_upper -> N .)
    b               reduce using rule 159 (alpha_upper -> N .)
    c               reduce using rule 159 (alpha_upper -> N .)
    d               reduce using rule 159 (alpha_upper -> N .)
    e               reduce using rule 159 (alpha_upper -> N .)
    f               reduce using rule 159 (alpha_upper -> N .)
    g               reduce using rule 159 (alpha_upper -> N .)
    h               reduce using rule 159 (alpha_upper -> N .)
    i               reduce using rule 159 (alpha_upper -> N .)
    j               reduce using rule 159 (alpha_upper -> N .)
    k               reduce using rule 159 (alpha_upper -> N .)
    l               reduce using rule 159 (alpha_upper -> N .)
    m               reduce using rule 159 (alpha_upper -> N .)
    n               reduce using rule 159 (alpha_upper -> N .)
    o               reduce using rule 159 (alpha_upper -> N .)
    p               reduce using rule 159 (alpha_upper -> N .)
    q               reduce using rule 159 (alpha_upper -> N .)
    r               reduce using rule 159 (alpha_upper -> N .)
    s               reduce using rule 159 (alpha_upper -> N .)
    t               reduce using rule 159 (alpha_upper -> N .)
    u               reduce using rule 159 (alpha_upper -> N .)
    v               reduce using rule 159 (alpha_upper -> N .)
    w               reduce using rule 159 (alpha_upper -> N .)
    x               reduce using rule 159 (alpha_upper -> N .)
    y               reduce using rule 159 (alpha_upper -> N .)
    z               reduce using rule 159 (alpha_upper -> N .)
    A               reduce using rule 159 (alpha_upper -> N .)
    B               reduce using rule 159 (alpha_upper -> N .)
    C               reduce using rule 159 (alpha_upper -> N .)
    D               reduce using rule 159 (alpha_upper -> N .)
    E               reduce using rule 159 (alpha_upper -> N .)
    F               reduce using rule 159 (alpha_upper -> N .)
    G               reduce using rule 159 (alpha_upper -> N .)
    H               reduce using rule 159 (alpha_upper -> N .)
    I               reduce using rule 159 (alpha_upper -> N .)
    J               reduce using rule 159 (alpha_upper -> N .)
    K               reduce using rule 159 (alpha_upper -> N .)
    L               reduce using rule 159 (alpha_upper -> N .)
    M               reduce using rule 159 (alpha_upper -> N .)
    N               reduce using rule 159 (alpha_upper -> N .)
    O               reduce using rule 159 (alpha_upper -> N .)
    P               reduce using rule 159 (alpha_upper -> N .)
    Q               reduce using rule 159 (alpha_upper -> N .)
    R               reduce using rule 159 (alpha_upper -> N .)
    S               reduce using rule 159 (alpha_upper -> N .)
    T               reduce using rule 159 (alpha_upper -> N .)
    U               reduce using rule 159 (alpha_upper -> N .)
    V               reduce using rule 159 (alpha_upper -> N .)
    W               reduce using rule 159 (alpha_upper -> N .)
    X               reduce using rule 159 (alpha_upper -> N .)
    Y               reduce using rule 159 (alpha_upper -> N .)
    Z               reduce using rule 159 (alpha_upper -> N .)
    |               reduce using rule 159 (alpha_upper -> N .)
    $end            reduce using rule 159 (alpha_upper -> N .)
    )               reduce using rule 159 (alpha_upper -> N .)
    -               reduce using rule 159 (alpha_upper -> N .)
    !               reduce using rule 159 (alpha_upper -> N .)
    "               reduce using rule 159 (alpha_upper -> N .)
    &               reduce using rule 159 (alpha_upper -> N .)
    '               reduce using rule 159 (alpha_upper -> N .)
    =               reduce using rule 159 (alpha_upper -> N .)
    @               reduce using rule 159 (alpha_upper -> N .)
    _               reduce using rule 159 (alpha_upper -> N .)
    }               reduce using rule 159 (alpha_upper -> N .)
    ~               reduce using rule 159 (alpha_upper -> N .)
    ]               reduce using rule 159 (alpha_upper -> N .)


state 89

    (109) command -> < .

    *               reduce using rule 109 (command -> < .)
    +               reduce using rule 109 (command -> < .)
    ?               reduce using rule 109 (command -> < .)
    {               reduce using rule 109 (command -> < .)
    (               reduce using rule 109 (command -> < .)
    ^               reduce using rule 109 (command -> < .)
    >               reduce using rule 109 (command -> < .)
    <               reduce using rule 109 (command -> < .)
    /               reduce using rule 109 (command -> < .)
    \               reduce using rule 109 (command -> < .)
    #               reduce using rule 109 (command -> < .)
    %               reduce using rule 109 (command -> < .)
    ESCAPED         reduce using rule 109 (command -> < .)
    DIGIT           reduce using rule 109 (command -> < .)
    OTHER           reduce using rule 109 (command -> < .)
    [               reduce using rule 109 (command -> < .)
    .               reduce using rule 109 (command -> < .)
    ,               reduce using rule 109 (command -> < .)
    :               reduce using rule 109 (command -> < .)
    ;               reduce using rule 109 (command -> < .)
    $               reduce using rule 109 (command -> < .)
    `               reduce using rule 109 (command -> < .)
    a               reduce using rule 109 (command -> < .)
    b               reduce using rule 109 (command -> < .)
    c               reduce using rule 109 (command -> < .)
    d               reduce using rule 109 (command -> < .)
    e               reduce using rule 109 (command -> < .)
    f               reduce using rule 109 (command -> < .)
    g               reduce using rule 109 (command -> < .)
    h               reduce using rule 109 (command -> < .)
    i               reduce using rule 109 (command -> < .)
    j               reduce using rule 109 (command -> < .)
    k               reduce using rule 109 (command -> < .)
    l               reduce using rule 109 (command -> < .)
    m               reduce using rule 109 (command -> < .)
    n               reduce using rule 109 (command -> < .)
    o               reduce using rule 109 (command -> < .)
    p               reduce using rule 109 (command -> < .)
    q               reduce using rule 109 (command -> < .)
    r               reduce using rule 109 (command -> < .)
    s               reduce using rule 109 (command -> < .)
    t               reduce using rule 109 (command -> < .)
    u               reduce using rule 109 (command -> < .)
    v               reduce using rule 109 (command -> < .)
    w               reduce using rule 109 (command -> < .)
    x               reduce using rule 109 (command -> < .)
    y               reduce using rule 109 (command -> < .)
    z               reduce using rule 109 (command -> < .)
    A               reduce using rule 109 (command -> < .)
    B               reduce using rule 109 (command -> < .)
    C               reduce using rule 109 (command -> < .)
    D               reduce using rule 109 (command -> < .)
    E               reduce using rule 109 (command -> < .)
    F               reduce using rule 109 (command -> < .)
    G               reduce using rule 109 (command -> < .)
    H               reduce using rule 109 (command -> < .)
    I               reduce using rule 109 (command -> < .)
    J               reduce using rule 109 (command -> < .)
    K               reduce using rule 109 (command -> < .)
    L               reduce using rule 109 (command -> < .)
    M               reduce using rule 109 (command -> < .)
    N               reduce using rule 109 (command -> < .)
    O               reduce using rule 109 (command -> < .)
    P               reduce using rule 109 (command -> < .)
    Q               reduce using rule 109 (command -> < .)
    R               reduce using rule 109 (command -> < .)
    S               reduce using rule 109 (command -> < .)
    T               reduce using rule 109 (command -> < .)
    U               reduce using rule 109 (command -> < .)
    V               reduce using rule 109 (command -> < .)
    W               reduce using rule 109 (command -> < .)
    X               reduce using rule 109 (command -> < .)
    Y               reduce using rule 109 (command -> < .)
    Z               reduce using rule 109 (command -> < .)
    |               reduce using rule 109 (command -> < .)
    $end            reduce using rule 109 (command -> < .)
    )               reduce using rule 109 (command -> < .)


state 90

    (114) literal -> ESCAPED .

    *               reduce using rule 114 (literal -> ESCAPED .)
    +               reduce using rule 114 (literal -> ESCAPED .)
    ?               reduce using rule 114 (literal -> ESCAPED .)
    {               reduce using rule 114 (literal -> ESCAPED .)
    (               reduce using rule 114 (literal -> ESCAPED .)
    ^               reduce using rule 114 (literal -> ESCAPED .)
    >               reduce using rule 114 (literal -> ESCAPED .)
    <               reduce using rule 114 (literal -> ESCAPED .)
    /               reduce using rule 114 (literal -> ESCAPED .)
    \               reduce using rule 114 (literal -> ESCAPED .)
    #               reduce using rule 114 (literal -> ESCAPED .)
    %               reduce using rule 114 (literal -> ESCAPED .)
    ESCAPED         reduce using rule 114 (literal -> ESCAPED .)
    DIGIT           reduce using rule 114 (literal -> ESCAPED .)
    OTHER           reduce using rule 114 (literal -> ESCAPED .)
    [               reduce using rule 114 (literal -> ESCAPED .)
    .               reduce using rule 114 (literal -> ESCAPED .)
    ,               reduce using rule 114 (literal -> ESCAPED .)
    :               reduce using rule 114 (literal -> ESCAPED .)
    ;               reduce using rule 114 (literal -> ESCAPED .)
    $               reduce using rule 114 (literal -> ESCAPED .)
    `               reduce using rule 114 (literal -> ESCAPED .)
    a               reduce using rule 114 (literal -> ESCAPED .)
    b               reduce using rule 114 (literal -> ESCAPED .)
    c               reduce using rule 114 (literal -> ESCAPED .)
    d               reduce using rule 114 (literal -> ESCAPED .)
    e               reduce using rule 114 (literal -> ESCAPED .)
    f               reduce using rule 114 (literal -> ESCAPED .)
    g               reduce using rule 114 (literal -> ESCAPED .)
    h               reduce using rule 114 (literal -> ESCAPED .)
    i               reduce using rule 114 (literal -> ESCAPED .)
    j               reduce using rule 114 (literal -> ESCAPED .)
    k               reduce using rule 114 (literal -> ESCAPED .)
    l               reduce using rule 114 (literal -> ESCAPED .)
    m               reduce using rule 114 (literal -> ESCAPED .)
    n               reduce using rule 114 (literal -> ESCAPED .)
    o               reduce using rule 114 (literal -> ESCAPED .)
    p               reduce using rule 114 (literal -> ESCAPED .)
    q               reduce using rule 114 (literal -> ESCAPED .)
    r               reduce using rule 114 (literal -> ESCAPED .)
    s               reduce using rule 114 (literal -> ESCAPED .)
    t               reduce using rule 114 (literal -> ESCAPED .)
    u               reduce using rule 114 (literal -> ESCAPED .)
    v               reduce using rule 114 (literal -> ESCAPED .)
    w               reduce using rule 114 (literal -> ESCAPED .)
    x               reduce using rule 114 (literal -> ESCAPED .)
    y               reduce using rule 114 (literal -> ESCAPED .)
    z               reduce using rule 114 (literal -> ESCAPED .)
    A               reduce using rule 114 (literal -> ESCAPED .)
    B               reduce using rule 114 (literal -> ESCAPED .)
    C               reduce using rule 114 (literal -> ESCAPED .)
    D               reduce using rule 114 (literal -> ESCAPED .)
    E               reduce using rule 114 (literal -> ESCAPED .)
    F               reduce using rule 114 (literal -> ESCAPED .)
    G               reduce using rule 114 (literal -> ESCAPED .)
    H               reduce using rule 114 (literal -> ESCAPED .)
    I               reduce using rule 114 (literal -> ESCAPED .)
    J               reduce using rule 114 (literal -> ESCAPED .)
    K               reduce using rule 114 (literal -> ESCAPED .)
    L               reduce using rule 114 (literal -> ESCAPED .)
    M               reduce using rule 114 (literal -> ESCAPED .)
    N               reduce using rule 114 (literal -> ESCAPED .)
    O               reduce using rule 114 (literal -> ESCAPED .)
    P               reduce using rule 114 (literal -> ESCAPED .)
    Q               reduce using rule 114 (literal -> ESCAPED .)
    R               reduce using rule 114 (literal -> ESCAPED .)
    S               reduce using rule 114 (literal -> ESCAPED .)
    T               reduce using rule 114 (literal -> ESCAPED .)
    U               reduce using rule 114 (literal -> ESCAPED .)
    V               reduce using rule 114 (literal -> ESCAPED .)
    W               reduce using rule 114 (literal -> ESCAPED .)
    X               reduce using rule 114 (literal -> ESCAPED .)
    Y               reduce using rule 114 (literal -> ESCAPED .)
    Z               reduce using rule 114 (literal -> ESCAPED .)
    |               reduce using rule 114 (literal -> ESCAPED .)
    )               reduce using rule 114 (literal -> ESCAPED .)
    -               reduce using rule 114 (literal -> ESCAPED .)
    !               reduce using rule 114 (literal -> ESCAPED .)
    "               reduce using rule 114 (literal -> ESCAPED .)
    &               reduce using rule 114 (literal -> ESCAPED .)
    '               reduce using rule 114 (literal -> ESCAPED .)
    =               reduce using rule 114 (literal -> ESCAPED .)
    @               reduce using rule 114 (literal -> ESCAPED .)
    _               reduce using rule 114 (literal -> ESCAPED .)
    }               reduce using rule 114 (literal -> ESCAPED .)
    ~               reduce using rule 114 (literal -> ESCAPED .)
    ]               reduce using rule 114 (literal -> ESCAPED .)
    $end            reduce using rule 114 (literal -> ESCAPED .)


state 91

    (27) elementary -> anchor .

    *               reduce using rule 27 (elementary -> anchor .)
    +               reduce using rule 27 (elementary -> anchor .)
    ?               reduce using rule 27 (elementary -> anchor .)
    {               reduce using rule 27 (elementary -> anchor .)
    (               reduce using rule 27 (elementary -> anchor .)
    ^               reduce using rule 27 (elementary -> anchor .)
    >               reduce using rule 27 (elementary -> anchor .)
    <               reduce using rule 27 (elementary -> anchor .)
    /               reduce using rule 27 (elementary -> anchor .)
    \               reduce using rule 27 (elementary -> anchor .)
    #               reduce using rule 27 (elementary -> anchor .)
    %               reduce using rule 27 (elementary -> anchor .)
    ESCAPED         reduce using rule 27 (elementary -> anchor .)
    DIGIT           reduce using rule 27 (elementary -> anchor .)
    OTHER           reduce using rule 27 (elementary -> anchor .)
    [               reduce using rule 27 (elementary -> anchor .)
    .               reduce using rule 27 (elementary -> anchor .)
    ,               reduce using rule 27 (elementary -> anchor .)
    :               reduce using rule 27 (elementary -> anchor .)
    ;               reduce using rule 27 (elementary -> anchor .)
    $               reduce using rule 27 (elementary -> anchor .)
    `               reduce using rule 27 (elementary -> anchor .)
    a               reduce using rule 27 (elementary -> anchor .)
    b               reduce using rule 27 (elementary -> anchor .)
    c               reduce using rule 27 (elementary -> anchor .)
    d               reduce using rule 27 (elementary -> anchor .)
    e               reduce using rule 27 (elementary -> anchor .)
    f               reduce using rule 27 (elementary -> anchor .)
    g               reduce using rule 27 (elementary -> anchor .)
    h               reduce using rule 27 (elementary -> anchor .)
    i               reduce using rule 27 (elementary -> anchor .)
    j               reduce using rule 27 (elementary -> anchor .)
    k               reduce using rule 27 (elementary -> anchor .)
    l               reduce using rule 27 (elementary -> anchor .)
    m               reduce using rule 27 (elementary -> anchor .)
    n               reduce using rule 27 (elementary -> anchor .)
    o               reduce using rule 27 (elementary -> anchor .)
    p               reduce using rule 27 (elementary -> anchor .)
    q               reduce using rule 27 (elementary -> anchor .)
    r               reduce using rule 27 (elementary -> anchor .)
    s               reduce using rule 27 (elementary -> anchor .)
    t               reduce using rule 27 (elementary -> anchor .)
    u               reduce using rule 27 (elementary -> anchor .)
    v               reduce using rule 27 (elementary -> anchor .)
    w               reduce using rule 27 (elementary -> anchor .)
    x               reduce using rule 27 (elementary -> anchor .)
    y               reduce using rule 27 (elementary -> anchor .)
    z               reduce using rule 27 (elementary -> anchor .)
    A               reduce using rule 27 (elementary -> anchor .)
    B               reduce using rule 27 (elementary -> anchor .)
    C               reduce using rule 27 (elementary -> anchor .)
    D               reduce using rule 27 (elementary -> anchor .)
    E               reduce using rule 27 (elementary -> anchor .)
    F               reduce using rule 27 (elementary -> anchor .)
    G               reduce using rule 27 (elementary -> anchor .)
    H               reduce using rule 27 (elementary -> anchor .)
    I               reduce using rule 27 (elementary -> anchor .)
    J               reduce using rule 27 (elementary -> anchor .)
    K               reduce using rule 27 (elementary -> anchor .)
    L               reduce using rule 27 (elementary -> anchor .)
    M               reduce using rule 27 (elementary -> anchor .)
    N               reduce using rule 27 (elementary -> anchor .)
    O               reduce using rule 27 (elementary -> anchor .)
    P               reduce using rule 27 (elementary -> anchor .)
    Q               reduce using rule 27 (elementary -> anchor .)
    R               reduce using rule 27 (elementary -> anchor .)
    S               reduce using rule 27 (elementary -> anchor .)
    T               reduce using rule 27 (elementary -> anchor .)
    U               reduce using rule 27 (elementary -> anchor .)
    V               reduce using rule 27 (elementary -> anchor .)
    W               reduce using rule 27 (elementary -> anchor .)
    X               reduce using rule 27 (elementary -> anchor .)
    Y               reduce using rule 27 (elementary -> anchor .)
    Z               reduce using rule 27 (elementary -> anchor .)
    |               reduce using rule 27 (elementary -> anchor .)
    )               reduce using rule 27 (elementary -> anchor .)
    $end            reduce using rule 27 (elementary -> anchor .)


state 92

    (157) alpha_upper -> L .

    *               reduce using rule 157 (alpha_upper -> L .)
    +               reduce using rule 157 (alpha_upper -> L .)
    ?               reduce using rule 157 (alpha_upper -> L .)
    {               reduce using rule 157 (alpha_upper -> L .)
    (               reduce using rule 157 (alpha_upper -> L .)
    ^               reduce using rule 157 (alpha_upper -> L .)
    >               reduce using rule 157 (alpha_upper -> L .)
    <               reduce using rule 157 (alpha_upper -> L .)
    /               reduce using rule 157 (alpha_upper -> L .)
    \               reduce using rule 157 (alpha_upper -> L .)
    #               reduce using rule 157 (alpha_upper -> L .)
    %               reduce using rule 157 (alpha_upper -> L .)
    ESCAPED         reduce using rule 157 (alpha_upper -> L .)
    DIGIT           reduce using rule 157 (alpha_upper -> L .)
    OTHER           reduce using rule 157 (alpha_upper -> L .)
    [               reduce using rule 157 (alpha_upper -> L .)
    .               reduce using rule 157 (alpha_upper -> L .)
    ,               reduce using rule 157 (alpha_upper -> L .)
    :               reduce using rule 157 (alpha_upper -> L .)
    ;               reduce using rule 157 (alpha_upper -> L .)
    $               reduce using rule 157 (alpha_upper -> L .)
    `               reduce using rule 157 (alpha_upper -> L .)
    a               reduce using rule 157 (alpha_upper -> L .)
    b               reduce using rule 157 (alpha_upper -> L .)
    c               reduce using rule 157 (alpha_upper -> L .)
    d               reduce using rule 157 (alpha_upper -> L .)
    e               reduce using rule 157 (alpha_upper -> L .)
    f               reduce using rule 157 (alpha_upper -> L .)
    g               reduce using rule 157 (alpha_upper -> L .)
    h               reduce using rule 157 (alpha_upper -> L .)
    i               reduce using rule 157 (alpha_upper -> L .)
    j               reduce using rule 157 (alpha_upper -> L .)
    k               reduce using rule 157 (alpha_upper -> L .)
    l               reduce using rule 157 (alpha_upper -> L .)
    m               reduce using rule 157 (alpha_upper -> L .)
    n               reduce using rule 157 (alpha_upper -> L .)
    o               reduce using rule 157 (alpha_upper -> L .)
    p               reduce using rule 157 (alpha_upper -> L .)
    q               reduce using rule 157 (alpha_upper -> L .)
    r               reduce using rule 157 (alpha_upper -> L .)
    s               reduce using rule 157 (alpha_upper -> L .)
    t               reduce using rule 157 (alpha_upper -> L .)
    u               reduce using rule 157 (alpha_upper -> L .)
    v               reduce using rule 157 (alpha_upper -> L .)
    w               reduce using rule 157 (alpha_upper -> L .)
    x               reduce using rule 157 (alpha_upper -> L .)
    y               reduce using rule 157 (alpha_upper -> L .)
    z               reduce using rule 157 (alpha_upper -> L .)
    A               reduce using rule 157 (alpha_upper -> L .)
    B               reduce using rule 157 (alpha_upper -> L .)
    C               reduce using rule 157 (alpha_upper -> L .)
    D               reduce using rule 157 (alpha_upper -> L .)
    E               reduce using rule 157 (alpha_upper -> L .)
    F               reduce using rule 157 (alpha_upper -> L .)
    G               reduce using rule 157 (alpha_upper -> L .)
    H               reduce using rule 157 (alpha_upper -> L .)
    I               reduce using rule 157 (alpha_upper -> L .)
    J               reduce using rule 157 (alpha_upper -> L .)
    K               reduce using rule 157 (alpha_upper -> L .)
    L               reduce using rule 157 (alpha_upper -> L .)
    M               reduce using rule 157 (alpha_upper -> L .)
    N               reduce using rule 157 (alpha_upper -> L .)
    O               reduce using rule 157 (alpha_upper -> L .)
    P               reduce using rule 157 (alpha_upper -> L .)
    Q               reduce using rule 157 (alpha_upper -> L .)
    R               reduce using rule 157 (alpha_upper -> L .)
    S               reduce using rule 157 (alpha_upper -> L .)
    T               reduce using rule 157 (alpha_upper -> L .)
    U               reduce using rule 157 (alpha_upper -> L .)
    V               reduce using rule 157 (alpha_upper -> L .)
    W               reduce using rule 157 (alpha_upper -> L .)
    X               reduce using rule 157 (alpha_upper -> L .)
    Y               reduce using rule 157 (alpha_upper -> L .)
    Z               reduce using rule 157 (alpha_upper -> L .)
    |               reduce using rule 157 (alpha_upper -> L .)
    $end            reduce using rule 157 (alpha_upper -> L .)
    )               reduce using rule 157 (alpha_upper -> L .)
    -               reduce using rule 157 (alpha_upper -> L .)
    !               reduce using rule 157 (alpha_upper -> L .)
    "               reduce using rule 157 (alpha_upper -> L .)
    &               reduce using rule 157 (alpha_upper -> L .)
    '               reduce using rule 157 (alpha_upper -> L .)
    =               reduce using rule 157 (alpha_upper -> L .)
    @               reduce using rule 157 (alpha_upper -> L .)
    _               reduce using rule 157 (alpha_upper -> L .)
    }               reduce using rule 157 (alpha_upper -> L .)
    ~               reduce using rule 157 (alpha_upper -> L .)
    ]               reduce using rule 157 (alpha_upper -> L .)


state 93

    (3) re -> empty .

    |               reduce using rule 3 (re -> empty .)
    )               reduce using rule 3 (re -> empty .)
    $end            reduce using rule 3 (re -> empty .)


state 94

    (126) alpha_lower -> g .

    -               reduce using rule 126 (alpha_lower -> g .)
    !               reduce using rule 126 (alpha_lower -> g .)
    "               reduce using rule 126 (alpha_lower -> g .)
    #               reduce using rule 126 (alpha_lower -> g .)
    $               reduce using rule 126 (alpha_lower -> g .)
    %               reduce using rule 126 (alpha_lower -> g .)
    &               reduce using rule 126 (alpha_lower -> g .)
    '               reduce using rule 126 (alpha_lower -> g .)
    (               reduce using rule 126 (alpha_lower -> g .)
    )               reduce using rule 126 (alpha_lower -> g .)
    *               reduce using rule 126 (alpha_lower -> g .)
    +               reduce using rule 126 (alpha_lower -> g .)
    ,               reduce using rule 126 (alpha_lower -> g .)
    .               reduce using rule 126 (alpha_lower -> g .)
    /               reduce using rule 126 (alpha_lower -> g .)
    :               reduce using rule 126 (alpha_lower -> g .)
    ;               reduce using rule 126 (alpha_lower -> g .)
    <               reduce using rule 126 (alpha_lower -> g .)
    =               reduce using rule 126 (alpha_lower -> g .)
    >               reduce using rule 126 (alpha_lower -> g .)
    ?               reduce using rule 126 (alpha_lower -> g .)
    @               reduce using rule 126 (alpha_lower -> g .)
    [               reduce using rule 126 (alpha_lower -> g .)
    \               reduce using rule 126 (alpha_lower -> g .)
    _               reduce using rule 126 (alpha_lower -> g .)
    `               reduce using rule 126 (alpha_lower -> g .)
    {               reduce using rule 126 (alpha_lower -> g .)
    }               reduce using rule 126 (alpha_lower -> g .)
    ~               reduce using rule 126 (alpha_lower -> g .)
    ESCAPED         reduce using rule 126 (alpha_lower -> g .)
    DIGIT           reduce using rule 126 (alpha_lower -> g .)
    OTHER           reduce using rule 126 (alpha_lower -> g .)
    a               reduce using rule 126 (alpha_lower -> g .)
    b               reduce using rule 126 (alpha_lower -> g .)
    c               reduce using rule 126 (alpha_lower -> g .)
    d               reduce using rule 126 (alpha_lower -> g .)
    e               reduce using rule 126 (alpha_lower -> g .)
    f               reduce using rule 126 (alpha_lower -> g .)
    g               reduce using rule 126 (alpha_lower -> g .)
    h               reduce using rule 126 (alpha_lower -> g .)
    i               reduce using rule 126 (alpha_lower -> g .)
    j               reduce using rule 126 (alpha_lower -> g .)
    k               reduce using rule 126 (alpha_lower -> g .)
    l               reduce using rule 126 (alpha_lower -> g .)
    m               reduce using rule 126 (alpha_lower -> g .)
    n               reduce using rule 126 (alpha_lower -> g .)
    o               reduce using rule 126 (alpha_lower -> g .)
    p               reduce using rule 126 (alpha_lower -> g .)
    q               reduce using rule 126 (alpha_lower -> g .)
    r               reduce using rule 126 (alpha_lower -> g .)
    s               reduce using rule 126 (alpha_lower -> g .)
    t               reduce using rule 126 (alpha_lower -> g .)
    u               reduce using rule 126 (alpha_lower -> g .)
    v               reduce using rule 126 (alpha_lower -> g .)
    w               reduce using rule 126 (alpha_lower -> g .)
    x               reduce using rule 126 (alpha_lower -> g .)
    y               reduce using rule 126 (alpha_lower -> g .)
    z               reduce using rule 126 (alpha_lower -> g .)
    A               reduce using rule 126 (alpha_lower -> g .)
    B               reduce using rule 126 (alpha_lower -> g .)
    C               reduce using rule 126 (alpha_lower -> g .)
    D               reduce using rule 126 (alpha_lower -> g .)
    E               reduce using rule 126 (alpha_lower -> g .)
    F               reduce using rule 126 (alpha_lower -> g .)
    G               reduce using rule 126 (alpha_lower -> g .)
    H               reduce using rule 126 (alpha_lower -> g .)
    I               reduce using rule 126 (alpha_lower -> g .)
    J               reduce using rule 126 (alpha_lower -> g .)
    K               reduce using rule 126 (alpha_lower -> g .)
    L               reduce using rule 126 (alpha_lower -> g .)
    M               reduce using rule 126 (alpha_lower -> g .)
    N               reduce using rule 126 (alpha_lower -> g .)
    O               reduce using rule 126 (alpha_lower -> g .)
    P               reduce using rule 126 (alpha_lower -> g .)
    Q               reduce using rule 126 (alpha_lower -> g .)
    R               reduce using rule 126 (alpha_lower -> g .)
    S               reduce using rule 126 (alpha_lower -> g .)
    T               reduce using rule 126 (alpha_lower -> g .)
    U               reduce using rule 126 (alpha_lower -> g .)
    V               reduce using rule 126 (alpha_lower -> g .)
    W               reduce using rule 126 (alpha_lower -> g .)
    X               reduce using rule 126 (alpha_lower -> g .)
    Y               reduce using rule 126 (alpha_lower -> g .)
    Z               reduce using rule 126 (alpha_lower -> g .)
    ]               reduce using rule 126 (alpha_lower -> g .)
    ^               reduce using rule 126 (alpha_lower -> g .)
    |               reduce using rule 126 (alpha_lower -> g .)
    $end            reduce using rule 126 (alpha_lower -> g .)


state 95

    (11) basic -> quantifier .

    (               reduce using rule 11 (basic -> quantifier .)
    ^               reduce using rule 11 (basic -> quantifier .)
    >               reduce using rule 11 (basic -> quantifier .)
    <               reduce using rule 11 (basic -> quantifier .)
    /               reduce using rule 11 (basic -> quantifier .)
    \               reduce using rule 11 (basic -> quantifier .)
    #               reduce using rule 11 (basic -> quantifier .)
    %               reduce using rule 11 (basic -> quantifier .)
    ESCAPED         reduce using rule 11 (basic -> quantifier .)
    DIGIT           reduce using rule 11 (basic -> quantifier .)
    OTHER           reduce using rule 11 (basic -> quantifier .)
    [               reduce using rule 11 (basic -> quantifier .)
    .               reduce using rule 11 (basic -> quantifier .)
    ,               reduce using rule 11 (basic -> quantifier .)
    :               reduce using rule 11 (basic -> quantifier .)
    ;               reduce using rule 11 (basic -> quantifier .)
    $               reduce using rule 11 (basic -> quantifier .)
    `               reduce using rule 11 (basic -> quantifier .)
    a               reduce using rule 11 (basic -> quantifier .)
    b               reduce using rule 11 (basic -> quantifier .)
    c               reduce using rule 11 (basic -> quantifier .)
    d               reduce using rule 11 (basic -> quantifier .)
    e               reduce using rule 11 (basic -> quantifier .)
    f               reduce using rule 11 (basic -> quantifier .)
    g               reduce using rule 11 (basic -> quantifier .)
    h               reduce using rule 11 (basic -> quantifier .)
    i               reduce using rule 11 (basic -> quantifier .)
    j               reduce using rule 11 (basic -> quantifier .)
    k               reduce using rule 11 (basic -> quantifier .)
    l               reduce using rule 11 (basic -> quantifier .)
    m               reduce using rule 11 (basic -> quantifier .)
    n               reduce using rule 11 (basic -> quantifier .)
    o               reduce using rule 11 (basic -> quantifier .)
    p               reduce using rule 11 (basic -> quantifier .)
    q               reduce using rule 11 (basic -> quantifier .)
    r               reduce using rule 11 (basic -> quantifier .)
    s               reduce using rule 11 (basic -> quantifier .)
    t               reduce using rule 11 (basic -> quantifier .)
    u               reduce using rule 11 (basic -> quantifier .)
    v               reduce using rule 11 (basic -> quantifier .)
    w               reduce using rule 11 (basic -> quantifier .)
    x               reduce using rule 11 (basic -> quantifier .)
    y               reduce using rule 11 (basic -> quantifier .)
    z               reduce using rule 11 (basic -> quantifier .)
    A               reduce using rule 11 (basic -> quantifier .)
    B               reduce using rule 11 (basic -> quantifier .)
    C               reduce using rule 11 (basic -> quantifier .)
    D               reduce using rule 11 (basic -> quantifier .)
    E               reduce using rule 11 (basic -> quantifier .)
    F               reduce using rule 11 (basic -> quantifier .)
    G               reduce using rule 11 (basic -> quantifier .)
    H               reduce using rule 11 (basic -> quantifier .)
    I               reduce using rule 11 (basic -> quantifier .)
    J               reduce using rule 11 (basic -> quantifier .)
    K               reduce using rule 11 (basic -> quantifier .)
    L               reduce using rule 11 (basic -> quantifier .)
    M               reduce using rule 11 (basic -> quantifier .)
    N               reduce using rule 11 (basic -> quantifier .)
    O               reduce using rule 11 (basic -> quantifier .)
    P               reduce using rule 11 (basic -> quantifier .)
    Q               reduce using rule 11 (basic -> quantifier .)
    R               reduce using rule 11 (basic -> quantifier .)
    S               reduce using rule 11 (basic -> quantifier .)
    T               reduce using rule 11 (basic -> quantifier .)
    U               reduce using rule 11 (basic -> quantifier .)
    V               reduce using rule 11 (basic -> quantifier .)
    W               reduce using rule 11 (basic -> quantifier .)
    X               reduce using rule 11 (basic -> quantifier .)
    Y               reduce using rule 11 (basic -> quantifier .)
    Z               reduce using rule 11 (basic -> quantifier .)
    |               reduce using rule 11 (basic -> quantifier .)
    )               reduce using rule 11 (basic -> quantifier .)
    $end            reduce using rule 11 (basic -> quantifier .)


state 96

    (135) alpha_lower -> p .

    -               reduce using rule 135 (alpha_lower -> p .)
    !               reduce using rule 135 (alpha_lower -> p .)
    "               reduce using rule 135 (alpha_lower -> p .)
    #               reduce using rule 135 (alpha_lower -> p .)
    $               reduce using rule 135 (alpha_lower -> p .)
    %               reduce using rule 135 (alpha_lower -> p .)
    &               reduce using rule 135 (alpha_lower -> p .)
    '               reduce using rule 135 (alpha_lower -> p .)
    (               reduce using rule 135 (alpha_lower -> p .)
    )               reduce using rule 135 (alpha_lower -> p .)
    *               reduce using rule 135 (alpha_lower -> p .)
    +               reduce using rule 135 (alpha_lower -> p .)
    ,               reduce using rule 135 (alpha_lower -> p .)
    .               reduce using rule 135 (alpha_lower -> p .)
    /               reduce using rule 135 (alpha_lower -> p .)
    :               reduce using rule 135 (alpha_lower -> p .)
    ;               reduce using rule 135 (alpha_lower -> p .)
    <               reduce using rule 135 (alpha_lower -> p .)
    =               reduce using rule 135 (alpha_lower -> p .)
    >               reduce using rule 135 (alpha_lower -> p .)
    ?               reduce using rule 135 (alpha_lower -> p .)
    @               reduce using rule 135 (alpha_lower -> p .)
    [               reduce using rule 135 (alpha_lower -> p .)
    \               reduce using rule 135 (alpha_lower -> p .)
    _               reduce using rule 135 (alpha_lower -> p .)
    `               reduce using rule 135 (alpha_lower -> p .)
    {               reduce using rule 135 (alpha_lower -> p .)
    }               reduce using rule 135 (alpha_lower -> p .)
    ~               reduce using rule 135 (alpha_lower -> p .)
    ESCAPED         reduce using rule 135 (alpha_lower -> p .)
    DIGIT           reduce using rule 135 (alpha_lower -> p .)
    OTHER           reduce using rule 135 (alpha_lower -> p .)
    a               reduce using rule 135 (alpha_lower -> p .)
    b               reduce using rule 135 (alpha_lower -> p .)
    c               reduce using rule 135 (alpha_lower -> p .)
    d               reduce using rule 135 (alpha_lower -> p .)
    e               reduce using rule 135 (alpha_lower -> p .)
    f               reduce using rule 135 (alpha_lower -> p .)
    g               reduce using rule 135 (alpha_lower -> p .)
    h               reduce using rule 135 (alpha_lower -> p .)
    i               reduce using rule 135 (alpha_lower -> p .)
    j               reduce using rule 135 (alpha_lower -> p .)
    k               reduce using rule 135 (alpha_lower -> p .)
    l               reduce using rule 135 (alpha_lower -> p .)
    m               reduce using rule 135 (alpha_lower -> p .)
    n               reduce using rule 135 (alpha_lower -> p .)
    o               reduce using rule 135 (alpha_lower -> p .)
    p               reduce using rule 135 (alpha_lower -> p .)
    q               reduce using rule 135 (alpha_lower -> p .)
    r               reduce using rule 135 (alpha_lower -> p .)
    s               reduce using rule 135 (alpha_lower -> p .)
    t               reduce using rule 135 (alpha_lower -> p .)
    u               reduce using rule 135 (alpha_lower -> p .)
    v               reduce using rule 135 (alpha_lower -> p .)
    w               reduce using rule 135 (alpha_lower -> p .)
    x               reduce using rule 135 (alpha_lower -> p .)
    y               reduce using rule 135 (alpha_lower -> p .)
    z               reduce using rule 135 (alpha_lower -> p .)
    A               reduce using rule 135 (alpha_lower -> p .)
    B               reduce using rule 135 (alpha_lower -> p .)
    C               reduce using rule 135 (alpha_lower -> p .)
    D               reduce using rule 135 (alpha_lower -> p .)
    E               reduce using rule 135 (alpha_lower -> p .)
    F               reduce using rule 135 (alpha_lower -> p .)
    G               reduce using rule 135 (alpha_lower -> p .)
    H               reduce using rule 135 (alpha_lower -> p .)
    I               reduce using rule 135 (alpha_lower -> p .)
    J               reduce using rule 135 (alpha_lower -> p .)
    K               reduce using rule 135 (alpha_lower -> p .)
    L               reduce using rule 135 (alpha_lower -> p .)
    M               reduce using rule 135 (alpha_lower -> p .)
    N               reduce using rule 135 (alpha_lower -> p .)
    O               reduce using rule 135 (alpha_lower -> p .)
    P               reduce using rule 135 (alpha_lower -> p .)
    Q               reduce using rule 135 (alpha_lower -> p .)
    R               reduce using rule 135 (alpha_lower -> p .)
    S               reduce using rule 135 (alpha_lower -> p .)
    T               reduce using rule 135 (alpha_lower -> p .)
    U               reduce using rule 135 (alpha_lower -> p .)
    V               reduce using rule 135 (alpha_lower -> p .)
    W               reduce using rule 135 (alpha_lower -> p .)
    X               reduce using rule 135 (alpha_lower -> p .)
    Y               reduce using rule 135 (alpha_lower -> p .)
    Z               reduce using rule 135 (alpha_lower -> p .)
    ]               reduce using rule 135 (alpha_lower -> p .)
    ^               reduce using rule 135 (alpha_lower -> p .)
    |               reduce using rule 135 (alpha_lower -> p .)
    $end            reduce using rule 135 (alpha_lower -> p .)


state 97

    (14) basequantifier -> asterisk .

    ?               reduce using rule 14 (basequantifier -> asterisk .)
    (               reduce using rule 14 (basequantifier -> asterisk .)
    ^               reduce using rule 14 (basequantifier -> asterisk .)
    >               reduce using rule 14 (basequantifier -> asterisk .)
    <               reduce using rule 14 (basequantifier -> asterisk .)
    /               reduce using rule 14 (basequantifier -> asterisk .)
    \               reduce using rule 14 (basequantifier -> asterisk .)
    #               reduce using rule 14 (basequantifier -> asterisk .)
    %               reduce using rule 14 (basequantifier -> asterisk .)
    ESCAPED         reduce using rule 14 (basequantifier -> asterisk .)
    DIGIT           reduce using rule 14 (basequantifier -> asterisk .)
    OTHER           reduce using rule 14 (basequantifier -> asterisk .)
    [               reduce using rule 14 (basequantifier -> asterisk .)
    .               reduce using rule 14 (basequantifier -> asterisk .)
    ,               reduce using rule 14 (basequantifier -> asterisk .)
    :               reduce using rule 14 (basequantifier -> asterisk .)
    ;               reduce using rule 14 (basequantifier -> asterisk .)
    $               reduce using rule 14 (basequantifier -> asterisk .)
    `               reduce using rule 14 (basequantifier -> asterisk .)
    a               reduce using rule 14 (basequantifier -> asterisk .)
    b               reduce using rule 14 (basequantifier -> asterisk .)
    c               reduce using rule 14 (basequantifier -> asterisk .)
    d               reduce using rule 14 (basequantifier -> asterisk .)
    e               reduce using rule 14 (basequantifier -> asterisk .)
    f               reduce using rule 14 (basequantifier -> asterisk .)
    g               reduce using rule 14 (basequantifier -> asterisk .)
    h               reduce using rule 14 (basequantifier -> asterisk .)
    i               reduce using rule 14 (basequantifier -> asterisk .)
    j               reduce using rule 14 (basequantifier -> asterisk .)
    k               reduce using rule 14 (basequantifier -> asterisk .)
    l               reduce using rule 14 (basequantifier -> asterisk .)
    m               reduce using rule 14 (basequantifier -> asterisk .)
    n               reduce using rule 14 (basequantifier -> asterisk .)
    o               reduce using rule 14 (basequantifier -> asterisk .)
    p               reduce using rule 14 (basequantifier -> asterisk .)
    q               reduce using rule 14 (basequantifier -> asterisk .)
    r               reduce using rule 14 (basequantifier -> asterisk .)
    s               reduce using rule 14 (basequantifier -> asterisk .)
    t               reduce using rule 14 (basequantifier -> asterisk .)
    u               reduce using rule 14 (basequantifier -> asterisk .)
    v               reduce using rule 14 (basequantifier -> asterisk .)
    w               reduce using rule 14 (basequantifier -> asterisk .)
    x               reduce using rule 14 (basequantifier -> asterisk .)
    y               reduce using rule 14 (basequantifier -> asterisk .)
    z               reduce using rule 14 (basequantifier -> asterisk .)
    A               reduce using rule 14 (basequantifier -> asterisk .)
    B               reduce using rule 14 (basequantifier -> asterisk .)
    C               reduce using rule 14 (basequantifier -> asterisk .)
    D               reduce using rule 14 (basequantifier -> asterisk .)
    E               reduce using rule 14 (basequantifier -> asterisk .)
    F               reduce using rule 14 (basequantifier -> asterisk .)
    G               reduce using rule 14 (basequantifier -> asterisk .)
    H               reduce using rule 14 (basequantifier -> asterisk .)
    I               reduce using rule 14 (basequantifier -> asterisk .)
    J               reduce using rule 14 (basequantifier -> asterisk .)
    K               reduce using rule 14 (basequantifier -> asterisk .)
    L               reduce using rule 14 (basequantifier -> asterisk .)
    M               reduce using rule 14 (basequantifier -> asterisk .)
    N               reduce using rule 14 (basequantifier -> asterisk .)
    O               reduce using rule 14 (basequantifier -> asterisk .)
    P               reduce using rule 14 (basequantifier -> asterisk .)
    Q               reduce using rule 14 (basequantifier -> asterisk .)
    R               reduce using rule 14 (basequantifier -> asterisk .)
    S               reduce using rule 14 (basequantifier -> asterisk .)
    T               reduce using rule 14 (basequantifier -> asterisk .)
    U               reduce using rule 14 (basequantifier -> asterisk .)
    V               reduce using rule 14 (basequantifier -> asterisk .)
    W               reduce using rule 14 (basequantifier -> asterisk .)
    X               reduce using rule 14 (basequantifier -> asterisk .)
    Y               reduce using rule 14 (basequantifier -> asterisk .)
    Z               reduce using rule 14 (basequantifier -> asterisk .)
    |               reduce using rule 14 (basequantifier -> asterisk .)
    )               reduce using rule 14 (basequantifier -> asterisk .)
    $end            reduce using rule 14 (basequantifier -> asterisk .)


state 98

    (99) directional -> ^ DIGIT .

    *               reduce using rule 99 (directional -> ^ DIGIT .)
    +               reduce using rule 99 (directional -> ^ DIGIT .)
    ?               reduce using rule 99 (directional -> ^ DIGIT .)
    {               reduce using rule 99 (directional -> ^ DIGIT .)
    (               reduce using rule 99 (directional -> ^ DIGIT .)
    ^               reduce using rule 99 (directional -> ^ DIGIT .)
    >               reduce using rule 99 (directional -> ^ DIGIT .)
    <               reduce using rule 99 (directional -> ^ DIGIT .)
    /               reduce using rule 99 (directional -> ^ DIGIT .)
    \               reduce using rule 99 (directional -> ^ DIGIT .)
    #               reduce using rule 99 (directional -> ^ DIGIT .)
    %               reduce using rule 99 (directional -> ^ DIGIT .)
    ESCAPED         reduce using rule 99 (directional -> ^ DIGIT .)
    DIGIT           reduce using rule 99 (directional -> ^ DIGIT .)
    OTHER           reduce using rule 99 (directional -> ^ DIGIT .)
    [               reduce using rule 99 (directional -> ^ DIGIT .)
    .               reduce using rule 99 (directional -> ^ DIGIT .)
    ,               reduce using rule 99 (directional -> ^ DIGIT .)
    :               reduce using rule 99 (directional -> ^ DIGIT .)
    ;               reduce using rule 99 (directional -> ^ DIGIT .)
    $               reduce using rule 99 (directional -> ^ DIGIT .)
    `               reduce using rule 99 (directional -> ^ DIGIT .)
    a               reduce using rule 99 (directional -> ^ DIGIT .)
    b               reduce using rule 99 (directional -> ^ DIGIT .)
    c               reduce using rule 99 (directional -> ^ DIGIT .)
    d               reduce using rule 99 (directional -> ^ DIGIT .)
    e               reduce using rule 99 (directional -> ^ DIGIT .)
    f               reduce using rule 99 (directional -> ^ DIGIT .)
    g               reduce using rule 99 (directional -> ^ DIGIT .)
    h               reduce using rule 99 (directional -> ^ DIGIT .)
    i               reduce using rule 99 (directional -> ^ DIGIT .)
    j               reduce using rule 99 (directional -> ^ DIGIT .)
    k               reduce using rule 99 (directional -> ^ DIGIT .)
    l               reduce using rule 99 (directional -> ^ DIGIT .)
    m               reduce using rule 99 (directional -> ^ DIGIT .)
    n               reduce using rule 99 (directional -> ^ DIGIT .)
    o               reduce using rule 99 (directional -> ^ DIGIT .)
    p               reduce using rule 99 (directional -> ^ DIGIT .)
    q               reduce using rule 99 (directional -> ^ DIGIT .)
    r               reduce using rule 99 (directional -> ^ DIGIT .)
    s               reduce using rule 99 (directional -> ^ DIGIT .)
    t               reduce using rule 99 (directional -> ^ DIGIT .)
    u               reduce using rule 99 (directional -> ^ DIGIT .)
    v               reduce using rule 99 (directional -> ^ DIGIT .)
    w               reduce using rule 99 (directional -> ^ DIGIT .)
    x               reduce using rule 99 (directional -> ^ DIGIT .)
    y               reduce using rule 99 (directional -> ^ DIGIT .)
    z               reduce using rule 99 (directional -> ^ DIGIT .)
    A               reduce using rule 99 (directional -> ^ DIGIT .)
    B               reduce using rule 99 (directional -> ^ DIGIT .)
    C               reduce using rule 99 (directional -> ^ DIGIT .)
    D               reduce using rule 99 (directional -> ^ DIGIT .)
    E               reduce using rule 99 (directional -> ^ DIGIT .)
    F               reduce using rule 99 (directional -> ^ DIGIT .)
    G               reduce using rule 99 (directional -> ^ DIGIT .)
    H               reduce using rule 99 (directional -> ^ DIGIT .)
    I               reduce using rule 99 (directional -> ^ DIGIT .)
    J               reduce using rule 99 (directional -> ^ DIGIT .)
    K               reduce using rule 99 (directional -> ^ DIGIT .)
    L               reduce using rule 99 (directional -> ^ DIGIT .)
    M               reduce using rule 99 (directional -> ^ DIGIT .)
    N               reduce using rule 99 (directional -> ^ DIGIT .)
    O               reduce using rule 99 (directional -> ^ DIGIT .)
    P               reduce using rule 99 (directional -> ^ DIGIT .)
    Q               reduce using rule 99 (directional -> ^ DIGIT .)
    R               reduce using rule 99 (directional -> ^ DIGIT .)
    S               reduce using rule 99 (directional -> ^ DIGIT .)
    T               reduce using rule 99 (directional -> ^ DIGIT .)
    U               reduce using rule 99 (directional -> ^ DIGIT .)
    V               reduce using rule 99 (directional -> ^ DIGIT .)
    W               reduce using rule 99 (directional -> ^ DIGIT .)
    X               reduce using rule 99 (directional -> ^ DIGIT .)
    Y               reduce using rule 99 (directional -> ^ DIGIT .)
    Z               reduce using rule 99 (directional -> ^ DIGIT .)
    |               reduce using rule 99 (directional -> ^ DIGIT .)
    )               reduce using rule 99 (directional -> ^ DIGIT .)
    $end            reduce using rule 99 (directional -> ^ DIGIT .)


state 99

    (102) directional -> ^ + .

    *               reduce using rule 102 (directional -> ^ + .)
    +               reduce using rule 102 (directional -> ^ + .)
    ?               reduce using rule 102 (directional -> ^ + .)
    {               reduce using rule 102 (directional -> ^ + .)
    (               reduce using rule 102 (directional -> ^ + .)
    ^               reduce using rule 102 (directional -> ^ + .)
    >               reduce using rule 102 (directional -> ^ + .)
    <               reduce using rule 102 (directional -> ^ + .)
    /               reduce using rule 102 (directional -> ^ + .)
    \               reduce using rule 102 (directional -> ^ + .)
    #               reduce using rule 102 (directional -> ^ + .)
    %               reduce using rule 102 (directional -> ^ + .)
    ESCAPED         reduce using rule 102 (directional -> ^ + .)
    DIGIT           reduce using rule 102 (directional -> ^ + .)
    OTHER           reduce using rule 102 (directional -> ^ + .)
    [               reduce using rule 102 (directional -> ^ + .)
    .               reduce using rule 102 (directional -> ^ + .)
    ,               reduce using rule 102 (directional -> ^ + .)
    :               reduce using rule 102 (directional -> ^ + .)
    ;               reduce using rule 102 (directional -> ^ + .)
    $               reduce using rule 102 (directional -> ^ + .)
    `               reduce using rule 102 (directional -> ^ + .)
    a               reduce using rule 102 (directional -> ^ + .)
    b               reduce using rule 102 (directional -> ^ + .)
    c               reduce using rule 102 (directional -> ^ + .)
    d               reduce using rule 102 (directional -> ^ + .)
    e               reduce using rule 102 (directional -> ^ + .)
    f               reduce using rule 102 (directional -> ^ + .)
    g               reduce using rule 102 (directional -> ^ + .)
    h               reduce using rule 102 (directional -> ^ + .)
    i               reduce using rule 102 (directional -> ^ + .)
    j               reduce using rule 102 (directional -> ^ + .)
    k               reduce using rule 102 (directional -> ^ + .)
    l               reduce using rule 102 (directional -> ^ + .)
    m               reduce using rule 102 (directional -> ^ + .)
    n               reduce using rule 102 (directional -> ^ + .)
    o               reduce using rule 102 (directional -> ^ + .)
    p               reduce using rule 102 (directional -> ^ + .)
    q               reduce using rule 102 (directional -> ^ + .)
    r               reduce using rule 102 (directional -> ^ + .)
    s               reduce using rule 102 (directional -> ^ + .)
    t               reduce using rule 102 (directional -> ^ + .)
    u               reduce using rule 102 (directional -> ^ + .)
    v               reduce using rule 102 (directional -> ^ + .)
    w               reduce using rule 102 (directional -> ^ + .)
    x               reduce using rule 102 (directional -> ^ + .)
    y               reduce using rule 102 (directional -> ^ + .)
    z               reduce using rule 102 (directional -> ^ + .)
    A               reduce using rule 102 (directional -> ^ + .)
    B               reduce using rule 102 (directional -> ^ + .)
    C               reduce using rule 102 (directional -> ^ + .)
    D               reduce using rule 102 (directional -> ^ + .)
    E               reduce using rule 102 (directional -> ^ + .)
    F               reduce using rule 102 (directional -> ^ + .)
    G               reduce using rule 102 (directional -> ^ + .)
    H               reduce using rule 102 (directional -> ^ + .)
    I               reduce using rule 102 (directional -> ^ + .)
    J               reduce using rule 102 (directional -> ^ + .)
    K               reduce using rule 102 (directional -> ^ + .)
    L               reduce using rule 102 (directional -> ^ + .)
    M               reduce using rule 102 (directional -> ^ + .)
    N               reduce using rule 102 (directional -> ^ + .)
    O               reduce using rule 102 (directional -> ^ + .)
    P               reduce using rule 102 (directional -> ^ + .)
    Q               reduce using rule 102 (directional -> ^ + .)
    R               reduce using rule 102 (directional -> ^ + .)
    S               reduce using rule 102 (directional -> ^ + .)
    T               reduce using rule 102 (directional -> ^ + .)
    U               reduce using rule 102 (directional -> ^ + .)
    V               reduce using rule 102 (directional -> ^ + .)
    W               reduce using rule 102 (directional -> ^ + .)
    X               reduce using rule 102 (directional -> ^ + .)
    Y               reduce using rule 102 (directional -> ^ + .)
    Z               reduce using rule 102 (directional -> ^ + .)
    |               reduce using rule 102 (directional -> ^ + .)
    )               reduce using rule 102 (directional -> ^ + .)
    $end            reduce using rule 102 (directional -> ^ + .)


state 100

    (101) directional -> ^ * .

    *               reduce using rule 101 (directional -> ^ * .)
    +               reduce using rule 101 (directional -> ^ * .)
    ?               reduce using rule 101 (directional -> ^ * .)
    {               reduce using rule 101 (directional -> ^ * .)
    (               reduce using rule 101 (directional -> ^ * .)
    ^               reduce using rule 101 (directional -> ^ * .)
    >               reduce using rule 101 (directional -> ^ * .)
    <               reduce using rule 101 (directional -> ^ * .)
    /               reduce using rule 101 (directional -> ^ * .)
    \               reduce using rule 101 (directional -> ^ * .)
    #               reduce using rule 101 (directional -> ^ * .)
    %               reduce using rule 101 (directional -> ^ * .)
    ESCAPED         reduce using rule 101 (directional -> ^ * .)
    DIGIT           reduce using rule 101 (directional -> ^ * .)
    OTHER           reduce using rule 101 (directional -> ^ * .)
    [               reduce using rule 101 (directional -> ^ * .)
    .               reduce using rule 101 (directional -> ^ * .)
    ,               reduce using rule 101 (directional -> ^ * .)
    :               reduce using rule 101 (directional -> ^ * .)
    ;               reduce using rule 101 (directional -> ^ * .)
    $               reduce using rule 101 (directional -> ^ * .)
    `               reduce using rule 101 (directional -> ^ * .)
    a               reduce using rule 101 (directional -> ^ * .)
    b               reduce using rule 101 (directional -> ^ * .)
    c               reduce using rule 101 (directional -> ^ * .)
    d               reduce using rule 101 (directional -> ^ * .)
    e               reduce using rule 101 (directional -> ^ * .)
    f               reduce using rule 101 (directional -> ^ * .)
    g               reduce using rule 101 (directional -> ^ * .)
    h               reduce using rule 101 (directional -> ^ * .)
    i               reduce using rule 101 (directional -> ^ * .)
    j               reduce using rule 101 (directional -> ^ * .)
    k               reduce using rule 101 (directional -> ^ * .)
    l               reduce using rule 101 (directional -> ^ * .)
    m               reduce using rule 101 (directional -> ^ * .)
    n               reduce using rule 101 (directional -> ^ * .)
    o               reduce using rule 101 (directional -> ^ * .)
    p               reduce using rule 101 (directional -> ^ * .)
    q               reduce using rule 101 (directional -> ^ * .)
    r               reduce using rule 101 (directional -> ^ * .)
    s               reduce using rule 101 (directional -> ^ * .)
    t               reduce using rule 101 (directional -> ^ * .)
    u               reduce using rule 101 (directional -> ^ * .)
    v               reduce using rule 101 (directional -> ^ * .)
    w               reduce using rule 101 (directional -> ^ * .)
    x               reduce using rule 101 (directional -> ^ * .)
    y               reduce using rule 101 (directional -> ^ * .)
    z               reduce using rule 101 (directional -> ^ * .)
    A               reduce using rule 101 (directional -> ^ * .)
    B               reduce using rule 101 (directional -> ^ * .)
    C               reduce using rule 101 (directional -> ^ * .)
    D               reduce using rule 101 (directional -> ^ * .)
    E               reduce using rule 101 (directional -> ^ * .)
    F               reduce using rule 101 (directional -> ^ * .)
    G               reduce using rule 101 (directional -> ^ * .)
    H               reduce using rule 101 (directional -> ^ * .)
    I               reduce using rule 101 (directional -> ^ * .)
    J               reduce using rule 101 (directional -> ^ * .)
    K               reduce using rule 101 (directional -> ^ * .)
    L               reduce using rule 101 (directional -> ^ * .)
    M               reduce using rule 101 (directional -> ^ * .)
    N               reduce using rule 101 (directional -> ^ * .)
    O               reduce using rule 101 (directional -> ^ * .)
    P               reduce using rule 101 (directional -> ^ * .)
    Q               reduce using rule 101 (directional -> ^ * .)
    R               reduce using rule 101 (directional -> ^ * .)
    S               reduce using rule 101 (directional -> ^ * .)
    T               reduce using rule 101 (directional -> ^ * .)
    U               reduce using rule 101 (directional -> ^ * .)
    V               reduce using rule 101 (directional -> ^ * .)
    W               reduce using rule 101 (directional -> ^ * .)
    X               reduce using rule 101 (directional -> ^ * .)
    Y               reduce using rule 101 (directional -> ^ * .)
    Z               reduce using rule 101 (directional -> ^ * .)
    |               reduce using rule 101 (directional -> ^ * .)
    )               reduce using rule 101 (directional -> ^ * .)
    $end            reduce using rule 101 (directional -> ^ * .)


state 101

    (100) directional -> ^ alpha .

    *               reduce using rule 100 (directional -> ^ alpha .)
    +               reduce using rule 100 (directional -> ^ alpha .)
    ?               reduce using rule 100 (directional -> ^ alpha .)
    {               reduce using rule 100 (directional -> ^ alpha .)
    (               reduce using rule 100 (directional -> ^ alpha .)
    ^               reduce using rule 100 (directional -> ^ alpha .)
    >               reduce using rule 100 (directional -> ^ alpha .)
    <               reduce using rule 100 (directional -> ^ alpha .)
    /               reduce using rule 100 (directional -> ^ alpha .)
    \               reduce using rule 100 (directional -> ^ alpha .)
    #               reduce using rule 100 (directional -> ^ alpha .)
    %               reduce using rule 100 (directional -> ^ alpha .)
    ESCAPED         reduce using rule 100 (directional -> ^ alpha .)
    DIGIT           reduce using rule 100 (directional -> ^ alpha .)
    OTHER           reduce using rule 100 (directional -> ^ alpha .)
    [               reduce using rule 100 (directional -> ^ alpha .)
    .               reduce using rule 100 (directional -> ^ alpha .)
    ,               reduce using rule 100 (directional -> ^ alpha .)
    :               reduce using rule 100 (directional -> ^ alpha .)
    ;               reduce using rule 100 (directional -> ^ alpha .)
    $               reduce using rule 100 (directional -> ^ alpha .)
    `               reduce using rule 100 (directional -> ^ alpha .)
    a               reduce using rule 100 (directional -> ^ alpha .)
    b               reduce using rule 100 (directional -> ^ alpha .)
    c               reduce using rule 100 (directional -> ^ alpha .)
    d               reduce using rule 100 (directional -> ^ alpha .)
    e               reduce using rule 100 (directional -> ^ alpha .)
    f               reduce using rule 100 (directional -> ^ alpha .)
    g               reduce using rule 100 (directional -> ^ alpha .)
    h               reduce using rule 100 (directional -> ^ alpha .)
    i               reduce using rule 100 (directional -> ^ alpha .)
    j               reduce using rule 100 (directional -> ^ alpha .)
    k               reduce using rule 100 (directional -> ^ alpha .)
    l               reduce using rule 100 (directional -> ^ alpha .)
    m               reduce using rule 100 (directional -> ^ alpha .)
    n               reduce using rule 100 (directional -> ^ alpha .)
    o               reduce using rule 100 (directional -> ^ alpha .)
    p               reduce using rule 100 (directional -> ^ alpha .)
    q               reduce using rule 100 (directional -> ^ alpha .)
    r               reduce using rule 100 (directional -> ^ alpha .)
    s               reduce using rule 100 (directional -> ^ alpha .)
    t               reduce using rule 100 (directional -> ^ alpha .)
    u               reduce using rule 100 (directional -> ^ alpha .)
    v               reduce using rule 100 (directional -> ^ alpha .)
    w               reduce using rule 100 (directional -> ^ alpha .)
    x               reduce using rule 100 (directional -> ^ alpha .)
    y               reduce using rule 100 (directional -> ^ alpha .)
    z               reduce using rule 100 (directional -> ^ alpha .)
    A               reduce using rule 100 (directional -> ^ alpha .)
    B               reduce using rule 100 (directional -> ^ alpha .)
    C               reduce using rule 100 (directional -> ^ alpha .)
    D               reduce using rule 100 (directional -> ^ alpha .)
    E               reduce using rule 100 (directional -> ^ alpha .)
    F               reduce using rule 100 (directional -> ^ alpha .)
    G               reduce using rule 100 (directional -> ^ alpha .)
    H               reduce using rule 100 (directional -> ^ alpha .)
    I               reduce using rule 100 (directional -> ^ alpha .)
    J               reduce using rule 100 (directional -> ^ alpha .)
    K               reduce using rule 100 (directional -> ^ alpha .)
    L               reduce using rule 100 (directional -> ^ alpha .)
    M               reduce using rule 100 (directional -> ^ alpha .)
    N               reduce using rule 100 (directional -> ^ alpha .)
    O               reduce using rule 100 (directional -> ^ alpha .)
    P               reduce using rule 100 (directional -> ^ alpha .)
    Q               reduce using rule 100 (directional -> ^ alpha .)
    R               reduce using rule 100 (directional -> ^ alpha .)
    S               reduce using rule 100 (directional -> ^ alpha .)
    T               reduce using rule 100 (directional -> ^ alpha .)
    U               reduce using rule 100 (directional -> ^ alpha .)
    V               reduce using rule 100 (directional -> ^ alpha .)
    W               reduce using rule 100 (directional -> ^ alpha .)
    X               reduce using rule 100 (directional -> ^ alpha .)
    Y               reduce using rule 100 (directional -> ^ alpha .)
    Z               reduce using rule 100 (directional -> ^ alpha .)
    |               reduce using rule 100 (directional -> ^ alpha .)
    )               reduce using rule 100 (directional -> ^ alpha .)
    $end            reduce using rule 100 (directional -> ^ alpha .)


state 102

    (98) predefined -> ` alpha .

    *               reduce using rule 98 (predefined -> ` alpha .)
    +               reduce using rule 98 (predefined -> ` alpha .)
    ?               reduce using rule 98 (predefined -> ` alpha .)
    {               reduce using rule 98 (predefined -> ` alpha .)
    (               reduce using rule 98 (predefined -> ` alpha .)
    ^               reduce using rule 98 (predefined -> ` alpha .)
    >               reduce using rule 98 (predefined -> ` alpha .)
    <               reduce using rule 98 (predefined -> ` alpha .)
    /               reduce using rule 98 (predefined -> ` alpha .)
    \               reduce using rule 98 (predefined -> ` alpha .)
    #               reduce using rule 98 (predefined -> ` alpha .)
    %               reduce using rule 98 (predefined -> ` alpha .)
    ESCAPED         reduce using rule 98 (predefined -> ` alpha .)
    DIGIT           reduce using rule 98 (predefined -> ` alpha .)
    OTHER           reduce using rule 98 (predefined -> ` alpha .)
    [               reduce using rule 98 (predefined -> ` alpha .)
    .               reduce using rule 98 (predefined -> ` alpha .)
    ,               reduce using rule 98 (predefined -> ` alpha .)
    :               reduce using rule 98 (predefined -> ` alpha .)
    ;               reduce using rule 98 (predefined -> ` alpha .)
    $               reduce using rule 98 (predefined -> ` alpha .)
    `               reduce using rule 98 (predefined -> ` alpha .)
    a               reduce using rule 98 (predefined -> ` alpha .)
    b               reduce using rule 98 (predefined -> ` alpha .)
    c               reduce using rule 98 (predefined -> ` alpha .)
    d               reduce using rule 98 (predefined -> ` alpha .)
    e               reduce using rule 98 (predefined -> ` alpha .)
    f               reduce using rule 98 (predefined -> ` alpha .)
    g               reduce using rule 98 (predefined -> ` alpha .)
    h               reduce using rule 98 (predefined -> ` alpha .)
    i               reduce using rule 98 (predefined -> ` alpha .)
    j               reduce using rule 98 (predefined -> ` alpha .)
    k               reduce using rule 98 (predefined -> ` alpha .)
    l               reduce using rule 98 (predefined -> ` alpha .)
    m               reduce using rule 98 (predefined -> ` alpha .)
    n               reduce using rule 98 (predefined -> ` alpha .)
    o               reduce using rule 98 (predefined -> ` alpha .)
    p               reduce using rule 98 (predefined -> ` alpha .)
    q               reduce using rule 98 (predefined -> ` alpha .)
    r               reduce using rule 98 (predefined -> ` alpha .)
    s               reduce using rule 98 (predefined -> ` alpha .)
    t               reduce using rule 98 (predefined -> ` alpha .)
    u               reduce using rule 98 (predefined -> ` alpha .)
    v               reduce using rule 98 (predefined -> ` alpha .)
    w               reduce using rule 98 (predefined -> ` alpha .)
    x               reduce using rule 98 (predefined -> ` alpha .)
    y               reduce using rule 98 (predefined -> ` alpha .)
    z               reduce using rule 98 (predefined -> ` alpha .)
    A               reduce using rule 98 (predefined -> ` alpha .)
    B               reduce using rule 98 (predefined -> ` alpha .)
    C               reduce using rule 98 (predefined -> ` alpha .)
    D               reduce using rule 98 (predefined -> ` alpha .)
    E               reduce using rule 98 (predefined -> ` alpha .)
    F               reduce using rule 98 (predefined -> ` alpha .)
    G               reduce using rule 98 (predefined -> ` alpha .)
    H               reduce using rule 98 (predefined -> ` alpha .)
    I               reduce using rule 98 (predefined -> ` alpha .)
    J               reduce using rule 98 (predefined -> ` alpha .)
    K               reduce using rule 98 (predefined -> ` alpha .)
    L               reduce using rule 98 (predefined -> ` alpha .)
    M               reduce using rule 98 (predefined -> ` alpha .)
    N               reduce using rule 98 (predefined -> ` alpha .)
    O               reduce using rule 98 (predefined -> ` alpha .)
    P               reduce using rule 98 (predefined -> ` alpha .)
    Q               reduce using rule 98 (predefined -> ` alpha .)
    R               reduce using rule 98 (predefined -> ` alpha .)
    S               reduce using rule 98 (predefined -> ` alpha .)
    T               reduce using rule 98 (predefined -> ` alpha .)
    U               reduce using rule 98 (predefined -> ` alpha .)
    V               reduce using rule 98 (predefined -> ` alpha .)
    W               reduce using rule 98 (predefined -> ` alpha .)
    X               reduce using rule 98 (predefined -> ` alpha .)
    Y               reduce using rule 98 (predefined -> ` alpha .)
    Z               reduce using rule 98 (predefined -> ` alpha .)
    |               reduce using rule 98 (predefined -> ` alpha .)
    $end            reduce using rule 98 (predefined -> ` alpha .)
    )               reduce using rule 98 (predefined -> ` alpha .)


state 103

    (9) concatenation -> simple basic .

    (               reduce using rule 9 (concatenation -> simple basic .)
    ^               reduce using rule 9 (concatenation -> simple basic .)
    >               reduce using rule 9 (concatenation -> simple basic .)
    <               reduce using rule 9 (concatenation -> simple basic .)
    /               reduce using rule 9 (concatenation -> simple basic .)
    \               reduce using rule 9 (concatenation -> simple basic .)
    #               reduce using rule 9 (concatenation -> simple basic .)
    %               reduce using rule 9 (concatenation -> simple basic .)
    ESCAPED         reduce using rule 9 (concatenation -> simple basic .)
    DIGIT           reduce using rule 9 (concatenation -> simple basic .)
    OTHER           reduce using rule 9 (concatenation -> simple basic .)
    [               reduce using rule 9 (concatenation -> simple basic .)
    .               reduce using rule 9 (concatenation -> simple basic .)
    ,               reduce using rule 9 (concatenation -> simple basic .)
    :               reduce using rule 9 (concatenation -> simple basic .)
    ;               reduce using rule 9 (concatenation -> simple basic .)
    $               reduce using rule 9 (concatenation -> simple basic .)
    `               reduce using rule 9 (concatenation -> simple basic .)
    a               reduce using rule 9 (concatenation -> simple basic .)
    b               reduce using rule 9 (concatenation -> simple basic .)
    c               reduce using rule 9 (concatenation -> simple basic .)
    d               reduce using rule 9 (concatenation -> simple basic .)
    e               reduce using rule 9 (concatenation -> simple basic .)
    f               reduce using rule 9 (concatenation -> simple basic .)
    g               reduce using rule 9 (concatenation -> simple basic .)
    h               reduce using rule 9 (concatenation -> simple basic .)
    i               reduce using rule 9 (concatenation -> simple basic .)
    j               reduce using rule 9 (concatenation -> simple basic .)
    k               reduce using rule 9 (concatenation -> simple basic .)
    l               reduce using rule 9 (concatenation -> simple basic .)
    m               reduce using rule 9 (concatenation -> simple basic .)
    n               reduce using rule 9 (concatenation -> simple basic .)
    o               reduce using rule 9 (concatenation -> simple basic .)
    p               reduce using rule 9 (concatenation -> simple basic .)
    q               reduce using rule 9 (concatenation -> simple basic .)
    r               reduce using rule 9 (concatenation -> simple basic .)
    s               reduce using rule 9 (concatenation -> simple basic .)
    t               reduce using rule 9 (concatenation -> simple basic .)
    u               reduce using rule 9 (concatenation -> simple basic .)
    v               reduce using rule 9 (concatenation -> simple basic .)
    w               reduce using rule 9 (concatenation -> simple basic .)
    x               reduce using rule 9 (concatenation -> simple basic .)
    y               reduce using rule 9 (concatenation -> simple basic .)
    z               reduce using rule 9 (concatenation -> simple basic .)
    A               reduce using rule 9 (concatenation -> simple basic .)
    B               reduce using rule 9 (concatenation -> simple basic .)
    C               reduce using rule 9 (concatenation -> simple basic .)
    D               reduce using rule 9 (concatenation -> simple basic .)
    E               reduce using rule 9 (concatenation -> simple basic .)
    F               reduce using rule 9 (concatenation -> simple basic .)
    G               reduce using rule 9 (concatenation -> simple basic .)
    H               reduce using rule 9 (concatenation -> simple basic .)
    I               reduce using rule 9 (concatenation -> simple basic .)
    J               reduce using rule 9 (concatenation -> simple basic .)
    K               reduce using rule 9 (concatenation -> simple basic .)
    L               reduce using rule 9 (concatenation -> simple basic .)
    M               reduce using rule 9 (concatenation -> simple basic .)
    N               reduce using rule 9 (concatenation -> simple basic .)
    O               reduce using rule 9 (concatenation -> simple basic .)
    P               reduce using rule 9 (concatenation -> simple basic .)
    Q               reduce using rule 9 (concatenation -> simple basic .)
    R               reduce using rule 9 (concatenation -> simple basic .)
    S               reduce using rule 9 (concatenation -> simple basic .)
    T               reduce using rule 9 (concatenation -> simple basic .)
    U               reduce using rule 9 (concatenation -> simple basic .)
    V               reduce using rule 9 (concatenation -> simple basic .)
    W               reduce using rule 9 (concatenation -> simple basic .)
    X               reduce using rule 9 (concatenation -> simple basic .)
    Y               reduce using rule 9 (concatenation -> simple basic .)
    Z               reduce using rule 9 (concatenation -> simple basic .)
    |               reduce using rule 9 (concatenation -> simple basic .)
    $end            reduce using rule 9 (concatenation -> simple basic .)
    )               reduce using rule 9 (concatenation -> simple basic .)


state 104

    (13) quantifier -> basequantifier ? .

    (               reduce using rule 13 (quantifier -> basequantifier ? .)
    ^               reduce using rule 13 (quantifier -> basequantifier ? .)
    >               reduce using rule 13 (quantifier -> basequantifier ? .)
    <               reduce using rule 13 (quantifier -> basequantifier ? .)
    /               reduce using rule 13 (quantifier -> basequantifier ? .)
    \               reduce using rule 13 (quantifier -> basequantifier ? .)
    #               reduce using rule 13 (quantifier -> basequantifier ? .)
    %               reduce using rule 13 (quantifier -> basequantifier ? .)
    ESCAPED         reduce using rule 13 (quantifier -> basequantifier ? .)
    DIGIT           reduce using rule 13 (quantifier -> basequantifier ? .)
    OTHER           reduce using rule 13 (quantifier -> basequantifier ? .)
    [               reduce using rule 13 (quantifier -> basequantifier ? .)
    .               reduce using rule 13 (quantifier -> basequantifier ? .)
    ,               reduce using rule 13 (quantifier -> basequantifier ? .)
    :               reduce using rule 13 (quantifier -> basequantifier ? .)
    ;               reduce using rule 13 (quantifier -> basequantifier ? .)
    $               reduce using rule 13 (quantifier -> basequantifier ? .)
    `               reduce using rule 13 (quantifier -> basequantifier ? .)
    a               reduce using rule 13 (quantifier -> basequantifier ? .)
    b               reduce using rule 13 (quantifier -> basequantifier ? .)
    c               reduce using rule 13 (quantifier -> basequantifier ? .)
    d               reduce using rule 13 (quantifier -> basequantifier ? .)
    e               reduce using rule 13 (quantifier -> basequantifier ? .)
    f               reduce using rule 13 (quantifier -> basequantifier ? .)
    g               reduce using rule 13 (quantifier -> basequantifier ? .)
    h               reduce using rule 13 (quantifier -> basequantifier ? .)
    i               reduce using rule 13 (quantifier -> basequantifier ? .)
    j               reduce using rule 13 (quantifier -> basequantifier ? .)
    k               reduce using rule 13 (quantifier -> basequantifier ? .)
    l               reduce using rule 13 (quantifier -> basequantifier ? .)
    m               reduce using rule 13 (quantifier -> basequantifier ? .)
    n               reduce using rule 13 (quantifier -> basequantifier ? .)
    o               reduce using rule 13 (quantifier -> basequantifier ? .)
    p               reduce using rule 13 (quantifier -> basequantifier ? .)
    q               reduce using rule 13 (quantifier -> basequantifier ? .)
    r               reduce using rule 13 (quantifier -> basequantifier ? .)
    s               reduce using rule 13 (quantifier -> basequantifier ? .)
    t               reduce using rule 13 (quantifier -> basequantifier ? .)
    u               reduce using rule 13 (quantifier -> basequantifier ? .)
    v               reduce using rule 13 (quantifier -> basequantifier ? .)
    w               reduce using rule 13 (quantifier -> basequantifier ? .)
    x               reduce using rule 13 (quantifier -> basequantifier ? .)
    y               reduce using rule 13 (quantifier -> basequantifier ? .)
    z               reduce using rule 13 (quantifier -> basequantifier ? .)
    A               reduce using rule 13 (quantifier -> basequantifier ? .)
    B               reduce using rule 13 (quantifier -> basequantifier ? .)
    C               reduce using rule 13 (quantifier -> basequantifier ? .)
    D               reduce using rule 13 (quantifier -> basequantifier ? .)
    E               reduce using rule 13 (quantifier -> basequantifier ? .)
    F               reduce using rule 13 (quantifier -> basequantifier ? .)
    G               reduce using rule 13 (quantifier -> basequantifier ? .)
    H               reduce using rule 13 (quantifier -> basequantifier ? .)
    I               reduce using rule 13 (quantifier -> basequantifier ? .)
    J               reduce using rule 13 (quantifier -> basequantifier ? .)
    K               reduce using rule 13 (quantifier -> basequantifier ? .)
    L               reduce using rule 13 (quantifier -> basequantifier ? .)
    M               reduce using rule 13 (quantifier -> basequantifier ? .)
    N               reduce using rule 13 (quantifier -> basequantifier ? .)
    O               reduce using rule 13 (quantifier -> basequantifier ? .)
    P               reduce using rule 13 (quantifier -> basequantifier ? .)
    Q               reduce using rule 13 (quantifier -> basequantifier ? .)
    R               reduce using rule 13 (quantifier -> basequantifier ? .)
    S               reduce using rule 13 (quantifier -> basequantifier ? .)
    T               reduce using rule 13 (quantifier -> basequantifier ? .)
    U               reduce using rule 13 (quantifier -> basequantifier ? .)
    V               reduce using rule 13 (quantifier -> basequantifier ? .)
    W               reduce using rule 13 (quantifier -> basequantifier ? .)
    X               reduce using rule 13 (quantifier -> basequantifier ? .)
    Y               reduce using rule 13 (quantifier -> basequantifier ? .)
    Z               reduce using rule 13 (quantifier -> basequantifier ? .)
    |               reduce using rule 13 (quantifier -> basequantifier ? .)
    $end            reduce using rule 13 (quantifier -> basequantifier ? .)
    )               reduce using rule 13 (quantifier -> basequantifier ? .)


state 105

    (103) anchor -> $ DIGIT .

    *               reduce using rule 103 (anchor -> $ DIGIT .)
    +               reduce using rule 103 (anchor -> $ DIGIT .)
    ?               reduce using rule 103 (anchor -> $ DIGIT .)
    {               reduce using rule 103 (anchor -> $ DIGIT .)
    (               reduce using rule 103 (anchor -> $ DIGIT .)
    ^               reduce using rule 103 (anchor -> $ DIGIT .)
    >               reduce using rule 103 (anchor -> $ DIGIT .)
    <               reduce using rule 103 (anchor -> $ DIGIT .)
    /               reduce using rule 103 (anchor -> $ DIGIT .)
    \               reduce using rule 103 (anchor -> $ DIGIT .)
    #               reduce using rule 103 (anchor -> $ DIGIT .)
    %               reduce using rule 103 (anchor -> $ DIGIT .)
    ESCAPED         reduce using rule 103 (anchor -> $ DIGIT .)
    DIGIT           reduce using rule 103 (anchor -> $ DIGIT .)
    OTHER           reduce using rule 103 (anchor -> $ DIGIT .)
    [               reduce using rule 103 (anchor -> $ DIGIT .)
    .               reduce using rule 103 (anchor -> $ DIGIT .)
    ,               reduce using rule 103 (anchor -> $ DIGIT .)
    :               reduce using rule 103 (anchor -> $ DIGIT .)
    ;               reduce using rule 103 (anchor -> $ DIGIT .)
    $               reduce using rule 103 (anchor -> $ DIGIT .)
    `               reduce using rule 103 (anchor -> $ DIGIT .)
    a               reduce using rule 103 (anchor -> $ DIGIT .)
    b               reduce using rule 103 (anchor -> $ DIGIT .)
    c               reduce using rule 103 (anchor -> $ DIGIT .)
    d               reduce using rule 103 (anchor -> $ DIGIT .)
    e               reduce using rule 103 (anchor -> $ DIGIT .)
    f               reduce using rule 103 (anchor -> $ DIGIT .)
    g               reduce using rule 103 (anchor -> $ DIGIT .)
    h               reduce using rule 103 (anchor -> $ DIGIT .)
    i               reduce using rule 103 (anchor -> $ DIGIT .)
    j               reduce using rule 103 (anchor -> $ DIGIT .)
    k               reduce using rule 103 (anchor -> $ DIGIT .)
    l               reduce using rule 103 (anchor -> $ DIGIT .)
    m               reduce using rule 103 (anchor -> $ DIGIT .)
    n               reduce using rule 103 (anchor -> $ DIGIT .)
    o               reduce using rule 103 (anchor -> $ DIGIT .)
    p               reduce using rule 103 (anchor -> $ DIGIT .)
    q               reduce using rule 103 (anchor -> $ DIGIT .)
    r               reduce using rule 103 (anchor -> $ DIGIT .)
    s               reduce using rule 103 (anchor -> $ DIGIT .)
    t               reduce using rule 103 (anchor -> $ DIGIT .)
    u               reduce using rule 103 (anchor -> $ DIGIT .)
    v               reduce using rule 103 (anchor -> $ DIGIT .)
    w               reduce using rule 103 (anchor -> $ DIGIT .)
    x               reduce using rule 103 (anchor -> $ DIGIT .)
    y               reduce using rule 103 (anchor -> $ DIGIT .)
    z               reduce using rule 103 (anchor -> $ DIGIT .)
    A               reduce using rule 103 (anchor -> $ DIGIT .)
    B               reduce using rule 103 (anchor -> $ DIGIT .)
    C               reduce using rule 103 (anchor -> $ DIGIT .)
    D               reduce using rule 103 (anchor -> $ DIGIT .)
    E               reduce using rule 103 (anchor -> $ DIGIT .)
    F               reduce using rule 103 (anchor -> $ DIGIT .)
    G               reduce using rule 103 (anchor -> $ DIGIT .)
    H               reduce using rule 103 (anchor -> $ DIGIT .)
    I               reduce using rule 103 (anchor -> $ DIGIT .)
    J               reduce using rule 103 (anchor -> $ DIGIT .)
    K               reduce using rule 103 (anchor -> $ DIGIT .)
    L               reduce using rule 103 (anchor -> $ DIGIT .)
    M               reduce using rule 103 (anchor -> $ DIGIT .)
    N               reduce using rule 103 (anchor -> $ DIGIT .)
    O               reduce using rule 103 (anchor -> $ DIGIT .)
    P               reduce using rule 103 (anchor -> $ DIGIT .)
    Q               reduce using rule 103 (anchor -> $ DIGIT .)
    R               reduce using rule 103 (anchor -> $ DIGIT .)
    S               reduce using rule 103 (anchor -> $ DIGIT .)
    T               reduce using rule 103 (anchor -> $ DIGIT .)
    U               reduce using rule 103 (anchor -> $ DIGIT .)
    V               reduce using rule 103 (anchor -> $ DIGIT .)
    W               reduce using rule 103 (anchor -> $ DIGIT .)
    X               reduce using rule 103 (anchor -> $ DIGIT .)
    Y               reduce using rule 103 (anchor -> $ DIGIT .)
    Z               reduce using rule 103 (anchor -> $ DIGIT .)
    |               reduce using rule 103 (anchor -> $ DIGIT .)
    )               reduce using rule 103 (anchor -> $ DIGIT .)
    $end            reduce using rule 103 (anchor -> $ DIGIT .)


state 106

    (107) anchor -> $ ^ .

    *               reduce using rule 107 (anchor -> $ ^ .)
    +               reduce using rule 107 (anchor -> $ ^ .)
    ?               reduce using rule 107 (anchor -> $ ^ .)
    {               reduce using rule 107 (anchor -> $ ^ .)
    (               reduce using rule 107 (anchor -> $ ^ .)
    ^               reduce using rule 107 (anchor -> $ ^ .)
    >               reduce using rule 107 (anchor -> $ ^ .)
    <               reduce using rule 107 (anchor -> $ ^ .)
    /               reduce using rule 107 (anchor -> $ ^ .)
    \               reduce using rule 107 (anchor -> $ ^ .)
    #               reduce using rule 107 (anchor -> $ ^ .)
    %               reduce using rule 107 (anchor -> $ ^ .)
    ESCAPED         reduce using rule 107 (anchor -> $ ^ .)
    DIGIT           reduce using rule 107 (anchor -> $ ^ .)
    OTHER           reduce using rule 107 (anchor -> $ ^ .)
    [               reduce using rule 107 (anchor -> $ ^ .)
    .               reduce using rule 107 (anchor -> $ ^ .)
    ,               reduce using rule 107 (anchor -> $ ^ .)
    :               reduce using rule 107 (anchor -> $ ^ .)
    ;               reduce using rule 107 (anchor -> $ ^ .)
    $               reduce using rule 107 (anchor -> $ ^ .)
    `               reduce using rule 107 (anchor -> $ ^ .)
    a               reduce using rule 107 (anchor -> $ ^ .)
    b               reduce using rule 107 (anchor -> $ ^ .)
    c               reduce using rule 107 (anchor -> $ ^ .)
    d               reduce using rule 107 (anchor -> $ ^ .)
    e               reduce using rule 107 (anchor -> $ ^ .)
    f               reduce using rule 107 (anchor -> $ ^ .)
    g               reduce using rule 107 (anchor -> $ ^ .)
    h               reduce using rule 107 (anchor -> $ ^ .)
    i               reduce using rule 107 (anchor -> $ ^ .)
    j               reduce using rule 107 (anchor -> $ ^ .)
    k               reduce using rule 107 (anchor -> $ ^ .)
    l               reduce using rule 107 (anchor -> $ ^ .)
    m               reduce using rule 107 (anchor -> $ ^ .)
    n               reduce using rule 107 (anchor -> $ ^ .)
    o               reduce using rule 107 (anchor -> $ ^ .)
    p               reduce using rule 107 (anchor -> $ ^ .)
    q               reduce using rule 107 (anchor -> $ ^ .)
    r               reduce using rule 107 (anchor -> $ ^ .)
    s               reduce using rule 107 (anchor -> $ ^ .)
    t               reduce using rule 107 (anchor -> $ ^ .)
    u               reduce using rule 107 (anchor -> $ ^ .)
    v               reduce using rule 107 (anchor -> $ ^ .)
    w               reduce using rule 107 (anchor -> $ ^ .)
    x               reduce using rule 107 (anchor -> $ ^ .)
    y               reduce using rule 107 (anchor -> $ ^ .)
    z               reduce using rule 107 (anchor -> $ ^ .)
    A               reduce using rule 107 (anchor -> $ ^ .)
    B               reduce using rule 107 (anchor -> $ ^ .)
    C               reduce using rule 107 (anchor -> $ ^ .)
    D               reduce using rule 107 (anchor -> $ ^ .)
    E               reduce using rule 107 (anchor -> $ ^ .)
    F               reduce using rule 107 (anchor -> $ ^ .)
    G               reduce using rule 107 (anchor -> $ ^ .)
    H               reduce using rule 107 (anchor -> $ ^ .)
    I               reduce using rule 107 (anchor -> $ ^ .)
    J               reduce using rule 107 (anchor -> $ ^ .)
    K               reduce using rule 107 (anchor -> $ ^ .)
    L               reduce using rule 107 (anchor -> $ ^ .)
    M               reduce using rule 107 (anchor -> $ ^ .)
    N               reduce using rule 107 (anchor -> $ ^ .)
    O               reduce using rule 107 (anchor -> $ ^ .)
    P               reduce using rule 107 (anchor -> $ ^ .)
    Q               reduce using rule 107 (anchor -> $ ^ .)
    R               reduce using rule 107 (anchor -> $ ^ .)
    S               reduce using rule 107 (anchor -> $ ^ .)
    T               reduce using rule 107 (anchor -> $ ^ .)
    U               reduce using rule 107 (anchor -> $ ^ .)
    V               reduce using rule 107 (anchor -> $ ^ .)
    W               reduce using rule 107 (anchor -> $ ^ .)
    X               reduce using rule 107 (anchor -> $ ^ .)
    Y               reduce using rule 107 (anchor -> $ ^ .)
    Z               reduce using rule 107 (anchor -> $ ^ .)
    |               reduce using rule 107 (anchor -> $ ^ .)
    )               reduce using rule 107 (anchor -> $ ^ .)
    $end            reduce using rule 107 (anchor -> $ ^ .)


state 107

    (106) anchor -> $ + .

    *               reduce using rule 106 (anchor -> $ + .)
    +               reduce using rule 106 (anchor -> $ + .)
    ?               reduce using rule 106 (anchor -> $ + .)
    {               reduce using rule 106 (anchor -> $ + .)
    (               reduce using rule 106 (anchor -> $ + .)
    ^               reduce using rule 106 (anchor -> $ + .)
    >               reduce using rule 106 (anchor -> $ + .)
    <               reduce using rule 106 (anchor -> $ + .)
    /               reduce using rule 106 (anchor -> $ + .)
    \               reduce using rule 106 (anchor -> $ + .)
    #               reduce using rule 106 (anchor -> $ + .)
    %               reduce using rule 106 (anchor -> $ + .)
    ESCAPED         reduce using rule 106 (anchor -> $ + .)
    DIGIT           reduce using rule 106 (anchor -> $ + .)
    OTHER           reduce using rule 106 (anchor -> $ + .)
    [               reduce using rule 106 (anchor -> $ + .)
    .               reduce using rule 106 (anchor -> $ + .)
    ,               reduce using rule 106 (anchor -> $ + .)
    :               reduce using rule 106 (anchor -> $ + .)
    ;               reduce using rule 106 (anchor -> $ + .)
    $               reduce using rule 106 (anchor -> $ + .)
    `               reduce using rule 106 (anchor -> $ + .)
    a               reduce using rule 106 (anchor -> $ + .)
    b               reduce using rule 106 (anchor -> $ + .)
    c               reduce using rule 106 (anchor -> $ + .)
    d               reduce using rule 106 (anchor -> $ + .)
    e               reduce using rule 106 (anchor -> $ + .)
    f               reduce using rule 106 (anchor -> $ + .)
    g               reduce using rule 106 (anchor -> $ + .)
    h               reduce using rule 106 (anchor -> $ + .)
    i               reduce using rule 106 (anchor -> $ + .)
    j               reduce using rule 106 (anchor -> $ + .)
    k               reduce using rule 106 (anchor -> $ + .)
    l               reduce using rule 106 (anchor -> $ + .)
    m               reduce using rule 106 (anchor -> $ + .)
    n               reduce using rule 106 (anchor -> $ + .)
    o               reduce using rule 106 (anchor -> $ + .)
    p               reduce using rule 106 (anchor -> $ + .)
    q               reduce using rule 106 (anchor -> $ + .)
    r               reduce using rule 106 (anchor -> $ + .)
    s               reduce using rule 106 (anchor -> $ + .)
    t               reduce using rule 106 (anchor -> $ + .)
    u               reduce using rule 106 (anchor -> $ + .)
    v               reduce using rule 106 (anchor -> $ + .)
    w               reduce using rule 106 (anchor -> $ + .)
    x               reduce using rule 106 (anchor -> $ + .)
    y               reduce using rule 106 (anchor -> $ + .)
    z               reduce using rule 106 (anchor -> $ + .)
    A               reduce using rule 106 (anchor -> $ + .)
    B               reduce using rule 106 (anchor -> $ + .)
    C               reduce using rule 106 (anchor -> $ + .)
    D               reduce using rule 106 (anchor -> $ + .)
    E               reduce using rule 106 (anchor -> $ + .)
    F               reduce using rule 106 (anchor -> $ + .)
    G               reduce using rule 106 (anchor -> $ + .)
    H               reduce using rule 106 (anchor -> $ + .)
    I               reduce using rule 106 (anchor -> $ + .)
    J               reduce using rule 106 (anchor -> $ + .)
    K               reduce using rule 106 (anchor -> $ + .)
    L               reduce using rule 106 (anchor -> $ + .)
    M               reduce using rule 106 (anchor -> $ + .)
    N               reduce using rule 106 (anchor -> $ + .)
    O               reduce using rule 106 (anchor -> $ + .)
    P               reduce using rule 106 (anchor -> $ + .)
    Q               reduce using rule 106 (anchor -> $ + .)
    R               reduce using rule 106 (anchor -> $ + .)
    S               reduce using rule 106 (anchor -> $ + .)
    T               reduce using rule 106 (anchor -> $ + .)
    U               reduce using rule 106 (anchor -> $ + .)
    V               reduce using rule 106 (anchor -> $ + .)
    W               reduce using rule 106 (anchor -> $ + .)
    X               reduce using rule 106 (anchor -> $ + .)
    Y               reduce using rule 106 (anchor -> $ + .)
    Z               reduce using rule 106 (anchor -> $ + .)
    |               reduce using rule 106 (anchor -> $ + .)
    )               reduce using rule 106 (anchor -> $ + .)
    $end            reduce using rule 106 (anchor -> $ + .)


state 108

    (105) anchor -> $ * .

    *               reduce using rule 105 (anchor -> $ * .)
    +               reduce using rule 105 (anchor -> $ * .)
    ?               reduce using rule 105 (anchor -> $ * .)
    {               reduce using rule 105 (anchor -> $ * .)
    (               reduce using rule 105 (anchor -> $ * .)
    ^               reduce using rule 105 (anchor -> $ * .)
    >               reduce using rule 105 (anchor -> $ * .)
    <               reduce using rule 105 (anchor -> $ * .)
    /               reduce using rule 105 (anchor -> $ * .)
    \               reduce using rule 105 (anchor -> $ * .)
    #               reduce using rule 105 (anchor -> $ * .)
    %               reduce using rule 105 (anchor -> $ * .)
    ESCAPED         reduce using rule 105 (anchor -> $ * .)
    DIGIT           reduce using rule 105 (anchor -> $ * .)
    OTHER           reduce using rule 105 (anchor -> $ * .)
    [               reduce using rule 105 (anchor -> $ * .)
    .               reduce using rule 105 (anchor -> $ * .)
    ,               reduce using rule 105 (anchor -> $ * .)
    :               reduce using rule 105 (anchor -> $ * .)
    ;               reduce using rule 105 (anchor -> $ * .)
    $               reduce using rule 105 (anchor -> $ * .)
    `               reduce using rule 105 (anchor -> $ * .)
    a               reduce using rule 105 (anchor -> $ * .)
    b               reduce using rule 105 (anchor -> $ * .)
    c               reduce using rule 105 (anchor -> $ * .)
    d               reduce using rule 105 (anchor -> $ * .)
    e               reduce using rule 105 (anchor -> $ * .)
    f               reduce using rule 105 (anchor -> $ * .)
    g               reduce using rule 105 (anchor -> $ * .)
    h               reduce using rule 105 (anchor -> $ * .)
    i               reduce using rule 105 (anchor -> $ * .)
    j               reduce using rule 105 (anchor -> $ * .)
    k               reduce using rule 105 (anchor -> $ * .)
    l               reduce using rule 105 (anchor -> $ * .)
    m               reduce using rule 105 (anchor -> $ * .)
    n               reduce using rule 105 (anchor -> $ * .)
    o               reduce using rule 105 (anchor -> $ * .)
    p               reduce using rule 105 (anchor -> $ * .)
    q               reduce using rule 105 (anchor -> $ * .)
    r               reduce using rule 105 (anchor -> $ * .)
    s               reduce using rule 105 (anchor -> $ * .)
    t               reduce using rule 105 (anchor -> $ * .)
    u               reduce using rule 105 (anchor -> $ * .)
    v               reduce using rule 105 (anchor -> $ * .)
    w               reduce using rule 105 (anchor -> $ * .)
    x               reduce using rule 105 (anchor -> $ * .)
    y               reduce using rule 105 (anchor -> $ * .)
    z               reduce using rule 105 (anchor -> $ * .)
    A               reduce using rule 105 (anchor -> $ * .)
    B               reduce using rule 105 (anchor -> $ * .)
    C               reduce using rule 105 (anchor -> $ * .)
    D               reduce using rule 105 (anchor -> $ * .)
    E               reduce using rule 105 (anchor -> $ * .)
    F               reduce using rule 105 (anchor -> $ * .)
    G               reduce using rule 105 (anchor -> $ * .)
    H               reduce using rule 105 (anchor -> $ * .)
    I               reduce using rule 105 (anchor -> $ * .)
    J               reduce using rule 105 (anchor -> $ * .)
    K               reduce using rule 105 (anchor -> $ * .)
    L               reduce using rule 105 (anchor -> $ * .)
    M               reduce using rule 105 (anchor -> $ * .)
    N               reduce using rule 105 (anchor -> $ * .)
    O               reduce using rule 105 (anchor -> $ * .)
    P               reduce using rule 105 (anchor -> $ * .)
    Q               reduce using rule 105 (anchor -> $ * .)
    R               reduce using rule 105 (anchor -> $ * .)
    S               reduce using rule 105 (anchor -> $ * .)
    T               reduce using rule 105 (anchor -> $ * .)
    U               reduce using rule 105 (anchor -> $ * .)
    V               reduce using rule 105 (anchor -> $ * .)
    W               reduce using rule 105 (anchor -> $ * .)
    X               reduce using rule 105 (anchor -> $ * .)
    Y               reduce using rule 105 (anchor -> $ * .)
    Z               reduce using rule 105 (anchor -> $ * .)
    |               reduce using rule 105 (anchor -> $ * .)
    )               reduce using rule 105 (anchor -> $ * .)
    $end            reduce using rule 105 (anchor -> $ * .)


state 109

    (104) anchor -> $ alpha .

    *               reduce using rule 104 (anchor -> $ alpha .)
    +               reduce using rule 104 (anchor -> $ alpha .)
    ?               reduce using rule 104 (anchor -> $ alpha .)
    {               reduce using rule 104 (anchor -> $ alpha .)
    (               reduce using rule 104 (anchor -> $ alpha .)
    ^               reduce using rule 104 (anchor -> $ alpha .)
    >               reduce using rule 104 (anchor -> $ alpha .)
    <               reduce using rule 104 (anchor -> $ alpha .)
    /               reduce using rule 104 (anchor -> $ alpha .)
    \               reduce using rule 104 (anchor -> $ alpha .)
    #               reduce using rule 104 (anchor -> $ alpha .)
    %               reduce using rule 104 (anchor -> $ alpha .)
    ESCAPED         reduce using rule 104 (anchor -> $ alpha .)
    DIGIT           reduce using rule 104 (anchor -> $ alpha .)
    OTHER           reduce using rule 104 (anchor -> $ alpha .)
    [               reduce using rule 104 (anchor -> $ alpha .)
    .               reduce using rule 104 (anchor -> $ alpha .)
    ,               reduce using rule 104 (anchor -> $ alpha .)
    :               reduce using rule 104 (anchor -> $ alpha .)
    ;               reduce using rule 104 (anchor -> $ alpha .)
    $               reduce using rule 104 (anchor -> $ alpha .)
    `               reduce using rule 104 (anchor -> $ alpha .)
    a               reduce using rule 104 (anchor -> $ alpha .)
    b               reduce using rule 104 (anchor -> $ alpha .)
    c               reduce using rule 104 (anchor -> $ alpha .)
    d               reduce using rule 104 (anchor -> $ alpha .)
    e               reduce using rule 104 (anchor -> $ alpha .)
    f               reduce using rule 104 (anchor -> $ alpha .)
    g               reduce using rule 104 (anchor -> $ alpha .)
    h               reduce using rule 104 (anchor -> $ alpha .)
    i               reduce using rule 104 (anchor -> $ alpha .)
    j               reduce using rule 104 (anchor -> $ alpha .)
    k               reduce using rule 104 (anchor -> $ alpha .)
    l               reduce using rule 104 (anchor -> $ alpha .)
    m               reduce using rule 104 (anchor -> $ alpha .)
    n               reduce using rule 104 (anchor -> $ alpha .)
    o               reduce using rule 104 (anchor -> $ alpha .)
    p               reduce using rule 104 (anchor -> $ alpha .)
    q               reduce using rule 104 (anchor -> $ alpha .)
    r               reduce using rule 104 (anchor -> $ alpha .)
    s               reduce using rule 104 (anchor -> $ alpha .)
    t               reduce using rule 104 (anchor -> $ alpha .)
    u               reduce using rule 104 (anchor -> $ alpha .)
    v               reduce using rule 104 (anchor -> $ alpha .)
    w               reduce using rule 104 (anchor -> $ alpha .)
    x               reduce using rule 104 (anchor -> $ alpha .)
    y               reduce using rule 104 (anchor -> $ alpha .)
    z               reduce using rule 104 (anchor -> $ alpha .)
    A               reduce using rule 104 (anchor -> $ alpha .)
    B               reduce using rule 104 (anchor -> $ alpha .)
    C               reduce using rule 104 (anchor -> $ alpha .)
    D               reduce using rule 104 (anchor -> $ alpha .)
    E               reduce using rule 104 (anchor -> $ alpha .)
    F               reduce using rule 104 (anchor -> $ alpha .)
    G               reduce using rule 104 (anchor -> $ alpha .)
    H               reduce using rule 104 (anchor -> $ alpha .)
    I               reduce using rule 104 (anchor -> $ alpha .)
    J               reduce using rule 104 (anchor -> $ alpha .)
    K               reduce using rule 104 (anchor -> $ alpha .)
    L               reduce using rule 104 (anchor -> $ alpha .)
    M               reduce using rule 104 (anchor -> $ alpha .)
    N               reduce using rule 104 (anchor -> $ alpha .)
    O               reduce using rule 104 (anchor -> $ alpha .)
    P               reduce using rule 104 (anchor -> $ alpha .)
    Q               reduce using rule 104 (anchor -> $ alpha .)
    R               reduce using rule 104 (anchor -> $ alpha .)
    S               reduce using rule 104 (anchor -> $ alpha .)
    T               reduce using rule 104 (anchor -> $ alpha .)
    U               reduce using rule 104 (anchor -> $ alpha .)
    V               reduce using rule 104 (anchor -> $ alpha .)
    W               reduce using rule 104 (anchor -> $ alpha .)
    X               reduce using rule 104 (anchor -> $ alpha .)
    Y               reduce using rule 104 (anchor -> $ alpha .)
    Z               reduce using rule 104 (anchor -> $ alpha .)
    |               reduce using rule 104 (anchor -> $ alpha .)
    )               reduce using rule 104 (anchor -> $ alpha .)
    $end            reduce using rule 104 (anchor -> $ alpha .)


state 110

    (44) groupbody -> basicgroup .

    )               reduce using rule 44 (groupbody -> basicgroup .)


state 111

    (42) group -> ( groupbody . )

    )               shift and go to state 155


state 112

    (43) groupbody -> ? . specialgroup
    (45) specialgroup -> . _ lengthcheck
    (46) specialgroup -> . | stationarygroup
    (47) specialgroup -> . : nomatchgroup
    (48) specialgroup -> . , nodispgroup
    (49) specialgroup -> . ; nodispmatchgroup
    (50) specialgroup -> . recursive
    (56) recursive -> . R
    (57) recursive -> . number
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    _               shift and go to state 156
    |               shift and go to state 158
    :               shift and go to state 157
    ,               shift and go to state 161
    ;               shift and go to state 163
    R               shift and go to state 165
    DIGIT           shift and go to state 159

    specialgroup                   shift and go to state 164
    recursive                      shift and go to state 160
    number                         shift and go to state 162

state 113

    (58) basicgroup -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 58 (basicgroup -> re .)
    |               shift and go to state 150


state 114

    (74) classliteral -> ' .

    !               reduce using rule 74 (classliteral -> ' .)
    "               reduce using rule 74 (classliteral -> ' .)
    #               reduce using rule 74 (classliteral -> ' .)
    $               reduce using rule 74 (classliteral -> ' .)
    %               reduce using rule 74 (classliteral -> ' .)
    &               reduce using rule 74 (classliteral -> ' .)
    '               reduce using rule 74 (classliteral -> ' .)
    (               reduce using rule 74 (classliteral -> ' .)
    )               reduce using rule 74 (classliteral -> ' .)
    *               reduce using rule 74 (classliteral -> ' .)
    +               reduce using rule 74 (classliteral -> ' .)
    ,               reduce using rule 74 (classliteral -> ' .)
    .               reduce using rule 74 (classliteral -> ' .)
    /               reduce using rule 74 (classliteral -> ' .)
    :               reduce using rule 74 (classliteral -> ' .)
    ;               reduce using rule 74 (classliteral -> ' .)
    <               reduce using rule 74 (classliteral -> ' .)
    =               reduce using rule 74 (classliteral -> ' .)
    >               reduce using rule 74 (classliteral -> ' .)
    ?               reduce using rule 74 (classliteral -> ' .)
    @               reduce using rule 74 (classliteral -> ' .)
    [               reduce using rule 74 (classliteral -> ' .)
    \               reduce using rule 74 (classliteral -> ' .)
    _               reduce using rule 74 (classliteral -> ' .)
    `               reduce using rule 74 (classliteral -> ' .)
    {               reduce using rule 74 (classliteral -> ' .)
    }               reduce using rule 74 (classliteral -> ' .)
    ~               reduce using rule 74 (classliteral -> ' .)
    ESCAPED         reduce using rule 74 (classliteral -> ' .)
    DIGIT           reduce using rule 74 (classliteral -> ' .)
    OTHER           reduce using rule 74 (classliteral -> ' .)
    a               reduce using rule 74 (classliteral -> ' .)
    b               reduce using rule 74 (classliteral -> ' .)
    c               reduce using rule 74 (classliteral -> ' .)
    d               reduce using rule 74 (classliteral -> ' .)
    e               reduce using rule 74 (classliteral -> ' .)
    f               reduce using rule 74 (classliteral -> ' .)
    g               reduce using rule 74 (classliteral -> ' .)
    h               reduce using rule 74 (classliteral -> ' .)
    i               reduce using rule 74 (classliteral -> ' .)
    j               reduce using rule 74 (classliteral -> ' .)
    k               reduce using rule 74 (classliteral -> ' .)
    l               reduce using rule 74 (classliteral -> ' .)
    m               reduce using rule 74 (classliteral -> ' .)
    n               reduce using rule 74 (classliteral -> ' .)
    o               reduce using rule 74 (classliteral -> ' .)
    p               reduce using rule 74 (classliteral -> ' .)
    q               reduce using rule 74 (classliteral -> ' .)
    r               reduce using rule 74 (classliteral -> ' .)
    s               reduce using rule 74 (classliteral -> ' .)
    t               reduce using rule 74 (classliteral -> ' .)
    u               reduce using rule 74 (classliteral -> ' .)
    v               reduce using rule 74 (classliteral -> ' .)
    w               reduce using rule 74 (classliteral -> ' .)
    x               reduce using rule 74 (classliteral -> ' .)
    y               reduce using rule 74 (classliteral -> ' .)
    z               reduce using rule 74 (classliteral -> ' .)
    A               reduce using rule 74 (classliteral -> ' .)
    B               reduce using rule 74 (classliteral -> ' .)
    C               reduce using rule 74 (classliteral -> ' .)
    D               reduce using rule 74 (classliteral -> ' .)
    E               reduce using rule 74 (classliteral -> ' .)
    F               reduce using rule 74 (classliteral -> ' .)
    G               reduce using rule 74 (classliteral -> ' .)
    H               reduce using rule 74 (classliteral -> ' .)
    I               reduce using rule 74 (classliteral -> ' .)
    J               reduce using rule 74 (classliteral -> ' .)
    K               reduce using rule 74 (classliteral -> ' .)
    L               reduce using rule 74 (classliteral -> ' .)
    M               reduce using rule 74 (classliteral -> ' .)
    N               reduce using rule 74 (classliteral -> ' .)
    O               reduce using rule 74 (classliteral -> ' .)
    P               reduce using rule 74 (classliteral -> ' .)
    Q               reduce using rule 74 (classliteral -> ' .)
    R               reduce using rule 74 (classliteral -> ' .)
    S               reduce using rule 74 (classliteral -> ' .)
    T               reduce using rule 74 (classliteral -> ' .)
    U               reduce using rule 74 (classliteral -> ' .)
    V               reduce using rule 74 (classliteral -> ' .)
    W               reduce using rule 74 (classliteral -> ' .)
    X               reduce using rule 74 (classliteral -> ' .)
    Y               reduce using rule 74 (classliteral -> ' .)
    Z               reduce using rule 74 (classliteral -> ' .)
    |               reduce using rule 74 (classliteral -> ' .)
    ]               reduce using rule 74 (classliteral -> ' .)
    -               reduce using rule 74 (classliteral -> ' .)


state 115

    (61) classitems -> classitems2 .

    ]               reduce using rule 61 (classitems -> classitems2 .)


state 116

    (80) classliteral -> . .

    !               reduce using rule 80 (classliteral -> . .)
    "               reduce using rule 80 (classliteral -> . .)
    #               reduce using rule 80 (classliteral -> . .)
    $               reduce using rule 80 (classliteral -> . .)
    %               reduce using rule 80 (classliteral -> . .)
    &               reduce using rule 80 (classliteral -> . .)
    '               reduce using rule 80 (classliteral -> . .)
    (               reduce using rule 80 (classliteral -> . .)
    )               reduce using rule 80 (classliteral -> . .)
    *               reduce using rule 80 (classliteral -> . .)
    +               reduce using rule 80 (classliteral -> . .)
    ,               reduce using rule 80 (classliteral -> . .)
    .               reduce using rule 80 (classliteral -> . .)
    /               reduce using rule 80 (classliteral -> . .)
    :               reduce using rule 80 (classliteral -> . .)
    ;               reduce using rule 80 (classliteral -> . .)
    <               reduce using rule 80 (classliteral -> . .)
    =               reduce using rule 80 (classliteral -> . .)
    >               reduce using rule 80 (classliteral -> . .)
    ?               reduce using rule 80 (classliteral -> . .)
    @               reduce using rule 80 (classliteral -> . .)
    [               reduce using rule 80 (classliteral -> . .)
    \               reduce using rule 80 (classliteral -> . .)
    _               reduce using rule 80 (classliteral -> . .)
    `               reduce using rule 80 (classliteral -> . .)
    {               reduce using rule 80 (classliteral -> . .)
    }               reduce using rule 80 (classliteral -> . .)
    ~               reduce using rule 80 (classliteral -> . .)
    ESCAPED         reduce using rule 80 (classliteral -> . .)
    DIGIT           reduce using rule 80 (classliteral -> . .)
    OTHER           reduce using rule 80 (classliteral -> . .)
    a               reduce using rule 80 (classliteral -> . .)
    b               reduce using rule 80 (classliteral -> . .)
    c               reduce using rule 80 (classliteral -> . .)
    d               reduce using rule 80 (classliteral -> . .)
    e               reduce using rule 80 (classliteral -> . .)
    f               reduce using rule 80 (classliteral -> . .)
    g               reduce using rule 80 (classliteral -> . .)
    h               reduce using rule 80 (classliteral -> . .)
    i               reduce using rule 80 (classliteral -> . .)
    j               reduce using rule 80 (classliteral -> . .)
    k               reduce using rule 80 (classliteral -> . .)
    l               reduce using rule 80 (classliteral -> . .)
    m               reduce using rule 80 (classliteral -> . .)
    n               reduce using rule 80 (classliteral -> . .)
    o               reduce using rule 80 (classliteral -> . .)
    p               reduce using rule 80 (classliteral -> . .)
    q               reduce using rule 80 (classliteral -> . .)
    r               reduce using rule 80 (classliteral -> . .)
    s               reduce using rule 80 (classliteral -> . .)
    t               reduce using rule 80 (classliteral -> . .)
    u               reduce using rule 80 (classliteral -> . .)
    v               reduce using rule 80 (classliteral -> . .)
    w               reduce using rule 80 (classliteral -> . .)
    x               reduce using rule 80 (classliteral -> . .)
    y               reduce using rule 80 (classliteral -> . .)
    z               reduce using rule 80 (classliteral -> . .)
    A               reduce using rule 80 (classliteral -> . .)
    B               reduce using rule 80 (classliteral -> . .)
    C               reduce using rule 80 (classliteral -> . .)
    D               reduce using rule 80 (classliteral -> . .)
    E               reduce using rule 80 (classliteral -> . .)
    F               reduce using rule 80 (classliteral -> . .)
    G               reduce using rule 80 (classliteral -> . .)
    H               reduce using rule 80 (classliteral -> . .)
    I               reduce using rule 80 (classliteral -> . .)
    J               reduce using rule 80 (classliteral -> . .)
    K               reduce using rule 80 (classliteral -> . .)
    L               reduce using rule 80 (classliteral -> . .)
    M               reduce using rule 80 (classliteral -> . .)
    N               reduce using rule 80 (classliteral -> . .)
    O               reduce using rule 80 (classliteral -> . .)
    P               reduce using rule 80 (classliteral -> . .)
    Q               reduce using rule 80 (classliteral -> . .)
    R               reduce using rule 80 (classliteral -> . .)
    S               reduce using rule 80 (classliteral -> . .)
    T               reduce using rule 80 (classliteral -> . .)
    U               reduce using rule 80 (classliteral -> . .)
    V               reduce using rule 80 (classliteral -> . .)
    W               reduce using rule 80 (classliteral -> . .)
    X               reduce using rule 80 (classliteral -> . .)
    Y               reduce using rule 80 (classliteral -> . .)
    Z               reduce using rule 80 (classliteral -> . .)
    |               reduce using rule 80 (classliteral -> . .)
    ]               reduce using rule 80 (classliteral -> . .)
    -               reduce using rule 80 (classliteral -> . .)


state 117

    (60) classitems -> ^ . baseitems
    (64) baseitems -> . classatom
    (65) baseitems -> . classatom baseitems
    (66) classatom -> . classliteral
    (67) classatom -> . classrange
    (68) classliteral -> . !
    (69) classliteral -> . "
    (70) classliteral -> . #
    (71) classliteral -> . $
    (72) classliteral -> . %
    (73) classliteral -> . &
    (74) classliteral -> . '
    (75) classliteral -> . (
    (76) classliteral -> . )
    (77) classliteral -> . *
    (78) classliteral -> . +
    (79) classliteral -> . ,
    (80) classliteral -> . .
    (81) classliteral -> . /
    (82) classliteral -> . :
    (83) classliteral -> . ;
    (84) classliteral -> . <
    (85) classliteral -> . =
    (86) classliteral -> . >
    (87) classliteral -> . ?
    (88) classliteral -> . @
    (89) classliteral -> . [
    (90) classliteral -> . \
    (91) classliteral -> . _
    (92) classliteral -> . `
    (93) classliteral -> . {
    (94) classliteral -> . }
    (95) classliteral -> . ~
    (96) classliteral -> . literal
    (97) classrange -> . classliteral - classliteral
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    !               shift and go to state 132
    "               shift and go to state 119
    #               shift and go to state 139
    $               shift and go to state 135
    %               shift and go to state 124
    &               shift and go to state 127
    '               shift and go to state 114
    (               shift and go to state 134
    )               shift and go to state 129
    *               shift and go to state 131
    +               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 116
    /               shift and go to state 125
    :               shift and go to state 136
    ;               shift and go to state 137
    <               shift and go to state 118
    =               shift and go to state 144
    >               shift and go to state 130
    ?               shift and go to state 145
    @               shift and go to state 138
    [               shift and go to state 142
    \               shift and go to state 128
    _               shift and go to state 148
    `               shift and go to state 123
    {               shift and go to state 147
    }               shift and go to state 120
    ~               shift and go to state 146
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    classrange                     shift and go to state 140
    alpha                          shift and go to state 69
    classliteral                   shift and go to state 126
    classatom                      shift and go to state 122
    alpha_upper                    shift and go to state 35
    baseitems                      shift and go to state 166
    literal                        shift and go to state 143

state 118

    (84) classliteral -> < .

    !               reduce using rule 84 (classliteral -> < .)
    "               reduce using rule 84 (classliteral -> < .)
    #               reduce using rule 84 (classliteral -> < .)
    $               reduce using rule 84 (classliteral -> < .)
    %               reduce using rule 84 (classliteral -> < .)
    &               reduce using rule 84 (classliteral -> < .)
    '               reduce using rule 84 (classliteral -> < .)
    (               reduce using rule 84 (classliteral -> < .)
    )               reduce using rule 84 (classliteral -> < .)
    *               reduce using rule 84 (classliteral -> < .)
    +               reduce using rule 84 (classliteral -> < .)
    ,               reduce using rule 84 (classliteral -> < .)
    .               reduce using rule 84 (classliteral -> < .)
    /               reduce using rule 84 (classliteral -> < .)
    :               reduce using rule 84 (classliteral -> < .)
    ;               reduce using rule 84 (classliteral -> < .)
    <               reduce using rule 84 (classliteral -> < .)
    =               reduce using rule 84 (classliteral -> < .)
    >               reduce using rule 84 (classliteral -> < .)
    ?               reduce using rule 84 (classliteral -> < .)
    @               reduce using rule 84 (classliteral -> < .)
    [               reduce using rule 84 (classliteral -> < .)
    \               reduce using rule 84 (classliteral -> < .)
    _               reduce using rule 84 (classliteral -> < .)
    `               reduce using rule 84 (classliteral -> < .)
    {               reduce using rule 84 (classliteral -> < .)
    }               reduce using rule 84 (classliteral -> < .)
    ~               reduce using rule 84 (classliteral -> < .)
    ESCAPED         reduce using rule 84 (classliteral -> < .)
    DIGIT           reduce using rule 84 (classliteral -> < .)
    OTHER           reduce using rule 84 (classliteral -> < .)
    a               reduce using rule 84 (classliteral -> < .)
    b               reduce using rule 84 (classliteral -> < .)
    c               reduce using rule 84 (classliteral -> < .)
    d               reduce using rule 84 (classliteral -> < .)
    e               reduce using rule 84 (classliteral -> < .)
    f               reduce using rule 84 (classliteral -> < .)
    g               reduce using rule 84 (classliteral -> < .)
    h               reduce using rule 84 (classliteral -> < .)
    i               reduce using rule 84 (classliteral -> < .)
    j               reduce using rule 84 (classliteral -> < .)
    k               reduce using rule 84 (classliteral -> < .)
    l               reduce using rule 84 (classliteral -> < .)
    m               reduce using rule 84 (classliteral -> < .)
    n               reduce using rule 84 (classliteral -> < .)
    o               reduce using rule 84 (classliteral -> < .)
    p               reduce using rule 84 (classliteral -> < .)
    q               reduce using rule 84 (classliteral -> < .)
    r               reduce using rule 84 (classliteral -> < .)
    s               reduce using rule 84 (classliteral -> < .)
    t               reduce using rule 84 (classliteral -> < .)
    u               reduce using rule 84 (classliteral -> < .)
    v               reduce using rule 84 (classliteral -> < .)
    w               reduce using rule 84 (classliteral -> < .)
    x               reduce using rule 84 (classliteral -> < .)
    y               reduce using rule 84 (classliteral -> < .)
    z               reduce using rule 84 (classliteral -> < .)
    A               reduce using rule 84 (classliteral -> < .)
    B               reduce using rule 84 (classliteral -> < .)
    C               reduce using rule 84 (classliteral -> < .)
    D               reduce using rule 84 (classliteral -> < .)
    E               reduce using rule 84 (classliteral -> < .)
    F               reduce using rule 84 (classliteral -> < .)
    G               reduce using rule 84 (classliteral -> < .)
    H               reduce using rule 84 (classliteral -> < .)
    I               reduce using rule 84 (classliteral -> < .)
    J               reduce using rule 84 (classliteral -> < .)
    K               reduce using rule 84 (classliteral -> < .)
    L               reduce using rule 84 (classliteral -> < .)
    M               reduce using rule 84 (classliteral -> < .)
    N               reduce using rule 84 (classliteral -> < .)
    O               reduce using rule 84 (classliteral -> < .)
    P               reduce using rule 84 (classliteral -> < .)
    Q               reduce using rule 84 (classliteral -> < .)
    R               reduce using rule 84 (classliteral -> < .)
    S               reduce using rule 84 (classliteral -> < .)
    T               reduce using rule 84 (classliteral -> < .)
    U               reduce using rule 84 (classliteral -> < .)
    V               reduce using rule 84 (classliteral -> < .)
    W               reduce using rule 84 (classliteral -> < .)
    X               reduce using rule 84 (classliteral -> < .)
    Y               reduce using rule 84 (classliteral -> < .)
    Z               reduce using rule 84 (classliteral -> < .)
    |               reduce using rule 84 (classliteral -> < .)
    ]               reduce using rule 84 (classliteral -> < .)
    -               reduce using rule 84 (classliteral -> < .)


state 119

    (69) classliteral -> " .

    !               reduce using rule 69 (classliteral -> " .)
    "               reduce using rule 69 (classliteral -> " .)
    #               reduce using rule 69 (classliteral -> " .)
    $               reduce using rule 69 (classliteral -> " .)
    %               reduce using rule 69 (classliteral -> " .)
    &               reduce using rule 69 (classliteral -> " .)
    '               reduce using rule 69 (classliteral -> " .)
    (               reduce using rule 69 (classliteral -> " .)
    )               reduce using rule 69 (classliteral -> " .)
    *               reduce using rule 69 (classliteral -> " .)
    +               reduce using rule 69 (classliteral -> " .)
    ,               reduce using rule 69 (classliteral -> " .)
    .               reduce using rule 69 (classliteral -> " .)
    /               reduce using rule 69 (classliteral -> " .)
    :               reduce using rule 69 (classliteral -> " .)
    ;               reduce using rule 69 (classliteral -> " .)
    <               reduce using rule 69 (classliteral -> " .)
    =               reduce using rule 69 (classliteral -> " .)
    >               reduce using rule 69 (classliteral -> " .)
    ?               reduce using rule 69 (classliteral -> " .)
    @               reduce using rule 69 (classliteral -> " .)
    [               reduce using rule 69 (classliteral -> " .)
    \               reduce using rule 69 (classliteral -> " .)
    _               reduce using rule 69 (classliteral -> " .)
    `               reduce using rule 69 (classliteral -> " .)
    {               reduce using rule 69 (classliteral -> " .)
    }               reduce using rule 69 (classliteral -> " .)
    ~               reduce using rule 69 (classliteral -> " .)
    ESCAPED         reduce using rule 69 (classliteral -> " .)
    DIGIT           reduce using rule 69 (classliteral -> " .)
    OTHER           reduce using rule 69 (classliteral -> " .)
    a               reduce using rule 69 (classliteral -> " .)
    b               reduce using rule 69 (classliteral -> " .)
    c               reduce using rule 69 (classliteral -> " .)
    d               reduce using rule 69 (classliteral -> " .)
    e               reduce using rule 69 (classliteral -> " .)
    f               reduce using rule 69 (classliteral -> " .)
    g               reduce using rule 69 (classliteral -> " .)
    h               reduce using rule 69 (classliteral -> " .)
    i               reduce using rule 69 (classliteral -> " .)
    j               reduce using rule 69 (classliteral -> " .)
    k               reduce using rule 69 (classliteral -> " .)
    l               reduce using rule 69 (classliteral -> " .)
    m               reduce using rule 69 (classliteral -> " .)
    n               reduce using rule 69 (classliteral -> " .)
    o               reduce using rule 69 (classliteral -> " .)
    p               reduce using rule 69 (classliteral -> " .)
    q               reduce using rule 69 (classliteral -> " .)
    r               reduce using rule 69 (classliteral -> " .)
    s               reduce using rule 69 (classliteral -> " .)
    t               reduce using rule 69 (classliteral -> " .)
    u               reduce using rule 69 (classliteral -> " .)
    v               reduce using rule 69 (classliteral -> " .)
    w               reduce using rule 69 (classliteral -> " .)
    x               reduce using rule 69 (classliteral -> " .)
    y               reduce using rule 69 (classliteral -> " .)
    z               reduce using rule 69 (classliteral -> " .)
    A               reduce using rule 69 (classliteral -> " .)
    B               reduce using rule 69 (classliteral -> " .)
    C               reduce using rule 69 (classliteral -> " .)
    D               reduce using rule 69 (classliteral -> " .)
    E               reduce using rule 69 (classliteral -> " .)
    F               reduce using rule 69 (classliteral -> " .)
    G               reduce using rule 69 (classliteral -> " .)
    H               reduce using rule 69 (classliteral -> " .)
    I               reduce using rule 69 (classliteral -> " .)
    J               reduce using rule 69 (classliteral -> " .)
    K               reduce using rule 69 (classliteral -> " .)
    L               reduce using rule 69 (classliteral -> " .)
    M               reduce using rule 69 (classliteral -> " .)
    N               reduce using rule 69 (classliteral -> " .)
    O               reduce using rule 69 (classliteral -> " .)
    P               reduce using rule 69 (classliteral -> " .)
    Q               reduce using rule 69 (classliteral -> " .)
    R               reduce using rule 69 (classliteral -> " .)
    S               reduce using rule 69 (classliteral -> " .)
    T               reduce using rule 69 (classliteral -> " .)
    U               reduce using rule 69 (classliteral -> " .)
    V               reduce using rule 69 (classliteral -> " .)
    W               reduce using rule 69 (classliteral -> " .)
    X               reduce using rule 69 (classliteral -> " .)
    Y               reduce using rule 69 (classliteral -> " .)
    Z               reduce using rule 69 (classliteral -> " .)
    |               reduce using rule 69 (classliteral -> " .)
    ]               reduce using rule 69 (classliteral -> " .)
    -               reduce using rule 69 (classliteral -> " .)


state 120

    (94) classliteral -> } .

    !               reduce using rule 94 (classliteral -> } .)
    "               reduce using rule 94 (classliteral -> } .)
    #               reduce using rule 94 (classliteral -> } .)
    $               reduce using rule 94 (classliteral -> } .)
    %               reduce using rule 94 (classliteral -> } .)
    &               reduce using rule 94 (classliteral -> } .)
    '               reduce using rule 94 (classliteral -> } .)
    (               reduce using rule 94 (classliteral -> } .)
    )               reduce using rule 94 (classliteral -> } .)
    *               reduce using rule 94 (classliteral -> } .)
    +               reduce using rule 94 (classliteral -> } .)
    ,               reduce using rule 94 (classliteral -> } .)
    .               reduce using rule 94 (classliteral -> } .)
    /               reduce using rule 94 (classliteral -> } .)
    :               reduce using rule 94 (classliteral -> } .)
    ;               reduce using rule 94 (classliteral -> } .)
    <               reduce using rule 94 (classliteral -> } .)
    =               reduce using rule 94 (classliteral -> } .)
    >               reduce using rule 94 (classliteral -> } .)
    ?               reduce using rule 94 (classliteral -> } .)
    @               reduce using rule 94 (classliteral -> } .)
    [               reduce using rule 94 (classliteral -> } .)
    \               reduce using rule 94 (classliteral -> } .)
    _               reduce using rule 94 (classliteral -> } .)
    `               reduce using rule 94 (classliteral -> } .)
    {               reduce using rule 94 (classliteral -> } .)
    }               reduce using rule 94 (classliteral -> } .)
    ~               reduce using rule 94 (classliteral -> } .)
    ESCAPED         reduce using rule 94 (classliteral -> } .)
    DIGIT           reduce using rule 94 (classliteral -> } .)
    OTHER           reduce using rule 94 (classliteral -> } .)
    a               reduce using rule 94 (classliteral -> } .)
    b               reduce using rule 94 (classliteral -> } .)
    c               reduce using rule 94 (classliteral -> } .)
    d               reduce using rule 94 (classliteral -> } .)
    e               reduce using rule 94 (classliteral -> } .)
    f               reduce using rule 94 (classliteral -> } .)
    g               reduce using rule 94 (classliteral -> } .)
    h               reduce using rule 94 (classliteral -> } .)
    i               reduce using rule 94 (classliteral -> } .)
    j               reduce using rule 94 (classliteral -> } .)
    k               reduce using rule 94 (classliteral -> } .)
    l               reduce using rule 94 (classliteral -> } .)
    m               reduce using rule 94 (classliteral -> } .)
    n               reduce using rule 94 (classliteral -> } .)
    o               reduce using rule 94 (classliteral -> } .)
    p               reduce using rule 94 (classliteral -> } .)
    q               reduce using rule 94 (classliteral -> } .)
    r               reduce using rule 94 (classliteral -> } .)
    s               reduce using rule 94 (classliteral -> } .)
    t               reduce using rule 94 (classliteral -> } .)
    u               reduce using rule 94 (classliteral -> } .)
    v               reduce using rule 94 (classliteral -> } .)
    w               reduce using rule 94 (classliteral -> } .)
    x               reduce using rule 94 (classliteral -> } .)
    y               reduce using rule 94 (classliteral -> } .)
    z               reduce using rule 94 (classliteral -> } .)
    A               reduce using rule 94 (classliteral -> } .)
    B               reduce using rule 94 (classliteral -> } .)
    C               reduce using rule 94 (classliteral -> } .)
    D               reduce using rule 94 (classliteral -> } .)
    E               reduce using rule 94 (classliteral -> } .)
    F               reduce using rule 94 (classliteral -> } .)
    G               reduce using rule 94 (classliteral -> } .)
    H               reduce using rule 94 (classliteral -> } .)
    I               reduce using rule 94 (classliteral -> } .)
    J               reduce using rule 94 (classliteral -> } .)
    K               reduce using rule 94 (classliteral -> } .)
    L               reduce using rule 94 (classliteral -> } .)
    M               reduce using rule 94 (classliteral -> } .)
    N               reduce using rule 94 (classliteral -> } .)
    O               reduce using rule 94 (classliteral -> } .)
    P               reduce using rule 94 (classliteral -> } .)
    Q               reduce using rule 94 (classliteral -> } .)
    R               reduce using rule 94 (classliteral -> } .)
    S               reduce using rule 94 (classliteral -> } .)
    T               reduce using rule 94 (classliteral -> } .)
    U               reduce using rule 94 (classliteral -> } .)
    V               reduce using rule 94 (classliteral -> } .)
    W               reduce using rule 94 (classliteral -> } .)
    X               reduce using rule 94 (classliteral -> } .)
    Y               reduce using rule 94 (classliteral -> } .)
    Z               reduce using rule 94 (classliteral -> } .)
    |               reduce using rule 94 (classliteral -> } .)
    ]               reduce using rule 94 (classliteral -> } .)
    -               reduce using rule 94 (classliteral -> } .)


state 121

    (79) classliteral -> , .

    !               reduce using rule 79 (classliteral -> , .)
    "               reduce using rule 79 (classliteral -> , .)
    #               reduce using rule 79 (classliteral -> , .)
    $               reduce using rule 79 (classliteral -> , .)
    %               reduce using rule 79 (classliteral -> , .)
    &               reduce using rule 79 (classliteral -> , .)
    '               reduce using rule 79 (classliteral -> , .)
    (               reduce using rule 79 (classliteral -> , .)
    )               reduce using rule 79 (classliteral -> , .)
    *               reduce using rule 79 (classliteral -> , .)
    +               reduce using rule 79 (classliteral -> , .)
    ,               reduce using rule 79 (classliteral -> , .)
    .               reduce using rule 79 (classliteral -> , .)
    /               reduce using rule 79 (classliteral -> , .)
    :               reduce using rule 79 (classliteral -> , .)
    ;               reduce using rule 79 (classliteral -> , .)
    <               reduce using rule 79 (classliteral -> , .)
    =               reduce using rule 79 (classliteral -> , .)
    >               reduce using rule 79 (classliteral -> , .)
    ?               reduce using rule 79 (classliteral -> , .)
    @               reduce using rule 79 (classliteral -> , .)
    [               reduce using rule 79 (classliteral -> , .)
    \               reduce using rule 79 (classliteral -> , .)
    _               reduce using rule 79 (classliteral -> , .)
    `               reduce using rule 79 (classliteral -> , .)
    {               reduce using rule 79 (classliteral -> , .)
    }               reduce using rule 79 (classliteral -> , .)
    ~               reduce using rule 79 (classliteral -> , .)
    ESCAPED         reduce using rule 79 (classliteral -> , .)
    DIGIT           reduce using rule 79 (classliteral -> , .)
    OTHER           reduce using rule 79 (classliteral -> , .)
    a               reduce using rule 79 (classliteral -> , .)
    b               reduce using rule 79 (classliteral -> , .)
    c               reduce using rule 79 (classliteral -> , .)
    d               reduce using rule 79 (classliteral -> , .)
    e               reduce using rule 79 (classliteral -> , .)
    f               reduce using rule 79 (classliteral -> , .)
    g               reduce using rule 79 (classliteral -> , .)
    h               reduce using rule 79 (classliteral -> , .)
    i               reduce using rule 79 (classliteral -> , .)
    j               reduce using rule 79 (classliteral -> , .)
    k               reduce using rule 79 (classliteral -> , .)
    l               reduce using rule 79 (classliteral -> , .)
    m               reduce using rule 79 (classliteral -> , .)
    n               reduce using rule 79 (classliteral -> , .)
    o               reduce using rule 79 (classliteral -> , .)
    p               reduce using rule 79 (classliteral -> , .)
    q               reduce using rule 79 (classliteral -> , .)
    r               reduce using rule 79 (classliteral -> , .)
    s               reduce using rule 79 (classliteral -> , .)
    t               reduce using rule 79 (classliteral -> , .)
    u               reduce using rule 79 (classliteral -> , .)
    v               reduce using rule 79 (classliteral -> , .)
    w               reduce using rule 79 (classliteral -> , .)
    x               reduce using rule 79 (classliteral -> , .)
    y               reduce using rule 79 (classliteral -> , .)
    z               reduce using rule 79 (classliteral -> , .)
    A               reduce using rule 79 (classliteral -> , .)
    B               reduce using rule 79 (classliteral -> , .)
    C               reduce using rule 79 (classliteral -> , .)
    D               reduce using rule 79 (classliteral -> , .)
    E               reduce using rule 79 (classliteral -> , .)
    F               reduce using rule 79 (classliteral -> , .)
    G               reduce using rule 79 (classliteral -> , .)
    H               reduce using rule 79 (classliteral -> , .)
    I               reduce using rule 79 (classliteral -> , .)
    J               reduce using rule 79 (classliteral -> , .)
    K               reduce using rule 79 (classliteral -> , .)
    L               reduce using rule 79 (classliteral -> , .)
    M               reduce using rule 79 (classliteral -> , .)
    N               reduce using rule 79 (classliteral -> , .)
    O               reduce using rule 79 (classliteral -> , .)
    P               reduce using rule 79 (classliteral -> , .)
    Q               reduce using rule 79 (classliteral -> , .)
    R               reduce using rule 79 (classliteral -> , .)
    S               reduce using rule 79 (classliteral -> , .)
    T               reduce using rule 79 (classliteral -> , .)
    U               reduce using rule 79 (classliteral -> , .)
    V               reduce using rule 79 (classliteral -> , .)
    W               reduce using rule 79 (classliteral -> , .)
    X               reduce using rule 79 (classliteral -> , .)
    Y               reduce using rule 79 (classliteral -> , .)
    Z               reduce using rule 79 (classliteral -> , .)
    |               reduce using rule 79 (classliteral -> , .)
    ]               reduce using rule 79 (classliteral -> , .)
    -               reduce using rule 79 (classliteral -> , .)


state 122

    (64) baseitems -> classatom .
    (65) baseitems -> classatom . baseitems
    (64) baseitems -> . classatom
    (65) baseitems -> . classatom baseitems
    (66) classatom -> . classliteral
    (67) classatom -> . classrange
    (68) classliteral -> . !
    (69) classliteral -> . "
    (70) classliteral -> . #
    (71) classliteral -> . $
    (72) classliteral -> . %
    (73) classliteral -> . &
    (74) classliteral -> . '
    (75) classliteral -> . (
    (76) classliteral -> . )
    (77) classliteral -> . *
    (78) classliteral -> . +
    (79) classliteral -> . ,
    (80) classliteral -> . .
    (81) classliteral -> . /
    (82) classliteral -> . :
    (83) classliteral -> . ;
    (84) classliteral -> . <
    (85) classliteral -> . =
    (86) classliteral -> . >
    (87) classliteral -> . ?
    (88) classliteral -> . @
    (89) classliteral -> . [
    (90) classliteral -> . \
    (91) classliteral -> . _
    (92) classliteral -> . `
    (93) classliteral -> . {
    (94) classliteral -> . }
    (95) classliteral -> . ~
    (96) classliteral -> . literal
    (97) classrange -> . classliteral - classliteral
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    ]               reduce using rule 64 (baseitems -> classatom .)
    |               reduce using rule 64 (baseitems -> classatom .)
    !               shift and go to state 132
    "               shift and go to state 119
    #               shift and go to state 139
    $               shift and go to state 135
    %               shift and go to state 124
    &               shift and go to state 127
    '               shift and go to state 114
    (               shift and go to state 134
    )               shift and go to state 129
    *               shift and go to state 131
    +               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 116
    /               shift and go to state 125
    :               shift and go to state 136
    ;               shift and go to state 137
    <               shift and go to state 118
    =               shift and go to state 144
    >               shift and go to state 130
    ?               shift and go to state 145
    @               shift and go to state 138
    [               shift and go to state 142
    \               shift and go to state 128
    _               shift and go to state 148
    `               shift and go to state 123
    {               shift and go to state 147
    }               shift and go to state 120
    ~               shift and go to state 146
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    classrange                     shift and go to state 140
    alpha                          shift and go to state 69
    classliteral                   shift and go to state 126
    classatom                      shift and go to state 122
    alpha_upper                    shift and go to state 35
    baseitems                      shift and go to state 167
    literal                        shift and go to state 143

state 123

    (92) classliteral -> ` .

    !               reduce using rule 92 (classliteral -> ` .)
    "               reduce using rule 92 (classliteral -> ` .)
    #               reduce using rule 92 (classliteral -> ` .)
    $               reduce using rule 92 (classliteral -> ` .)
    %               reduce using rule 92 (classliteral -> ` .)
    &               reduce using rule 92 (classliteral -> ` .)
    '               reduce using rule 92 (classliteral -> ` .)
    (               reduce using rule 92 (classliteral -> ` .)
    )               reduce using rule 92 (classliteral -> ` .)
    *               reduce using rule 92 (classliteral -> ` .)
    +               reduce using rule 92 (classliteral -> ` .)
    ,               reduce using rule 92 (classliteral -> ` .)
    .               reduce using rule 92 (classliteral -> ` .)
    /               reduce using rule 92 (classliteral -> ` .)
    :               reduce using rule 92 (classliteral -> ` .)
    ;               reduce using rule 92 (classliteral -> ` .)
    <               reduce using rule 92 (classliteral -> ` .)
    =               reduce using rule 92 (classliteral -> ` .)
    >               reduce using rule 92 (classliteral -> ` .)
    ?               reduce using rule 92 (classliteral -> ` .)
    @               reduce using rule 92 (classliteral -> ` .)
    [               reduce using rule 92 (classliteral -> ` .)
    \               reduce using rule 92 (classliteral -> ` .)
    _               reduce using rule 92 (classliteral -> ` .)
    `               reduce using rule 92 (classliteral -> ` .)
    {               reduce using rule 92 (classliteral -> ` .)
    }               reduce using rule 92 (classliteral -> ` .)
    ~               reduce using rule 92 (classliteral -> ` .)
    ESCAPED         reduce using rule 92 (classliteral -> ` .)
    DIGIT           reduce using rule 92 (classliteral -> ` .)
    OTHER           reduce using rule 92 (classliteral -> ` .)
    a               reduce using rule 92 (classliteral -> ` .)
    b               reduce using rule 92 (classliteral -> ` .)
    c               reduce using rule 92 (classliteral -> ` .)
    d               reduce using rule 92 (classliteral -> ` .)
    e               reduce using rule 92 (classliteral -> ` .)
    f               reduce using rule 92 (classliteral -> ` .)
    g               reduce using rule 92 (classliteral -> ` .)
    h               reduce using rule 92 (classliteral -> ` .)
    i               reduce using rule 92 (classliteral -> ` .)
    j               reduce using rule 92 (classliteral -> ` .)
    k               reduce using rule 92 (classliteral -> ` .)
    l               reduce using rule 92 (classliteral -> ` .)
    m               reduce using rule 92 (classliteral -> ` .)
    n               reduce using rule 92 (classliteral -> ` .)
    o               reduce using rule 92 (classliteral -> ` .)
    p               reduce using rule 92 (classliteral -> ` .)
    q               reduce using rule 92 (classliteral -> ` .)
    r               reduce using rule 92 (classliteral -> ` .)
    s               reduce using rule 92 (classliteral -> ` .)
    t               reduce using rule 92 (classliteral -> ` .)
    u               reduce using rule 92 (classliteral -> ` .)
    v               reduce using rule 92 (classliteral -> ` .)
    w               reduce using rule 92 (classliteral -> ` .)
    x               reduce using rule 92 (classliteral -> ` .)
    y               reduce using rule 92 (classliteral -> ` .)
    z               reduce using rule 92 (classliteral -> ` .)
    A               reduce using rule 92 (classliteral -> ` .)
    B               reduce using rule 92 (classliteral -> ` .)
    C               reduce using rule 92 (classliteral -> ` .)
    D               reduce using rule 92 (classliteral -> ` .)
    E               reduce using rule 92 (classliteral -> ` .)
    F               reduce using rule 92 (classliteral -> ` .)
    G               reduce using rule 92 (classliteral -> ` .)
    H               reduce using rule 92 (classliteral -> ` .)
    I               reduce using rule 92 (classliteral -> ` .)
    J               reduce using rule 92 (classliteral -> ` .)
    K               reduce using rule 92 (classliteral -> ` .)
    L               reduce using rule 92 (classliteral -> ` .)
    M               reduce using rule 92 (classliteral -> ` .)
    N               reduce using rule 92 (classliteral -> ` .)
    O               reduce using rule 92 (classliteral -> ` .)
    P               reduce using rule 92 (classliteral -> ` .)
    Q               reduce using rule 92 (classliteral -> ` .)
    R               reduce using rule 92 (classliteral -> ` .)
    S               reduce using rule 92 (classliteral -> ` .)
    T               reduce using rule 92 (classliteral -> ` .)
    U               reduce using rule 92 (classliteral -> ` .)
    V               reduce using rule 92 (classliteral -> ` .)
    W               reduce using rule 92 (classliteral -> ` .)
    X               reduce using rule 92 (classliteral -> ` .)
    Y               reduce using rule 92 (classliteral -> ` .)
    Z               reduce using rule 92 (classliteral -> ` .)
    |               reduce using rule 92 (classliteral -> ` .)
    ]               reduce using rule 92 (classliteral -> ` .)
    -               reduce using rule 92 (classliteral -> ` .)


state 124

    (72) classliteral -> % .

    !               reduce using rule 72 (classliteral -> % .)
    "               reduce using rule 72 (classliteral -> % .)
    #               reduce using rule 72 (classliteral -> % .)
    $               reduce using rule 72 (classliteral -> % .)
    %               reduce using rule 72 (classliteral -> % .)
    &               reduce using rule 72 (classliteral -> % .)
    '               reduce using rule 72 (classliteral -> % .)
    (               reduce using rule 72 (classliteral -> % .)
    )               reduce using rule 72 (classliteral -> % .)
    *               reduce using rule 72 (classliteral -> % .)
    +               reduce using rule 72 (classliteral -> % .)
    ,               reduce using rule 72 (classliteral -> % .)
    .               reduce using rule 72 (classliteral -> % .)
    /               reduce using rule 72 (classliteral -> % .)
    :               reduce using rule 72 (classliteral -> % .)
    ;               reduce using rule 72 (classliteral -> % .)
    <               reduce using rule 72 (classliteral -> % .)
    =               reduce using rule 72 (classliteral -> % .)
    >               reduce using rule 72 (classliteral -> % .)
    ?               reduce using rule 72 (classliteral -> % .)
    @               reduce using rule 72 (classliteral -> % .)
    [               reduce using rule 72 (classliteral -> % .)
    \               reduce using rule 72 (classliteral -> % .)
    _               reduce using rule 72 (classliteral -> % .)
    `               reduce using rule 72 (classliteral -> % .)
    {               reduce using rule 72 (classliteral -> % .)
    }               reduce using rule 72 (classliteral -> % .)
    ~               reduce using rule 72 (classliteral -> % .)
    ESCAPED         reduce using rule 72 (classliteral -> % .)
    DIGIT           reduce using rule 72 (classliteral -> % .)
    OTHER           reduce using rule 72 (classliteral -> % .)
    a               reduce using rule 72 (classliteral -> % .)
    b               reduce using rule 72 (classliteral -> % .)
    c               reduce using rule 72 (classliteral -> % .)
    d               reduce using rule 72 (classliteral -> % .)
    e               reduce using rule 72 (classliteral -> % .)
    f               reduce using rule 72 (classliteral -> % .)
    g               reduce using rule 72 (classliteral -> % .)
    h               reduce using rule 72 (classliteral -> % .)
    i               reduce using rule 72 (classliteral -> % .)
    j               reduce using rule 72 (classliteral -> % .)
    k               reduce using rule 72 (classliteral -> % .)
    l               reduce using rule 72 (classliteral -> % .)
    m               reduce using rule 72 (classliteral -> % .)
    n               reduce using rule 72 (classliteral -> % .)
    o               reduce using rule 72 (classliteral -> % .)
    p               reduce using rule 72 (classliteral -> % .)
    q               reduce using rule 72 (classliteral -> % .)
    r               reduce using rule 72 (classliteral -> % .)
    s               reduce using rule 72 (classliteral -> % .)
    t               reduce using rule 72 (classliteral -> % .)
    u               reduce using rule 72 (classliteral -> % .)
    v               reduce using rule 72 (classliteral -> % .)
    w               reduce using rule 72 (classliteral -> % .)
    x               reduce using rule 72 (classliteral -> % .)
    y               reduce using rule 72 (classliteral -> % .)
    z               reduce using rule 72 (classliteral -> % .)
    A               reduce using rule 72 (classliteral -> % .)
    B               reduce using rule 72 (classliteral -> % .)
    C               reduce using rule 72 (classliteral -> % .)
    D               reduce using rule 72 (classliteral -> % .)
    E               reduce using rule 72 (classliteral -> % .)
    F               reduce using rule 72 (classliteral -> % .)
    G               reduce using rule 72 (classliteral -> % .)
    H               reduce using rule 72 (classliteral -> % .)
    I               reduce using rule 72 (classliteral -> % .)
    J               reduce using rule 72 (classliteral -> % .)
    K               reduce using rule 72 (classliteral -> % .)
    L               reduce using rule 72 (classliteral -> % .)
    M               reduce using rule 72 (classliteral -> % .)
    N               reduce using rule 72 (classliteral -> % .)
    O               reduce using rule 72 (classliteral -> % .)
    P               reduce using rule 72 (classliteral -> % .)
    Q               reduce using rule 72 (classliteral -> % .)
    R               reduce using rule 72 (classliteral -> % .)
    S               reduce using rule 72 (classliteral -> % .)
    T               reduce using rule 72 (classliteral -> % .)
    U               reduce using rule 72 (classliteral -> % .)
    V               reduce using rule 72 (classliteral -> % .)
    W               reduce using rule 72 (classliteral -> % .)
    X               reduce using rule 72 (classliteral -> % .)
    Y               reduce using rule 72 (classliteral -> % .)
    Z               reduce using rule 72 (classliteral -> % .)
    |               reduce using rule 72 (classliteral -> % .)
    ]               reduce using rule 72 (classliteral -> % .)
    -               reduce using rule 72 (classliteral -> % .)


state 125

    (81) classliteral -> / .

    !               reduce using rule 81 (classliteral -> / .)
    "               reduce using rule 81 (classliteral -> / .)
    #               reduce using rule 81 (classliteral -> / .)
    $               reduce using rule 81 (classliteral -> / .)
    %               reduce using rule 81 (classliteral -> / .)
    &               reduce using rule 81 (classliteral -> / .)
    '               reduce using rule 81 (classliteral -> / .)
    (               reduce using rule 81 (classliteral -> / .)
    )               reduce using rule 81 (classliteral -> / .)
    *               reduce using rule 81 (classliteral -> / .)
    +               reduce using rule 81 (classliteral -> / .)
    ,               reduce using rule 81 (classliteral -> / .)
    .               reduce using rule 81 (classliteral -> / .)
    /               reduce using rule 81 (classliteral -> / .)
    :               reduce using rule 81 (classliteral -> / .)
    ;               reduce using rule 81 (classliteral -> / .)
    <               reduce using rule 81 (classliteral -> / .)
    =               reduce using rule 81 (classliteral -> / .)
    >               reduce using rule 81 (classliteral -> / .)
    ?               reduce using rule 81 (classliteral -> / .)
    @               reduce using rule 81 (classliteral -> / .)
    [               reduce using rule 81 (classliteral -> / .)
    \               reduce using rule 81 (classliteral -> / .)
    _               reduce using rule 81 (classliteral -> / .)
    `               reduce using rule 81 (classliteral -> / .)
    {               reduce using rule 81 (classliteral -> / .)
    }               reduce using rule 81 (classliteral -> / .)
    ~               reduce using rule 81 (classliteral -> / .)
    ESCAPED         reduce using rule 81 (classliteral -> / .)
    DIGIT           reduce using rule 81 (classliteral -> / .)
    OTHER           reduce using rule 81 (classliteral -> / .)
    a               reduce using rule 81 (classliteral -> / .)
    b               reduce using rule 81 (classliteral -> / .)
    c               reduce using rule 81 (classliteral -> / .)
    d               reduce using rule 81 (classliteral -> / .)
    e               reduce using rule 81 (classliteral -> / .)
    f               reduce using rule 81 (classliteral -> / .)
    g               reduce using rule 81 (classliteral -> / .)
    h               reduce using rule 81 (classliteral -> / .)
    i               reduce using rule 81 (classliteral -> / .)
    j               reduce using rule 81 (classliteral -> / .)
    k               reduce using rule 81 (classliteral -> / .)
    l               reduce using rule 81 (classliteral -> / .)
    m               reduce using rule 81 (classliteral -> / .)
    n               reduce using rule 81 (classliteral -> / .)
    o               reduce using rule 81 (classliteral -> / .)
    p               reduce using rule 81 (classliteral -> / .)
    q               reduce using rule 81 (classliteral -> / .)
    r               reduce using rule 81 (classliteral -> / .)
    s               reduce using rule 81 (classliteral -> / .)
    t               reduce using rule 81 (classliteral -> / .)
    u               reduce using rule 81 (classliteral -> / .)
    v               reduce using rule 81 (classliteral -> / .)
    w               reduce using rule 81 (classliteral -> / .)
    x               reduce using rule 81 (classliteral -> / .)
    y               reduce using rule 81 (classliteral -> / .)
    z               reduce using rule 81 (classliteral -> / .)
    A               reduce using rule 81 (classliteral -> / .)
    B               reduce using rule 81 (classliteral -> / .)
    C               reduce using rule 81 (classliteral -> / .)
    D               reduce using rule 81 (classliteral -> / .)
    E               reduce using rule 81 (classliteral -> / .)
    F               reduce using rule 81 (classliteral -> / .)
    G               reduce using rule 81 (classliteral -> / .)
    H               reduce using rule 81 (classliteral -> / .)
    I               reduce using rule 81 (classliteral -> / .)
    J               reduce using rule 81 (classliteral -> / .)
    K               reduce using rule 81 (classliteral -> / .)
    L               reduce using rule 81 (classliteral -> / .)
    M               reduce using rule 81 (classliteral -> / .)
    N               reduce using rule 81 (classliteral -> / .)
    O               reduce using rule 81 (classliteral -> / .)
    P               reduce using rule 81 (classliteral -> / .)
    Q               reduce using rule 81 (classliteral -> / .)
    R               reduce using rule 81 (classliteral -> / .)
    S               reduce using rule 81 (classliteral -> / .)
    T               reduce using rule 81 (classliteral -> / .)
    U               reduce using rule 81 (classliteral -> / .)
    V               reduce using rule 81 (classliteral -> / .)
    W               reduce using rule 81 (classliteral -> / .)
    X               reduce using rule 81 (classliteral -> / .)
    Y               reduce using rule 81 (classliteral -> / .)
    Z               reduce using rule 81 (classliteral -> / .)
    |               reduce using rule 81 (classliteral -> / .)
    ]               reduce using rule 81 (classliteral -> / .)
    -               reduce using rule 81 (classliteral -> / .)


state 126

    (66) classatom -> classliteral .
    (97) classrange -> classliteral . - classliteral

    !               reduce using rule 66 (classatom -> classliteral .)
    "               reduce using rule 66 (classatom -> classliteral .)
    #               reduce using rule 66 (classatom -> classliteral .)
    $               reduce using rule 66 (classatom -> classliteral .)
    %               reduce using rule 66 (classatom -> classliteral .)
    &               reduce using rule 66 (classatom -> classliteral .)
    '               reduce using rule 66 (classatom -> classliteral .)
    (               reduce using rule 66 (classatom -> classliteral .)
    )               reduce using rule 66 (classatom -> classliteral .)
    *               reduce using rule 66 (classatom -> classliteral .)
    +               reduce using rule 66 (classatom -> classliteral .)
    ,               reduce using rule 66 (classatom -> classliteral .)
    .               reduce using rule 66 (classatom -> classliteral .)
    /               reduce using rule 66 (classatom -> classliteral .)
    :               reduce using rule 66 (classatom -> classliteral .)
    ;               reduce using rule 66 (classatom -> classliteral .)
    <               reduce using rule 66 (classatom -> classliteral .)
    =               reduce using rule 66 (classatom -> classliteral .)
    >               reduce using rule 66 (classatom -> classliteral .)
    ?               reduce using rule 66 (classatom -> classliteral .)
    @               reduce using rule 66 (classatom -> classliteral .)
    [               reduce using rule 66 (classatom -> classliteral .)
    \               reduce using rule 66 (classatom -> classliteral .)
    _               reduce using rule 66 (classatom -> classliteral .)
    `               reduce using rule 66 (classatom -> classliteral .)
    {               reduce using rule 66 (classatom -> classliteral .)
    }               reduce using rule 66 (classatom -> classliteral .)
    ~               reduce using rule 66 (classatom -> classliteral .)
    ESCAPED         reduce using rule 66 (classatom -> classliteral .)
    DIGIT           reduce using rule 66 (classatom -> classliteral .)
    OTHER           reduce using rule 66 (classatom -> classliteral .)
    a               reduce using rule 66 (classatom -> classliteral .)
    b               reduce using rule 66 (classatom -> classliteral .)
    c               reduce using rule 66 (classatom -> classliteral .)
    d               reduce using rule 66 (classatom -> classliteral .)
    e               reduce using rule 66 (classatom -> classliteral .)
    f               reduce using rule 66 (classatom -> classliteral .)
    g               reduce using rule 66 (classatom -> classliteral .)
    h               reduce using rule 66 (classatom -> classliteral .)
    i               reduce using rule 66 (classatom -> classliteral .)
    j               reduce using rule 66 (classatom -> classliteral .)
    k               reduce using rule 66 (classatom -> classliteral .)
    l               reduce using rule 66 (classatom -> classliteral .)
    m               reduce using rule 66 (classatom -> classliteral .)
    n               reduce using rule 66 (classatom -> classliteral .)
    o               reduce using rule 66 (classatom -> classliteral .)
    p               reduce using rule 66 (classatom -> classliteral .)
    q               reduce using rule 66 (classatom -> classliteral .)
    r               reduce using rule 66 (classatom -> classliteral .)
    s               reduce using rule 66 (classatom -> classliteral .)
    t               reduce using rule 66 (classatom -> classliteral .)
    u               reduce using rule 66 (classatom -> classliteral .)
    v               reduce using rule 66 (classatom -> classliteral .)
    w               reduce using rule 66 (classatom -> classliteral .)
    x               reduce using rule 66 (classatom -> classliteral .)
    y               reduce using rule 66 (classatom -> classliteral .)
    z               reduce using rule 66 (classatom -> classliteral .)
    A               reduce using rule 66 (classatom -> classliteral .)
    B               reduce using rule 66 (classatom -> classliteral .)
    C               reduce using rule 66 (classatom -> classliteral .)
    D               reduce using rule 66 (classatom -> classliteral .)
    E               reduce using rule 66 (classatom -> classliteral .)
    F               reduce using rule 66 (classatom -> classliteral .)
    G               reduce using rule 66 (classatom -> classliteral .)
    H               reduce using rule 66 (classatom -> classliteral .)
    I               reduce using rule 66 (classatom -> classliteral .)
    J               reduce using rule 66 (classatom -> classliteral .)
    K               reduce using rule 66 (classatom -> classliteral .)
    L               reduce using rule 66 (classatom -> classliteral .)
    M               reduce using rule 66 (classatom -> classliteral .)
    N               reduce using rule 66 (classatom -> classliteral .)
    O               reduce using rule 66 (classatom -> classliteral .)
    P               reduce using rule 66 (classatom -> classliteral .)
    Q               reduce using rule 66 (classatom -> classliteral .)
    R               reduce using rule 66 (classatom -> classliteral .)
    S               reduce using rule 66 (classatom -> classliteral .)
    T               reduce using rule 66 (classatom -> classliteral .)
    U               reduce using rule 66 (classatom -> classliteral .)
    V               reduce using rule 66 (classatom -> classliteral .)
    W               reduce using rule 66 (classatom -> classliteral .)
    X               reduce using rule 66 (classatom -> classliteral .)
    Y               reduce using rule 66 (classatom -> classliteral .)
    Z               reduce using rule 66 (classatom -> classliteral .)
    ]               reduce using rule 66 (classatom -> classliteral .)
    |               reduce using rule 66 (classatom -> classliteral .)
    -               shift and go to state 168


state 127

    (73) classliteral -> & .

    !               reduce using rule 73 (classliteral -> & .)
    "               reduce using rule 73 (classliteral -> & .)
    #               reduce using rule 73 (classliteral -> & .)
    $               reduce using rule 73 (classliteral -> & .)
    %               reduce using rule 73 (classliteral -> & .)
    &               reduce using rule 73 (classliteral -> & .)
    '               reduce using rule 73 (classliteral -> & .)
    (               reduce using rule 73 (classliteral -> & .)
    )               reduce using rule 73 (classliteral -> & .)
    *               reduce using rule 73 (classliteral -> & .)
    +               reduce using rule 73 (classliteral -> & .)
    ,               reduce using rule 73 (classliteral -> & .)
    .               reduce using rule 73 (classliteral -> & .)
    /               reduce using rule 73 (classliteral -> & .)
    :               reduce using rule 73 (classliteral -> & .)
    ;               reduce using rule 73 (classliteral -> & .)
    <               reduce using rule 73 (classliteral -> & .)
    =               reduce using rule 73 (classliteral -> & .)
    >               reduce using rule 73 (classliteral -> & .)
    ?               reduce using rule 73 (classliteral -> & .)
    @               reduce using rule 73 (classliteral -> & .)
    [               reduce using rule 73 (classliteral -> & .)
    \               reduce using rule 73 (classliteral -> & .)
    _               reduce using rule 73 (classliteral -> & .)
    `               reduce using rule 73 (classliteral -> & .)
    {               reduce using rule 73 (classliteral -> & .)
    }               reduce using rule 73 (classliteral -> & .)
    ~               reduce using rule 73 (classliteral -> & .)
    ESCAPED         reduce using rule 73 (classliteral -> & .)
    DIGIT           reduce using rule 73 (classliteral -> & .)
    OTHER           reduce using rule 73 (classliteral -> & .)
    a               reduce using rule 73 (classliteral -> & .)
    b               reduce using rule 73 (classliteral -> & .)
    c               reduce using rule 73 (classliteral -> & .)
    d               reduce using rule 73 (classliteral -> & .)
    e               reduce using rule 73 (classliteral -> & .)
    f               reduce using rule 73 (classliteral -> & .)
    g               reduce using rule 73 (classliteral -> & .)
    h               reduce using rule 73 (classliteral -> & .)
    i               reduce using rule 73 (classliteral -> & .)
    j               reduce using rule 73 (classliteral -> & .)
    k               reduce using rule 73 (classliteral -> & .)
    l               reduce using rule 73 (classliteral -> & .)
    m               reduce using rule 73 (classliteral -> & .)
    n               reduce using rule 73 (classliteral -> & .)
    o               reduce using rule 73 (classliteral -> & .)
    p               reduce using rule 73 (classliteral -> & .)
    q               reduce using rule 73 (classliteral -> & .)
    r               reduce using rule 73 (classliteral -> & .)
    s               reduce using rule 73 (classliteral -> & .)
    t               reduce using rule 73 (classliteral -> & .)
    u               reduce using rule 73 (classliteral -> & .)
    v               reduce using rule 73 (classliteral -> & .)
    w               reduce using rule 73 (classliteral -> & .)
    x               reduce using rule 73 (classliteral -> & .)
    y               reduce using rule 73 (classliteral -> & .)
    z               reduce using rule 73 (classliteral -> & .)
    A               reduce using rule 73 (classliteral -> & .)
    B               reduce using rule 73 (classliteral -> & .)
    C               reduce using rule 73 (classliteral -> & .)
    D               reduce using rule 73 (classliteral -> & .)
    E               reduce using rule 73 (classliteral -> & .)
    F               reduce using rule 73 (classliteral -> & .)
    G               reduce using rule 73 (classliteral -> & .)
    H               reduce using rule 73 (classliteral -> & .)
    I               reduce using rule 73 (classliteral -> & .)
    J               reduce using rule 73 (classliteral -> & .)
    K               reduce using rule 73 (classliteral -> & .)
    L               reduce using rule 73 (classliteral -> & .)
    M               reduce using rule 73 (classliteral -> & .)
    N               reduce using rule 73 (classliteral -> & .)
    O               reduce using rule 73 (classliteral -> & .)
    P               reduce using rule 73 (classliteral -> & .)
    Q               reduce using rule 73 (classliteral -> & .)
    R               reduce using rule 73 (classliteral -> & .)
    S               reduce using rule 73 (classliteral -> & .)
    T               reduce using rule 73 (classliteral -> & .)
    U               reduce using rule 73 (classliteral -> & .)
    V               reduce using rule 73 (classliteral -> & .)
    W               reduce using rule 73 (classliteral -> & .)
    X               reduce using rule 73 (classliteral -> & .)
    Y               reduce using rule 73 (classliteral -> & .)
    Z               reduce using rule 73 (classliteral -> & .)
    |               reduce using rule 73 (classliteral -> & .)
    ]               reduce using rule 73 (classliteral -> & .)
    -               reduce using rule 73 (classliteral -> & .)


state 128

    (90) classliteral -> \ .

    !               reduce using rule 90 (classliteral -> \ .)
    "               reduce using rule 90 (classliteral -> \ .)
    #               reduce using rule 90 (classliteral -> \ .)
    $               reduce using rule 90 (classliteral -> \ .)
    %               reduce using rule 90 (classliteral -> \ .)
    &               reduce using rule 90 (classliteral -> \ .)
    '               reduce using rule 90 (classliteral -> \ .)
    (               reduce using rule 90 (classliteral -> \ .)
    )               reduce using rule 90 (classliteral -> \ .)
    *               reduce using rule 90 (classliteral -> \ .)
    +               reduce using rule 90 (classliteral -> \ .)
    ,               reduce using rule 90 (classliteral -> \ .)
    .               reduce using rule 90 (classliteral -> \ .)
    /               reduce using rule 90 (classliteral -> \ .)
    :               reduce using rule 90 (classliteral -> \ .)
    ;               reduce using rule 90 (classliteral -> \ .)
    <               reduce using rule 90 (classliteral -> \ .)
    =               reduce using rule 90 (classliteral -> \ .)
    >               reduce using rule 90 (classliteral -> \ .)
    ?               reduce using rule 90 (classliteral -> \ .)
    @               reduce using rule 90 (classliteral -> \ .)
    [               reduce using rule 90 (classliteral -> \ .)
    \               reduce using rule 90 (classliteral -> \ .)
    _               reduce using rule 90 (classliteral -> \ .)
    `               reduce using rule 90 (classliteral -> \ .)
    {               reduce using rule 90 (classliteral -> \ .)
    }               reduce using rule 90 (classliteral -> \ .)
    ~               reduce using rule 90 (classliteral -> \ .)
    ESCAPED         reduce using rule 90 (classliteral -> \ .)
    DIGIT           reduce using rule 90 (classliteral -> \ .)
    OTHER           reduce using rule 90 (classliteral -> \ .)
    a               reduce using rule 90 (classliteral -> \ .)
    b               reduce using rule 90 (classliteral -> \ .)
    c               reduce using rule 90 (classliteral -> \ .)
    d               reduce using rule 90 (classliteral -> \ .)
    e               reduce using rule 90 (classliteral -> \ .)
    f               reduce using rule 90 (classliteral -> \ .)
    g               reduce using rule 90 (classliteral -> \ .)
    h               reduce using rule 90 (classliteral -> \ .)
    i               reduce using rule 90 (classliteral -> \ .)
    j               reduce using rule 90 (classliteral -> \ .)
    k               reduce using rule 90 (classliteral -> \ .)
    l               reduce using rule 90 (classliteral -> \ .)
    m               reduce using rule 90 (classliteral -> \ .)
    n               reduce using rule 90 (classliteral -> \ .)
    o               reduce using rule 90 (classliteral -> \ .)
    p               reduce using rule 90 (classliteral -> \ .)
    q               reduce using rule 90 (classliteral -> \ .)
    r               reduce using rule 90 (classliteral -> \ .)
    s               reduce using rule 90 (classliteral -> \ .)
    t               reduce using rule 90 (classliteral -> \ .)
    u               reduce using rule 90 (classliteral -> \ .)
    v               reduce using rule 90 (classliteral -> \ .)
    w               reduce using rule 90 (classliteral -> \ .)
    x               reduce using rule 90 (classliteral -> \ .)
    y               reduce using rule 90 (classliteral -> \ .)
    z               reduce using rule 90 (classliteral -> \ .)
    A               reduce using rule 90 (classliteral -> \ .)
    B               reduce using rule 90 (classliteral -> \ .)
    C               reduce using rule 90 (classliteral -> \ .)
    D               reduce using rule 90 (classliteral -> \ .)
    E               reduce using rule 90 (classliteral -> \ .)
    F               reduce using rule 90 (classliteral -> \ .)
    G               reduce using rule 90 (classliteral -> \ .)
    H               reduce using rule 90 (classliteral -> \ .)
    I               reduce using rule 90 (classliteral -> \ .)
    J               reduce using rule 90 (classliteral -> \ .)
    K               reduce using rule 90 (classliteral -> \ .)
    L               reduce using rule 90 (classliteral -> \ .)
    M               reduce using rule 90 (classliteral -> \ .)
    N               reduce using rule 90 (classliteral -> \ .)
    O               reduce using rule 90 (classliteral -> \ .)
    P               reduce using rule 90 (classliteral -> \ .)
    Q               reduce using rule 90 (classliteral -> \ .)
    R               reduce using rule 90 (classliteral -> \ .)
    S               reduce using rule 90 (classliteral -> \ .)
    T               reduce using rule 90 (classliteral -> \ .)
    U               reduce using rule 90 (classliteral -> \ .)
    V               reduce using rule 90 (classliteral -> \ .)
    W               reduce using rule 90 (classliteral -> \ .)
    X               reduce using rule 90 (classliteral -> \ .)
    Y               reduce using rule 90 (classliteral -> \ .)
    Z               reduce using rule 90 (classliteral -> \ .)
    |               reduce using rule 90 (classliteral -> \ .)
    ]               reduce using rule 90 (classliteral -> \ .)
    -               reduce using rule 90 (classliteral -> \ .)


state 129

    (76) classliteral -> ) .

    !               reduce using rule 76 (classliteral -> ) .)
    "               reduce using rule 76 (classliteral -> ) .)
    #               reduce using rule 76 (classliteral -> ) .)
    $               reduce using rule 76 (classliteral -> ) .)
    %               reduce using rule 76 (classliteral -> ) .)
    &               reduce using rule 76 (classliteral -> ) .)
    '               reduce using rule 76 (classliteral -> ) .)
    (               reduce using rule 76 (classliteral -> ) .)
    )               reduce using rule 76 (classliteral -> ) .)
    *               reduce using rule 76 (classliteral -> ) .)
    +               reduce using rule 76 (classliteral -> ) .)
    ,               reduce using rule 76 (classliteral -> ) .)
    .               reduce using rule 76 (classliteral -> ) .)
    /               reduce using rule 76 (classliteral -> ) .)
    :               reduce using rule 76 (classliteral -> ) .)
    ;               reduce using rule 76 (classliteral -> ) .)
    <               reduce using rule 76 (classliteral -> ) .)
    =               reduce using rule 76 (classliteral -> ) .)
    >               reduce using rule 76 (classliteral -> ) .)
    ?               reduce using rule 76 (classliteral -> ) .)
    @               reduce using rule 76 (classliteral -> ) .)
    [               reduce using rule 76 (classliteral -> ) .)
    \               reduce using rule 76 (classliteral -> ) .)
    _               reduce using rule 76 (classliteral -> ) .)
    `               reduce using rule 76 (classliteral -> ) .)
    {               reduce using rule 76 (classliteral -> ) .)
    }               reduce using rule 76 (classliteral -> ) .)
    ~               reduce using rule 76 (classliteral -> ) .)
    ESCAPED         reduce using rule 76 (classliteral -> ) .)
    DIGIT           reduce using rule 76 (classliteral -> ) .)
    OTHER           reduce using rule 76 (classliteral -> ) .)
    a               reduce using rule 76 (classliteral -> ) .)
    b               reduce using rule 76 (classliteral -> ) .)
    c               reduce using rule 76 (classliteral -> ) .)
    d               reduce using rule 76 (classliteral -> ) .)
    e               reduce using rule 76 (classliteral -> ) .)
    f               reduce using rule 76 (classliteral -> ) .)
    g               reduce using rule 76 (classliteral -> ) .)
    h               reduce using rule 76 (classliteral -> ) .)
    i               reduce using rule 76 (classliteral -> ) .)
    j               reduce using rule 76 (classliteral -> ) .)
    k               reduce using rule 76 (classliteral -> ) .)
    l               reduce using rule 76 (classliteral -> ) .)
    m               reduce using rule 76 (classliteral -> ) .)
    n               reduce using rule 76 (classliteral -> ) .)
    o               reduce using rule 76 (classliteral -> ) .)
    p               reduce using rule 76 (classliteral -> ) .)
    q               reduce using rule 76 (classliteral -> ) .)
    r               reduce using rule 76 (classliteral -> ) .)
    s               reduce using rule 76 (classliteral -> ) .)
    t               reduce using rule 76 (classliteral -> ) .)
    u               reduce using rule 76 (classliteral -> ) .)
    v               reduce using rule 76 (classliteral -> ) .)
    w               reduce using rule 76 (classliteral -> ) .)
    x               reduce using rule 76 (classliteral -> ) .)
    y               reduce using rule 76 (classliteral -> ) .)
    z               reduce using rule 76 (classliteral -> ) .)
    A               reduce using rule 76 (classliteral -> ) .)
    B               reduce using rule 76 (classliteral -> ) .)
    C               reduce using rule 76 (classliteral -> ) .)
    D               reduce using rule 76 (classliteral -> ) .)
    E               reduce using rule 76 (classliteral -> ) .)
    F               reduce using rule 76 (classliteral -> ) .)
    G               reduce using rule 76 (classliteral -> ) .)
    H               reduce using rule 76 (classliteral -> ) .)
    I               reduce using rule 76 (classliteral -> ) .)
    J               reduce using rule 76 (classliteral -> ) .)
    K               reduce using rule 76 (classliteral -> ) .)
    L               reduce using rule 76 (classliteral -> ) .)
    M               reduce using rule 76 (classliteral -> ) .)
    N               reduce using rule 76 (classliteral -> ) .)
    O               reduce using rule 76 (classliteral -> ) .)
    P               reduce using rule 76 (classliteral -> ) .)
    Q               reduce using rule 76 (classliteral -> ) .)
    R               reduce using rule 76 (classliteral -> ) .)
    S               reduce using rule 76 (classliteral -> ) .)
    T               reduce using rule 76 (classliteral -> ) .)
    U               reduce using rule 76 (classliteral -> ) .)
    V               reduce using rule 76 (classliteral -> ) .)
    W               reduce using rule 76 (classliteral -> ) .)
    X               reduce using rule 76 (classliteral -> ) .)
    Y               reduce using rule 76 (classliteral -> ) .)
    Z               reduce using rule 76 (classliteral -> ) .)
    |               reduce using rule 76 (classliteral -> ) .)
    ]               reduce using rule 76 (classliteral -> ) .)
    -               reduce using rule 76 (classliteral -> ) .)


state 130

    (86) classliteral -> > .

    !               reduce using rule 86 (classliteral -> > .)
    "               reduce using rule 86 (classliteral -> > .)
    #               reduce using rule 86 (classliteral -> > .)
    $               reduce using rule 86 (classliteral -> > .)
    %               reduce using rule 86 (classliteral -> > .)
    &               reduce using rule 86 (classliteral -> > .)
    '               reduce using rule 86 (classliteral -> > .)
    (               reduce using rule 86 (classliteral -> > .)
    )               reduce using rule 86 (classliteral -> > .)
    *               reduce using rule 86 (classliteral -> > .)
    +               reduce using rule 86 (classliteral -> > .)
    ,               reduce using rule 86 (classliteral -> > .)
    .               reduce using rule 86 (classliteral -> > .)
    /               reduce using rule 86 (classliteral -> > .)
    :               reduce using rule 86 (classliteral -> > .)
    ;               reduce using rule 86 (classliteral -> > .)
    <               reduce using rule 86 (classliteral -> > .)
    =               reduce using rule 86 (classliteral -> > .)
    >               reduce using rule 86 (classliteral -> > .)
    ?               reduce using rule 86 (classliteral -> > .)
    @               reduce using rule 86 (classliteral -> > .)
    [               reduce using rule 86 (classliteral -> > .)
    \               reduce using rule 86 (classliteral -> > .)
    _               reduce using rule 86 (classliteral -> > .)
    `               reduce using rule 86 (classliteral -> > .)
    {               reduce using rule 86 (classliteral -> > .)
    }               reduce using rule 86 (classliteral -> > .)
    ~               reduce using rule 86 (classliteral -> > .)
    ESCAPED         reduce using rule 86 (classliteral -> > .)
    DIGIT           reduce using rule 86 (classliteral -> > .)
    OTHER           reduce using rule 86 (classliteral -> > .)
    a               reduce using rule 86 (classliteral -> > .)
    b               reduce using rule 86 (classliteral -> > .)
    c               reduce using rule 86 (classliteral -> > .)
    d               reduce using rule 86 (classliteral -> > .)
    e               reduce using rule 86 (classliteral -> > .)
    f               reduce using rule 86 (classliteral -> > .)
    g               reduce using rule 86 (classliteral -> > .)
    h               reduce using rule 86 (classliteral -> > .)
    i               reduce using rule 86 (classliteral -> > .)
    j               reduce using rule 86 (classliteral -> > .)
    k               reduce using rule 86 (classliteral -> > .)
    l               reduce using rule 86 (classliteral -> > .)
    m               reduce using rule 86 (classliteral -> > .)
    n               reduce using rule 86 (classliteral -> > .)
    o               reduce using rule 86 (classliteral -> > .)
    p               reduce using rule 86 (classliteral -> > .)
    q               reduce using rule 86 (classliteral -> > .)
    r               reduce using rule 86 (classliteral -> > .)
    s               reduce using rule 86 (classliteral -> > .)
    t               reduce using rule 86 (classliteral -> > .)
    u               reduce using rule 86 (classliteral -> > .)
    v               reduce using rule 86 (classliteral -> > .)
    w               reduce using rule 86 (classliteral -> > .)
    x               reduce using rule 86 (classliteral -> > .)
    y               reduce using rule 86 (classliteral -> > .)
    z               reduce using rule 86 (classliteral -> > .)
    A               reduce using rule 86 (classliteral -> > .)
    B               reduce using rule 86 (classliteral -> > .)
    C               reduce using rule 86 (classliteral -> > .)
    D               reduce using rule 86 (classliteral -> > .)
    E               reduce using rule 86 (classliteral -> > .)
    F               reduce using rule 86 (classliteral -> > .)
    G               reduce using rule 86 (classliteral -> > .)
    H               reduce using rule 86 (classliteral -> > .)
    I               reduce using rule 86 (classliteral -> > .)
    J               reduce using rule 86 (classliteral -> > .)
    K               reduce using rule 86 (classliteral -> > .)
    L               reduce using rule 86 (classliteral -> > .)
    M               reduce using rule 86 (classliteral -> > .)
    N               reduce using rule 86 (classliteral -> > .)
    O               reduce using rule 86 (classliteral -> > .)
    P               reduce using rule 86 (classliteral -> > .)
    Q               reduce using rule 86 (classliteral -> > .)
    R               reduce using rule 86 (classliteral -> > .)
    S               reduce using rule 86 (classliteral -> > .)
    T               reduce using rule 86 (classliteral -> > .)
    U               reduce using rule 86 (classliteral -> > .)
    V               reduce using rule 86 (classliteral -> > .)
    W               reduce using rule 86 (classliteral -> > .)
    X               reduce using rule 86 (classliteral -> > .)
    Y               reduce using rule 86 (classliteral -> > .)
    Z               reduce using rule 86 (classliteral -> > .)
    |               reduce using rule 86 (classliteral -> > .)
    ]               reduce using rule 86 (classliteral -> > .)
    -               reduce using rule 86 (classliteral -> > .)


state 131

    (77) classliteral -> * .

    !               reduce using rule 77 (classliteral -> * .)
    "               reduce using rule 77 (classliteral -> * .)
    #               reduce using rule 77 (classliteral -> * .)
    $               reduce using rule 77 (classliteral -> * .)
    %               reduce using rule 77 (classliteral -> * .)
    &               reduce using rule 77 (classliteral -> * .)
    '               reduce using rule 77 (classliteral -> * .)
    (               reduce using rule 77 (classliteral -> * .)
    )               reduce using rule 77 (classliteral -> * .)
    *               reduce using rule 77 (classliteral -> * .)
    +               reduce using rule 77 (classliteral -> * .)
    ,               reduce using rule 77 (classliteral -> * .)
    .               reduce using rule 77 (classliteral -> * .)
    /               reduce using rule 77 (classliteral -> * .)
    :               reduce using rule 77 (classliteral -> * .)
    ;               reduce using rule 77 (classliteral -> * .)
    <               reduce using rule 77 (classliteral -> * .)
    =               reduce using rule 77 (classliteral -> * .)
    >               reduce using rule 77 (classliteral -> * .)
    ?               reduce using rule 77 (classliteral -> * .)
    @               reduce using rule 77 (classliteral -> * .)
    [               reduce using rule 77 (classliteral -> * .)
    \               reduce using rule 77 (classliteral -> * .)
    _               reduce using rule 77 (classliteral -> * .)
    `               reduce using rule 77 (classliteral -> * .)
    {               reduce using rule 77 (classliteral -> * .)
    }               reduce using rule 77 (classliteral -> * .)
    ~               reduce using rule 77 (classliteral -> * .)
    ESCAPED         reduce using rule 77 (classliteral -> * .)
    DIGIT           reduce using rule 77 (classliteral -> * .)
    OTHER           reduce using rule 77 (classliteral -> * .)
    a               reduce using rule 77 (classliteral -> * .)
    b               reduce using rule 77 (classliteral -> * .)
    c               reduce using rule 77 (classliteral -> * .)
    d               reduce using rule 77 (classliteral -> * .)
    e               reduce using rule 77 (classliteral -> * .)
    f               reduce using rule 77 (classliteral -> * .)
    g               reduce using rule 77 (classliteral -> * .)
    h               reduce using rule 77 (classliteral -> * .)
    i               reduce using rule 77 (classliteral -> * .)
    j               reduce using rule 77 (classliteral -> * .)
    k               reduce using rule 77 (classliteral -> * .)
    l               reduce using rule 77 (classliteral -> * .)
    m               reduce using rule 77 (classliteral -> * .)
    n               reduce using rule 77 (classliteral -> * .)
    o               reduce using rule 77 (classliteral -> * .)
    p               reduce using rule 77 (classliteral -> * .)
    q               reduce using rule 77 (classliteral -> * .)
    r               reduce using rule 77 (classliteral -> * .)
    s               reduce using rule 77 (classliteral -> * .)
    t               reduce using rule 77 (classliteral -> * .)
    u               reduce using rule 77 (classliteral -> * .)
    v               reduce using rule 77 (classliteral -> * .)
    w               reduce using rule 77 (classliteral -> * .)
    x               reduce using rule 77 (classliteral -> * .)
    y               reduce using rule 77 (classliteral -> * .)
    z               reduce using rule 77 (classliteral -> * .)
    A               reduce using rule 77 (classliteral -> * .)
    B               reduce using rule 77 (classliteral -> * .)
    C               reduce using rule 77 (classliteral -> * .)
    D               reduce using rule 77 (classliteral -> * .)
    E               reduce using rule 77 (classliteral -> * .)
    F               reduce using rule 77 (classliteral -> * .)
    G               reduce using rule 77 (classliteral -> * .)
    H               reduce using rule 77 (classliteral -> * .)
    I               reduce using rule 77 (classliteral -> * .)
    J               reduce using rule 77 (classliteral -> * .)
    K               reduce using rule 77 (classliteral -> * .)
    L               reduce using rule 77 (classliteral -> * .)
    M               reduce using rule 77 (classliteral -> * .)
    N               reduce using rule 77 (classliteral -> * .)
    O               reduce using rule 77 (classliteral -> * .)
    P               reduce using rule 77 (classliteral -> * .)
    Q               reduce using rule 77 (classliteral -> * .)
    R               reduce using rule 77 (classliteral -> * .)
    S               reduce using rule 77 (classliteral -> * .)
    T               reduce using rule 77 (classliteral -> * .)
    U               reduce using rule 77 (classliteral -> * .)
    V               reduce using rule 77 (classliteral -> * .)
    W               reduce using rule 77 (classliteral -> * .)
    X               reduce using rule 77 (classliteral -> * .)
    Y               reduce using rule 77 (classliteral -> * .)
    Z               reduce using rule 77 (classliteral -> * .)
    |               reduce using rule 77 (classliteral -> * .)
    ]               reduce using rule 77 (classliteral -> * .)
    -               reduce using rule 77 (classliteral -> * .)


state 132

    (68) classliteral -> ! .

    !               reduce using rule 68 (classliteral -> ! .)
    "               reduce using rule 68 (classliteral -> ! .)
    #               reduce using rule 68 (classliteral -> ! .)
    $               reduce using rule 68 (classliteral -> ! .)
    %               reduce using rule 68 (classliteral -> ! .)
    &               reduce using rule 68 (classliteral -> ! .)
    '               reduce using rule 68 (classliteral -> ! .)
    (               reduce using rule 68 (classliteral -> ! .)
    )               reduce using rule 68 (classliteral -> ! .)
    *               reduce using rule 68 (classliteral -> ! .)
    +               reduce using rule 68 (classliteral -> ! .)
    ,               reduce using rule 68 (classliteral -> ! .)
    .               reduce using rule 68 (classliteral -> ! .)
    /               reduce using rule 68 (classliteral -> ! .)
    :               reduce using rule 68 (classliteral -> ! .)
    ;               reduce using rule 68 (classliteral -> ! .)
    <               reduce using rule 68 (classliteral -> ! .)
    =               reduce using rule 68 (classliteral -> ! .)
    >               reduce using rule 68 (classliteral -> ! .)
    ?               reduce using rule 68 (classliteral -> ! .)
    @               reduce using rule 68 (classliteral -> ! .)
    [               reduce using rule 68 (classliteral -> ! .)
    \               reduce using rule 68 (classliteral -> ! .)
    _               reduce using rule 68 (classliteral -> ! .)
    `               reduce using rule 68 (classliteral -> ! .)
    {               reduce using rule 68 (classliteral -> ! .)
    }               reduce using rule 68 (classliteral -> ! .)
    ~               reduce using rule 68 (classliteral -> ! .)
    ESCAPED         reduce using rule 68 (classliteral -> ! .)
    DIGIT           reduce using rule 68 (classliteral -> ! .)
    OTHER           reduce using rule 68 (classliteral -> ! .)
    a               reduce using rule 68 (classliteral -> ! .)
    b               reduce using rule 68 (classliteral -> ! .)
    c               reduce using rule 68 (classliteral -> ! .)
    d               reduce using rule 68 (classliteral -> ! .)
    e               reduce using rule 68 (classliteral -> ! .)
    f               reduce using rule 68 (classliteral -> ! .)
    g               reduce using rule 68 (classliteral -> ! .)
    h               reduce using rule 68 (classliteral -> ! .)
    i               reduce using rule 68 (classliteral -> ! .)
    j               reduce using rule 68 (classliteral -> ! .)
    k               reduce using rule 68 (classliteral -> ! .)
    l               reduce using rule 68 (classliteral -> ! .)
    m               reduce using rule 68 (classliteral -> ! .)
    n               reduce using rule 68 (classliteral -> ! .)
    o               reduce using rule 68 (classliteral -> ! .)
    p               reduce using rule 68 (classliteral -> ! .)
    q               reduce using rule 68 (classliteral -> ! .)
    r               reduce using rule 68 (classliteral -> ! .)
    s               reduce using rule 68 (classliteral -> ! .)
    t               reduce using rule 68 (classliteral -> ! .)
    u               reduce using rule 68 (classliteral -> ! .)
    v               reduce using rule 68 (classliteral -> ! .)
    w               reduce using rule 68 (classliteral -> ! .)
    x               reduce using rule 68 (classliteral -> ! .)
    y               reduce using rule 68 (classliteral -> ! .)
    z               reduce using rule 68 (classliteral -> ! .)
    A               reduce using rule 68 (classliteral -> ! .)
    B               reduce using rule 68 (classliteral -> ! .)
    C               reduce using rule 68 (classliteral -> ! .)
    D               reduce using rule 68 (classliteral -> ! .)
    E               reduce using rule 68 (classliteral -> ! .)
    F               reduce using rule 68 (classliteral -> ! .)
    G               reduce using rule 68 (classliteral -> ! .)
    H               reduce using rule 68 (classliteral -> ! .)
    I               reduce using rule 68 (classliteral -> ! .)
    J               reduce using rule 68 (classliteral -> ! .)
    K               reduce using rule 68 (classliteral -> ! .)
    L               reduce using rule 68 (classliteral -> ! .)
    M               reduce using rule 68 (classliteral -> ! .)
    N               reduce using rule 68 (classliteral -> ! .)
    O               reduce using rule 68 (classliteral -> ! .)
    P               reduce using rule 68 (classliteral -> ! .)
    Q               reduce using rule 68 (classliteral -> ! .)
    R               reduce using rule 68 (classliteral -> ! .)
    S               reduce using rule 68 (classliteral -> ! .)
    T               reduce using rule 68 (classliteral -> ! .)
    U               reduce using rule 68 (classliteral -> ! .)
    V               reduce using rule 68 (classliteral -> ! .)
    W               reduce using rule 68 (classliteral -> ! .)
    X               reduce using rule 68 (classliteral -> ! .)
    Y               reduce using rule 68 (classliteral -> ! .)
    Z               reduce using rule 68 (classliteral -> ! .)
    |               reduce using rule 68 (classliteral -> ! .)
    ]               reduce using rule 68 (classliteral -> ! .)
    -               reduce using rule 68 (classliteral -> ! .)


state 133

    (62) classitems2 -> baseitems .
    (63) classitems2 -> baseitems . | baseitems

    ]               reduce using rule 62 (classitems2 -> baseitems .)
    |               shift and go to state 169


state 134

    (75) classliteral -> ( .

    !               reduce using rule 75 (classliteral -> ( .)
    "               reduce using rule 75 (classliteral -> ( .)
    #               reduce using rule 75 (classliteral -> ( .)
    $               reduce using rule 75 (classliteral -> ( .)
    %               reduce using rule 75 (classliteral -> ( .)
    &               reduce using rule 75 (classliteral -> ( .)
    '               reduce using rule 75 (classliteral -> ( .)
    (               reduce using rule 75 (classliteral -> ( .)
    )               reduce using rule 75 (classliteral -> ( .)
    *               reduce using rule 75 (classliteral -> ( .)
    +               reduce using rule 75 (classliteral -> ( .)
    ,               reduce using rule 75 (classliteral -> ( .)
    .               reduce using rule 75 (classliteral -> ( .)
    /               reduce using rule 75 (classliteral -> ( .)
    :               reduce using rule 75 (classliteral -> ( .)
    ;               reduce using rule 75 (classliteral -> ( .)
    <               reduce using rule 75 (classliteral -> ( .)
    =               reduce using rule 75 (classliteral -> ( .)
    >               reduce using rule 75 (classliteral -> ( .)
    ?               reduce using rule 75 (classliteral -> ( .)
    @               reduce using rule 75 (classliteral -> ( .)
    [               reduce using rule 75 (classliteral -> ( .)
    \               reduce using rule 75 (classliteral -> ( .)
    _               reduce using rule 75 (classliteral -> ( .)
    `               reduce using rule 75 (classliteral -> ( .)
    {               reduce using rule 75 (classliteral -> ( .)
    }               reduce using rule 75 (classliteral -> ( .)
    ~               reduce using rule 75 (classliteral -> ( .)
    ESCAPED         reduce using rule 75 (classliteral -> ( .)
    DIGIT           reduce using rule 75 (classliteral -> ( .)
    OTHER           reduce using rule 75 (classliteral -> ( .)
    a               reduce using rule 75 (classliteral -> ( .)
    b               reduce using rule 75 (classliteral -> ( .)
    c               reduce using rule 75 (classliteral -> ( .)
    d               reduce using rule 75 (classliteral -> ( .)
    e               reduce using rule 75 (classliteral -> ( .)
    f               reduce using rule 75 (classliteral -> ( .)
    g               reduce using rule 75 (classliteral -> ( .)
    h               reduce using rule 75 (classliteral -> ( .)
    i               reduce using rule 75 (classliteral -> ( .)
    j               reduce using rule 75 (classliteral -> ( .)
    k               reduce using rule 75 (classliteral -> ( .)
    l               reduce using rule 75 (classliteral -> ( .)
    m               reduce using rule 75 (classliteral -> ( .)
    n               reduce using rule 75 (classliteral -> ( .)
    o               reduce using rule 75 (classliteral -> ( .)
    p               reduce using rule 75 (classliteral -> ( .)
    q               reduce using rule 75 (classliteral -> ( .)
    r               reduce using rule 75 (classliteral -> ( .)
    s               reduce using rule 75 (classliteral -> ( .)
    t               reduce using rule 75 (classliteral -> ( .)
    u               reduce using rule 75 (classliteral -> ( .)
    v               reduce using rule 75 (classliteral -> ( .)
    w               reduce using rule 75 (classliteral -> ( .)
    x               reduce using rule 75 (classliteral -> ( .)
    y               reduce using rule 75 (classliteral -> ( .)
    z               reduce using rule 75 (classliteral -> ( .)
    A               reduce using rule 75 (classliteral -> ( .)
    B               reduce using rule 75 (classliteral -> ( .)
    C               reduce using rule 75 (classliteral -> ( .)
    D               reduce using rule 75 (classliteral -> ( .)
    E               reduce using rule 75 (classliteral -> ( .)
    F               reduce using rule 75 (classliteral -> ( .)
    G               reduce using rule 75 (classliteral -> ( .)
    H               reduce using rule 75 (classliteral -> ( .)
    I               reduce using rule 75 (classliteral -> ( .)
    J               reduce using rule 75 (classliteral -> ( .)
    K               reduce using rule 75 (classliteral -> ( .)
    L               reduce using rule 75 (classliteral -> ( .)
    M               reduce using rule 75 (classliteral -> ( .)
    N               reduce using rule 75 (classliteral -> ( .)
    O               reduce using rule 75 (classliteral -> ( .)
    P               reduce using rule 75 (classliteral -> ( .)
    Q               reduce using rule 75 (classliteral -> ( .)
    R               reduce using rule 75 (classliteral -> ( .)
    S               reduce using rule 75 (classliteral -> ( .)
    T               reduce using rule 75 (classliteral -> ( .)
    U               reduce using rule 75 (classliteral -> ( .)
    V               reduce using rule 75 (classliteral -> ( .)
    W               reduce using rule 75 (classliteral -> ( .)
    X               reduce using rule 75 (classliteral -> ( .)
    Y               reduce using rule 75 (classliteral -> ( .)
    Z               reduce using rule 75 (classliteral -> ( .)
    |               reduce using rule 75 (classliteral -> ( .)
    ]               reduce using rule 75 (classliteral -> ( .)
    -               reduce using rule 75 (classliteral -> ( .)


state 135

    (71) classliteral -> $ .

    !               reduce using rule 71 (classliteral -> $ .)
    "               reduce using rule 71 (classliteral -> $ .)
    #               reduce using rule 71 (classliteral -> $ .)
    $               reduce using rule 71 (classliteral -> $ .)
    %               reduce using rule 71 (classliteral -> $ .)
    &               reduce using rule 71 (classliteral -> $ .)
    '               reduce using rule 71 (classliteral -> $ .)
    (               reduce using rule 71 (classliteral -> $ .)
    )               reduce using rule 71 (classliteral -> $ .)
    *               reduce using rule 71 (classliteral -> $ .)
    +               reduce using rule 71 (classliteral -> $ .)
    ,               reduce using rule 71 (classliteral -> $ .)
    .               reduce using rule 71 (classliteral -> $ .)
    /               reduce using rule 71 (classliteral -> $ .)
    :               reduce using rule 71 (classliteral -> $ .)
    ;               reduce using rule 71 (classliteral -> $ .)
    <               reduce using rule 71 (classliteral -> $ .)
    =               reduce using rule 71 (classliteral -> $ .)
    >               reduce using rule 71 (classliteral -> $ .)
    ?               reduce using rule 71 (classliteral -> $ .)
    @               reduce using rule 71 (classliteral -> $ .)
    [               reduce using rule 71 (classliteral -> $ .)
    \               reduce using rule 71 (classliteral -> $ .)
    _               reduce using rule 71 (classliteral -> $ .)
    `               reduce using rule 71 (classliteral -> $ .)
    {               reduce using rule 71 (classliteral -> $ .)
    }               reduce using rule 71 (classliteral -> $ .)
    ~               reduce using rule 71 (classliteral -> $ .)
    ESCAPED         reduce using rule 71 (classliteral -> $ .)
    DIGIT           reduce using rule 71 (classliteral -> $ .)
    OTHER           reduce using rule 71 (classliteral -> $ .)
    a               reduce using rule 71 (classliteral -> $ .)
    b               reduce using rule 71 (classliteral -> $ .)
    c               reduce using rule 71 (classliteral -> $ .)
    d               reduce using rule 71 (classliteral -> $ .)
    e               reduce using rule 71 (classliteral -> $ .)
    f               reduce using rule 71 (classliteral -> $ .)
    g               reduce using rule 71 (classliteral -> $ .)
    h               reduce using rule 71 (classliteral -> $ .)
    i               reduce using rule 71 (classliteral -> $ .)
    j               reduce using rule 71 (classliteral -> $ .)
    k               reduce using rule 71 (classliteral -> $ .)
    l               reduce using rule 71 (classliteral -> $ .)
    m               reduce using rule 71 (classliteral -> $ .)
    n               reduce using rule 71 (classliteral -> $ .)
    o               reduce using rule 71 (classliteral -> $ .)
    p               reduce using rule 71 (classliteral -> $ .)
    q               reduce using rule 71 (classliteral -> $ .)
    r               reduce using rule 71 (classliteral -> $ .)
    s               reduce using rule 71 (classliteral -> $ .)
    t               reduce using rule 71 (classliteral -> $ .)
    u               reduce using rule 71 (classliteral -> $ .)
    v               reduce using rule 71 (classliteral -> $ .)
    w               reduce using rule 71 (classliteral -> $ .)
    x               reduce using rule 71 (classliteral -> $ .)
    y               reduce using rule 71 (classliteral -> $ .)
    z               reduce using rule 71 (classliteral -> $ .)
    A               reduce using rule 71 (classliteral -> $ .)
    B               reduce using rule 71 (classliteral -> $ .)
    C               reduce using rule 71 (classliteral -> $ .)
    D               reduce using rule 71 (classliteral -> $ .)
    E               reduce using rule 71 (classliteral -> $ .)
    F               reduce using rule 71 (classliteral -> $ .)
    G               reduce using rule 71 (classliteral -> $ .)
    H               reduce using rule 71 (classliteral -> $ .)
    I               reduce using rule 71 (classliteral -> $ .)
    J               reduce using rule 71 (classliteral -> $ .)
    K               reduce using rule 71 (classliteral -> $ .)
    L               reduce using rule 71 (classliteral -> $ .)
    M               reduce using rule 71 (classliteral -> $ .)
    N               reduce using rule 71 (classliteral -> $ .)
    O               reduce using rule 71 (classliteral -> $ .)
    P               reduce using rule 71 (classliteral -> $ .)
    Q               reduce using rule 71 (classliteral -> $ .)
    R               reduce using rule 71 (classliteral -> $ .)
    S               reduce using rule 71 (classliteral -> $ .)
    T               reduce using rule 71 (classliteral -> $ .)
    U               reduce using rule 71 (classliteral -> $ .)
    V               reduce using rule 71 (classliteral -> $ .)
    W               reduce using rule 71 (classliteral -> $ .)
    X               reduce using rule 71 (classliteral -> $ .)
    Y               reduce using rule 71 (classliteral -> $ .)
    Z               reduce using rule 71 (classliteral -> $ .)
    |               reduce using rule 71 (classliteral -> $ .)
    ]               reduce using rule 71 (classliteral -> $ .)
    -               reduce using rule 71 (classliteral -> $ .)


state 136

    (82) classliteral -> : .

    !               reduce using rule 82 (classliteral -> : .)
    "               reduce using rule 82 (classliteral -> : .)
    #               reduce using rule 82 (classliteral -> : .)
    $               reduce using rule 82 (classliteral -> : .)
    %               reduce using rule 82 (classliteral -> : .)
    &               reduce using rule 82 (classliteral -> : .)
    '               reduce using rule 82 (classliteral -> : .)
    (               reduce using rule 82 (classliteral -> : .)
    )               reduce using rule 82 (classliteral -> : .)
    *               reduce using rule 82 (classliteral -> : .)
    +               reduce using rule 82 (classliteral -> : .)
    ,               reduce using rule 82 (classliteral -> : .)
    .               reduce using rule 82 (classliteral -> : .)
    /               reduce using rule 82 (classliteral -> : .)
    :               reduce using rule 82 (classliteral -> : .)
    ;               reduce using rule 82 (classliteral -> : .)
    <               reduce using rule 82 (classliteral -> : .)
    =               reduce using rule 82 (classliteral -> : .)
    >               reduce using rule 82 (classliteral -> : .)
    ?               reduce using rule 82 (classliteral -> : .)
    @               reduce using rule 82 (classliteral -> : .)
    [               reduce using rule 82 (classliteral -> : .)
    \               reduce using rule 82 (classliteral -> : .)
    _               reduce using rule 82 (classliteral -> : .)
    `               reduce using rule 82 (classliteral -> : .)
    {               reduce using rule 82 (classliteral -> : .)
    }               reduce using rule 82 (classliteral -> : .)
    ~               reduce using rule 82 (classliteral -> : .)
    ESCAPED         reduce using rule 82 (classliteral -> : .)
    DIGIT           reduce using rule 82 (classliteral -> : .)
    OTHER           reduce using rule 82 (classliteral -> : .)
    a               reduce using rule 82 (classliteral -> : .)
    b               reduce using rule 82 (classliteral -> : .)
    c               reduce using rule 82 (classliteral -> : .)
    d               reduce using rule 82 (classliteral -> : .)
    e               reduce using rule 82 (classliteral -> : .)
    f               reduce using rule 82 (classliteral -> : .)
    g               reduce using rule 82 (classliteral -> : .)
    h               reduce using rule 82 (classliteral -> : .)
    i               reduce using rule 82 (classliteral -> : .)
    j               reduce using rule 82 (classliteral -> : .)
    k               reduce using rule 82 (classliteral -> : .)
    l               reduce using rule 82 (classliteral -> : .)
    m               reduce using rule 82 (classliteral -> : .)
    n               reduce using rule 82 (classliteral -> : .)
    o               reduce using rule 82 (classliteral -> : .)
    p               reduce using rule 82 (classliteral -> : .)
    q               reduce using rule 82 (classliteral -> : .)
    r               reduce using rule 82 (classliteral -> : .)
    s               reduce using rule 82 (classliteral -> : .)
    t               reduce using rule 82 (classliteral -> : .)
    u               reduce using rule 82 (classliteral -> : .)
    v               reduce using rule 82 (classliteral -> : .)
    w               reduce using rule 82 (classliteral -> : .)
    x               reduce using rule 82 (classliteral -> : .)
    y               reduce using rule 82 (classliteral -> : .)
    z               reduce using rule 82 (classliteral -> : .)
    A               reduce using rule 82 (classliteral -> : .)
    B               reduce using rule 82 (classliteral -> : .)
    C               reduce using rule 82 (classliteral -> : .)
    D               reduce using rule 82 (classliteral -> : .)
    E               reduce using rule 82 (classliteral -> : .)
    F               reduce using rule 82 (classliteral -> : .)
    G               reduce using rule 82 (classliteral -> : .)
    H               reduce using rule 82 (classliteral -> : .)
    I               reduce using rule 82 (classliteral -> : .)
    J               reduce using rule 82 (classliteral -> : .)
    K               reduce using rule 82 (classliteral -> : .)
    L               reduce using rule 82 (classliteral -> : .)
    M               reduce using rule 82 (classliteral -> : .)
    N               reduce using rule 82 (classliteral -> : .)
    O               reduce using rule 82 (classliteral -> : .)
    P               reduce using rule 82 (classliteral -> : .)
    Q               reduce using rule 82 (classliteral -> : .)
    R               reduce using rule 82 (classliteral -> : .)
    S               reduce using rule 82 (classliteral -> : .)
    T               reduce using rule 82 (classliteral -> : .)
    U               reduce using rule 82 (classliteral -> : .)
    V               reduce using rule 82 (classliteral -> : .)
    W               reduce using rule 82 (classliteral -> : .)
    X               reduce using rule 82 (classliteral -> : .)
    Y               reduce using rule 82 (classliteral -> : .)
    Z               reduce using rule 82 (classliteral -> : .)
    |               reduce using rule 82 (classliteral -> : .)
    ]               reduce using rule 82 (classliteral -> : .)
    -               reduce using rule 82 (classliteral -> : .)


state 137

    (83) classliteral -> ; .

    !               reduce using rule 83 (classliteral -> ; .)
    "               reduce using rule 83 (classliteral -> ; .)
    #               reduce using rule 83 (classliteral -> ; .)
    $               reduce using rule 83 (classliteral -> ; .)
    %               reduce using rule 83 (classliteral -> ; .)
    &               reduce using rule 83 (classliteral -> ; .)
    '               reduce using rule 83 (classliteral -> ; .)
    (               reduce using rule 83 (classliteral -> ; .)
    )               reduce using rule 83 (classliteral -> ; .)
    *               reduce using rule 83 (classliteral -> ; .)
    +               reduce using rule 83 (classliteral -> ; .)
    ,               reduce using rule 83 (classliteral -> ; .)
    .               reduce using rule 83 (classliteral -> ; .)
    /               reduce using rule 83 (classliteral -> ; .)
    :               reduce using rule 83 (classliteral -> ; .)
    ;               reduce using rule 83 (classliteral -> ; .)
    <               reduce using rule 83 (classliteral -> ; .)
    =               reduce using rule 83 (classliteral -> ; .)
    >               reduce using rule 83 (classliteral -> ; .)
    ?               reduce using rule 83 (classliteral -> ; .)
    @               reduce using rule 83 (classliteral -> ; .)
    [               reduce using rule 83 (classliteral -> ; .)
    \               reduce using rule 83 (classliteral -> ; .)
    _               reduce using rule 83 (classliteral -> ; .)
    `               reduce using rule 83 (classliteral -> ; .)
    {               reduce using rule 83 (classliteral -> ; .)
    }               reduce using rule 83 (classliteral -> ; .)
    ~               reduce using rule 83 (classliteral -> ; .)
    ESCAPED         reduce using rule 83 (classliteral -> ; .)
    DIGIT           reduce using rule 83 (classliteral -> ; .)
    OTHER           reduce using rule 83 (classliteral -> ; .)
    a               reduce using rule 83 (classliteral -> ; .)
    b               reduce using rule 83 (classliteral -> ; .)
    c               reduce using rule 83 (classliteral -> ; .)
    d               reduce using rule 83 (classliteral -> ; .)
    e               reduce using rule 83 (classliteral -> ; .)
    f               reduce using rule 83 (classliteral -> ; .)
    g               reduce using rule 83 (classliteral -> ; .)
    h               reduce using rule 83 (classliteral -> ; .)
    i               reduce using rule 83 (classliteral -> ; .)
    j               reduce using rule 83 (classliteral -> ; .)
    k               reduce using rule 83 (classliteral -> ; .)
    l               reduce using rule 83 (classliteral -> ; .)
    m               reduce using rule 83 (classliteral -> ; .)
    n               reduce using rule 83 (classliteral -> ; .)
    o               reduce using rule 83 (classliteral -> ; .)
    p               reduce using rule 83 (classliteral -> ; .)
    q               reduce using rule 83 (classliteral -> ; .)
    r               reduce using rule 83 (classliteral -> ; .)
    s               reduce using rule 83 (classliteral -> ; .)
    t               reduce using rule 83 (classliteral -> ; .)
    u               reduce using rule 83 (classliteral -> ; .)
    v               reduce using rule 83 (classliteral -> ; .)
    w               reduce using rule 83 (classliteral -> ; .)
    x               reduce using rule 83 (classliteral -> ; .)
    y               reduce using rule 83 (classliteral -> ; .)
    z               reduce using rule 83 (classliteral -> ; .)
    A               reduce using rule 83 (classliteral -> ; .)
    B               reduce using rule 83 (classliteral -> ; .)
    C               reduce using rule 83 (classliteral -> ; .)
    D               reduce using rule 83 (classliteral -> ; .)
    E               reduce using rule 83 (classliteral -> ; .)
    F               reduce using rule 83 (classliteral -> ; .)
    G               reduce using rule 83 (classliteral -> ; .)
    H               reduce using rule 83 (classliteral -> ; .)
    I               reduce using rule 83 (classliteral -> ; .)
    J               reduce using rule 83 (classliteral -> ; .)
    K               reduce using rule 83 (classliteral -> ; .)
    L               reduce using rule 83 (classliteral -> ; .)
    M               reduce using rule 83 (classliteral -> ; .)
    N               reduce using rule 83 (classliteral -> ; .)
    O               reduce using rule 83 (classliteral -> ; .)
    P               reduce using rule 83 (classliteral -> ; .)
    Q               reduce using rule 83 (classliteral -> ; .)
    R               reduce using rule 83 (classliteral -> ; .)
    S               reduce using rule 83 (classliteral -> ; .)
    T               reduce using rule 83 (classliteral -> ; .)
    U               reduce using rule 83 (classliteral -> ; .)
    V               reduce using rule 83 (classliteral -> ; .)
    W               reduce using rule 83 (classliteral -> ; .)
    X               reduce using rule 83 (classliteral -> ; .)
    Y               reduce using rule 83 (classliteral -> ; .)
    Z               reduce using rule 83 (classliteral -> ; .)
    |               reduce using rule 83 (classliteral -> ; .)
    ]               reduce using rule 83 (classliteral -> ; .)
    -               reduce using rule 83 (classliteral -> ; .)


state 138

    (88) classliteral -> @ .

    !               reduce using rule 88 (classliteral -> @ .)
    "               reduce using rule 88 (classliteral -> @ .)
    #               reduce using rule 88 (classliteral -> @ .)
    $               reduce using rule 88 (classliteral -> @ .)
    %               reduce using rule 88 (classliteral -> @ .)
    &               reduce using rule 88 (classliteral -> @ .)
    '               reduce using rule 88 (classliteral -> @ .)
    (               reduce using rule 88 (classliteral -> @ .)
    )               reduce using rule 88 (classliteral -> @ .)
    *               reduce using rule 88 (classliteral -> @ .)
    +               reduce using rule 88 (classliteral -> @ .)
    ,               reduce using rule 88 (classliteral -> @ .)
    .               reduce using rule 88 (classliteral -> @ .)
    /               reduce using rule 88 (classliteral -> @ .)
    :               reduce using rule 88 (classliteral -> @ .)
    ;               reduce using rule 88 (classliteral -> @ .)
    <               reduce using rule 88 (classliteral -> @ .)
    =               reduce using rule 88 (classliteral -> @ .)
    >               reduce using rule 88 (classliteral -> @ .)
    ?               reduce using rule 88 (classliteral -> @ .)
    @               reduce using rule 88 (classliteral -> @ .)
    [               reduce using rule 88 (classliteral -> @ .)
    \               reduce using rule 88 (classliteral -> @ .)
    _               reduce using rule 88 (classliteral -> @ .)
    `               reduce using rule 88 (classliteral -> @ .)
    {               reduce using rule 88 (classliteral -> @ .)
    }               reduce using rule 88 (classliteral -> @ .)
    ~               reduce using rule 88 (classliteral -> @ .)
    ESCAPED         reduce using rule 88 (classliteral -> @ .)
    DIGIT           reduce using rule 88 (classliteral -> @ .)
    OTHER           reduce using rule 88 (classliteral -> @ .)
    a               reduce using rule 88 (classliteral -> @ .)
    b               reduce using rule 88 (classliteral -> @ .)
    c               reduce using rule 88 (classliteral -> @ .)
    d               reduce using rule 88 (classliteral -> @ .)
    e               reduce using rule 88 (classliteral -> @ .)
    f               reduce using rule 88 (classliteral -> @ .)
    g               reduce using rule 88 (classliteral -> @ .)
    h               reduce using rule 88 (classliteral -> @ .)
    i               reduce using rule 88 (classliteral -> @ .)
    j               reduce using rule 88 (classliteral -> @ .)
    k               reduce using rule 88 (classliteral -> @ .)
    l               reduce using rule 88 (classliteral -> @ .)
    m               reduce using rule 88 (classliteral -> @ .)
    n               reduce using rule 88 (classliteral -> @ .)
    o               reduce using rule 88 (classliteral -> @ .)
    p               reduce using rule 88 (classliteral -> @ .)
    q               reduce using rule 88 (classliteral -> @ .)
    r               reduce using rule 88 (classliteral -> @ .)
    s               reduce using rule 88 (classliteral -> @ .)
    t               reduce using rule 88 (classliteral -> @ .)
    u               reduce using rule 88 (classliteral -> @ .)
    v               reduce using rule 88 (classliteral -> @ .)
    w               reduce using rule 88 (classliteral -> @ .)
    x               reduce using rule 88 (classliteral -> @ .)
    y               reduce using rule 88 (classliteral -> @ .)
    z               reduce using rule 88 (classliteral -> @ .)
    A               reduce using rule 88 (classliteral -> @ .)
    B               reduce using rule 88 (classliteral -> @ .)
    C               reduce using rule 88 (classliteral -> @ .)
    D               reduce using rule 88 (classliteral -> @ .)
    E               reduce using rule 88 (classliteral -> @ .)
    F               reduce using rule 88 (classliteral -> @ .)
    G               reduce using rule 88 (classliteral -> @ .)
    H               reduce using rule 88 (classliteral -> @ .)
    I               reduce using rule 88 (classliteral -> @ .)
    J               reduce using rule 88 (classliteral -> @ .)
    K               reduce using rule 88 (classliteral -> @ .)
    L               reduce using rule 88 (classliteral -> @ .)
    M               reduce using rule 88 (classliteral -> @ .)
    N               reduce using rule 88 (classliteral -> @ .)
    O               reduce using rule 88 (classliteral -> @ .)
    P               reduce using rule 88 (classliteral -> @ .)
    Q               reduce using rule 88 (classliteral -> @ .)
    R               reduce using rule 88 (classliteral -> @ .)
    S               reduce using rule 88 (classliteral -> @ .)
    T               reduce using rule 88 (classliteral -> @ .)
    U               reduce using rule 88 (classliteral -> @ .)
    V               reduce using rule 88 (classliteral -> @ .)
    W               reduce using rule 88 (classliteral -> @ .)
    X               reduce using rule 88 (classliteral -> @ .)
    Y               reduce using rule 88 (classliteral -> @ .)
    Z               reduce using rule 88 (classliteral -> @ .)
    |               reduce using rule 88 (classliteral -> @ .)
    ]               reduce using rule 88 (classliteral -> @ .)
    -               reduce using rule 88 (classliteral -> @ .)


state 139

    (70) classliteral -> # .

    !               reduce using rule 70 (classliteral -> # .)
    "               reduce using rule 70 (classliteral -> # .)
    #               reduce using rule 70 (classliteral -> # .)
    $               reduce using rule 70 (classliteral -> # .)
    %               reduce using rule 70 (classliteral -> # .)
    &               reduce using rule 70 (classliteral -> # .)
    '               reduce using rule 70 (classliteral -> # .)
    (               reduce using rule 70 (classliteral -> # .)
    )               reduce using rule 70 (classliteral -> # .)
    *               reduce using rule 70 (classliteral -> # .)
    +               reduce using rule 70 (classliteral -> # .)
    ,               reduce using rule 70 (classliteral -> # .)
    .               reduce using rule 70 (classliteral -> # .)
    /               reduce using rule 70 (classliteral -> # .)
    :               reduce using rule 70 (classliteral -> # .)
    ;               reduce using rule 70 (classliteral -> # .)
    <               reduce using rule 70 (classliteral -> # .)
    =               reduce using rule 70 (classliteral -> # .)
    >               reduce using rule 70 (classliteral -> # .)
    ?               reduce using rule 70 (classliteral -> # .)
    @               reduce using rule 70 (classliteral -> # .)
    [               reduce using rule 70 (classliteral -> # .)
    \               reduce using rule 70 (classliteral -> # .)
    _               reduce using rule 70 (classliteral -> # .)
    `               reduce using rule 70 (classliteral -> # .)
    {               reduce using rule 70 (classliteral -> # .)
    }               reduce using rule 70 (classliteral -> # .)
    ~               reduce using rule 70 (classliteral -> # .)
    ESCAPED         reduce using rule 70 (classliteral -> # .)
    DIGIT           reduce using rule 70 (classliteral -> # .)
    OTHER           reduce using rule 70 (classliteral -> # .)
    a               reduce using rule 70 (classliteral -> # .)
    b               reduce using rule 70 (classliteral -> # .)
    c               reduce using rule 70 (classliteral -> # .)
    d               reduce using rule 70 (classliteral -> # .)
    e               reduce using rule 70 (classliteral -> # .)
    f               reduce using rule 70 (classliteral -> # .)
    g               reduce using rule 70 (classliteral -> # .)
    h               reduce using rule 70 (classliteral -> # .)
    i               reduce using rule 70 (classliteral -> # .)
    j               reduce using rule 70 (classliteral -> # .)
    k               reduce using rule 70 (classliteral -> # .)
    l               reduce using rule 70 (classliteral -> # .)
    m               reduce using rule 70 (classliteral -> # .)
    n               reduce using rule 70 (classliteral -> # .)
    o               reduce using rule 70 (classliteral -> # .)
    p               reduce using rule 70 (classliteral -> # .)
    q               reduce using rule 70 (classliteral -> # .)
    r               reduce using rule 70 (classliteral -> # .)
    s               reduce using rule 70 (classliteral -> # .)
    t               reduce using rule 70 (classliteral -> # .)
    u               reduce using rule 70 (classliteral -> # .)
    v               reduce using rule 70 (classliteral -> # .)
    w               reduce using rule 70 (classliteral -> # .)
    x               reduce using rule 70 (classliteral -> # .)
    y               reduce using rule 70 (classliteral -> # .)
    z               reduce using rule 70 (classliteral -> # .)
    A               reduce using rule 70 (classliteral -> # .)
    B               reduce using rule 70 (classliteral -> # .)
    C               reduce using rule 70 (classliteral -> # .)
    D               reduce using rule 70 (classliteral -> # .)
    E               reduce using rule 70 (classliteral -> # .)
    F               reduce using rule 70 (classliteral -> # .)
    G               reduce using rule 70 (classliteral -> # .)
    H               reduce using rule 70 (classliteral -> # .)
    I               reduce using rule 70 (classliteral -> # .)
    J               reduce using rule 70 (classliteral -> # .)
    K               reduce using rule 70 (classliteral -> # .)
    L               reduce using rule 70 (classliteral -> # .)
    M               reduce using rule 70 (classliteral -> # .)
    N               reduce using rule 70 (classliteral -> # .)
    O               reduce using rule 70 (classliteral -> # .)
    P               reduce using rule 70 (classliteral -> # .)
    Q               reduce using rule 70 (classliteral -> # .)
    R               reduce using rule 70 (classliteral -> # .)
    S               reduce using rule 70 (classliteral -> # .)
    T               reduce using rule 70 (classliteral -> # .)
    U               reduce using rule 70 (classliteral -> # .)
    V               reduce using rule 70 (classliteral -> # .)
    W               reduce using rule 70 (classliteral -> # .)
    X               reduce using rule 70 (classliteral -> # .)
    Y               reduce using rule 70 (classliteral -> # .)
    Z               reduce using rule 70 (classliteral -> # .)
    |               reduce using rule 70 (classliteral -> # .)
    ]               reduce using rule 70 (classliteral -> # .)
    -               reduce using rule 70 (classliteral -> # .)


state 140

    (67) classatom -> classrange .

    !               reduce using rule 67 (classatom -> classrange .)
    "               reduce using rule 67 (classatom -> classrange .)
    #               reduce using rule 67 (classatom -> classrange .)
    $               reduce using rule 67 (classatom -> classrange .)
    %               reduce using rule 67 (classatom -> classrange .)
    &               reduce using rule 67 (classatom -> classrange .)
    '               reduce using rule 67 (classatom -> classrange .)
    (               reduce using rule 67 (classatom -> classrange .)
    )               reduce using rule 67 (classatom -> classrange .)
    *               reduce using rule 67 (classatom -> classrange .)
    +               reduce using rule 67 (classatom -> classrange .)
    ,               reduce using rule 67 (classatom -> classrange .)
    .               reduce using rule 67 (classatom -> classrange .)
    /               reduce using rule 67 (classatom -> classrange .)
    :               reduce using rule 67 (classatom -> classrange .)
    ;               reduce using rule 67 (classatom -> classrange .)
    <               reduce using rule 67 (classatom -> classrange .)
    =               reduce using rule 67 (classatom -> classrange .)
    >               reduce using rule 67 (classatom -> classrange .)
    ?               reduce using rule 67 (classatom -> classrange .)
    @               reduce using rule 67 (classatom -> classrange .)
    [               reduce using rule 67 (classatom -> classrange .)
    \               reduce using rule 67 (classatom -> classrange .)
    _               reduce using rule 67 (classatom -> classrange .)
    `               reduce using rule 67 (classatom -> classrange .)
    {               reduce using rule 67 (classatom -> classrange .)
    }               reduce using rule 67 (classatom -> classrange .)
    ~               reduce using rule 67 (classatom -> classrange .)
    ESCAPED         reduce using rule 67 (classatom -> classrange .)
    DIGIT           reduce using rule 67 (classatom -> classrange .)
    OTHER           reduce using rule 67 (classatom -> classrange .)
    a               reduce using rule 67 (classatom -> classrange .)
    b               reduce using rule 67 (classatom -> classrange .)
    c               reduce using rule 67 (classatom -> classrange .)
    d               reduce using rule 67 (classatom -> classrange .)
    e               reduce using rule 67 (classatom -> classrange .)
    f               reduce using rule 67 (classatom -> classrange .)
    g               reduce using rule 67 (classatom -> classrange .)
    h               reduce using rule 67 (classatom -> classrange .)
    i               reduce using rule 67 (classatom -> classrange .)
    j               reduce using rule 67 (classatom -> classrange .)
    k               reduce using rule 67 (classatom -> classrange .)
    l               reduce using rule 67 (classatom -> classrange .)
    m               reduce using rule 67 (classatom -> classrange .)
    n               reduce using rule 67 (classatom -> classrange .)
    o               reduce using rule 67 (classatom -> classrange .)
    p               reduce using rule 67 (classatom -> classrange .)
    q               reduce using rule 67 (classatom -> classrange .)
    r               reduce using rule 67 (classatom -> classrange .)
    s               reduce using rule 67 (classatom -> classrange .)
    t               reduce using rule 67 (classatom -> classrange .)
    u               reduce using rule 67 (classatom -> classrange .)
    v               reduce using rule 67 (classatom -> classrange .)
    w               reduce using rule 67 (classatom -> classrange .)
    x               reduce using rule 67 (classatom -> classrange .)
    y               reduce using rule 67 (classatom -> classrange .)
    z               reduce using rule 67 (classatom -> classrange .)
    A               reduce using rule 67 (classatom -> classrange .)
    B               reduce using rule 67 (classatom -> classrange .)
    C               reduce using rule 67 (classatom -> classrange .)
    D               reduce using rule 67 (classatom -> classrange .)
    E               reduce using rule 67 (classatom -> classrange .)
    F               reduce using rule 67 (classatom -> classrange .)
    G               reduce using rule 67 (classatom -> classrange .)
    H               reduce using rule 67 (classatom -> classrange .)
    I               reduce using rule 67 (classatom -> classrange .)
    J               reduce using rule 67 (classatom -> classrange .)
    K               reduce using rule 67 (classatom -> classrange .)
    L               reduce using rule 67 (classatom -> classrange .)
    M               reduce using rule 67 (classatom -> classrange .)
    N               reduce using rule 67 (classatom -> classrange .)
    O               reduce using rule 67 (classatom -> classrange .)
    P               reduce using rule 67 (classatom -> classrange .)
    Q               reduce using rule 67 (classatom -> classrange .)
    R               reduce using rule 67 (classatom -> classrange .)
    S               reduce using rule 67 (classatom -> classrange .)
    T               reduce using rule 67 (classatom -> classrange .)
    U               reduce using rule 67 (classatom -> classrange .)
    V               reduce using rule 67 (classatom -> classrange .)
    W               reduce using rule 67 (classatom -> classrange .)
    X               reduce using rule 67 (classatom -> classrange .)
    Y               reduce using rule 67 (classatom -> classrange .)
    Z               reduce using rule 67 (classatom -> classrange .)
    ]               reduce using rule 67 (classatom -> classrange .)
    |               reduce using rule 67 (classatom -> classrange .)


state 141

    (78) classliteral -> + .

    !               reduce using rule 78 (classliteral -> + .)
    "               reduce using rule 78 (classliteral -> + .)
    #               reduce using rule 78 (classliteral -> + .)
    $               reduce using rule 78 (classliteral -> + .)
    %               reduce using rule 78 (classliteral -> + .)
    &               reduce using rule 78 (classliteral -> + .)
    '               reduce using rule 78 (classliteral -> + .)
    (               reduce using rule 78 (classliteral -> + .)
    )               reduce using rule 78 (classliteral -> + .)
    *               reduce using rule 78 (classliteral -> + .)
    +               reduce using rule 78 (classliteral -> + .)
    ,               reduce using rule 78 (classliteral -> + .)
    .               reduce using rule 78 (classliteral -> + .)
    /               reduce using rule 78 (classliteral -> + .)
    :               reduce using rule 78 (classliteral -> + .)
    ;               reduce using rule 78 (classliteral -> + .)
    <               reduce using rule 78 (classliteral -> + .)
    =               reduce using rule 78 (classliteral -> + .)
    >               reduce using rule 78 (classliteral -> + .)
    ?               reduce using rule 78 (classliteral -> + .)
    @               reduce using rule 78 (classliteral -> + .)
    [               reduce using rule 78 (classliteral -> + .)
    \               reduce using rule 78 (classliteral -> + .)
    _               reduce using rule 78 (classliteral -> + .)
    `               reduce using rule 78 (classliteral -> + .)
    {               reduce using rule 78 (classliteral -> + .)
    }               reduce using rule 78 (classliteral -> + .)
    ~               reduce using rule 78 (classliteral -> + .)
    ESCAPED         reduce using rule 78 (classliteral -> + .)
    DIGIT           reduce using rule 78 (classliteral -> + .)
    OTHER           reduce using rule 78 (classliteral -> + .)
    a               reduce using rule 78 (classliteral -> + .)
    b               reduce using rule 78 (classliteral -> + .)
    c               reduce using rule 78 (classliteral -> + .)
    d               reduce using rule 78 (classliteral -> + .)
    e               reduce using rule 78 (classliteral -> + .)
    f               reduce using rule 78 (classliteral -> + .)
    g               reduce using rule 78 (classliteral -> + .)
    h               reduce using rule 78 (classliteral -> + .)
    i               reduce using rule 78 (classliteral -> + .)
    j               reduce using rule 78 (classliteral -> + .)
    k               reduce using rule 78 (classliteral -> + .)
    l               reduce using rule 78 (classliteral -> + .)
    m               reduce using rule 78 (classliteral -> + .)
    n               reduce using rule 78 (classliteral -> + .)
    o               reduce using rule 78 (classliteral -> + .)
    p               reduce using rule 78 (classliteral -> + .)
    q               reduce using rule 78 (classliteral -> + .)
    r               reduce using rule 78 (classliteral -> + .)
    s               reduce using rule 78 (classliteral -> + .)
    t               reduce using rule 78 (classliteral -> + .)
    u               reduce using rule 78 (classliteral -> + .)
    v               reduce using rule 78 (classliteral -> + .)
    w               reduce using rule 78 (classliteral -> + .)
    x               reduce using rule 78 (classliteral -> + .)
    y               reduce using rule 78 (classliteral -> + .)
    z               reduce using rule 78 (classliteral -> + .)
    A               reduce using rule 78 (classliteral -> + .)
    B               reduce using rule 78 (classliteral -> + .)
    C               reduce using rule 78 (classliteral -> + .)
    D               reduce using rule 78 (classliteral -> + .)
    E               reduce using rule 78 (classliteral -> + .)
    F               reduce using rule 78 (classliteral -> + .)
    G               reduce using rule 78 (classliteral -> + .)
    H               reduce using rule 78 (classliteral -> + .)
    I               reduce using rule 78 (classliteral -> + .)
    J               reduce using rule 78 (classliteral -> + .)
    K               reduce using rule 78 (classliteral -> + .)
    L               reduce using rule 78 (classliteral -> + .)
    M               reduce using rule 78 (classliteral -> + .)
    N               reduce using rule 78 (classliteral -> + .)
    O               reduce using rule 78 (classliteral -> + .)
    P               reduce using rule 78 (classliteral -> + .)
    Q               reduce using rule 78 (classliteral -> + .)
    R               reduce using rule 78 (classliteral -> + .)
    S               reduce using rule 78 (classliteral -> + .)
    T               reduce using rule 78 (classliteral -> + .)
    U               reduce using rule 78 (classliteral -> + .)
    V               reduce using rule 78 (classliteral -> + .)
    W               reduce using rule 78 (classliteral -> + .)
    X               reduce using rule 78 (classliteral -> + .)
    Y               reduce using rule 78 (classliteral -> + .)
    Z               reduce using rule 78 (classliteral -> + .)
    |               reduce using rule 78 (classliteral -> + .)
    ]               reduce using rule 78 (classliteral -> + .)
    -               reduce using rule 78 (classliteral -> + .)


state 142

    (89) classliteral -> [ .

    !               reduce using rule 89 (classliteral -> [ .)
    "               reduce using rule 89 (classliteral -> [ .)
    #               reduce using rule 89 (classliteral -> [ .)
    $               reduce using rule 89 (classliteral -> [ .)
    %               reduce using rule 89 (classliteral -> [ .)
    &               reduce using rule 89 (classliteral -> [ .)
    '               reduce using rule 89 (classliteral -> [ .)
    (               reduce using rule 89 (classliteral -> [ .)
    )               reduce using rule 89 (classliteral -> [ .)
    *               reduce using rule 89 (classliteral -> [ .)
    +               reduce using rule 89 (classliteral -> [ .)
    ,               reduce using rule 89 (classliteral -> [ .)
    .               reduce using rule 89 (classliteral -> [ .)
    /               reduce using rule 89 (classliteral -> [ .)
    :               reduce using rule 89 (classliteral -> [ .)
    ;               reduce using rule 89 (classliteral -> [ .)
    <               reduce using rule 89 (classliteral -> [ .)
    =               reduce using rule 89 (classliteral -> [ .)
    >               reduce using rule 89 (classliteral -> [ .)
    ?               reduce using rule 89 (classliteral -> [ .)
    @               reduce using rule 89 (classliteral -> [ .)
    [               reduce using rule 89 (classliteral -> [ .)
    \               reduce using rule 89 (classliteral -> [ .)
    _               reduce using rule 89 (classliteral -> [ .)
    `               reduce using rule 89 (classliteral -> [ .)
    {               reduce using rule 89 (classliteral -> [ .)
    }               reduce using rule 89 (classliteral -> [ .)
    ~               reduce using rule 89 (classliteral -> [ .)
    ESCAPED         reduce using rule 89 (classliteral -> [ .)
    DIGIT           reduce using rule 89 (classliteral -> [ .)
    OTHER           reduce using rule 89 (classliteral -> [ .)
    a               reduce using rule 89 (classliteral -> [ .)
    b               reduce using rule 89 (classliteral -> [ .)
    c               reduce using rule 89 (classliteral -> [ .)
    d               reduce using rule 89 (classliteral -> [ .)
    e               reduce using rule 89 (classliteral -> [ .)
    f               reduce using rule 89 (classliteral -> [ .)
    g               reduce using rule 89 (classliteral -> [ .)
    h               reduce using rule 89 (classliteral -> [ .)
    i               reduce using rule 89 (classliteral -> [ .)
    j               reduce using rule 89 (classliteral -> [ .)
    k               reduce using rule 89 (classliteral -> [ .)
    l               reduce using rule 89 (classliteral -> [ .)
    m               reduce using rule 89 (classliteral -> [ .)
    n               reduce using rule 89 (classliteral -> [ .)
    o               reduce using rule 89 (classliteral -> [ .)
    p               reduce using rule 89 (classliteral -> [ .)
    q               reduce using rule 89 (classliteral -> [ .)
    r               reduce using rule 89 (classliteral -> [ .)
    s               reduce using rule 89 (classliteral -> [ .)
    t               reduce using rule 89 (classliteral -> [ .)
    u               reduce using rule 89 (classliteral -> [ .)
    v               reduce using rule 89 (classliteral -> [ .)
    w               reduce using rule 89 (classliteral -> [ .)
    x               reduce using rule 89 (classliteral -> [ .)
    y               reduce using rule 89 (classliteral -> [ .)
    z               reduce using rule 89 (classliteral -> [ .)
    A               reduce using rule 89 (classliteral -> [ .)
    B               reduce using rule 89 (classliteral -> [ .)
    C               reduce using rule 89 (classliteral -> [ .)
    D               reduce using rule 89 (classliteral -> [ .)
    E               reduce using rule 89 (classliteral -> [ .)
    F               reduce using rule 89 (classliteral -> [ .)
    G               reduce using rule 89 (classliteral -> [ .)
    H               reduce using rule 89 (classliteral -> [ .)
    I               reduce using rule 89 (classliteral -> [ .)
    J               reduce using rule 89 (classliteral -> [ .)
    K               reduce using rule 89 (classliteral -> [ .)
    L               reduce using rule 89 (classliteral -> [ .)
    M               reduce using rule 89 (classliteral -> [ .)
    N               reduce using rule 89 (classliteral -> [ .)
    O               reduce using rule 89 (classliteral -> [ .)
    P               reduce using rule 89 (classliteral -> [ .)
    Q               reduce using rule 89 (classliteral -> [ .)
    R               reduce using rule 89 (classliteral -> [ .)
    S               reduce using rule 89 (classliteral -> [ .)
    T               reduce using rule 89 (classliteral -> [ .)
    U               reduce using rule 89 (classliteral -> [ .)
    V               reduce using rule 89 (classliteral -> [ .)
    W               reduce using rule 89 (classliteral -> [ .)
    X               reduce using rule 89 (classliteral -> [ .)
    Y               reduce using rule 89 (classliteral -> [ .)
    Z               reduce using rule 89 (classliteral -> [ .)
    |               reduce using rule 89 (classliteral -> [ .)
    ]               reduce using rule 89 (classliteral -> [ .)
    -               reduce using rule 89 (classliteral -> [ .)


state 143

    (96) classliteral -> literal .

    !               reduce using rule 96 (classliteral -> literal .)
    "               reduce using rule 96 (classliteral -> literal .)
    #               reduce using rule 96 (classliteral -> literal .)
    $               reduce using rule 96 (classliteral -> literal .)
    %               reduce using rule 96 (classliteral -> literal .)
    &               reduce using rule 96 (classliteral -> literal .)
    '               reduce using rule 96 (classliteral -> literal .)
    (               reduce using rule 96 (classliteral -> literal .)
    )               reduce using rule 96 (classliteral -> literal .)
    *               reduce using rule 96 (classliteral -> literal .)
    +               reduce using rule 96 (classliteral -> literal .)
    ,               reduce using rule 96 (classliteral -> literal .)
    .               reduce using rule 96 (classliteral -> literal .)
    /               reduce using rule 96 (classliteral -> literal .)
    :               reduce using rule 96 (classliteral -> literal .)
    ;               reduce using rule 96 (classliteral -> literal .)
    <               reduce using rule 96 (classliteral -> literal .)
    =               reduce using rule 96 (classliteral -> literal .)
    >               reduce using rule 96 (classliteral -> literal .)
    ?               reduce using rule 96 (classliteral -> literal .)
    @               reduce using rule 96 (classliteral -> literal .)
    [               reduce using rule 96 (classliteral -> literal .)
    \               reduce using rule 96 (classliteral -> literal .)
    _               reduce using rule 96 (classliteral -> literal .)
    `               reduce using rule 96 (classliteral -> literal .)
    {               reduce using rule 96 (classliteral -> literal .)
    }               reduce using rule 96 (classliteral -> literal .)
    ~               reduce using rule 96 (classliteral -> literal .)
    ESCAPED         reduce using rule 96 (classliteral -> literal .)
    DIGIT           reduce using rule 96 (classliteral -> literal .)
    OTHER           reduce using rule 96 (classliteral -> literal .)
    a               reduce using rule 96 (classliteral -> literal .)
    b               reduce using rule 96 (classliteral -> literal .)
    c               reduce using rule 96 (classliteral -> literal .)
    d               reduce using rule 96 (classliteral -> literal .)
    e               reduce using rule 96 (classliteral -> literal .)
    f               reduce using rule 96 (classliteral -> literal .)
    g               reduce using rule 96 (classliteral -> literal .)
    h               reduce using rule 96 (classliteral -> literal .)
    i               reduce using rule 96 (classliteral -> literal .)
    j               reduce using rule 96 (classliteral -> literal .)
    k               reduce using rule 96 (classliteral -> literal .)
    l               reduce using rule 96 (classliteral -> literal .)
    m               reduce using rule 96 (classliteral -> literal .)
    n               reduce using rule 96 (classliteral -> literal .)
    o               reduce using rule 96 (classliteral -> literal .)
    p               reduce using rule 96 (classliteral -> literal .)
    q               reduce using rule 96 (classliteral -> literal .)
    r               reduce using rule 96 (classliteral -> literal .)
    s               reduce using rule 96 (classliteral -> literal .)
    t               reduce using rule 96 (classliteral -> literal .)
    u               reduce using rule 96 (classliteral -> literal .)
    v               reduce using rule 96 (classliteral -> literal .)
    w               reduce using rule 96 (classliteral -> literal .)
    x               reduce using rule 96 (classliteral -> literal .)
    y               reduce using rule 96 (classliteral -> literal .)
    z               reduce using rule 96 (classliteral -> literal .)
    A               reduce using rule 96 (classliteral -> literal .)
    B               reduce using rule 96 (classliteral -> literal .)
    C               reduce using rule 96 (classliteral -> literal .)
    D               reduce using rule 96 (classliteral -> literal .)
    E               reduce using rule 96 (classliteral -> literal .)
    F               reduce using rule 96 (classliteral -> literal .)
    G               reduce using rule 96 (classliteral -> literal .)
    H               reduce using rule 96 (classliteral -> literal .)
    I               reduce using rule 96 (classliteral -> literal .)
    J               reduce using rule 96 (classliteral -> literal .)
    K               reduce using rule 96 (classliteral -> literal .)
    L               reduce using rule 96 (classliteral -> literal .)
    M               reduce using rule 96 (classliteral -> literal .)
    N               reduce using rule 96 (classliteral -> literal .)
    O               reduce using rule 96 (classliteral -> literal .)
    P               reduce using rule 96 (classliteral -> literal .)
    Q               reduce using rule 96 (classliteral -> literal .)
    R               reduce using rule 96 (classliteral -> literal .)
    S               reduce using rule 96 (classliteral -> literal .)
    T               reduce using rule 96 (classliteral -> literal .)
    U               reduce using rule 96 (classliteral -> literal .)
    V               reduce using rule 96 (classliteral -> literal .)
    W               reduce using rule 96 (classliteral -> literal .)
    X               reduce using rule 96 (classliteral -> literal .)
    Y               reduce using rule 96 (classliteral -> literal .)
    Z               reduce using rule 96 (classliteral -> literal .)
    |               reduce using rule 96 (classliteral -> literal .)
    ]               reduce using rule 96 (classliteral -> literal .)
    -               reduce using rule 96 (classliteral -> literal .)


state 144

    (85) classliteral -> = .

    !               reduce using rule 85 (classliteral -> = .)
    "               reduce using rule 85 (classliteral -> = .)
    #               reduce using rule 85 (classliteral -> = .)
    $               reduce using rule 85 (classliteral -> = .)
    %               reduce using rule 85 (classliteral -> = .)
    &               reduce using rule 85 (classliteral -> = .)
    '               reduce using rule 85 (classliteral -> = .)
    (               reduce using rule 85 (classliteral -> = .)
    )               reduce using rule 85 (classliteral -> = .)
    *               reduce using rule 85 (classliteral -> = .)
    +               reduce using rule 85 (classliteral -> = .)
    ,               reduce using rule 85 (classliteral -> = .)
    .               reduce using rule 85 (classliteral -> = .)
    /               reduce using rule 85 (classliteral -> = .)
    :               reduce using rule 85 (classliteral -> = .)
    ;               reduce using rule 85 (classliteral -> = .)
    <               reduce using rule 85 (classliteral -> = .)
    =               reduce using rule 85 (classliteral -> = .)
    >               reduce using rule 85 (classliteral -> = .)
    ?               reduce using rule 85 (classliteral -> = .)
    @               reduce using rule 85 (classliteral -> = .)
    [               reduce using rule 85 (classliteral -> = .)
    \               reduce using rule 85 (classliteral -> = .)
    _               reduce using rule 85 (classliteral -> = .)
    `               reduce using rule 85 (classliteral -> = .)
    {               reduce using rule 85 (classliteral -> = .)
    }               reduce using rule 85 (classliteral -> = .)
    ~               reduce using rule 85 (classliteral -> = .)
    ESCAPED         reduce using rule 85 (classliteral -> = .)
    DIGIT           reduce using rule 85 (classliteral -> = .)
    OTHER           reduce using rule 85 (classliteral -> = .)
    a               reduce using rule 85 (classliteral -> = .)
    b               reduce using rule 85 (classliteral -> = .)
    c               reduce using rule 85 (classliteral -> = .)
    d               reduce using rule 85 (classliteral -> = .)
    e               reduce using rule 85 (classliteral -> = .)
    f               reduce using rule 85 (classliteral -> = .)
    g               reduce using rule 85 (classliteral -> = .)
    h               reduce using rule 85 (classliteral -> = .)
    i               reduce using rule 85 (classliteral -> = .)
    j               reduce using rule 85 (classliteral -> = .)
    k               reduce using rule 85 (classliteral -> = .)
    l               reduce using rule 85 (classliteral -> = .)
    m               reduce using rule 85 (classliteral -> = .)
    n               reduce using rule 85 (classliteral -> = .)
    o               reduce using rule 85 (classliteral -> = .)
    p               reduce using rule 85 (classliteral -> = .)
    q               reduce using rule 85 (classliteral -> = .)
    r               reduce using rule 85 (classliteral -> = .)
    s               reduce using rule 85 (classliteral -> = .)
    t               reduce using rule 85 (classliteral -> = .)
    u               reduce using rule 85 (classliteral -> = .)
    v               reduce using rule 85 (classliteral -> = .)
    w               reduce using rule 85 (classliteral -> = .)
    x               reduce using rule 85 (classliteral -> = .)
    y               reduce using rule 85 (classliteral -> = .)
    z               reduce using rule 85 (classliteral -> = .)
    A               reduce using rule 85 (classliteral -> = .)
    B               reduce using rule 85 (classliteral -> = .)
    C               reduce using rule 85 (classliteral -> = .)
    D               reduce using rule 85 (classliteral -> = .)
    E               reduce using rule 85 (classliteral -> = .)
    F               reduce using rule 85 (classliteral -> = .)
    G               reduce using rule 85 (classliteral -> = .)
    H               reduce using rule 85 (classliteral -> = .)
    I               reduce using rule 85 (classliteral -> = .)
    J               reduce using rule 85 (classliteral -> = .)
    K               reduce using rule 85 (classliteral -> = .)
    L               reduce using rule 85 (classliteral -> = .)
    M               reduce using rule 85 (classliteral -> = .)
    N               reduce using rule 85 (classliteral -> = .)
    O               reduce using rule 85 (classliteral -> = .)
    P               reduce using rule 85 (classliteral -> = .)
    Q               reduce using rule 85 (classliteral -> = .)
    R               reduce using rule 85 (classliteral -> = .)
    S               reduce using rule 85 (classliteral -> = .)
    T               reduce using rule 85 (classliteral -> = .)
    U               reduce using rule 85 (classliteral -> = .)
    V               reduce using rule 85 (classliteral -> = .)
    W               reduce using rule 85 (classliteral -> = .)
    X               reduce using rule 85 (classliteral -> = .)
    Y               reduce using rule 85 (classliteral -> = .)
    Z               reduce using rule 85 (classliteral -> = .)
    |               reduce using rule 85 (classliteral -> = .)
    ]               reduce using rule 85 (classliteral -> = .)
    -               reduce using rule 85 (classliteral -> = .)


state 145

    (87) classliteral -> ? .

    !               reduce using rule 87 (classliteral -> ? .)
    "               reduce using rule 87 (classliteral -> ? .)
    #               reduce using rule 87 (classliteral -> ? .)
    $               reduce using rule 87 (classliteral -> ? .)
    %               reduce using rule 87 (classliteral -> ? .)
    &               reduce using rule 87 (classliteral -> ? .)
    '               reduce using rule 87 (classliteral -> ? .)
    (               reduce using rule 87 (classliteral -> ? .)
    )               reduce using rule 87 (classliteral -> ? .)
    *               reduce using rule 87 (classliteral -> ? .)
    +               reduce using rule 87 (classliteral -> ? .)
    ,               reduce using rule 87 (classliteral -> ? .)
    .               reduce using rule 87 (classliteral -> ? .)
    /               reduce using rule 87 (classliteral -> ? .)
    :               reduce using rule 87 (classliteral -> ? .)
    ;               reduce using rule 87 (classliteral -> ? .)
    <               reduce using rule 87 (classliteral -> ? .)
    =               reduce using rule 87 (classliteral -> ? .)
    >               reduce using rule 87 (classliteral -> ? .)
    ?               reduce using rule 87 (classliteral -> ? .)
    @               reduce using rule 87 (classliteral -> ? .)
    [               reduce using rule 87 (classliteral -> ? .)
    \               reduce using rule 87 (classliteral -> ? .)
    _               reduce using rule 87 (classliteral -> ? .)
    `               reduce using rule 87 (classliteral -> ? .)
    {               reduce using rule 87 (classliteral -> ? .)
    }               reduce using rule 87 (classliteral -> ? .)
    ~               reduce using rule 87 (classliteral -> ? .)
    ESCAPED         reduce using rule 87 (classliteral -> ? .)
    DIGIT           reduce using rule 87 (classliteral -> ? .)
    OTHER           reduce using rule 87 (classliteral -> ? .)
    a               reduce using rule 87 (classliteral -> ? .)
    b               reduce using rule 87 (classliteral -> ? .)
    c               reduce using rule 87 (classliteral -> ? .)
    d               reduce using rule 87 (classliteral -> ? .)
    e               reduce using rule 87 (classliteral -> ? .)
    f               reduce using rule 87 (classliteral -> ? .)
    g               reduce using rule 87 (classliteral -> ? .)
    h               reduce using rule 87 (classliteral -> ? .)
    i               reduce using rule 87 (classliteral -> ? .)
    j               reduce using rule 87 (classliteral -> ? .)
    k               reduce using rule 87 (classliteral -> ? .)
    l               reduce using rule 87 (classliteral -> ? .)
    m               reduce using rule 87 (classliteral -> ? .)
    n               reduce using rule 87 (classliteral -> ? .)
    o               reduce using rule 87 (classliteral -> ? .)
    p               reduce using rule 87 (classliteral -> ? .)
    q               reduce using rule 87 (classliteral -> ? .)
    r               reduce using rule 87 (classliteral -> ? .)
    s               reduce using rule 87 (classliteral -> ? .)
    t               reduce using rule 87 (classliteral -> ? .)
    u               reduce using rule 87 (classliteral -> ? .)
    v               reduce using rule 87 (classliteral -> ? .)
    w               reduce using rule 87 (classliteral -> ? .)
    x               reduce using rule 87 (classliteral -> ? .)
    y               reduce using rule 87 (classliteral -> ? .)
    z               reduce using rule 87 (classliteral -> ? .)
    A               reduce using rule 87 (classliteral -> ? .)
    B               reduce using rule 87 (classliteral -> ? .)
    C               reduce using rule 87 (classliteral -> ? .)
    D               reduce using rule 87 (classliteral -> ? .)
    E               reduce using rule 87 (classliteral -> ? .)
    F               reduce using rule 87 (classliteral -> ? .)
    G               reduce using rule 87 (classliteral -> ? .)
    H               reduce using rule 87 (classliteral -> ? .)
    I               reduce using rule 87 (classliteral -> ? .)
    J               reduce using rule 87 (classliteral -> ? .)
    K               reduce using rule 87 (classliteral -> ? .)
    L               reduce using rule 87 (classliteral -> ? .)
    M               reduce using rule 87 (classliteral -> ? .)
    N               reduce using rule 87 (classliteral -> ? .)
    O               reduce using rule 87 (classliteral -> ? .)
    P               reduce using rule 87 (classliteral -> ? .)
    Q               reduce using rule 87 (classliteral -> ? .)
    R               reduce using rule 87 (classliteral -> ? .)
    S               reduce using rule 87 (classliteral -> ? .)
    T               reduce using rule 87 (classliteral -> ? .)
    U               reduce using rule 87 (classliteral -> ? .)
    V               reduce using rule 87 (classliteral -> ? .)
    W               reduce using rule 87 (classliteral -> ? .)
    X               reduce using rule 87 (classliteral -> ? .)
    Y               reduce using rule 87 (classliteral -> ? .)
    Z               reduce using rule 87 (classliteral -> ? .)
    |               reduce using rule 87 (classliteral -> ? .)
    ]               reduce using rule 87 (classliteral -> ? .)
    -               reduce using rule 87 (classliteral -> ? .)


state 146

    (95) classliteral -> ~ .

    !               reduce using rule 95 (classliteral -> ~ .)
    "               reduce using rule 95 (classliteral -> ~ .)
    #               reduce using rule 95 (classliteral -> ~ .)
    $               reduce using rule 95 (classliteral -> ~ .)
    %               reduce using rule 95 (classliteral -> ~ .)
    &               reduce using rule 95 (classliteral -> ~ .)
    '               reduce using rule 95 (classliteral -> ~ .)
    (               reduce using rule 95 (classliteral -> ~ .)
    )               reduce using rule 95 (classliteral -> ~ .)
    *               reduce using rule 95 (classliteral -> ~ .)
    +               reduce using rule 95 (classliteral -> ~ .)
    ,               reduce using rule 95 (classliteral -> ~ .)
    .               reduce using rule 95 (classliteral -> ~ .)
    /               reduce using rule 95 (classliteral -> ~ .)
    :               reduce using rule 95 (classliteral -> ~ .)
    ;               reduce using rule 95 (classliteral -> ~ .)
    <               reduce using rule 95 (classliteral -> ~ .)
    =               reduce using rule 95 (classliteral -> ~ .)
    >               reduce using rule 95 (classliteral -> ~ .)
    ?               reduce using rule 95 (classliteral -> ~ .)
    @               reduce using rule 95 (classliteral -> ~ .)
    [               reduce using rule 95 (classliteral -> ~ .)
    \               reduce using rule 95 (classliteral -> ~ .)
    _               reduce using rule 95 (classliteral -> ~ .)
    `               reduce using rule 95 (classliteral -> ~ .)
    {               reduce using rule 95 (classliteral -> ~ .)
    }               reduce using rule 95 (classliteral -> ~ .)
    ~               reduce using rule 95 (classliteral -> ~ .)
    ESCAPED         reduce using rule 95 (classliteral -> ~ .)
    DIGIT           reduce using rule 95 (classliteral -> ~ .)
    OTHER           reduce using rule 95 (classliteral -> ~ .)
    a               reduce using rule 95 (classliteral -> ~ .)
    b               reduce using rule 95 (classliteral -> ~ .)
    c               reduce using rule 95 (classliteral -> ~ .)
    d               reduce using rule 95 (classliteral -> ~ .)
    e               reduce using rule 95 (classliteral -> ~ .)
    f               reduce using rule 95 (classliteral -> ~ .)
    g               reduce using rule 95 (classliteral -> ~ .)
    h               reduce using rule 95 (classliteral -> ~ .)
    i               reduce using rule 95 (classliteral -> ~ .)
    j               reduce using rule 95 (classliteral -> ~ .)
    k               reduce using rule 95 (classliteral -> ~ .)
    l               reduce using rule 95 (classliteral -> ~ .)
    m               reduce using rule 95 (classliteral -> ~ .)
    n               reduce using rule 95 (classliteral -> ~ .)
    o               reduce using rule 95 (classliteral -> ~ .)
    p               reduce using rule 95 (classliteral -> ~ .)
    q               reduce using rule 95 (classliteral -> ~ .)
    r               reduce using rule 95 (classliteral -> ~ .)
    s               reduce using rule 95 (classliteral -> ~ .)
    t               reduce using rule 95 (classliteral -> ~ .)
    u               reduce using rule 95 (classliteral -> ~ .)
    v               reduce using rule 95 (classliteral -> ~ .)
    w               reduce using rule 95 (classliteral -> ~ .)
    x               reduce using rule 95 (classliteral -> ~ .)
    y               reduce using rule 95 (classliteral -> ~ .)
    z               reduce using rule 95 (classliteral -> ~ .)
    A               reduce using rule 95 (classliteral -> ~ .)
    B               reduce using rule 95 (classliteral -> ~ .)
    C               reduce using rule 95 (classliteral -> ~ .)
    D               reduce using rule 95 (classliteral -> ~ .)
    E               reduce using rule 95 (classliteral -> ~ .)
    F               reduce using rule 95 (classliteral -> ~ .)
    G               reduce using rule 95 (classliteral -> ~ .)
    H               reduce using rule 95 (classliteral -> ~ .)
    I               reduce using rule 95 (classliteral -> ~ .)
    J               reduce using rule 95 (classliteral -> ~ .)
    K               reduce using rule 95 (classliteral -> ~ .)
    L               reduce using rule 95 (classliteral -> ~ .)
    M               reduce using rule 95 (classliteral -> ~ .)
    N               reduce using rule 95 (classliteral -> ~ .)
    O               reduce using rule 95 (classliteral -> ~ .)
    P               reduce using rule 95 (classliteral -> ~ .)
    Q               reduce using rule 95 (classliteral -> ~ .)
    R               reduce using rule 95 (classliteral -> ~ .)
    S               reduce using rule 95 (classliteral -> ~ .)
    T               reduce using rule 95 (classliteral -> ~ .)
    U               reduce using rule 95 (classliteral -> ~ .)
    V               reduce using rule 95 (classliteral -> ~ .)
    W               reduce using rule 95 (classliteral -> ~ .)
    X               reduce using rule 95 (classliteral -> ~ .)
    Y               reduce using rule 95 (classliteral -> ~ .)
    Z               reduce using rule 95 (classliteral -> ~ .)
    |               reduce using rule 95 (classliteral -> ~ .)
    ]               reduce using rule 95 (classliteral -> ~ .)
    -               reduce using rule 95 (classliteral -> ~ .)


state 147

    (93) classliteral -> { .

    !               reduce using rule 93 (classliteral -> { .)
    "               reduce using rule 93 (classliteral -> { .)
    #               reduce using rule 93 (classliteral -> { .)
    $               reduce using rule 93 (classliteral -> { .)
    %               reduce using rule 93 (classliteral -> { .)
    &               reduce using rule 93 (classliteral -> { .)
    '               reduce using rule 93 (classliteral -> { .)
    (               reduce using rule 93 (classliteral -> { .)
    )               reduce using rule 93 (classliteral -> { .)
    *               reduce using rule 93 (classliteral -> { .)
    +               reduce using rule 93 (classliteral -> { .)
    ,               reduce using rule 93 (classliteral -> { .)
    .               reduce using rule 93 (classliteral -> { .)
    /               reduce using rule 93 (classliteral -> { .)
    :               reduce using rule 93 (classliteral -> { .)
    ;               reduce using rule 93 (classliteral -> { .)
    <               reduce using rule 93 (classliteral -> { .)
    =               reduce using rule 93 (classliteral -> { .)
    >               reduce using rule 93 (classliteral -> { .)
    ?               reduce using rule 93 (classliteral -> { .)
    @               reduce using rule 93 (classliteral -> { .)
    [               reduce using rule 93 (classliteral -> { .)
    \               reduce using rule 93 (classliteral -> { .)
    _               reduce using rule 93 (classliteral -> { .)
    `               reduce using rule 93 (classliteral -> { .)
    {               reduce using rule 93 (classliteral -> { .)
    }               reduce using rule 93 (classliteral -> { .)
    ~               reduce using rule 93 (classliteral -> { .)
    ESCAPED         reduce using rule 93 (classliteral -> { .)
    DIGIT           reduce using rule 93 (classliteral -> { .)
    OTHER           reduce using rule 93 (classliteral -> { .)
    a               reduce using rule 93 (classliteral -> { .)
    b               reduce using rule 93 (classliteral -> { .)
    c               reduce using rule 93 (classliteral -> { .)
    d               reduce using rule 93 (classliteral -> { .)
    e               reduce using rule 93 (classliteral -> { .)
    f               reduce using rule 93 (classliteral -> { .)
    g               reduce using rule 93 (classliteral -> { .)
    h               reduce using rule 93 (classliteral -> { .)
    i               reduce using rule 93 (classliteral -> { .)
    j               reduce using rule 93 (classliteral -> { .)
    k               reduce using rule 93 (classliteral -> { .)
    l               reduce using rule 93 (classliteral -> { .)
    m               reduce using rule 93 (classliteral -> { .)
    n               reduce using rule 93 (classliteral -> { .)
    o               reduce using rule 93 (classliteral -> { .)
    p               reduce using rule 93 (classliteral -> { .)
    q               reduce using rule 93 (classliteral -> { .)
    r               reduce using rule 93 (classliteral -> { .)
    s               reduce using rule 93 (classliteral -> { .)
    t               reduce using rule 93 (classliteral -> { .)
    u               reduce using rule 93 (classliteral -> { .)
    v               reduce using rule 93 (classliteral -> { .)
    w               reduce using rule 93 (classliteral -> { .)
    x               reduce using rule 93 (classliteral -> { .)
    y               reduce using rule 93 (classliteral -> { .)
    z               reduce using rule 93 (classliteral -> { .)
    A               reduce using rule 93 (classliteral -> { .)
    B               reduce using rule 93 (classliteral -> { .)
    C               reduce using rule 93 (classliteral -> { .)
    D               reduce using rule 93 (classliteral -> { .)
    E               reduce using rule 93 (classliteral -> { .)
    F               reduce using rule 93 (classliteral -> { .)
    G               reduce using rule 93 (classliteral -> { .)
    H               reduce using rule 93 (classliteral -> { .)
    I               reduce using rule 93 (classliteral -> { .)
    J               reduce using rule 93 (classliteral -> { .)
    K               reduce using rule 93 (classliteral -> { .)
    L               reduce using rule 93 (classliteral -> { .)
    M               reduce using rule 93 (classliteral -> { .)
    N               reduce using rule 93 (classliteral -> { .)
    O               reduce using rule 93 (classliteral -> { .)
    P               reduce using rule 93 (classliteral -> { .)
    Q               reduce using rule 93 (classliteral -> { .)
    R               reduce using rule 93 (classliteral -> { .)
    S               reduce using rule 93 (classliteral -> { .)
    T               reduce using rule 93 (classliteral -> { .)
    U               reduce using rule 93 (classliteral -> { .)
    V               reduce using rule 93 (classliteral -> { .)
    W               reduce using rule 93 (classliteral -> { .)
    X               reduce using rule 93 (classliteral -> { .)
    Y               reduce using rule 93 (classliteral -> { .)
    Z               reduce using rule 93 (classliteral -> { .)
    |               reduce using rule 93 (classliteral -> { .)
    ]               reduce using rule 93 (classliteral -> { .)
    -               reduce using rule 93 (classliteral -> { .)


state 148

    (91) classliteral -> _ .

    !               reduce using rule 91 (classliteral -> _ .)
    "               reduce using rule 91 (classliteral -> _ .)
    #               reduce using rule 91 (classliteral -> _ .)
    $               reduce using rule 91 (classliteral -> _ .)
    %               reduce using rule 91 (classliteral -> _ .)
    &               reduce using rule 91 (classliteral -> _ .)
    '               reduce using rule 91 (classliteral -> _ .)
    (               reduce using rule 91 (classliteral -> _ .)
    )               reduce using rule 91 (classliteral -> _ .)
    *               reduce using rule 91 (classliteral -> _ .)
    +               reduce using rule 91 (classliteral -> _ .)
    ,               reduce using rule 91 (classliteral -> _ .)
    .               reduce using rule 91 (classliteral -> _ .)
    /               reduce using rule 91 (classliteral -> _ .)
    :               reduce using rule 91 (classliteral -> _ .)
    ;               reduce using rule 91 (classliteral -> _ .)
    <               reduce using rule 91 (classliteral -> _ .)
    =               reduce using rule 91 (classliteral -> _ .)
    >               reduce using rule 91 (classliteral -> _ .)
    ?               reduce using rule 91 (classliteral -> _ .)
    @               reduce using rule 91 (classliteral -> _ .)
    [               reduce using rule 91 (classliteral -> _ .)
    \               reduce using rule 91 (classliteral -> _ .)
    _               reduce using rule 91 (classliteral -> _ .)
    `               reduce using rule 91 (classliteral -> _ .)
    {               reduce using rule 91 (classliteral -> _ .)
    }               reduce using rule 91 (classliteral -> _ .)
    ~               reduce using rule 91 (classliteral -> _ .)
    ESCAPED         reduce using rule 91 (classliteral -> _ .)
    DIGIT           reduce using rule 91 (classliteral -> _ .)
    OTHER           reduce using rule 91 (classliteral -> _ .)
    a               reduce using rule 91 (classliteral -> _ .)
    b               reduce using rule 91 (classliteral -> _ .)
    c               reduce using rule 91 (classliteral -> _ .)
    d               reduce using rule 91 (classliteral -> _ .)
    e               reduce using rule 91 (classliteral -> _ .)
    f               reduce using rule 91 (classliteral -> _ .)
    g               reduce using rule 91 (classliteral -> _ .)
    h               reduce using rule 91 (classliteral -> _ .)
    i               reduce using rule 91 (classliteral -> _ .)
    j               reduce using rule 91 (classliteral -> _ .)
    k               reduce using rule 91 (classliteral -> _ .)
    l               reduce using rule 91 (classliteral -> _ .)
    m               reduce using rule 91 (classliteral -> _ .)
    n               reduce using rule 91 (classliteral -> _ .)
    o               reduce using rule 91 (classliteral -> _ .)
    p               reduce using rule 91 (classliteral -> _ .)
    q               reduce using rule 91 (classliteral -> _ .)
    r               reduce using rule 91 (classliteral -> _ .)
    s               reduce using rule 91 (classliteral -> _ .)
    t               reduce using rule 91 (classliteral -> _ .)
    u               reduce using rule 91 (classliteral -> _ .)
    v               reduce using rule 91 (classliteral -> _ .)
    w               reduce using rule 91 (classliteral -> _ .)
    x               reduce using rule 91 (classliteral -> _ .)
    y               reduce using rule 91 (classliteral -> _ .)
    z               reduce using rule 91 (classliteral -> _ .)
    A               reduce using rule 91 (classliteral -> _ .)
    B               reduce using rule 91 (classliteral -> _ .)
    C               reduce using rule 91 (classliteral -> _ .)
    D               reduce using rule 91 (classliteral -> _ .)
    E               reduce using rule 91 (classliteral -> _ .)
    F               reduce using rule 91 (classliteral -> _ .)
    G               reduce using rule 91 (classliteral -> _ .)
    H               reduce using rule 91 (classliteral -> _ .)
    I               reduce using rule 91 (classliteral -> _ .)
    J               reduce using rule 91 (classliteral -> _ .)
    K               reduce using rule 91 (classliteral -> _ .)
    L               reduce using rule 91 (classliteral -> _ .)
    M               reduce using rule 91 (classliteral -> _ .)
    N               reduce using rule 91 (classliteral -> _ .)
    O               reduce using rule 91 (classliteral -> _ .)
    P               reduce using rule 91 (classliteral -> _ .)
    Q               reduce using rule 91 (classliteral -> _ .)
    R               reduce using rule 91 (classliteral -> _ .)
    S               reduce using rule 91 (classliteral -> _ .)
    T               reduce using rule 91 (classliteral -> _ .)
    U               reduce using rule 91 (classliteral -> _ .)
    V               reduce using rule 91 (classliteral -> _ .)
    W               reduce using rule 91 (classliteral -> _ .)
    X               reduce using rule 91 (classliteral -> _ .)
    Y               reduce using rule 91 (classliteral -> _ .)
    Z               reduce using rule 91 (classliteral -> _ .)
    |               reduce using rule 91 (classliteral -> _ .)
    ]               reduce using rule 91 (classliteral -> _ .)
    -               reduce using rule 91 (classliteral -> _ .)


state 149

    (59) charclass -> [ classitems . ]

    ]               shift and go to state 170


state 150

    (5) alternation -> re | . simple
    (6) alternation -> re | . empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 171
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 172
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 151

    (30) plus -> elementary + .

    ?               reduce using rule 30 (plus -> elementary + .)
    (               reduce using rule 30 (plus -> elementary + .)
    ^               reduce using rule 30 (plus -> elementary + .)
    >               reduce using rule 30 (plus -> elementary + .)
    <               reduce using rule 30 (plus -> elementary + .)
    /               reduce using rule 30 (plus -> elementary + .)
    \               reduce using rule 30 (plus -> elementary + .)
    #               reduce using rule 30 (plus -> elementary + .)
    %               reduce using rule 30 (plus -> elementary + .)
    ESCAPED         reduce using rule 30 (plus -> elementary + .)
    DIGIT           reduce using rule 30 (plus -> elementary + .)
    OTHER           reduce using rule 30 (plus -> elementary + .)
    [               reduce using rule 30 (plus -> elementary + .)
    .               reduce using rule 30 (plus -> elementary + .)
    ,               reduce using rule 30 (plus -> elementary + .)
    :               reduce using rule 30 (plus -> elementary + .)
    ;               reduce using rule 30 (plus -> elementary + .)
    $               reduce using rule 30 (plus -> elementary + .)
    `               reduce using rule 30 (plus -> elementary + .)
    a               reduce using rule 30 (plus -> elementary + .)
    b               reduce using rule 30 (plus -> elementary + .)
    c               reduce using rule 30 (plus -> elementary + .)
    d               reduce using rule 30 (plus -> elementary + .)
    e               reduce using rule 30 (plus -> elementary + .)
    f               reduce using rule 30 (plus -> elementary + .)
    g               reduce using rule 30 (plus -> elementary + .)
    h               reduce using rule 30 (plus -> elementary + .)
    i               reduce using rule 30 (plus -> elementary + .)
    j               reduce using rule 30 (plus -> elementary + .)
    k               reduce using rule 30 (plus -> elementary + .)
    l               reduce using rule 30 (plus -> elementary + .)
    m               reduce using rule 30 (plus -> elementary + .)
    n               reduce using rule 30 (plus -> elementary + .)
    o               reduce using rule 30 (plus -> elementary + .)
    p               reduce using rule 30 (plus -> elementary + .)
    q               reduce using rule 30 (plus -> elementary + .)
    r               reduce using rule 30 (plus -> elementary + .)
    s               reduce using rule 30 (plus -> elementary + .)
    t               reduce using rule 30 (plus -> elementary + .)
    u               reduce using rule 30 (plus -> elementary + .)
    v               reduce using rule 30 (plus -> elementary + .)
    w               reduce using rule 30 (plus -> elementary + .)
    x               reduce using rule 30 (plus -> elementary + .)
    y               reduce using rule 30 (plus -> elementary + .)
    z               reduce using rule 30 (plus -> elementary + .)
    A               reduce using rule 30 (plus -> elementary + .)
    B               reduce using rule 30 (plus -> elementary + .)
    C               reduce using rule 30 (plus -> elementary + .)
    D               reduce using rule 30 (plus -> elementary + .)
    E               reduce using rule 30 (plus -> elementary + .)
    F               reduce using rule 30 (plus -> elementary + .)
    G               reduce using rule 30 (plus -> elementary + .)
    H               reduce using rule 30 (plus -> elementary + .)
    I               reduce using rule 30 (plus -> elementary + .)
    J               reduce using rule 30 (plus -> elementary + .)
    K               reduce using rule 30 (plus -> elementary + .)
    L               reduce using rule 30 (plus -> elementary + .)
    M               reduce using rule 30 (plus -> elementary + .)
    N               reduce using rule 30 (plus -> elementary + .)
    O               reduce using rule 30 (plus -> elementary + .)
    P               reduce using rule 30 (plus -> elementary + .)
    Q               reduce using rule 30 (plus -> elementary + .)
    R               reduce using rule 30 (plus -> elementary + .)
    S               reduce using rule 30 (plus -> elementary + .)
    T               reduce using rule 30 (plus -> elementary + .)
    U               reduce using rule 30 (plus -> elementary + .)
    V               reduce using rule 30 (plus -> elementary + .)
    W               reduce using rule 30 (plus -> elementary + .)
    X               reduce using rule 30 (plus -> elementary + .)
    Y               reduce using rule 30 (plus -> elementary + .)
    Z               reduce using rule 30 (plus -> elementary + .)
    |               reduce using rule 30 (plus -> elementary + .)
    $end            reduce using rule 30 (plus -> elementary + .)
    )               reduce using rule 30 (plus -> elementary + .)


state 152

    (32) nrepeat -> elementary { . number }
    (33) nrepeat -> elementary { . , number }
    (34) nrepeat -> elementary { . number , }
    (35) nrepeat -> elementary { . number , number }
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    ,               shift and go to state 173
    DIGIT           shift and go to state 159

    number                         shift and go to state 174

state 153

    (31) optional -> elementary ? .

    ?               reduce using rule 31 (optional -> elementary ? .)
    (               reduce using rule 31 (optional -> elementary ? .)
    ^               reduce using rule 31 (optional -> elementary ? .)
    >               reduce using rule 31 (optional -> elementary ? .)
    <               reduce using rule 31 (optional -> elementary ? .)
    /               reduce using rule 31 (optional -> elementary ? .)
    \               reduce using rule 31 (optional -> elementary ? .)
    #               reduce using rule 31 (optional -> elementary ? .)
    %               reduce using rule 31 (optional -> elementary ? .)
    ESCAPED         reduce using rule 31 (optional -> elementary ? .)
    DIGIT           reduce using rule 31 (optional -> elementary ? .)
    OTHER           reduce using rule 31 (optional -> elementary ? .)
    [               reduce using rule 31 (optional -> elementary ? .)
    .               reduce using rule 31 (optional -> elementary ? .)
    ,               reduce using rule 31 (optional -> elementary ? .)
    :               reduce using rule 31 (optional -> elementary ? .)
    ;               reduce using rule 31 (optional -> elementary ? .)
    $               reduce using rule 31 (optional -> elementary ? .)
    `               reduce using rule 31 (optional -> elementary ? .)
    a               reduce using rule 31 (optional -> elementary ? .)
    b               reduce using rule 31 (optional -> elementary ? .)
    c               reduce using rule 31 (optional -> elementary ? .)
    d               reduce using rule 31 (optional -> elementary ? .)
    e               reduce using rule 31 (optional -> elementary ? .)
    f               reduce using rule 31 (optional -> elementary ? .)
    g               reduce using rule 31 (optional -> elementary ? .)
    h               reduce using rule 31 (optional -> elementary ? .)
    i               reduce using rule 31 (optional -> elementary ? .)
    j               reduce using rule 31 (optional -> elementary ? .)
    k               reduce using rule 31 (optional -> elementary ? .)
    l               reduce using rule 31 (optional -> elementary ? .)
    m               reduce using rule 31 (optional -> elementary ? .)
    n               reduce using rule 31 (optional -> elementary ? .)
    o               reduce using rule 31 (optional -> elementary ? .)
    p               reduce using rule 31 (optional -> elementary ? .)
    q               reduce using rule 31 (optional -> elementary ? .)
    r               reduce using rule 31 (optional -> elementary ? .)
    s               reduce using rule 31 (optional -> elementary ? .)
    t               reduce using rule 31 (optional -> elementary ? .)
    u               reduce using rule 31 (optional -> elementary ? .)
    v               reduce using rule 31 (optional -> elementary ? .)
    w               reduce using rule 31 (optional -> elementary ? .)
    x               reduce using rule 31 (optional -> elementary ? .)
    y               reduce using rule 31 (optional -> elementary ? .)
    z               reduce using rule 31 (optional -> elementary ? .)
    A               reduce using rule 31 (optional -> elementary ? .)
    B               reduce using rule 31 (optional -> elementary ? .)
    C               reduce using rule 31 (optional -> elementary ? .)
    D               reduce using rule 31 (optional -> elementary ? .)
    E               reduce using rule 31 (optional -> elementary ? .)
    F               reduce using rule 31 (optional -> elementary ? .)
    G               reduce using rule 31 (optional -> elementary ? .)
    H               reduce using rule 31 (optional -> elementary ? .)
    I               reduce using rule 31 (optional -> elementary ? .)
    J               reduce using rule 31 (optional -> elementary ? .)
    K               reduce using rule 31 (optional -> elementary ? .)
    L               reduce using rule 31 (optional -> elementary ? .)
    M               reduce using rule 31 (optional -> elementary ? .)
    N               reduce using rule 31 (optional -> elementary ? .)
    O               reduce using rule 31 (optional -> elementary ? .)
    P               reduce using rule 31 (optional -> elementary ? .)
    Q               reduce using rule 31 (optional -> elementary ? .)
    R               reduce using rule 31 (optional -> elementary ? .)
    S               reduce using rule 31 (optional -> elementary ? .)
    T               reduce using rule 31 (optional -> elementary ? .)
    U               reduce using rule 31 (optional -> elementary ? .)
    V               reduce using rule 31 (optional -> elementary ? .)
    W               reduce using rule 31 (optional -> elementary ? .)
    X               reduce using rule 31 (optional -> elementary ? .)
    Y               reduce using rule 31 (optional -> elementary ? .)
    Z               reduce using rule 31 (optional -> elementary ? .)
    |               reduce using rule 31 (optional -> elementary ? .)
    )               reduce using rule 31 (optional -> elementary ? .)
    $end            reduce using rule 31 (optional -> elementary ? .)


state 154

    (29) asterisk -> elementary * .

    ?               reduce using rule 29 (asterisk -> elementary * .)
    (               reduce using rule 29 (asterisk -> elementary * .)
    ^               reduce using rule 29 (asterisk -> elementary * .)
    >               reduce using rule 29 (asterisk -> elementary * .)
    <               reduce using rule 29 (asterisk -> elementary * .)
    /               reduce using rule 29 (asterisk -> elementary * .)
    \               reduce using rule 29 (asterisk -> elementary * .)
    #               reduce using rule 29 (asterisk -> elementary * .)
    %               reduce using rule 29 (asterisk -> elementary * .)
    ESCAPED         reduce using rule 29 (asterisk -> elementary * .)
    DIGIT           reduce using rule 29 (asterisk -> elementary * .)
    OTHER           reduce using rule 29 (asterisk -> elementary * .)
    [               reduce using rule 29 (asterisk -> elementary * .)
    .               reduce using rule 29 (asterisk -> elementary * .)
    ,               reduce using rule 29 (asterisk -> elementary * .)
    :               reduce using rule 29 (asterisk -> elementary * .)
    ;               reduce using rule 29 (asterisk -> elementary * .)
    $               reduce using rule 29 (asterisk -> elementary * .)
    `               reduce using rule 29 (asterisk -> elementary * .)
    a               reduce using rule 29 (asterisk -> elementary * .)
    b               reduce using rule 29 (asterisk -> elementary * .)
    c               reduce using rule 29 (asterisk -> elementary * .)
    d               reduce using rule 29 (asterisk -> elementary * .)
    e               reduce using rule 29 (asterisk -> elementary * .)
    f               reduce using rule 29 (asterisk -> elementary * .)
    g               reduce using rule 29 (asterisk -> elementary * .)
    h               reduce using rule 29 (asterisk -> elementary * .)
    i               reduce using rule 29 (asterisk -> elementary * .)
    j               reduce using rule 29 (asterisk -> elementary * .)
    k               reduce using rule 29 (asterisk -> elementary * .)
    l               reduce using rule 29 (asterisk -> elementary * .)
    m               reduce using rule 29 (asterisk -> elementary * .)
    n               reduce using rule 29 (asterisk -> elementary * .)
    o               reduce using rule 29 (asterisk -> elementary * .)
    p               reduce using rule 29 (asterisk -> elementary * .)
    q               reduce using rule 29 (asterisk -> elementary * .)
    r               reduce using rule 29 (asterisk -> elementary * .)
    s               reduce using rule 29 (asterisk -> elementary * .)
    t               reduce using rule 29 (asterisk -> elementary * .)
    u               reduce using rule 29 (asterisk -> elementary * .)
    v               reduce using rule 29 (asterisk -> elementary * .)
    w               reduce using rule 29 (asterisk -> elementary * .)
    x               reduce using rule 29 (asterisk -> elementary * .)
    y               reduce using rule 29 (asterisk -> elementary * .)
    z               reduce using rule 29 (asterisk -> elementary * .)
    A               reduce using rule 29 (asterisk -> elementary * .)
    B               reduce using rule 29 (asterisk -> elementary * .)
    C               reduce using rule 29 (asterisk -> elementary * .)
    D               reduce using rule 29 (asterisk -> elementary * .)
    E               reduce using rule 29 (asterisk -> elementary * .)
    F               reduce using rule 29 (asterisk -> elementary * .)
    G               reduce using rule 29 (asterisk -> elementary * .)
    H               reduce using rule 29 (asterisk -> elementary * .)
    I               reduce using rule 29 (asterisk -> elementary * .)
    J               reduce using rule 29 (asterisk -> elementary * .)
    K               reduce using rule 29 (asterisk -> elementary * .)
    L               reduce using rule 29 (asterisk -> elementary * .)
    M               reduce using rule 29 (asterisk -> elementary * .)
    N               reduce using rule 29 (asterisk -> elementary * .)
    O               reduce using rule 29 (asterisk -> elementary * .)
    P               reduce using rule 29 (asterisk -> elementary * .)
    Q               reduce using rule 29 (asterisk -> elementary * .)
    R               reduce using rule 29 (asterisk -> elementary * .)
    S               reduce using rule 29 (asterisk -> elementary * .)
    T               reduce using rule 29 (asterisk -> elementary * .)
    U               reduce using rule 29 (asterisk -> elementary * .)
    V               reduce using rule 29 (asterisk -> elementary * .)
    W               reduce using rule 29 (asterisk -> elementary * .)
    X               reduce using rule 29 (asterisk -> elementary * .)
    Y               reduce using rule 29 (asterisk -> elementary * .)
    Z               reduce using rule 29 (asterisk -> elementary * .)
    |               reduce using rule 29 (asterisk -> elementary * .)
    )               reduce using rule 29 (asterisk -> elementary * .)
    $end            reduce using rule 29 (asterisk -> elementary * .)


state 155

    (42) group -> ( groupbody ) .

    *               reduce using rule 42 (group -> ( groupbody ) .)
    +               reduce using rule 42 (group -> ( groupbody ) .)
    ?               reduce using rule 42 (group -> ( groupbody ) .)
    {               reduce using rule 42 (group -> ( groupbody ) .)
    (               reduce using rule 42 (group -> ( groupbody ) .)
    ^               reduce using rule 42 (group -> ( groupbody ) .)
    >               reduce using rule 42 (group -> ( groupbody ) .)
    <               reduce using rule 42 (group -> ( groupbody ) .)
    /               reduce using rule 42 (group -> ( groupbody ) .)
    \               reduce using rule 42 (group -> ( groupbody ) .)
    #               reduce using rule 42 (group -> ( groupbody ) .)
    %               reduce using rule 42 (group -> ( groupbody ) .)
    ESCAPED         reduce using rule 42 (group -> ( groupbody ) .)
    DIGIT           reduce using rule 42 (group -> ( groupbody ) .)
    OTHER           reduce using rule 42 (group -> ( groupbody ) .)
    [               reduce using rule 42 (group -> ( groupbody ) .)
    .               reduce using rule 42 (group -> ( groupbody ) .)
    ,               reduce using rule 42 (group -> ( groupbody ) .)
    :               reduce using rule 42 (group -> ( groupbody ) .)
    ;               reduce using rule 42 (group -> ( groupbody ) .)
    $               reduce using rule 42 (group -> ( groupbody ) .)
    `               reduce using rule 42 (group -> ( groupbody ) .)
    a               reduce using rule 42 (group -> ( groupbody ) .)
    b               reduce using rule 42 (group -> ( groupbody ) .)
    c               reduce using rule 42 (group -> ( groupbody ) .)
    d               reduce using rule 42 (group -> ( groupbody ) .)
    e               reduce using rule 42 (group -> ( groupbody ) .)
    f               reduce using rule 42 (group -> ( groupbody ) .)
    g               reduce using rule 42 (group -> ( groupbody ) .)
    h               reduce using rule 42 (group -> ( groupbody ) .)
    i               reduce using rule 42 (group -> ( groupbody ) .)
    j               reduce using rule 42 (group -> ( groupbody ) .)
    k               reduce using rule 42 (group -> ( groupbody ) .)
    l               reduce using rule 42 (group -> ( groupbody ) .)
    m               reduce using rule 42 (group -> ( groupbody ) .)
    n               reduce using rule 42 (group -> ( groupbody ) .)
    o               reduce using rule 42 (group -> ( groupbody ) .)
    p               reduce using rule 42 (group -> ( groupbody ) .)
    q               reduce using rule 42 (group -> ( groupbody ) .)
    r               reduce using rule 42 (group -> ( groupbody ) .)
    s               reduce using rule 42 (group -> ( groupbody ) .)
    t               reduce using rule 42 (group -> ( groupbody ) .)
    u               reduce using rule 42 (group -> ( groupbody ) .)
    v               reduce using rule 42 (group -> ( groupbody ) .)
    w               reduce using rule 42 (group -> ( groupbody ) .)
    x               reduce using rule 42 (group -> ( groupbody ) .)
    y               reduce using rule 42 (group -> ( groupbody ) .)
    z               reduce using rule 42 (group -> ( groupbody ) .)
    A               reduce using rule 42 (group -> ( groupbody ) .)
    B               reduce using rule 42 (group -> ( groupbody ) .)
    C               reduce using rule 42 (group -> ( groupbody ) .)
    D               reduce using rule 42 (group -> ( groupbody ) .)
    E               reduce using rule 42 (group -> ( groupbody ) .)
    F               reduce using rule 42 (group -> ( groupbody ) .)
    G               reduce using rule 42 (group -> ( groupbody ) .)
    H               reduce using rule 42 (group -> ( groupbody ) .)
    I               reduce using rule 42 (group -> ( groupbody ) .)
    J               reduce using rule 42 (group -> ( groupbody ) .)
    K               reduce using rule 42 (group -> ( groupbody ) .)
    L               reduce using rule 42 (group -> ( groupbody ) .)
    M               reduce using rule 42 (group -> ( groupbody ) .)
    N               reduce using rule 42 (group -> ( groupbody ) .)
    O               reduce using rule 42 (group -> ( groupbody ) .)
    P               reduce using rule 42 (group -> ( groupbody ) .)
    Q               reduce using rule 42 (group -> ( groupbody ) .)
    R               reduce using rule 42 (group -> ( groupbody ) .)
    S               reduce using rule 42 (group -> ( groupbody ) .)
    T               reduce using rule 42 (group -> ( groupbody ) .)
    U               reduce using rule 42 (group -> ( groupbody ) .)
    V               reduce using rule 42 (group -> ( groupbody ) .)
    W               reduce using rule 42 (group -> ( groupbody ) .)
    X               reduce using rule 42 (group -> ( groupbody ) .)
    Y               reduce using rule 42 (group -> ( groupbody ) .)
    Z               reduce using rule 42 (group -> ( groupbody ) .)
    |               reduce using rule 42 (group -> ( groupbody ) .)
    $end            reduce using rule 42 (group -> ( groupbody ) .)
    )               reduce using rule 42 (group -> ( groupbody ) .)


state 156

    (45) specialgroup -> _ . lengthcheck
    (51) lengthcheck -> . ( number ) re

    (               shift and go to state 175

    lengthcheck                    shift and go to state 176

state 157

    (47) specialgroup -> : . nomatchgroup
    (53) nomatchgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 178
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    nomatchgroup                   shift and go to state 177
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 158

    (46) specialgroup -> | . stationarygroup
    (52) stationarygroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 180
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    stationarygroup                shift and go to state 179
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 159

    (40) number -> DIGIT .
    (41) number -> DIGIT . number
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    )               reduce using rule 40 (number -> DIGIT .)
    }               reduce using rule 40 (number -> DIGIT .)
    ,               reduce using rule 40 (number -> DIGIT .)
    DIGIT           shift and go to state 159

    number                         shift and go to state 181

state 160

    (50) specialgroup -> recursive .

    )               reduce using rule 50 (specialgroup -> recursive .)


state 161

    (48) specialgroup -> , . nodispgroup
    (54) nodispgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 183
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    nodispgroup                    shift and go to state 182
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    optional                       shift and go to state 84
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 162

    (57) recursive -> number .

    )               reduce using rule 57 (recursive -> number .)


state 163

    (49) specialgroup -> ; . nodispmatchgroup
    (55) nodispmatchgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 185
    plus                           shift and go to state 49
    nodispmatchgroup               shift and go to state 184
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 164

    (43) groupbody -> ? specialgroup .

    )               reduce using rule 43 (groupbody -> ? specialgroup .)


state 165

    (56) recursive -> R .

    )               reduce using rule 56 (recursive -> R .)


state 166

    (60) classitems -> ^ baseitems .

    ]               reduce using rule 60 (classitems -> ^ baseitems .)


state 167

    (65) baseitems -> classatom baseitems .

    ]               reduce using rule 65 (baseitems -> classatom baseitems .)
    |               reduce using rule 65 (baseitems -> classatom baseitems .)


state 168

    (97) classrange -> classliteral - . classliteral
    (68) classliteral -> . !
    (69) classliteral -> . "
    (70) classliteral -> . #
    (71) classliteral -> . $
    (72) classliteral -> . %
    (73) classliteral -> . &
    (74) classliteral -> . '
    (75) classliteral -> . (
    (76) classliteral -> . )
    (77) classliteral -> . *
    (78) classliteral -> . +
    (79) classliteral -> . ,
    (80) classliteral -> . .
    (81) classliteral -> . /
    (82) classliteral -> . :
    (83) classliteral -> . ;
    (84) classliteral -> . <
    (85) classliteral -> . =
    (86) classliteral -> . >
    (87) classliteral -> . ?
    (88) classliteral -> . @
    (89) classliteral -> . [
    (90) classliteral -> . \
    (91) classliteral -> . _
    (92) classliteral -> . `
    (93) classliteral -> . {
    (94) classliteral -> . }
    (95) classliteral -> . ~
    (96) classliteral -> . literal
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    !               shift and go to state 132
    "               shift and go to state 119
    #               shift and go to state 139
    $               shift and go to state 135
    %               shift and go to state 124
    &               shift and go to state 127
    '               shift and go to state 114
    (               shift and go to state 134
    )               shift and go to state 129
    *               shift and go to state 131
    +               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 116
    /               shift and go to state 125
    :               shift and go to state 136
    ;               shift and go to state 137
    <               shift and go to state 118
    =               shift and go to state 144
    >               shift and go to state 130
    ?               shift and go to state 145
    @               shift and go to state 138
    [               shift and go to state 142
    \               shift and go to state 128
    _               shift and go to state 148
    `               shift and go to state 123
    {               shift and go to state 147
    }               shift and go to state 120
    ~               shift and go to state 146
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    classliteral                   shift and go to state 186
    alpha                          shift and go to state 69
    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    literal                        shift and go to state 143

state 169

    (63) classitems2 -> baseitems | . baseitems
    (64) baseitems -> . classatom
    (65) baseitems -> . classatom baseitems
    (66) classatom -> . classliteral
    (67) classatom -> . classrange
    (68) classliteral -> . !
    (69) classliteral -> . "
    (70) classliteral -> . #
    (71) classliteral -> . $
    (72) classliteral -> . %
    (73) classliteral -> . &
    (74) classliteral -> . '
    (75) classliteral -> . (
    (76) classliteral -> . )
    (77) classliteral -> . *
    (78) classliteral -> . +
    (79) classliteral -> . ,
    (80) classliteral -> . .
    (81) classliteral -> . /
    (82) classliteral -> . :
    (83) classliteral -> . ;
    (84) classliteral -> . <
    (85) classliteral -> . =
    (86) classliteral -> . >
    (87) classliteral -> . ?
    (88) classliteral -> . @
    (89) classliteral -> . [
    (90) classliteral -> . \
    (91) classliteral -> . _
    (92) classliteral -> . `
    (93) classliteral -> . {
    (94) classliteral -> . }
    (95) classliteral -> . ~
    (96) classliteral -> . literal
    (97) classrange -> . classliteral - classliteral
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    !               shift and go to state 132
    "               shift and go to state 119
    #               shift and go to state 139
    $               shift and go to state 135
    %               shift and go to state 124
    &               shift and go to state 127
    '               shift and go to state 114
    (               shift and go to state 134
    )               shift and go to state 129
    *               shift and go to state 131
    +               shift and go to state 141
    ,               shift and go to state 121
    .               shift and go to state 116
    /               shift and go to state 125
    :               shift and go to state 136
    ;               shift and go to state 137
    <               shift and go to state 118
    =               shift and go to state 144
    >               shift and go to state 130
    ?               shift and go to state 145
    @               shift and go to state 138
    [               shift and go to state 142
    \               shift and go to state 128
    _               shift and go to state 148
    `               shift and go to state 123
    {               shift and go to state 147
    }               shift and go to state 120
    ~               shift and go to state 146
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    alpha_lower                    shift and go to state 21
    classrange                     shift and go to state 140
    alpha                          shift and go to state 69
    classliteral                   shift and go to state 126
    classatom                      shift and go to state 122
    alpha_upper                    shift and go to state 35
    baseitems                      shift and go to state 187
    literal                        shift and go to state 143

state 170

    (59) charclass -> [ classitems ] .

    *               reduce using rule 59 (charclass -> [ classitems ] .)
    +               reduce using rule 59 (charclass -> [ classitems ] .)
    ?               reduce using rule 59 (charclass -> [ classitems ] .)
    {               reduce using rule 59 (charclass -> [ classitems ] .)
    (               reduce using rule 59 (charclass -> [ classitems ] .)
    ^               reduce using rule 59 (charclass -> [ classitems ] .)
    >               reduce using rule 59 (charclass -> [ classitems ] .)
    <               reduce using rule 59 (charclass -> [ classitems ] .)
    /               reduce using rule 59 (charclass -> [ classitems ] .)
    \               reduce using rule 59 (charclass -> [ classitems ] .)
    #               reduce using rule 59 (charclass -> [ classitems ] .)
    %               reduce using rule 59 (charclass -> [ classitems ] .)
    ESCAPED         reduce using rule 59 (charclass -> [ classitems ] .)
    DIGIT           reduce using rule 59 (charclass -> [ classitems ] .)
    OTHER           reduce using rule 59 (charclass -> [ classitems ] .)
    [               reduce using rule 59 (charclass -> [ classitems ] .)
    .               reduce using rule 59 (charclass -> [ classitems ] .)
    ,               reduce using rule 59 (charclass -> [ classitems ] .)
    :               reduce using rule 59 (charclass -> [ classitems ] .)
    ;               reduce using rule 59 (charclass -> [ classitems ] .)
    $               reduce using rule 59 (charclass -> [ classitems ] .)
    `               reduce using rule 59 (charclass -> [ classitems ] .)
    a               reduce using rule 59 (charclass -> [ classitems ] .)
    b               reduce using rule 59 (charclass -> [ classitems ] .)
    c               reduce using rule 59 (charclass -> [ classitems ] .)
    d               reduce using rule 59 (charclass -> [ classitems ] .)
    e               reduce using rule 59 (charclass -> [ classitems ] .)
    f               reduce using rule 59 (charclass -> [ classitems ] .)
    g               reduce using rule 59 (charclass -> [ classitems ] .)
    h               reduce using rule 59 (charclass -> [ classitems ] .)
    i               reduce using rule 59 (charclass -> [ classitems ] .)
    j               reduce using rule 59 (charclass -> [ classitems ] .)
    k               reduce using rule 59 (charclass -> [ classitems ] .)
    l               reduce using rule 59 (charclass -> [ classitems ] .)
    m               reduce using rule 59 (charclass -> [ classitems ] .)
    n               reduce using rule 59 (charclass -> [ classitems ] .)
    o               reduce using rule 59 (charclass -> [ classitems ] .)
    p               reduce using rule 59 (charclass -> [ classitems ] .)
    q               reduce using rule 59 (charclass -> [ classitems ] .)
    r               reduce using rule 59 (charclass -> [ classitems ] .)
    s               reduce using rule 59 (charclass -> [ classitems ] .)
    t               reduce using rule 59 (charclass -> [ classitems ] .)
    u               reduce using rule 59 (charclass -> [ classitems ] .)
    v               reduce using rule 59 (charclass -> [ classitems ] .)
    w               reduce using rule 59 (charclass -> [ classitems ] .)
    x               reduce using rule 59 (charclass -> [ classitems ] .)
    y               reduce using rule 59 (charclass -> [ classitems ] .)
    z               reduce using rule 59 (charclass -> [ classitems ] .)
    A               reduce using rule 59 (charclass -> [ classitems ] .)
    B               reduce using rule 59 (charclass -> [ classitems ] .)
    C               reduce using rule 59 (charclass -> [ classitems ] .)
    D               reduce using rule 59 (charclass -> [ classitems ] .)
    E               reduce using rule 59 (charclass -> [ classitems ] .)
    F               reduce using rule 59 (charclass -> [ classitems ] .)
    G               reduce using rule 59 (charclass -> [ classitems ] .)
    H               reduce using rule 59 (charclass -> [ classitems ] .)
    I               reduce using rule 59 (charclass -> [ classitems ] .)
    J               reduce using rule 59 (charclass -> [ classitems ] .)
    K               reduce using rule 59 (charclass -> [ classitems ] .)
    L               reduce using rule 59 (charclass -> [ classitems ] .)
    M               reduce using rule 59 (charclass -> [ classitems ] .)
    N               reduce using rule 59 (charclass -> [ classitems ] .)
    O               reduce using rule 59 (charclass -> [ classitems ] .)
    P               reduce using rule 59 (charclass -> [ classitems ] .)
    Q               reduce using rule 59 (charclass -> [ classitems ] .)
    R               reduce using rule 59 (charclass -> [ classitems ] .)
    S               reduce using rule 59 (charclass -> [ classitems ] .)
    T               reduce using rule 59 (charclass -> [ classitems ] .)
    U               reduce using rule 59 (charclass -> [ classitems ] .)
    V               reduce using rule 59 (charclass -> [ classitems ] .)
    W               reduce using rule 59 (charclass -> [ classitems ] .)
    X               reduce using rule 59 (charclass -> [ classitems ] .)
    Y               reduce using rule 59 (charclass -> [ classitems ] .)
    Z               reduce using rule 59 (charclass -> [ classitems ] .)
    |               reduce using rule 59 (charclass -> [ classitems ] .)
    $end            reduce using rule 59 (charclass -> [ classitems ] .)
    )               reduce using rule 59 (charclass -> [ classitems ] .)


state 171

    (5) alternation -> re | simple .
    (9) concatenation -> simple . basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 5 (alternation -> re | simple .)
    )               reduce using rule 5 (alternation -> re | simple .)
    $end            reduce using rule 5 (alternation -> re | simple .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    command                        shift and go to state 22
    plus                           shift and go to state 49
    charclass                      shift and go to state 3
    elementary                     shift and go to state 79
    alpha_lower                    shift and go to state 21
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    group                          shift and go to state 7
    nomatch                        shift and go to state 48
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 103
    predefined                     shift and go to state 42
    literal                        shift and go to state 74
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    quantifier                     shift and go to state 95
    asterisk                       shift and go to state 97
    anychar                        shift and go to state 45
    anchor                         shift and go to state 91

state 172

    (6) alternation -> re | empty .

    |               reduce using rule 6 (alternation -> re | empty .)
    )               reduce using rule 6 (alternation -> re | empty .)
    $end            reduce using rule 6 (alternation -> re | empty .)


state 173

    (33) nrepeat -> elementary { , . number }
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    DIGIT           shift and go to state 159

    number                         shift and go to state 188

state 174

    (32) nrepeat -> elementary { number . }
    (34) nrepeat -> elementary { number . , }
    (35) nrepeat -> elementary { number . , number }

    }               shift and go to state 189
    ,               shift and go to state 190


state 175

    (51) lengthcheck -> ( . number ) re
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    DIGIT           shift and go to state 159

    number                         shift and go to state 191

state 176

    (45) specialgroup -> _ lengthcheck .

    )               reduce using rule 45 (specialgroup -> _ lengthcheck .)


state 177

    (47) specialgroup -> : nomatchgroup .

    )               reduce using rule 47 (specialgroup -> : nomatchgroup .)


state 178

    (53) nomatchgroup -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 53 (nomatchgroup -> re .)
    |               shift and go to state 150


state 179

    (46) specialgroup -> | stationarygroup .

    )               reduce using rule 46 (specialgroup -> | stationarygroup .)


state 180

    (52) stationarygroup -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 52 (stationarygroup -> re .)
    |               shift and go to state 150


state 181

    (41) number -> DIGIT number .

    )               reduce using rule 41 (number -> DIGIT number .)
    }               reduce using rule 41 (number -> DIGIT number .)
    ,               reduce using rule 41 (number -> DIGIT number .)


state 182

    (48) specialgroup -> , nodispgroup .

    )               reduce using rule 48 (specialgroup -> , nodispgroup .)


state 183

    (54) nodispgroup -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 54 (nodispgroup -> re .)
    |               shift and go to state 150


state 184

    (49) specialgroup -> ; nodispmatchgroup .

    )               reduce using rule 49 (specialgroup -> ; nodispmatchgroup .)


state 185

    (55) nodispmatchgroup -> re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 55 (nodispmatchgroup -> re .)
    |               shift and go to state 150


state 186

    (97) classrange -> classliteral - classliteral .

    !               reduce using rule 97 (classrange -> classliteral - classliteral .)
    "               reduce using rule 97 (classrange -> classliteral - classliteral .)
    #               reduce using rule 97 (classrange -> classliteral - classliteral .)
    $               reduce using rule 97 (classrange -> classliteral - classliteral .)
    %               reduce using rule 97 (classrange -> classliteral - classliteral .)
    &               reduce using rule 97 (classrange -> classliteral - classliteral .)
    '               reduce using rule 97 (classrange -> classliteral - classliteral .)
    (               reduce using rule 97 (classrange -> classliteral - classliteral .)
    )               reduce using rule 97 (classrange -> classliteral - classliteral .)
    *               reduce using rule 97 (classrange -> classliteral - classliteral .)
    +               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ,               reduce using rule 97 (classrange -> classliteral - classliteral .)
    .               reduce using rule 97 (classrange -> classliteral - classliteral .)
    /               reduce using rule 97 (classrange -> classliteral - classliteral .)
    :               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ;               reduce using rule 97 (classrange -> classliteral - classliteral .)
    <               reduce using rule 97 (classrange -> classliteral - classliteral .)
    =               reduce using rule 97 (classrange -> classliteral - classliteral .)
    >               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ?               reduce using rule 97 (classrange -> classliteral - classliteral .)
    @               reduce using rule 97 (classrange -> classliteral - classliteral .)
    [               reduce using rule 97 (classrange -> classliteral - classliteral .)
    \               reduce using rule 97 (classrange -> classliteral - classliteral .)
    _               reduce using rule 97 (classrange -> classliteral - classliteral .)
    `               reduce using rule 97 (classrange -> classliteral - classliteral .)
    {               reduce using rule 97 (classrange -> classliteral - classliteral .)
    }               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ~               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ESCAPED         reduce using rule 97 (classrange -> classliteral - classliteral .)
    DIGIT           reduce using rule 97 (classrange -> classliteral - classliteral .)
    OTHER           reduce using rule 97 (classrange -> classliteral - classliteral .)
    a               reduce using rule 97 (classrange -> classliteral - classliteral .)
    b               reduce using rule 97 (classrange -> classliteral - classliteral .)
    c               reduce using rule 97 (classrange -> classliteral - classliteral .)
    d               reduce using rule 97 (classrange -> classliteral - classliteral .)
    e               reduce using rule 97 (classrange -> classliteral - classliteral .)
    f               reduce using rule 97 (classrange -> classliteral - classliteral .)
    g               reduce using rule 97 (classrange -> classliteral - classliteral .)
    h               reduce using rule 97 (classrange -> classliteral - classliteral .)
    i               reduce using rule 97 (classrange -> classliteral - classliteral .)
    j               reduce using rule 97 (classrange -> classliteral - classliteral .)
    k               reduce using rule 97 (classrange -> classliteral - classliteral .)
    l               reduce using rule 97 (classrange -> classliteral - classliteral .)
    m               reduce using rule 97 (classrange -> classliteral - classliteral .)
    n               reduce using rule 97 (classrange -> classliteral - classliteral .)
    o               reduce using rule 97 (classrange -> classliteral - classliteral .)
    p               reduce using rule 97 (classrange -> classliteral - classliteral .)
    q               reduce using rule 97 (classrange -> classliteral - classliteral .)
    r               reduce using rule 97 (classrange -> classliteral - classliteral .)
    s               reduce using rule 97 (classrange -> classliteral - classliteral .)
    t               reduce using rule 97 (classrange -> classliteral - classliteral .)
    u               reduce using rule 97 (classrange -> classliteral - classliteral .)
    v               reduce using rule 97 (classrange -> classliteral - classliteral .)
    w               reduce using rule 97 (classrange -> classliteral - classliteral .)
    x               reduce using rule 97 (classrange -> classliteral - classliteral .)
    y               reduce using rule 97 (classrange -> classliteral - classliteral .)
    z               reduce using rule 97 (classrange -> classliteral - classliteral .)
    A               reduce using rule 97 (classrange -> classliteral - classliteral .)
    B               reduce using rule 97 (classrange -> classliteral - classliteral .)
    C               reduce using rule 97 (classrange -> classliteral - classliteral .)
    D               reduce using rule 97 (classrange -> classliteral - classliteral .)
    E               reduce using rule 97 (classrange -> classliteral - classliteral .)
    F               reduce using rule 97 (classrange -> classliteral - classliteral .)
    G               reduce using rule 97 (classrange -> classliteral - classliteral .)
    H               reduce using rule 97 (classrange -> classliteral - classliteral .)
    I               reduce using rule 97 (classrange -> classliteral - classliteral .)
    J               reduce using rule 97 (classrange -> classliteral - classliteral .)
    K               reduce using rule 97 (classrange -> classliteral - classliteral .)
    L               reduce using rule 97 (classrange -> classliteral - classliteral .)
    M               reduce using rule 97 (classrange -> classliteral - classliteral .)
    N               reduce using rule 97 (classrange -> classliteral - classliteral .)
    O               reduce using rule 97 (classrange -> classliteral - classliteral .)
    P               reduce using rule 97 (classrange -> classliteral - classliteral .)
    Q               reduce using rule 97 (classrange -> classliteral - classliteral .)
    R               reduce using rule 97 (classrange -> classliteral - classliteral .)
    S               reduce using rule 97 (classrange -> classliteral - classliteral .)
    T               reduce using rule 97 (classrange -> classliteral - classliteral .)
    U               reduce using rule 97 (classrange -> classliteral - classliteral .)
    V               reduce using rule 97 (classrange -> classliteral - classliteral .)
    W               reduce using rule 97 (classrange -> classliteral - classliteral .)
    X               reduce using rule 97 (classrange -> classliteral - classliteral .)
    Y               reduce using rule 97 (classrange -> classliteral - classliteral .)
    Z               reduce using rule 97 (classrange -> classliteral - classliteral .)
    |               reduce using rule 97 (classrange -> classliteral - classliteral .)
    ]               reduce using rule 97 (classrange -> classliteral - classliteral .)


state 187

    (63) classitems2 -> baseitems | baseitems .

    ]               reduce using rule 63 (classitems2 -> baseitems | baseitems .)


state 188

    (33) nrepeat -> elementary { , number . }

    }               shift and go to state 192


state 189

    (32) nrepeat -> elementary { number } .

    ?               reduce using rule 32 (nrepeat -> elementary { number } .)
    (               reduce using rule 32 (nrepeat -> elementary { number } .)
    ^               reduce using rule 32 (nrepeat -> elementary { number } .)
    >               reduce using rule 32 (nrepeat -> elementary { number } .)
    <               reduce using rule 32 (nrepeat -> elementary { number } .)
    /               reduce using rule 32 (nrepeat -> elementary { number } .)
    \               reduce using rule 32 (nrepeat -> elementary { number } .)
    #               reduce using rule 32 (nrepeat -> elementary { number } .)
    %               reduce using rule 32 (nrepeat -> elementary { number } .)
    ESCAPED         reduce using rule 32 (nrepeat -> elementary { number } .)
    DIGIT           reduce using rule 32 (nrepeat -> elementary { number } .)
    OTHER           reduce using rule 32 (nrepeat -> elementary { number } .)
    [               reduce using rule 32 (nrepeat -> elementary { number } .)
    .               reduce using rule 32 (nrepeat -> elementary { number } .)
    ,               reduce using rule 32 (nrepeat -> elementary { number } .)
    :               reduce using rule 32 (nrepeat -> elementary { number } .)
    ;               reduce using rule 32 (nrepeat -> elementary { number } .)
    $               reduce using rule 32 (nrepeat -> elementary { number } .)
    `               reduce using rule 32 (nrepeat -> elementary { number } .)
    a               reduce using rule 32 (nrepeat -> elementary { number } .)
    b               reduce using rule 32 (nrepeat -> elementary { number } .)
    c               reduce using rule 32 (nrepeat -> elementary { number } .)
    d               reduce using rule 32 (nrepeat -> elementary { number } .)
    e               reduce using rule 32 (nrepeat -> elementary { number } .)
    f               reduce using rule 32 (nrepeat -> elementary { number } .)
    g               reduce using rule 32 (nrepeat -> elementary { number } .)
    h               reduce using rule 32 (nrepeat -> elementary { number } .)
    i               reduce using rule 32 (nrepeat -> elementary { number } .)
    j               reduce using rule 32 (nrepeat -> elementary { number } .)
    k               reduce using rule 32 (nrepeat -> elementary { number } .)
    l               reduce using rule 32 (nrepeat -> elementary { number } .)
    m               reduce using rule 32 (nrepeat -> elementary { number } .)
    n               reduce using rule 32 (nrepeat -> elementary { number } .)
    o               reduce using rule 32 (nrepeat -> elementary { number } .)
    p               reduce using rule 32 (nrepeat -> elementary { number } .)
    q               reduce using rule 32 (nrepeat -> elementary { number } .)
    r               reduce using rule 32 (nrepeat -> elementary { number } .)
    s               reduce using rule 32 (nrepeat -> elementary { number } .)
    t               reduce using rule 32 (nrepeat -> elementary { number } .)
    u               reduce using rule 32 (nrepeat -> elementary { number } .)
    v               reduce using rule 32 (nrepeat -> elementary { number } .)
    w               reduce using rule 32 (nrepeat -> elementary { number } .)
    x               reduce using rule 32 (nrepeat -> elementary { number } .)
    y               reduce using rule 32 (nrepeat -> elementary { number } .)
    z               reduce using rule 32 (nrepeat -> elementary { number } .)
    A               reduce using rule 32 (nrepeat -> elementary { number } .)
    B               reduce using rule 32 (nrepeat -> elementary { number } .)
    C               reduce using rule 32 (nrepeat -> elementary { number } .)
    D               reduce using rule 32 (nrepeat -> elementary { number } .)
    E               reduce using rule 32 (nrepeat -> elementary { number } .)
    F               reduce using rule 32 (nrepeat -> elementary { number } .)
    G               reduce using rule 32 (nrepeat -> elementary { number } .)
    H               reduce using rule 32 (nrepeat -> elementary { number } .)
    I               reduce using rule 32 (nrepeat -> elementary { number } .)
    J               reduce using rule 32 (nrepeat -> elementary { number } .)
    K               reduce using rule 32 (nrepeat -> elementary { number } .)
    L               reduce using rule 32 (nrepeat -> elementary { number } .)
    M               reduce using rule 32 (nrepeat -> elementary { number } .)
    N               reduce using rule 32 (nrepeat -> elementary { number } .)
    O               reduce using rule 32 (nrepeat -> elementary { number } .)
    P               reduce using rule 32 (nrepeat -> elementary { number } .)
    Q               reduce using rule 32 (nrepeat -> elementary { number } .)
    R               reduce using rule 32 (nrepeat -> elementary { number } .)
    S               reduce using rule 32 (nrepeat -> elementary { number } .)
    T               reduce using rule 32 (nrepeat -> elementary { number } .)
    U               reduce using rule 32 (nrepeat -> elementary { number } .)
    V               reduce using rule 32 (nrepeat -> elementary { number } .)
    W               reduce using rule 32 (nrepeat -> elementary { number } .)
    X               reduce using rule 32 (nrepeat -> elementary { number } .)
    Y               reduce using rule 32 (nrepeat -> elementary { number } .)
    Z               reduce using rule 32 (nrepeat -> elementary { number } .)
    |               reduce using rule 32 (nrepeat -> elementary { number } .)
    $end            reduce using rule 32 (nrepeat -> elementary { number } .)
    )               reduce using rule 32 (nrepeat -> elementary { number } .)


state 190

    (34) nrepeat -> elementary { number , . }
    (35) nrepeat -> elementary { number , . number }
    (40) number -> . DIGIT
    (41) number -> . DIGIT number

    }               shift and go to state 193
    DIGIT           shift and go to state 159

    number                         shift and go to state 194

state 191

    (51) lengthcheck -> ( number . ) re

    )               shift and go to state 195


state 192

    (33) nrepeat -> elementary { , number } .

    ?               reduce using rule 33 (nrepeat -> elementary { , number } .)
    (               reduce using rule 33 (nrepeat -> elementary { , number } .)
    ^               reduce using rule 33 (nrepeat -> elementary { , number } .)
    >               reduce using rule 33 (nrepeat -> elementary { , number } .)
    <               reduce using rule 33 (nrepeat -> elementary { , number } .)
    /               reduce using rule 33 (nrepeat -> elementary { , number } .)
    \               reduce using rule 33 (nrepeat -> elementary { , number } .)
    #               reduce using rule 33 (nrepeat -> elementary { , number } .)
    %               reduce using rule 33 (nrepeat -> elementary { , number } .)
    ESCAPED         reduce using rule 33 (nrepeat -> elementary { , number } .)
    DIGIT           reduce using rule 33 (nrepeat -> elementary { , number } .)
    OTHER           reduce using rule 33 (nrepeat -> elementary { , number } .)
    [               reduce using rule 33 (nrepeat -> elementary { , number } .)
    .               reduce using rule 33 (nrepeat -> elementary { , number } .)
    ,               reduce using rule 33 (nrepeat -> elementary { , number } .)
    :               reduce using rule 33 (nrepeat -> elementary { , number } .)
    ;               reduce using rule 33 (nrepeat -> elementary { , number } .)
    $               reduce using rule 33 (nrepeat -> elementary { , number } .)
    `               reduce using rule 33 (nrepeat -> elementary { , number } .)
    a               reduce using rule 33 (nrepeat -> elementary { , number } .)
    b               reduce using rule 33 (nrepeat -> elementary { , number } .)
    c               reduce using rule 33 (nrepeat -> elementary { , number } .)
    d               reduce using rule 33 (nrepeat -> elementary { , number } .)
    e               reduce using rule 33 (nrepeat -> elementary { , number } .)
    f               reduce using rule 33 (nrepeat -> elementary { , number } .)
    g               reduce using rule 33 (nrepeat -> elementary { , number } .)
    h               reduce using rule 33 (nrepeat -> elementary { , number } .)
    i               reduce using rule 33 (nrepeat -> elementary { , number } .)
    j               reduce using rule 33 (nrepeat -> elementary { , number } .)
    k               reduce using rule 33 (nrepeat -> elementary { , number } .)
    l               reduce using rule 33 (nrepeat -> elementary { , number } .)
    m               reduce using rule 33 (nrepeat -> elementary { , number } .)
    n               reduce using rule 33 (nrepeat -> elementary { , number } .)
    o               reduce using rule 33 (nrepeat -> elementary { , number } .)
    p               reduce using rule 33 (nrepeat -> elementary { , number } .)
    q               reduce using rule 33 (nrepeat -> elementary { , number } .)
    r               reduce using rule 33 (nrepeat -> elementary { , number } .)
    s               reduce using rule 33 (nrepeat -> elementary { , number } .)
    t               reduce using rule 33 (nrepeat -> elementary { , number } .)
    u               reduce using rule 33 (nrepeat -> elementary { , number } .)
    v               reduce using rule 33 (nrepeat -> elementary { , number } .)
    w               reduce using rule 33 (nrepeat -> elementary { , number } .)
    x               reduce using rule 33 (nrepeat -> elementary { , number } .)
    y               reduce using rule 33 (nrepeat -> elementary { , number } .)
    z               reduce using rule 33 (nrepeat -> elementary { , number } .)
    A               reduce using rule 33 (nrepeat -> elementary { , number } .)
    B               reduce using rule 33 (nrepeat -> elementary { , number } .)
    C               reduce using rule 33 (nrepeat -> elementary { , number } .)
    D               reduce using rule 33 (nrepeat -> elementary { , number } .)
    E               reduce using rule 33 (nrepeat -> elementary { , number } .)
    F               reduce using rule 33 (nrepeat -> elementary { , number } .)
    G               reduce using rule 33 (nrepeat -> elementary { , number } .)
    H               reduce using rule 33 (nrepeat -> elementary { , number } .)
    I               reduce using rule 33 (nrepeat -> elementary { , number } .)
    J               reduce using rule 33 (nrepeat -> elementary { , number } .)
    K               reduce using rule 33 (nrepeat -> elementary { , number } .)
    L               reduce using rule 33 (nrepeat -> elementary { , number } .)
    M               reduce using rule 33 (nrepeat -> elementary { , number } .)
    N               reduce using rule 33 (nrepeat -> elementary { , number } .)
    O               reduce using rule 33 (nrepeat -> elementary { , number } .)
    P               reduce using rule 33 (nrepeat -> elementary { , number } .)
    Q               reduce using rule 33 (nrepeat -> elementary { , number } .)
    R               reduce using rule 33 (nrepeat -> elementary { , number } .)
    S               reduce using rule 33 (nrepeat -> elementary { , number } .)
    T               reduce using rule 33 (nrepeat -> elementary { , number } .)
    U               reduce using rule 33 (nrepeat -> elementary { , number } .)
    V               reduce using rule 33 (nrepeat -> elementary { , number } .)
    W               reduce using rule 33 (nrepeat -> elementary { , number } .)
    X               reduce using rule 33 (nrepeat -> elementary { , number } .)
    Y               reduce using rule 33 (nrepeat -> elementary { , number } .)
    Z               reduce using rule 33 (nrepeat -> elementary { , number } .)
    |               reduce using rule 33 (nrepeat -> elementary { , number } .)
    $end            reduce using rule 33 (nrepeat -> elementary { , number } .)
    )               reduce using rule 33 (nrepeat -> elementary { , number } .)


state 193

    (34) nrepeat -> elementary { number , } .

    ?               reduce using rule 34 (nrepeat -> elementary { number , } .)
    (               reduce using rule 34 (nrepeat -> elementary { number , } .)
    ^               reduce using rule 34 (nrepeat -> elementary { number , } .)
    >               reduce using rule 34 (nrepeat -> elementary { number , } .)
    <               reduce using rule 34 (nrepeat -> elementary { number , } .)
    /               reduce using rule 34 (nrepeat -> elementary { number , } .)
    \               reduce using rule 34 (nrepeat -> elementary { number , } .)
    #               reduce using rule 34 (nrepeat -> elementary { number , } .)
    %               reduce using rule 34 (nrepeat -> elementary { number , } .)
    ESCAPED         reduce using rule 34 (nrepeat -> elementary { number , } .)
    DIGIT           reduce using rule 34 (nrepeat -> elementary { number , } .)
    OTHER           reduce using rule 34 (nrepeat -> elementary { number , } .)
    [               reduce using rule 34 (nrepeat -> elementary { number , } .)
    .               reduce using rule 34 (nrepeat -> elementary { number , } .)
    ,               reduce using rule 34 (nrepeat -> elementary { number , } .)
    :               reduce using rule 34 (nrepeat -> elementary { number , } .)
    ;               reduce using rule 34 (nrepeat -> elementary { number , } .)
    $               reduce using rule 34 (nrepeat -> elementary { number , } .)
    `               reduce using rule 34 (nrepeat -> elementary { number , } .)
    a               reduce using rule 34 (nrepeat -> elementary { number , } .)
    b               reduce using rule 34 (nrepeat -> elementary { number , } .)
    c               reduce using rule 34 (nrepeat -> elementary { number , } .)
    d               reduce using rule 34 (nrepeat -> elementary { number , } .)
    e               reduce using rule 34 (nrepeat -> elementary { number , } .)
    f               reduce using rule 34 (nrepeat -> elementary { number , } .)
    g               reduce using rule 34 (nrepeat -> elementary { number , } .)
    h               reduce using rule 34 (nrepeat -> elementary { number , } .)
    i               reduce using rule 34 (nrepeat -> elementary { number , } .)
    j               reduce using rule 34 (nrepeat -> elementary { number , } .)
    k               reduce using rule 34 (nrepeat -> elementary { number , } .)
    l               reduce using rule 34 (nrepeat -> elementary { number , } .)
    m               reduce using rule 34 (nrepeat -> elementary { number , } .)
    n               reduce using rule 34 (nrepeat -> elementary { number , } .)
    o               reduce using rule 34 (nrepeat -> elementary { number , } .)
    p               reduce using rule 34 (nrepeat -> elementary { number , } .)
    q               reduce using rule 34 (nrepeat -> elementary { number , } .)
    r               reduce using rule 34 (nrepeat -> elementary { number , } .)
    s               reduce using rule 34 (nrepeat -> elementary { number , } .)
    t               reduce using rule 34 (nrepeat -> elementary { number , } .)
    u               reduce using rule 34 (nrepeat -> elementary { number , } .)
    v               reduce using rule 34 (nrepeat -> elementary { number , } .)
    w               reduce using rule 34 (nrepeat -> elementary { number , } .)
    x               reduce using rule 34 (nrepeat -> elementary { number , } .)
    y               reduce using rule 34 (nrepeat -> elementary { number , } .)
    z               reduce using rule 34 (nrepeat -> elementary { number , } .)
    A               reduce using rule 34 (nrepeat -> elementary { number , } .)
    B               reduce using rule 34 (nrepeat -> elementary { number , } .)
    C               reduce using rule 34 (nrepeat -> elementary { number , } .)
    D               reduce using rule 34 (nrepeat -> elementary { number , } .)
    E               reduce using rule 34 (nrepeat -> elementary { number , } .)
    F               reduce using rule 34 (nrepeat -> elementary { number , } .)
    G               reduce using rule 34 (nrepeat -> elementary { number , } .)
    H               reduce using rule 34 (nrepeat -> elementary { number , } .)
    I               reduce using rule 34 (nrepeat -> elementary { number , } .)
    J               reduce using rule 34 (nrepeat -> elementary { number , } .)
    K               reduce using rule 34 (nrepeat -> elementary { number , } .)
    L               reduce using rule 34 (nrepeat -> elementary { number , } .)
    M               reduce using rule 34 (nrepeat -> elementary { number , } .)
    N               reduce using rule 34 (nrepeat -> elementary { number , } .)
    O               reduce using rule 34 (nrepeat -> elementary { number , } .)
    P               reduce using rule 34 (nrepeat -> elementary { number , } .)
    Q               reduce using rule 34 (nrepeat -> elementary { number , } .)
    R               reduce using rule 34 (nrepeat -> elementary { number , } .)
    S               reduce using rule 34 (nrepeat -> elementary { number , } .)
    T               reduce using rule 34 (nrepeat -> elementary { number , } .)
    U               reduce using rule 34 (nrepeat -> elementary { number , } .)
    V               reduce using rule 34 (nrepeat -> elementary { number , } .)
    W               reduce using rule 34 (nrepeat -> elementary { number , } .)
    X               reduce using rule 34 (nrepeat -> elementary { number , } .)
    Y               reduce using rule 34 (nrepeat -> elementary { number , } .)
    Z               reduce using rule 34 (nrepeat -> elementary { number , } .)
    |               reduce using rule 34 (nrepeat -> elementary { number , } .)
    $end            reduce using rule 34 (nrepeat -> elementary { number , } .)
    )               reduce using rule 34 (nrepeat -> elementary { number , } .)


state 194

    (35) nrepeat -> elementary { number , number . }

    }               shift and go to state 196


state 195

    (51) lengthcheck -> ( number ) . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) re -> . empty
    (5) alternation -> . re | simple
    (6) alternation -> . re | empty
    (7) simple -> . concatenation
    (8) simple -> . basic
    (4) empty -> .
    (9) concatenation -> . simple basic
    (10) basic -> . elementary
    (11) basic -> . quantifier
    (18) elementary -> . group
    (19) elementary -> . directional
    (20) elementary -> . command
    (21) elementary -> . literal
    (22) elementary -> . charclass
    (23) elementary -> . anychar
    (24) elementary -> . nodisplay
    (25) elementary -> . nomatch
    (26) elementary -> . nodispmatch
    (27) elementary -> . anchor
    (28) elementary -> . predefined
    (12) quantifier -> . basequantifier
    (13) quantifier -> . basequantifier ?
    (42) group -> . ( groupbody )
    (99) directional -> . ^ DIGIT
    (100) directional -> . ^ alpha
    (101) directional -> . ^ *
    (102) directional -> . ^ +
    (108) command -> . >
    (109) command -> . <
    (110) command -> . /
    (111) command -> . \
    (112) command -> . #
    (113) command -> . %
    (114) literal -> . ESCAPED
    (115) literal -> . alpha
    (116) literal -> . DIGIT
    (117) literal -> . OTHER
    (59) charclass -> . [ classitems ]
    (36) anychar -> . .
    (37) nodisplay -> . ,
    (38) nomatch -> . :
    (39) nodispmatch -> . ;
    (103) anchor -> . $ DIGIT
    (104) anchor -> . $ alpha
    (105) anchor -> . $ *
    (106) anchor -> . $ +
    (107) anchor -> . $ ^
    (98) predefined -> . ` alpha
    (14) basequantifier -> . asterisk
    (15) basequantifier -> . plus
    (16) basequantifier -> . optional
    (17) basequantifier -> . nrepeat
    (118) alpha -> . alpha_lower
    (119) alpha -> . alpha_upper
    (29) asterisk -> . elementary *
    (30) plus -> . elementary +
    (31) optional -> . elementary ?
    (32) nrepeat -> . elementary { number }
    (33) nrepeat -> . elementary { , number }
    (34) nrepeat -> . elementary { number , }
    (35) nrepeat -> . elementary { number , number }
    (120) alpha_lower -> . a
    (121) alpha_lower -> . b
    (122) alpha_lower -> . c
    (123) alpha_lower -> . d
    (124) alpha_lower -> . e
    (125) alpha_lower -> . f
    (126) alpha_lower -> . g
    (127) alpha_lower -> . h
    (128) alpha_lower -> . i
    (129) alpha_lower -> . j
    (130) alpha_lower -> . k
    (131) alpha_lower -> . l
    (132) alpha_lower -> . m
    (133) alpha_lower -> . n
    (134) alpha_lower -> . o
    (135) alpha_lower -> . p
    (136) alpha_lower -> . q
    (137) alpha_lower -> . r
    (138) alpha_lower -> . s
    (139) alpha_lower -> . t
    (140) alpha_lower -> . u
    (141) alpha_lower -> . v
    (142) alpha_lower -> . w
    (143) alpha_lower -> . x
    (144) alpha_lower -> . y
    (145) alpha_lower -> . z
    (146) alpha_upper -> . A
    (147) alpha_upper -> . B
    (148) alpha_upper -> . C
    (149) alpha_upper -> . D
    (150) alpha_upper -> . E
    (151) alpha_upper -> . F
    (152) alpha_upper -> . G
    (153) alpha_upper -> . H
    (154) alpha_upper -> . I
    (155) alpha_upper -> . J
    (156) alpha_upper -> . K
    (157) alpha_upper -> . L
    (158) alpha_upper -> . M
    (159) alpha_upper -> . N
    (160) alpha_upper -> . O
    (161) alpha_upper -> . P
    (162) alpha_upper -> . Q
    (163) alpha_upper -> . R
    (164) alpha_upper -> . S
    (165) alpha_upper -> . T
    (166) alpha_upper -> . U
    (167) alpha_upper -> . V
    (168) alpha_upper -> . W
    (169) alpha_upper -> . X
    (170) alpha_upper -> . Y
    (171) alpha_upper -> . Z

    |               reduce using rule 4 (empty -> .)
    )               reduce using rule 4 (empty -> .)
    (               shift and go to state 71
    ^               shift and go to state 6
    >               shift and go to state 33
    <               shift and go to state 89
    /               shift and go to state 20
    \               shift and go to state 25
    #               shift and go to state 62
    %               shift and go to state 19
    ESCAPED         shift and go to state 90
    DIGIT           shift and go to state 54
    OTHER           shift and go to state 38
    [               shift and go to state 72
    .               shift and go to state 2
    ,               shift and go to state 17
    :               shift and go to state 53
    ;               shift and go to state 58
    $               shift and go to state 51
    `               shift and go to state 18
    a               shift and go to state 70
    b               shift and go to state 10
    c               shift and go to state 86
    d               shift and go to state 87
    e               shift and go to state 61
    f               shift and go to state 43
    g               shift and go to state 94
    h               shift and go to state 82
    i               shift and go to state 30
    j               shift and go to state 28
    k               shift and go to state 46
    l               shift and go to state 41
    m               shift and go to state 1
    n               shift and go to state 32
    o               shift and go to state 63
    p               shift and go to state 96
    q               shift and go to state 65
    r               shift and go to state 73
    s               shift and go to state 60
    t               shift and go to state 12
    u               shift and go to state 5
    v               shift and go to state 44
    w               shift and go to state 68
    x               shift and go to state 77
    y               shift and go to state 81
    z               shift and go to state 11
    A               shift and go to state 56
    B               shift and go to state 8
    C               shift and go to state 40
    D               shift and go to state 76
    E               shift and go to state 23
    F               shift and go to state 67
    G               shift and go to state 13
    H               shift and go to state 85
    I               shift and go to state 24
    J               shift and go to state 57
    K               shift and go to state 52
    L               shift and go to state 92
    M               shift and go to state 50
    N               shift and go to state 88
    O               shift and go to state 31
    P               shift and go to state 39
    Q               shift and go to state 59
    R               shift and go to state 34
    S               shift and go to state 29
    T               shift and go to state 55
    U               shift and go to state 4
    V               shift and go to state 9
    W               shift and go to state 15
    X               shift and go to state 27
    Y               shift and go to state 83
    Z               shift and go to state 80

    concatenation                  shift and go to state 75
    alternation                    shift and go to state 26
    re                             shift and go to state 197
    plus                           shift and go to state 49
    elementary                     shift and go to state 79
    alpha_upper                    shift and go to state 35
    optional                       shift and go to state 84
    charclass                      shift and go to state 3
    group                          shift and go to state 7
    literal                        shift and go to state 74
    simple                         shift and go to state 36
    nrepeat                        shift and go to state 37
    directional                    shift and go to state 14
    nodisplay                      shift and go to state 64
    nodispmatch                    shift and go to state 66
    basic                          shift and go to state 16
    predefined                     shift and go to state 42
    alpha_lower                    shift and go to state 21
    asterisk                       shift and go to state 97
    empty                          shift and go to state 93
    alpha                          shift and go to state 69
    basequantifier                 shift and go to state 47
    command                        shift and go to state 22
    quantifier                     shift and go to state 95
    anchor                         shift and go to state 91
    anychar                        shift and go to state 45
    nomatch                        shift and go to state 48

state 196

    (35) nrepeat -> elementary { number , number } .

    ?               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    (               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    ^               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    >               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    <               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    /               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    \               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    #               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    %               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    ESCAPED         reduce using rule 35 (nrepeat -> elementary { number , number } .)
    DIGIT           reduce using rule 35 (nrepeat -> elementary { number , number } .)
    OTHER           reduce using rule 35 (nrepeat -> elementary { number , number } .)
    [               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    .               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    ,               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    :               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    ;               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    $               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    `               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    a               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    b               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    c               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    d               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    e               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    f               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    g               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    h               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    i               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    j               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    k               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    l               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    m               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    n               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    o               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    p               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    q               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    r               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    s               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    t               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    u               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    v               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    w               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    x               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    y               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    z               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    A               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    B               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    C               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    D               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    E               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    F               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    G               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    H               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    I               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    J               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    K               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    L               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    M               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    N               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    O               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    P               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    Q               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    R               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    S               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    T               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    U               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    V               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    W               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    X               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    Y               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    Z               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    |               reduce using rule 35 (nrepeat -> elementary { number , number } .)
    $end            reduce using rule 35 (nrepeat -> elementary { number , number } .)
    )               reduce using rule 35 (nrepeat -> elementary { number , number } .)


state 197

    (51) lengthcheck -> ( number ) re .
    (5) alternation -> re . | simple
    (6) alternation -> re . | empty

    )               reduce using rule 51 (lengthcheck -> ( number ) re .)
    |               shift and go to state 150

