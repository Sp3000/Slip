Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> re
Rule 1     re -> alternation
Rule 2     re -> simple
Rule 3     alternation -> re | simple
Rule 4     simple -> concatenation
Rule 5     simple -> basic
Rule 6     concatenation -> simple basic
Rule 7     basic -> elementary
Rule 8     basic -> quantifier
Rule 9     quantifier -> basequantifier
Rule 10    quantifier -> basequantifier ?
Rule 11    basequantifier -> asterisk
Rule 12    basequantifier -> plus
Rule 13    basequantifier -> optional
Rule 14    basequantifier -> nrepeat
Rule 15    elementary -> group
Rule 16    elementary -> directional
Rule 17    elementary -> command
Rule 18    elementary -> literal
Rule 19    elementary -> charclass
Rule 20    elementary -> anychar
Rule 21    elementary -> nodisplay
Rule 22    elementary -> nomatch
Rule 23    elementary -> nodispmatch
Rule 24    elementary -> anchor
Rule 25    elementary -> predefined
Rule 26    asterisk -> elementary *
Rule 27    plus -> elementary +
Rule 28    optional -> elementary ?
Rule 29    nrepeat -> elementary { number }
Rule 30    nrepeat -> elementary { , number }
Rule 31    nrepeat -> elementary { number , }
Rule 32    nrepeat -> elementary { number , number }
Rule 33    anychar -> .
Rule 34    nodisplay -> ,
Rule 35    nomatch -> :
Rule 36    nodispmatch -> ;
Rule 37    number -> DIGIT
Rule 38    number -> DIGIT number
Rule 39    group -> ( groupbody )
Rule 40    groupbody -> ? specialgroup
Rule 41    groupbody -> basicgroup
Rule 42    specialgroup -> _ lengthcheck
Rule 43    specialgroup -> | stationarygroup
Rule 44    specialgroup -> : nomatchgroup
Rule 45    specialgroup -> , nodispgroup
Rule 46    specialgroup -> ; nodispmatchgroup
Rule 47    specialgroup -> recursive
Rule 48    lengthcheck -> ( number ) re
Rule 49    stationarygroup -> re
Rule 50    nomatchgroup -> re
Rule 51    nodispgroup -> re
Rule 52    nodispmatchgroup -> re
Rule 53    recursive -> R
Rule 54    basicgroup -> re
Rule 55    charclass -> [ classitems ]
Rule 56    classitems -> ^ baseitems
Rule 57    classitems -> classitems2
Rule 58    classitems2 -> baseitems
Rule 59    classitems2 -> baseitems | baseitems
Rule 60    baseitems -> classatom
Rule 61    baseitems -> classatom baseitems
Rule 62    classatom -> classliteral
Rule 63    classatom -> classrange
Rule 64    classliteral -> !
Rule 65    classliteral -> "
Rule 66    classliteral -> #
Rule 67    classliteral -> $
Rule 68    classliteral -> %
Rule 69    classliteral -> &
Rule 70    classliteral -> '
Rule 71    classliteral -> (
Rule 72    classliteral -> )
Rule 73    classliteral -> *
Rule 74    classliteral -> +
Rule 75    classliteral -> ,
Rule 76    classliteral -> .
Rule 77    classliteral -> /
Rule 78    classliteral -> :
Rule 79    classliteral -> ;
Rule 80    classliteral -> <
Rule 81    classliteral -> =
Rule 82    classliteral -> >
Rule 83    classliteral -> ?
Rule 84    classliteral -> @
Rule 85    classliteral -> [
Rule 86    classliteral -> \
Rule 87    classliteral -> _
Rule 88    classliteral -> `
Rule 89    classliteral -> {
Rule 90    classliteral -> }
Rule 91    classliteral -> ~
Rule 92    classliteral -> literal
Rule 93    classrange -> classliteral - classliteral
Rule 94    predefined -> ` alpha
Rule 95    directional -> ^ DIGIT
Rule 96    directional -> ^ alpha
Rule 97    directional -> ^ *
Rule 98    directional -> ^ +
Rule 99    anchor -> $ DIGIT
Rule 100   anchor -> $ alpha
Rule 101   anchor -> $ *
Rule 102   anchor -> $ +
Rule 103   anchor -> $ ^
Rule 104   command -> >
Rule 105   command -> <
Rule 106   command -> /
Rule 107   command -> \
Rule 108   command -> #
Rule 109   command -> %
Rule 110   literal -> ESCAPED
Rule 111   literal -> alpha
Rule 112   literal -> DIGIT
Rule 113   literal -> OTHER
Rule 114   alpha -> alpha_lower
Rule 115   alpha -> alpha_upper
Rule 116   alpha_lower -> a
Rule 117   alpha_lower -> b
Rule 118   alpha_lower -> c
Rule 119   alpha_lower -> d
Rule 120   alpha_lower -> e
Rule 121   alpha_lower -> f
Rule 122   alpha_lower -> g
Rule 123   alpha_lower -> h
Rule 124   alpha_lower -> i
Rule 125   alpha_lower -> j
Rule 126   alpha_lower -> k
Rule 127   alpha_lower -> l
Rule 128   alpha_lower -> m
Rule 129   alpha_lower -> n
Rule 130   alpha_lower -> o
Rule 131   alpha_lower -> p
Rule 132   alpha_lower -> q
Rule 133   alpha_lower -> r
Rule 134   alpha_lower -> s
Rule 135   alpha_lower -> t
Rule 136   alpha_lower -> u
Rule 137   alpha_lower -> v
Rule 138   alpha_lower -> w
Rule 139   alpha_lower -> x
Rule 140   alpha_lower -> y
Rule 141   alpha_lower -> z
Rule 142   alpha_upper -> A
Rule 143   alpha_upper -> B
Rule 144   alpha_upper -> C
Rule 145   alpha_upper -> D
Rule 146   alpha_upper -> E
Rule 147   alpha_upper -> F
Rule 148   alpha_upper -> G
Rule 149   alpha_upper -> H
Rule 150   alpha_upper -> I
Rule 151   alpha_upper -> J
Rule 152   alpha_upper -> K
Rule 153   alpha_upper -> L
Rule 154   alpha_upper -> M
Rule 155   alpha_upper -> N
Rule 156   alpha_upper -> O
Rule 157   alpha_upper -> P
Rule 158   alpha_upper -> Q
Rule 159   alpha_upper -> R
Rule 160   alpha_upper -> S
Rule 161   alpha_upper -> T
Rule 162   alpha_upper -> U
Rule 163   alpha_upper -> V
Rule 164   alpha_upper -> W
Rule 165   alpha_upper -> X
Rule 166   alpha_upper -> Y
Rule 167   alpha_upper -> Z

Terminals, with rules where they appear

!                    : 64
"                    : 65
#                    : 66 108
$                    : 67 99 100 101 102 103
%                    : 68 109
&                    : 69
'                    : 70
(                    : 39 48 71
)                    : 39 48 72
*                    : 26 73 97 101
+                    : 27 74 98 102
,                    : 30 31 32 34 45 75
-                    : 93
.                    : 33 76
/                    : 77 106
:                    : 35 44 78
;                    : 36 46 79
<                    : 80 105
=                    : 81
>                    : 82 104
?                    : 10 28 40 83
@                    : 84
A                    : 142
B                    : 143
C                    : 144
D                    : 145
DIGIT                : 37 38 95 99 112
E                    : 146
ESCAPED              : 110
F                    : 147
G                    : 148
H                    : 149
I                    : 150
J                    : 151
K                    : 152
L                    : 153
M                    : 154
N                    : 155
O                    : 156
OTHER                : 113
P                    : 157
Q                    : 158
R                    : 53 159
S                    : 160
T                    : 161
U                    : 162
V                    : 163
W                    : 164
X                    : 165
Y                    : 166
Z                    : 167
[                    : 55 85
\                    : 86 107
]                    : 55
^                    : 56 95 96 97 98 103
_                    : 42 87
`                    : 88 94
a                    : 116
b                    : 117
c                    : 118
d                    : 119
e                    : 120
error                : 
f                    : 121
g                    : 122
h                    : 123
i                    : 124
j                    : 125
k                    : 126
l                    : 127
m                    : 128
n                    : 129
o                    : 130
p                    : 131
q                    : 132
r                    : 133
s                    : 134
t                    : 135
u                    : 136
v                    : 137
w                    : 138
x                    : 139
y                    : 140
z                    : 141
{                    : 29 30 31 32 89
|                    : 3 43 59
}                    : 29 30 31 32 90
~                    : 91

Nonterminals, with rules where they appear

alpha                : 94 96 100 111
alpha_lower          : 114
alpha_upper          : 115
alternation          : 1
anchor               : 24
anychar              : 20
asterisk             : 11
baseitems            : 56 58 59 59 61
basequantifier       : 9 10
basic                : 5 6
basicgroup           : 41
charclass            : 19
classatom            : 60 61
classitems           : 55
classitems2          : 57
classliteral         : 62 93 93
classrange           : 63
command              : 17
concatenation        : 4
directional          : 16
elementary           : 7 26 27 28 29 30 31 32
group                : 15
groupbody            : 39
lengthcheck          : 42
literal              : 18 92
nodispgroup          : 45
nodisplay            : 21
nodispmatch          : 23
nodispmatchgroup     : 46
nomatch              : 22
nomatchgroup         : 44
nrepeat              : 14
number               : 29 30 31 32 32 38 48
optional             : 13
plus                 : 12
predefined           : 25
quantifier           : 8
re                   : 3 48 49 50 51 52 54 0
recursive            : 47
simple               : 2 3 6
specialgroup         : 40
stationarygroup      : 43

Parsing method: LALR

state 0

    (0) S' -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alternation                    shift and go to state 12
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alpha                          shift and go to state 86
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 96
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 1

    (108) command -> # .

    *               reduce using rule 108 (command -> # .)
    +               reduce using rule 108 (command -> # .)
    ?               reduce using rule 108 (command -> # .)
    {               reduce using rule 108 (command -> # .)
    (               reduce using rule 108 (command -> # .)
    ^               reduce using rule 108 (command -> # .)
    >               reduce using rule 108 (command -> # .)
    <               reduce using rule 108 (command -> # .)
    /               reduce using rule 108 (command -> # .)
    \               reduce using rule 108 (command -> # .)
    #               reduce using rule 108 (command -> # .)
    %               reduce using rule 108 (command -> # .)
    ESCAPED         reduce using rule 108 (command -> # .)
    DIGIT           reduce using rule 108 (command -> # .)
    OTHER           reduce using rule 108 (command -> # .)
    [               reduce using rule 108 (command -> # .)
    .               reduce using rule 108 (command -> # .)
    ,               reduce using rule 108 (command -> # .)
    :               reduce using rule 108 (command -> # .)
    ;               reduce using rule 108 (command -> # .)
    $               reduce using rule 108 (command -> # .)
    `               reduce using rule 108 (command -> # .)
    a               reduce using rule 108 (command -> # .)
    b               reduce using rule 108 (command -> # .)
    c               reduce using rule 108 (command -> # .)
    d               reduce using rule 108 (command -> # .)
    e               reduce using rule 108 (command -> # .)
    f               reduce using rule 108 (command -> # .)
    g               reduce using rule 108 (command -> # .)
    h               reduce using rule 108 (command -> # .)
    i               reduce using rule 108 (command -> # .)
    j               reduce using rule 108 (command -> # .)
    k               reduce using rule 108 (command -> # .)
    l               reduce using rule 108 (command -> # .)
    m               reduce using rule 108 (command -> # .)
    n               reduce using rule 108 (command -> # .)
    o               reduce using rule 108 (command -> # .)
    p               reduce using rule 108 (command -> # .)
    q               reduce using rule 108 (command -> # .)
    r               reduce using rule 108 (command -> # .)
    s               reduce using rule 108 (command -> # .)
    t               reduce using rule 108 (command -> # .)
    u               reduce using rule 108 (command -> # .)
    v               reduce using rule 108 (command -> # .)
    w               reduce using rule 108 (command -> # .)
    x               reduce using rule 108 (command -> # .)
    y               reduce using rule 108 (command -> # .)
    z               reduce using rule 108 (command -> # .)
    A               reduce using rule 108 (command -> # .)
    B               reduce using rule 108 (command -> # .)
    C               reduce using rule 108 (command -> # .)
    D               reduce using rule 108 (command -> # .)
    E               reduce using rule 108 (command -> # .)
    F               reduce using rule 108 (command -> # .)
    G               reduce using rule 108 (command -> # .)
    H               reduce using rule 108 (command -> # .)
    I               reduce using rule 108 (command -> # .)
    J               reduce using rule 108 (command -> # .)
    K               reduce using rule 108 (command -> # .)
    L               reduce using rule 108 (command -> # .)
    M               reduce using rule 108 (command -> # .)
    N               reduce using rule 108 (command -> # .)
    O               reduce using rule 108 (command -> # .)
    P               reduce using rule 108 (command -> # .)
    Q               reduce using rule 108 (command -> # .)
    R               reduce using rule 108 (command -> # .)
    S               reduce using rule 108 (command -> # .)
    T               reduce using rule 108 (command -> # .)
    U               reduce using rule 108 (command -> # .)
    V               reduce using rule 108 (command -> # .)
    W               reduce using rule 108 (command -> # .)
    X               reduce using rule 108 (command -> # .)
    Y               reduce using rule 108 (command -> # .)
    Z               reduce using rule 108 (command -> # .)
    |               reduce using rule 108 (command -> # .)
    $end            reduce using rule 108 (command -> # .)
    )               reduce using rule 108 (command -> # .)


state 2

    (122) alpha_lower -> g .

    !               reduce using rule 122 (alpha_lower -> g .)
    "               reduce using rule 122 (alpha_lower -> g .)
    #               reduce using rule 122 (alpha_lower -> g .)
    $               reduce using rule 122 (alpha_lower -> g .)
    %               reduce using rule 122 (alpha_lower -> g .)
    &               reduce using rule 122 (alpha_lower -> g .)
    '               reduce using rule 122 (alpha_lower -> g .)
    (               reduce using rule 122 (alpha_lower -> g .)
    )               reduce using rule 122 (alpha_lower -> g .)
    *               reduce using rule 122 (alpha_lower -> g .)
    +               reduce using rule 122 (alpha_lower -> g .)
    ,               reduce using rule 122 (alpha_lower -> g .)
    .               reduce using rule 122 (alpha_lower -> g .)
    /               reduce using rule 122 (alpha_lower -> g .)
    :               reduce using rule 122 (alpha_lower -> g .)
    ;               reduce using rule 122 (alpha_lower -> g .)
    <               reduce using rule 122 (alpha_lower -> g .)
    =               reduce using rule 122 (alpha_lower -> g .)
    >               reduce using rule 122 (alpha_lower -> g .)
    ?               reduce using rule 122 (alpha_lower -> g .)
    @               reduce using rule 122 (alpha_lower -> g .)
    [               reduce using rule 122 (alpha_lower -> g .)
    \               reduce using rule 122 (alpha_lower -> g .)
    _               reduce using rule 122 (alpha_lower -> g .)
    `               reduce using rule 122 (alpha_lower -> g .)
    {               reduce using rule 122 (alpha_lower -> g .)
    }               reduce using rule 122 (alpha_lower -> g .)
    ~               reduce using rule 122 (alpha_lower -> g .)
    ESCAPED         reduce using rule 122 (alpha_lower -> g .)
    DIGIT           reduce using rule 122 (alpha_lower -> g .)
    OTHER           reduce using rule 122 (alpha_lower -> g .)
    a               reduce using rule 122 (alpha_lower -> g .)
    b               reduce using rule 122 (alpha_lower -> g .)
    c               reduce using rule 122 (alpha_lower -> g .)
    d               reduce using rule 122 (alpha_lower -> g .)
    e               reduce using rule 122 (alpha_lower -> g .)
    f               reduce using rule 122 (alpha_lower -> g .)
    g               reduce using rule 122 (alpha_lower -> g .)
    h               reduce using rule 122 (alpha_lower -> g .)
    i               reduce using rule 122 (alpha_lower -> g .)
    j               reduce using rule 122 (alpha_lower -> g .)
    k               reduce using rule 122 (alpha_lower -> g .)
    l               reduce using rule 122 (alpha_lower -> g .)
    m               reduce using rule 122 (alpha_lower -> g .)
    n               reduce using rule 122 (alpha_lower -> g .)
    o               reduce using rule 122 (alpha_lower -> g .)
    p               reduce using rule 122 (alpha_lower -> g .)
    q               reduce using rule 122 (alpha_lower -> g .)
    r               reduce using rule 122 (alpha_lower -> g .)
    s               reduce using rule 122 (alpha_lower -> g .)
    t               reduce using rule 122 (alpha_lower -> g .)
    u               reduce using rule 122 (alpha_lower -> g .)
    v               reduce using rule 122 (alpha_lower -> g .)
    w               reduce using rule 122 (alpha_lower -> g .)
    x               reduce using rule 122 (alpha_lower -> g .)
    y               reduce using rule 122 (alpha_lower -> g .)
    z               reduce using rule 122 (alpha_lower -> g .)
    A               reduce using rule 122 (alpha_lower -> g .)
    B               reduce using rule 122 (alpha_lower -> g .)
    C               reduce using rule 122 (alpha_lower -> g .)
    D               reduce using rule 122 (alpha_lower -> g .)
    E               reduce using rule 122 (alpha_lower -> g .)
    F               reduce using rule 122 (alpha_lower -> g .)
    G               reduce using rule 122 (alpha_lower -> g .)
    H               reduce using rule 122 (alpha_lower -> g .)
    I               reduce using rule 122 (alpha_lower -> g .)
    J               reduce using rule 122 (alpha_lower -> g .)
    K               reduce using rule 122 (alpha_lower -> g .)
    L               reduce using rule 122 (alpha_lower -> g .)
    M               reduce using rule 122 (alpha_lower -> g .)
    N               reduce using rule 122 (alpha_lower -> g .)
    O               reduce using rule 122 (alpha_lower -> g .)
    P               reduce using rule 122 (alpha_lower -> g .)
    Q               reduce using rule 122 (alpha_lower -> g .)
    R               reduce using rule 122 (alpha_lower -> g .)
    S               reduce using rule 122 (alpha_lower -> g .)
    T               reduce using rule 122 (alpha_lower -> g .)
    U               reduce using rule 122 (alpha_lower -> g .)
    V               reduce using rule 122 (alpha_lower -> g .)
    W               reduce using rule 122 (alpha_lower -> g .)
    X               reduce using rule 122 (alpha_lower -> g .)
    Y               reduce using rule 122 (alpha_lower -> g .)
    Z               reduce using rule 122 (alpha_lower -> g .)
    |               reduce using rule 122 (alpha_lower -> g .)
    ]               reduce using rule 122 (alpha_lower -> g .)
    -               reduce using rule 122 (alpha_lower -> g .)
    ^               reduce using rule 122 (alpha_lower -> g .)
    $end            reduce using rule 122 (alpha_lower -> g .)


state 3

    (2) re -> simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    |               reduce using rule 2 (re -> simple .)
    )               reduce using rule 2 (re -> simple .)
    $end            reduce using rule 2 (re -> simple .)
    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 97
    nodisplay                      shift and go to state 59
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    alpha                          shift and go to state 86
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    asterisk                       shift and go to state 87
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 4

    (16) elementary -> directional .

    *               reduce using rule 16 (elementary -> directional .)
    +               reduce using rule 16 (elementary -> directional .)
    ?               reduce using rule 16 (elementary -> directional .)
    {               reduce using rule 16 (elementary -> directional .)
    (               reduce using rule 16 (elementary -> directional .)
    ^               reduce using rule 16 (elementary -> directional .)
    >               reduce using rule 16 (elementary -> directional .)
    <               reduce using rule 16 (elementary -> directional .)
    /               reduce using rule 16 (elementary -> directional .)
    \               reduce using rule 16 (elementary -> directional .)
    #               reduce using rule 16 (elementary -> directional .)
    %               reduce using rule 16 (elementary -> directional .)
    ESCAPED         reduce using rule 16 (elementary -> directional .)
    DIGIT           reduce using rule 16 (elementary -> directional .)
    OTHER           reduce using rule 16 (elementary -> directional .)
    [               reduce using rule 16 (elementary -> directional .)
    .               reduce using rule 16 (elementary -> directional .)
    ,               reduce using rule 16 (elementary -> directional .)
    :               reduce using rule 16 (elementary -> directional .)
    ;               reduce using rule 16 (elementary -> directional .)
    $               reduce using rule 16 (elementary -> directional .)
    `               reduce using rule 16 (elementary -> directional .)
    a               reduce using rule 16 (elementary -> directional .)
    b               reduce using rule 16 (elementary -> directional .)
    c               reduce using rule 16 (elementary -> directional .)
    d               reduce using rule 16 (elementary -> directional .)
    e               reduce using rule 16 (elementary -> directional .)
    f               reduce using rule 16 (elementary -> directional .)
    g               reduce using rule 16 (elementary -> directional .)
    h               reduce using rule 16 (elementary -> directional .)
    i               reduce using rule 16 (elementary -> directional .)
    j               reduce using rule 16 (elementary -> directional .)
    k               reduce using rule 16 (elementary -> directional .)
    l               reduce using rule 16 (elementary -> directional .)
    m               reduce using rule 16 (elementary -> directional .)
    n               reduce using rule 16 (elementary -> directional .)
    o               reduce using rule 16 (elementary -> directional .)
    p               reduce using rule 16 (elementary -> directional .)
    q               reduce using rule 16 (elementary -> directional .)
    r               reduce using rule 16 (elementary -> directional .)
    s               reduce using rule 16 (elementary -> directional .)
    t               reduce using rule 16 (elementary -> directional .)
    u               reduce using rule 16 (elementary -> directional .)
    v               reduce using rule 16 (elementary -> directional .)
    w               reduce using rule 16 (elementary -> directional .)
    x               reduce using rule 16 (elementary -> directional .)
    y               reduce using rule 16 (elementary -> directional .)
    z               reduce using rule 16 (elementary -> directional .)
    A               reduce using rule 16 (elementary -> directional .)
    B               reduce using rule 16 (elementary -> directional .)
    C               reduce using rule 16 (elementary -> directional .)
    D               reduce using rule 16 (elementary -> directional .)
    E               reduce using rule 16 (elementary -> directional .)
    F               reduce using rule 16 (elementary -> directional .)
    G               reduce using rule 16 (elementary -> directional .)
    H               reduce using rule 16 (elementary -> directional .)
    I               reduce using rule 16 (elementary -> directional .)
    J               reduce using rule 16 (elementary -> directional .)
    K               reduce using rule 16 (elementary -> directional .)
    L               reduce using rule 16 (elementary -> directional .)
    M               reduce using rule 16 (elementary -> directional .)
    N               reduce using rule 16 (elementary -> directional .)
    O               reduce using rule 16 (elementary -> directional .)
    P               reduce using rule 16 (elementary -> directional .)
    Q               reduce using rule 16 (elementary -> directional .)
    R               reduce using rule 16 (elementary -> directional .)
    S               reduce using rule 16 (elementary -> directional .)
    T               reduce using rule 16 (elementary -> directional .)
    U               reduce using rule 16 (elementary -> directional .)
    V               reduce using rule 16 (elementary -> directional .)
    W               reduce using rule 16 (elementary -> directional .)
    X               reduce using rule 16 (elementary -> directional .)
    Y               reduce using rule 16 (elementary -> directional .)
    Z               reduce using rule 16 (elementary -> directional .)
    |               reduce using rule 16 (elementary -> directional .)
    $end            reduce using rule 16 (elementary -> directional .)
    )               reduce using rule 16 (elementary -> directional .)


state 5

    (120) alpha_lower -> e .

    !               reduce using rule 120 (alpha_lower -> e .)
    "               reduce using rule 120 (alpha_lower -> e .)
    #               reduce using rule 120 (alpha_lower -> e .)
    $               reduce using rule 120 (alpha_lower -> e .)
    %               reduce using rule 120 (alpha_lower -> e .)
    &               reduce using rule 120 (alpha_lower -> e .)
    '               reduce using rule 120 (alpha_lower -> e .)
    (               reduce using rule 120 (alpha_lower -> e .)
    )               reduce using rule 120 (alpha_lower -> e .)
    *               reduce using rule 120 (alpha_lower -> e .)
    +               reduce using rule 120 (alpha_lower -> e .)
    ,               reduce using rule 120 (alpha_lower -> e .)
    .               reduce using rule 120 (alpha_lower -> e .)
    /               reduce using rule 120 (alpha_lower -> e .)
    :               reduce using rule 120 (alpha_lower -> e .)
    ;               reduce using rule 120 (alpha_lower -> e .)
    <               reduce using rule 120 (alpha_lower -> e .)
    =               reduce using rule 120 (alpha_lower -> e .)
    >               reduce using rule 120 (alpha_lower -> e .)
    ?               reduce using rule 120 (alpha_lower -> e .)
    @               reduce using rule 120 (alpha_lower -> e .)
    [               reduce using rule 120 (alpha_lower -> e .)
    \               reduce using rule 120 (alpha_lower -> e .)
    _               reduce using rule 120 (alpha_lower -> e .)
    `               reduce using rule 120 (alpha_lower -> e .)
    {               reduce using rule 120 (alpha_lower -> e .)
    }               reduce using rule 120 (alpha_lower -> e .)
    ~               reduce using rule 120 (alpha_lower -> e .)
    ESCAPED         reduce using rule 120 (alpha_lower -> e .)
    DIGIT           reduce using rule 120 (alpha_lower -> e .)
    OTHER           reduce using rule 120 (alpha_lower -> e .)
    a               reduce using rule 120 (alpha_lower -> e .)
    b               reduce using rule 120 (alpha_lower -> e .)
    c               reduce using rule 120 (alpha_lower -> e .)
    d               reduce using rule 120 (alpha_lower -> e .)
    e               reduce using rule 120 (alpha_lower -> e .)
    f               reduce using rule 120 (alpha_lower -> e .)
    g               reduce using rule 120 (alpha_lower -> e .)
    h               reduce using rule 120 (alpha_lower -> e .)
    i               reduce using rule 120 (alpha_lower -> e .)
    j               reduce using rule 120 (alpha_lower -> e .)
    k               reduce using rule 120 (alpha_lower -> e .)
    l               reduce using rule 120 (alpha_lower -> e .)
    m               reduce using rule 120 (alpha_lower -> e .)
    n               reduce using rule 120 (alpha_lower -> e .)
    o               reduce using rule 120 (alpha_lower -> e .)
    p               reduce using rule 120 (alpha_lower -> e .)
    q               reduce using rule 120 (alpha_lower -> e .)
    r               reduce using rule 120 (alpha_lower -> e .)
    s               reduce using rule 120 (alpha_lower -> e .)
    t               reduce using rule 120 (alpha_lower -> e .)
    u               reduce using rule 120 (alpha_lower -> e .)
    v               reduce using rule 120 (alpha_lower -> e .)
    w               reduce using rule 120 (alpha_lower -> e .)
    x               reduce using rule 120 (alpha_lower -> e .)
    y               reduce using rule 120 (alpha_lower -> e .)
    z               reduce using rule 120 (alpha_lower -> e .)
    A               reduce using rule 120 (alpha_lower -> e .)
    B               reduce using rule 120 (alpha_lower -> e .)
    C               reduce using rule 120 (alpha_lower -> e .)
    D               reduce using rule 120 (alpha_lower -> e .)
    E               reduce using rule 120 (alpha_lower -> e .)
    F               reduce using rule 120 (alpha_lower -> e .)
    G               reduce using rule 120 (alpha_lower -> e .)
    H               reduce using rule 120 (alpha_lower -> e .)
    I               reduce using rule 120 (alpha_lower -> e .)
    J               reduce using rule 120 (alpha_lower -> e .)
    K               reduce using rule 120 (alpha_lower -> e .)
    L               reduce using rule 120 (alpha_lower -> e .)
    M               reduce using rule 120 (alpha_lower -> e .)
    N               reduce using rule 120 (alpha_lower -> e .)
    O               reduce using rule 120 (alpha_lower -> e .)
    P               reduce using rule 120 (alpha_lower -> e .)
    Q               reduce using rule 120 (alpha_lower -> e .)
    R               reduce using rule 120 (alpha_lower -> e .)
    S               reduce using rule 120 (alpha_lower -> e .)
    T               reduce using rule 120 (alpha_lower -> e .)
    U               reduce using rule 120 (alpha_lower -> e .)
    V               reduce using rule 120 (alpha_lower -> e .)
    W               reduce using rule 120 (alpha_lower -> e .)
    X               reduce using rule 120 (alpha_lower -> e .)
    Y               reduce using rule 120 (alpha_lower -> e .)
    Z               reduce using rule 120 (alpha_lower -> e .)
    |               reduce using rule 120 (alpha_lower -> e .)
    ]               reduce using rule 120 (alpha_lower -> e .)
    -               reduce using rule 120 (alpha_lower -> e .)
    ^               reduce using rule 120 (alpha_lower -> e .)
    $end            reduce using rule 120 (alpha_lower -> e .)


state 6

    (94) predefined -> ` . alpha
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 98
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88

state 7

    (115) alpha -> alpha_upper .

    *               reduce using rule 115 (alpha -> alpha_upper .)
    +               reduce using rule 115 (alpha -> alpha_upper .)
    ?               reduce using rule 115 (alpha -> alpha_upper .)
    {               reduce using rule 115 (alpha -> alpha_upper .)
    (               reduce using rule 115 (alpha -> alpha_upper .)
    ^               reduce using rule 115 (alpha -> alpha_upper .)
    >               reduce using rule 115 (alpha -> alpha_upper .)
    <               reduce using rule 115 (alpha -> alpha_upper .)
    /               reduce using rule 115 (alpha -> alpha_upper .)
    \               reduce using rule 115 (alpha -> alpha_upper .)
    #               reduce using rule 115 (alpha -> alpha_upper .)
    %               reduce using rule 115 (alpha -> alpha_upper .)
    ESCAPED         reduce using rule 115 (alpha -> alpha_upper .)
    DIGIT           reduce using rule 115 (alpha -> alpha_upper .)
    OTHER           reduce using rule 115 (alpha -> alpha_upper .)
    [               reduce using rule 115 (alpha -> alpha_upper .)
    .               reduce using rule 115 (alpha -> alpha_upper .)
    ,               reduce using rule 115 (alpha -> alpha_upper .)
    :               reduce using rule 115 (alpha -> alpha_upper .)
    ;               reduce using rule 115 (alpha -> alpha_upper .)
    $               reduce using rule 115 (alpha -> alpha_upper .)
    `               reduce using rule 115 (alpha -> alpha_upper .)
    a               reduce using rule 115 (alpha -> alpha_upper .)
    b               reduce using rule 115 (alpha -> alpha_upper .)
    c               reduce using rule 115 (alpha -> alpha_upper .)
    d               reduce using rule 115 (alpha -> alpha_upper .)
    e               reduce using rule 115 (alpha -> alpha_upper .)
    f               reduce using rule 115 (alpha -> alpha_upper .)
    g               reduce using rule 115 (alpha -> alpha_upper .)
    h               reduce using rule 115 (alpha -> alpha_upper .)
    i               reduce using rule 115 (alpha -> alpha_upper .)
    j               reduce using rule 115 (alpha -> alpha_upper .)
    k               reduce using rule 115 (alpha -> alpha_upper .)
    l               reduce using rule 115 (alpha -> alpha_upper .)
    m               reduce using rule 115 (alpha -> alpha_upper .)
    n               reduce using rule 115 (alpha -> alpha_upper .)
    o               reduce using rule 115 (alpha -> alpha_upper .)
    p               reduce using rule 115 (alpha -> alpha_upper .)
    q               reduce using rule 115 (alpha -> alpha_upper .)
    r               reduce using rule 115 (alpha -> alpha_upper .)
    s               reduce using rule 115 (alpha -> alpha_upper .)
    t               reduce using rule 115 (alpha -> alpha_upper .)
    u               reduce using rule 115 (alpha -> alpha_upper .)
    v               reduce using rule 115 (alpha -> alpha_upper .)
    w               reduce using rule 115 (alpha -> alpha_upper .)
    x               reduce using rule 115 (alpha -> alpha_upper .)
    y               reduce using rule 115 (alpha -> alpha_upper .)
    z               reduce using rule 115 (alpha -> alpha_upper .)
    A               reduce using rule 115 (alpha -> alpha_upper .)
    B               reduce using rule 115 (alpha -> alpha_upper .)
    C               reduce using rule 115 (alpha -> alpha_upper .)
    D               reduce using rule 115 (alpha -> alpha_upper .)
    E               reduce using rule 115 (alpha -> alpha_upper .)
    F               reduce using rule 115 (alpha -> alpha_upper .)
    G               reduce using rule 115 (alpha -> alpha_upper .)
    H               reduce using rule 115 (alpha -> alpha_upper .)
    I               reduce using rule 115 (alpha -> alpha_upper .)
    J               reduce using rule 115 (alpha -> alpha_upper .)
    K               reduce using rule 115 (alpha -> alpha_upper .)
    L               reduce using rule 115 (alpha -> alpha_upper .)
    M               reduce using rule 115 (alpha -> alpha_upper .)
    N               reduce using rule 115 (alpha -> alpha_upper .)
    O               reduce using rule 115 (alpha -> alpha_upper .)
    P               reduce using rule 115 (alpha -> alpha_upper .)
    Q               reduce using rule 115 (alpha -> alpha_upper .)
    R               reduce using rule 115 (alpha -> alpha_upper .)
    S               reduce using rule 115 (alpha -> alpha_upper .)
    T               reduce using rule 115 (alpha -> alpha_upper .)
    U               reduce using rule 115 (alpha -> alpha_upper .)
    V               reduce using rule 115 (alpha -> alpha_upper .)
    W               reduce using rule 115 (alpha -> alpha_upper .)
    X               reduce using rule 115 (alpha -> alpha_upper .)
    Y               reduce using rule 115 (alpha -> alpha_upper .)
    Z               reduce using rule 115 (alpha -> alpha_upper .)
    |               reduce using rule 115 (alpha -> alpha_upper .)
    $end            reduce using rule 115 (alpha -> alpha_upper .)
    )               reduce using rule 115 (alpha -> alpha_upper .)
    -               reduce using rule 115 (alpha -> alpha_upper .)
    !               reduce using rule 115 (alpha -> alpha_upper .)
    "               reduce using rule 115 (alpha -> alpha_upper .)
    &               reduce using rule 115 (alpha -> alpha_upper .)
    '               reduce using rule 115 (alpha -> alpha_upper .)
    =               reduce using rule 115 (alpha -> alpha_upper .)
    @               reduce using rule 115 (alpha -> alpha_upper .)
    _               reduce using rule 115 (alpha -> alpha_upper .)
    }               reduce using rule 115 (alpha -> alpha_upper .)
    ~               reduce using rule 115 (alpha -> alpha_upper .)
    ]               reduce using rule 115 (alpha -> alpha_upper .)


state 8

    (19) elementary -> charclass .

    *               reduce using rule 19 (elementary -> charclass .)
    +               reduce using rule 19 (elementary -> charclass .)
    ?               reduce using rule 19 (elementary -> charclass .)
    {               reduce using rule 19 (elementary -> charclass .)
    (               reduce using rule 19 (elementary -> charclass .)
    ^               reduce using rule 19 (elementary -> charclass .)
    >               reduce using rule 19 (elementary -> charclass .)
    <               reduce using rule 19 (elementary -> charclass .)
    /               reduce using rule 19 (elementary -> charclass .)
    \               reduce using rule 19 (elementary -> charclass .)
    #               reduce using rule 19 (elementary -> charclass .)
    %               reduce using rule 19 (elementary -> charclass .)
    ESCAPED         reduce using rule 19 (elementary -> charclass .)
    DIGIT           reduce using rule 19 (elementary -> charclass .)
    OTHER           reduce using rule 19 (elementary -> charclass .)
    [               reduce using rule 19 (elementary -> charclass .)
    .               reduce using rule 19 (elementary -> charclass .)
    ,               reduce using rule 19 (elementary -> charclass .)
    :               reduce using rule 19 (elementary -> charclass .)
    ;               reduce using rule 19 (elementary -> charclass .)
    $               reduce using rule 19 (elementary -> charclass .)
    `               reduce using rule 19 (elementary -> charclass .)
    a               reduce using rule 19 (elementary -> charclass .)
    b               reduce using rule 19 (elementary -> charclass .)
    c               reduce using rule 19 (elementary -> charclass .)
    d               reduce using rule 19 (elementary -> charclass .)
    e               reduce using rule 19 (elementary -> charclass .)
    f               reduce using rule 19 (elementary -> charclass .)
    g               reduce using rule 19 (elementary -> charclass .)
    h               reduce using rule 19 (elementary -> charclass .)
    i               reduce using rule 19 (elementary -> charclass .)
    j               reduce using rule 19 (elementary -> charclass .)
    k               reduce using rule 19 (elementary -> charclass .)
    l               reduce using rule 19 (elementary -> charclass .)
    m               reduce using rule 19 (elementary -> charclass .)
    n               reduce using rule 19 (elementary -> charclass .)
    o               reduce using rule 19 (elementary -> charclass .)
    p               reduce using rule 19 (elementary -> charclass .)
    q               reduce using rule 19 (elementary -> charclass .)
    r               reduce using rule 19 (elementary -> charclass .)
    s               reduce using rule 19 (elementary -> charclass .)
    t               reduce using rule 19 (elementary -> charclass .)
    u               reduce using rule 19 (elementary -> charclass .)
    v               reduce using rule 19 (elementary -> charclass .)
    w               reduce using rule 19 (elementary -> charclass .)
    x               reduce using rule 19 (elementary -> charclass .)
    y               reduce using rule 19 (elementary -> charclass .)
    z               reduce using rule 19 (elementary -> charclass .)
    A               reduce using rule 19 (elementary -> charclass .)
    B               reduce using rule 19 (elementary -> charclass .)
    C               reduce using rule 19 (elementary -> charclass .)
    D               reduce using rule 19 (elementary -> charclass .)
    E               reduce using rule 19 (elementary -> charclass .)
    F               reduce using rule 19 (elementary -> charclass .)
    G               reduce using rule 19 (elementary -> charclass .)
    H               reduce using rule 19 (elementary -> charclass .)
    I               reduce using rule 19 (elementary -> charclass .)
    J               reduce using rule 19 (elementary -> charclass .)
    K               reduce using rule 19 (elementary -> charclass .)
    L               reduce using rule 19 (elementary -> charclass .)
    M               reduce using rule 19 (elementary -> charclass .)
    N               reduce using rule 19 (elementary -> charclass .)
    O               reduce using rule 19 (elementary -> charclass .)
    P               reduce using rule 19 (elementary -> charclass .)
    Q               reduce using rule 19 (elementary -> charclass .)
    R               reduce using rule 19 (elementary -> charclass .)
    S               reduce using rule 19 (elementary -> charclass .)
    T               reduce using rule 19 (elementary -> charclass .)
    U               reduce using rule 19 (elementary -> charclass .)
    V               reduce using rule 19 (elementary -> charclass .)
    W               reduce using rule 19 (elementary -> charclass .)
    X               reduce using rule 19 (elementary -> charclass .)
    Y               reduce using rule 19 (elementary -> charclass .)
    Z               reduce using rule 19 (elementary -> charclass .)
    |               reduce using rule 19 (elementary -> charclass .)
    $end            reduce using rule 19 (elementary -> charclass .)
    )               reduce using rule 19 (elementary -> charclass .)


state 9

    (33) anychar -> . .

    *               reduce using rule 33 (anychar -> . .)
    +               reduce using rule 33 (anychar -> . .)
    ?               reduce using rule 33 (anychar -> . .)
    {               reduce using rule 33 (anychar -> . .)
    (               reduce using rule 33 (anychar -> . .)
    ^               reduce using rule 33 (anychar -> . .)
    >               reduce using rule 33 (anychar -> . .)
    <               reduce using rule 33 (anychar -> . .)
    /               reduce using rule 33 (anychar -> . .)
    \               reduce using rule 33 (anychar -> . .)
    #               reduce using rule 33 (anychar -> . .)
    %               reduce using rule 33 (anychar -> . .)
    ESCAPED         reduce using rule 33 (anychar -> . .)
    DIGIT           reduce using rule 33 (anychar -> . .)
    OTHER           reduce using rule 33 (anychar -> . .)
    [               reduce using rule 33 (anychar -> . .)
    .               reduce using rule 33 (anychar -> . .)
    ,               reduce using rule 33 (anychar -> . .)
    :               reduce using rule 33 (anychar -> . .)
    ;               reduce using rule 33 (anychar -> . .)
    $               reduce using rule 33 (anychar -> . .)
    `               reduce using rule 33 (anychar -> . .)
    a               reduce using rule 33 (anychar -> . .)
    b               reduce using rule 33 (anychar -> . .)
    c               reduce using rule 33 (anychar -> . .)
    d               reduce using rule 33 (anychar -> . .)
    e               reduce using rule 33 (anychar -> . .)
    f               reduce using rule 33 (anychar -> . .)
    g               reduce using rule 33 (anychar -> . .)
    h               reduce using rule 33 (anychar -> . .)
    i               reduce using rule 33 (anychar -> . .)
    j               reduce using rule 33 (anychar -> . .)
    k               reduce using rule 33 (anychar -> . .)
    l               reduce using rule 33 (anychar -> . .)
    m               reduce using rule 33 (anychar -> . .)
    n               reduce using rule 33 (anychar -> . .)
    o               reduce using rule 33 (anychar -> . .)
    p               reduce using rule 33 (anychar -> . .)
    q               reduce using rule 33 (anychar -> . .)
    r               reduce using rule 33 (anychar -> . .)
    s               reduce using rule 33 (anychar -> . .)
    t               reduce using rule 33 (anychar -> . .)
    u               reduce using rule 33 (anychar -> . .)
    v               reduce using rule 33 (anychar -> . .)
    w               reduce using rule 33 (anychar -> . .)
    x               reduce using rule 33 (anychar -> . .)
    y               reduce using rule 33 (anychar -> . .)
    z               reduce using rule 33 (anychar -> . .)
    A               reduce using rule 33 (anychar -> . .)
    B               reduce using rule 33 (anychar -> . .)
    C               reduce using rule 33 (anychar -> . .)
    D               reduce using rule 33 (anychar -> . .)
    E               reduce using rule 33 (anychar -> . .)
    F               reduce using rule 33 (anychar -> . .)
    G               reduce using rule 33 (anychar -> . .)
    H               reduce using rule 33 (anychar -> . .)
    I               reduce using rule 33 (anychar -> . .)
    J               reduce using rule 33 (anychar -> . .)
    K               reduce using rule 33 (anychar -> . .)
    L               reduce using rule 33 (anychar -> . .)
    M               reduce using rule 33 (anychar -> . .)
    N               reduce using rule 33 (anychar -> . .)
    O               reduce using rule 33 (anychar -> . .)
    P               reduce using rule 33 (anychar -> . .)
    Q               reduce using rule 33 (anychar -> . .)
    R               reduce using rule 33 (anychar -> . .)
    S               reduce using rule 33 (anychar -> . .)
    T               reduce using rule 33 (anychar -> . .)
    U               reduce using rule 33 (anychar -> . .)
    V               reduce using rule 33 (anychar -> . .)
    W               reduce using rule 33 (anychar -> . .)
    X               reduce using rule 33 (anychar -> . .)
    Y               reduce using rule 33 (anychar -> . .)
    Z               reduce using rule 33 (anychar -> . .)
    |               reduce using rule 33 (anychar -> . .)
    )               reduce using rule 33 (anychar -> . .)
    $end            reduce using rule 33 (anychar -> . .)


state 10

    (8) basic -> quantifier .

    (               reduce using rule 8 (basic -> quantifier .)
    ^               reduce using rule 8 (basic -> quantifier .)
    >               reduce using rule 8 (basic -> quantifier .)
    <               reduce using rule 8 (basic -> quantifier .)
    /               reduce using rule 8 (basic -> quantifier .)
    \               reduce using rule 8 (basic -> quantifier .)
    #               reduce using rule 8 (basic -> quantifier .)
    %               reduce using rule 8 (basic -> quantifier .)
    ESCAPED         reduce using rule 8 (basic -> quantifier .)
    DIGIT           reduce using rule 8 (basic -> quantifier .)
    OTHER           reduce using rule 8 (basic -> quantifier .)
    [               reduce using rule 8 (basic -> quantifier .)
    .               reduce using rule 8 (basic -> quantifier .)
    ,               reduce using rule 8 (basic -> quantifier .)
    :               reduce using rule 8 (basic -> quantifier .)
    ;               reduce using rule 8 (basic -> quantifier .)
    $               reduce using rule 8 (basic -> quantifier .)
    `               reduce using rule 8 (basic -> quantifier .)
    a               reduce using rule 8 (basic -> quantifier .)
    b               reduce using rule 8 (basic -> quantifier .)
    c               reduce using rule 8 (basic -> quantifier .)
    d               reduce using rule 8 (basic -> quantifier .)
    e               reduce using rule 8 (basic -> quantifier .)
    f               reduce using rule 8 (basic -> quantifier .)
    g               reduce using rule 8 (basic -> quantifier .)
    h               reduce using rule 8 (basic -> quantifier .)
    i               reduce using rule 8 (basic -> quantifier .)
    j               reduce using rule 8 (basic -> quantifier .)
    k               reduce using rule 8 (basic -> quantifier .)
    l               reduce using rule 8 (basic -> quantifier .)
    m               reduce using rule 8 (basic -> quantifier .)
    n               reduce using rule 8 (basic -> quantifier .)
    o               reduce using rule 8 (basic -> quantifier .)
    p               reduce using rule 8 (basic -> quantifier .)
    q               reduce using rule 8 (basic -> quantifier .)
    r               reduce using rule 8 (basic -> quantifier .)
    s               reduce using rule 8 (basic -> quantifier .)
    t               reduce using rule 8 (basic -> quantifier .)
    u               reduce using rule 8 (basic -> quantifier .)
    v               reduce using rule 8 (basic -> quantifier .)
    w               reduce using rule 8 (basic -> quantifier .)
    x               reduce using rule 8 (basic -> quantifier .)
    y               reduce using rule 8 (basic -> quantifier .)
    z               reduce using rule 8 (basic -> quantifier .)
    A               reduce using rule 8 (basic -> quantifier .)
    B               reduce using rule 8 (basic -> quantifier .)
    C               reduce using rule 8 (basic -> quantifier .)
    D               reduce using rule 8 (basic -> quantifier .)
    E               reduce using rule 8 (basic -> quantifier .)
    F               reduce using rule 8 (basic -> quantifier .)
    G               reduce using rule 8 (basic -> quantifier .)
    H               reduce using rule 8 (basic -> quantifier .)
    I               reduce using rule 8 (basic -> quantifier .)
    J               reduce using rule 8 (basic -> quantifier .)
    K               reduce using rule 8 (basic -> quantifier .)
    L               reduce using rule 8 (basic -> quantifier .)
    M               reduce using rule 8 (basic -> quantifier .)
    N               reduce using rule 8 (basic -> quantifier .)
    O               reduce using rule 8 (basic -> quantifier .)
    P               reduce using rule 8 (basic -> quantifier .)
    Q               reduce using rule 8 (basic -> quantifier .)
    R               reduce using rule 8 (basic -> quantifier .)
    S               reduce using rule 8 (basic -> quantifier .)
    T               reduce using rule 8 (basic -> quantifier .)
    U               reduce using rule 8 (basic -> quantifier .)
    V               reduce using rule 8 (basic -> quantifier .)
    W               reduce using rule 8 (basic -> quantifier .)
    X               reduce using rule 8 (basic -> quantifier .)
    Y               reduce using rule 8 (basic -> quantifier .)
    Z               reduce using rule 8 (basic -> quantifier .)
    |               reduce using rule 8 (basic -> quantifier .)
    )               reduce using rule 8 (basic -> quantifier .)
    $end            reduce using rule 8 (basic -> quantifier .)


state 11

    (130) alpha_lower -> o .

    !               reduce using rule 130 (alpha_lower -> o .)
    "               reduce using rule 130 (alpha_lower -> o .)
    #               reduce using rule 130 (alpha_lower -> o .)
    $               reduce using rule 130 (alpha_lower -> o .)
    %               reduce using rule 130 (alpha_lower -> o .)
    &               reduce using rule 130 (alpha_lower -> o .)
    '               reduce using rule 130 (alpha_lower -> o .)
    (               reduce using rule 130 (alpha_lower -> o .)
    )               reduce using rule 130 (alpha_lower -> o .)
    *               reduce using rule 130 (alpha_lower -> o .)
    +               reduce using rule 130 (alpha_lower -> o .)
    ,               reduce using rule 130 (alpha_lower -> o .)
    .               reduce using rule 130 (alpha_lower -> o .)
    /               reduce using rule 130 (alpha_lower -> o .)
    :               reduce using rule 130 (alpha_lower -> o .)
    ;               reduce using rule 130 (alpha_lower -> o .)
    <               reduce using rule 130 (alpha_lower -> o .)
    =               reduce using rule 130 (alpha_lower -> o .)
    >               reduce using rule 130 (alpha_lower -> o .)
    ?               reduce using rule 130 (alpha_lower -> o .)
    @               reduce using rule 130 (alpha_lower -> o .)
    [               reduce using rule 130 (alpha_lower -> o .)
    \               reduce using rule 130 (alpha_lower -> o .)
    _               reduce using rule 130 (alpha_lower -> o .)
    `               reduce using rule 130 (alpha_lower -> o .)
    {               reduce using rule 130 (alpha_lower -> o .)
    }               reduce using rule 130 (alpha_lower -> o .)
    ~               reduce using rule 130 (alpha_lower -> o .)
    ESCAPED         reduce using rule 130 (alpha_lower -> o .)
    DIGIT           reduce using rule 130 (alpha_lower -> o .)
    OTHER           reduce using rule 130 (alpha_lower -> o .)
    a               reduce using rule 130 (alpha_lower -> o .)
    b               reduce using rule 130 (alpha_lower -> o .)
    c               reduce using rule 130 (alpha_lower -> o .)
    d               reduce using rule 130 (alpha_lower -> o .)
    e               reduce using rule 130 (alpha_lower -> o .)
    f               reduce using rule 130 (alpha_lower -> o .)
    g               reduce using rule 130 (alpha_lower -> o .)
    h               reduce using rule 130 (alpha_lower -> o .)
    i               reduce using rule 130 (alpha_lower -> o .)
    j               reduce using rule 130 (alpha_lower -> o .)
    k               reduce using rule 130 (alpha_lower -> o .)
    l               reduce using rule 130 (alpha_lower -> o .)
    m               reduce using rule 130 (alpha_lower -> o .)
    n               reduce using rule 130 (alpha_lower -> o .)
    o               reduce using rule 130 (alpha_lower -> o .)
    p               reduce using rule 130 (alpha_lower -> o .)
    q               reduce using rule 130 (alpha_lower -> o .)
    r               reduce using rule 130 (alpha_lower -> o .)
    s               reduce using rule 130 (alpha_lower -> o .)
    t               reduce using rule 130 (alpha_lower -> o .)
    u               reduce using rule 130 (alpha_lower -> o .)
    v               reduce using rule 130 (alpha_lower -> o .)
    w               reduce using rule 130 (alpha_lower -> o .)
    x               reduce using rule 130 (alpha_lower -> o .)
    y               reduce using rule 130 (alpha_lower -> o .)
    z               reduce using rule 130 (alpha_lower -> o .)
    A               reduce using rule 130 (alpha_lower -> o .)
    B               reduce using rule 130 (alpha_lower -> o .)
    C               reduce using rule 130 (alpha_lower -> o .)
    D               reduce using rule 130 (alpha_lower -> o .)
    E               reduce using rule 130 (alpha_lower -> o .)
    F               reduce using rule 130 (alpha_lower -> o .)
    G               reduce using rule 130 (alpha_lower -> o .)
    H               reduce using rule 130 (alpha_lower -> o .)
    I               reduce using rule 130 (alpha_lower -> o .)
    J               reduce using rule 130 (alpha_lower -> o .)
    K               reduce using rule 130 (alpha_lower -> o .)
    L               reduce using rule 130 (alpha_lower -> o .)
    M               reduce using rule 130 (alpha_lower -> o .)
    N               reduce using rule 130 (alpha_lower -> o .)
    O               reduce using rule 130 (alpha_lower -> o .)
    P               reduce using rule 130 (alpha_lower -> o .)
    Q               reduce using rule 130 (alpha_lower -> o .)
    R               reduce using rule 130 (alpha_lower -> o .)
    S               reduce using rule 130 (alpha_lower -> o .)
    T               reduce using rule 130 (alpha_lower -> o .)
    U               reduce using rule 130 (alpha_lower -> o .)
    V               reduce using rule 130 (alpha_lower -> o .)
    W               reduce using rule 130 (alpha_lower -> o .)
    X               reduce using rule 130 (alpha_lower -> o .)
    Y               reduce using rule 130 (alpha_lower -> o .)
    Z               reduce using rule 130 (alpha_lower -> o .)
    |               reduce using rule 130 (alpha_lower -> o .)
    ]               reduce using rule 130 (alpha_lower -> o .)
    -               reduce using rule 130 (alpha_lower -> o .)
    ^               reduce using rule 130 (alpha_lower -> o .)
    $end            reduce using rule 130 (alpha_lower -> o .)


state 12

    (1) re -> alternation .

    |               reduce using rule 1 (re -> alternation .)
    )               reduce using rule 1 (re -> alternation .)
    $end            reduce using rule 1 (re -> alternation .)


state 13

    (17) elementary -> command .

    *               reduce using rule 17 (elementary -> command .)
    +               reduce using rule 17 (elementary -> command .)
    ?               reduce using rule 17 (elementary -> command .)
    {               reduce using rule 17 (elementary -> command .)
    (               reduce using rule 17 (elementary -> command .)
    ^               reduce using rule 17 (elementary -> command .)
    >               reduce using rule 17 (elementary -> command .)
    <               reduce using rule 17 (elementary -> command .)
    /               reduce using rule 17 (elementary -> command .)
    \               reduce using rule 17 (elementary -> command .)
    #               reduce using rule 17 (elementary -> command .)
    %               reduce using rule 17 (elementary -> command .)
    ESCAPED         reduce using rule 17 (elementary -> command .)
    DIGIT           reduce using rule 17 (elementary -> command .)
    OTHER           reduce using rule 17 (elementary -> command .)
    [               reduce using rule 17 (elementary -> command .)
    .               reduce using rule 17 (elementary -> command .)
    ,               reduce using rule 17 (elementary -> command .)
    :               reduce using rule 17 (elementary -> command .)
    ;               reduce using rule 17 (elementary -> command .)
    $               reduce using rule 17 (elementary -> command .)
    `               reduce using rule 17 (elementary -> command .)
    a               reduce using rule 17 (elementary -> command .)
    b               reduce using rule 17 (elementary -> command .)
    c               reduce using rule 17 (elementary -> command .)
    d               reduce using rule 17 (elementary -> command .)
    e               reduce using rule 17 (elementary -> command .)
    f               reduce using rule 17 (elementary -> command .)
    g               reduce using rule 17 (elementary -> command .)
    h               reduce using rule 17 (elementary -> command .)
    i               reduce using rule 17 (elementary -> command .)
    j               reduce using rule 17 (elementary -> command .)
    k               reduce using rule 17 (elementary -> command .)
    l               reduce using rule 17 (elementary -> command .)
    m               reduce using rule 17 (elementary -> command .)
    n               reduce using rule 17 (elementary -> command .)
    o               reduce using rule 17 (elementary -> command .)
    p               reduce using rule 17 (elementary -> command .)
    q               reduce using rule 17 (elementary -> command .)
    r               reduce using rule 17 (elementary -> command .)
    s               reduce using rule 17 (elementary -> command .)
    t               reduce using rule 17 (elementary -> command .)
    u               reduce using rule 17 (elementary -> command .)
    v               reduce using rule 17 (elementary -> command .)
    w               reduce using rule 17 (elementary -> command .)
    x               reduce using rule 17 (elementary -> command .)
    y               reduce using rule 17 (elementary -> command .)
    z               reduce using rule 17 (elementary -> command .)
    A               reduce using rule 17 (elementary -> command .)
    B               reduce using rule 17 (elementary -> command .)
    C               reduce using rule 17 (elementary -> command .)
    D               reduce using rule 17 (elementary -> command .)
    E               reduce using rule 17 (elementary -> command .)
    F               reduce using rule 17 (elementary -> command .)
    G               reduce using rule 17 (elementary -> command .)
    H               reduce using rule 17 (elementary -> command .)
    I               reduce using rule 17 (elementary -> command .)
    J               reduce using rule 17 (elementary -> command .)
    K               reduce using rule 17 (elementary -> command .)
    L               reduce using rule 17 (elementary -> command .)
    M               reduce using rule 17 (elementary -> command .)
    N               reduce using rule 17 (elementary -> command .)
    O               reduce using rule 17 (elementary -> command .)
    P               reduce using rule 17 (elementary -> command .)
    Q               reduce using rule 17 (elementary -> command .)
    R               reduce using rule 17 (elementary -> command .)
    S               reduce using rule 17 (elementary -> command .)
    T               reduce using rule 17 (elementary -> command .)
    U               reduce using rule 17 (elementary -> command .)
    V               reduce using rule 17 (elementary -> command .)
    W               reduce using rule 17 (elementary -> command .)
    X               reduce using rule 17 (elementary -> command .)
    Y               reduce using rule 17 (elementary -> command .)
    Z               reduce using rule 17 (elementary -> command .)
    |               reduce using rule 17 (elementary -> command .)
    $end            reduce using rule 17 (elementary -> command .)
    )               reduce using rule 17 (elementary -> command .)


state 14

    (12) basequantifier -> plus .

    ?               reduce using rule 12 (basequantifier -> plus .)
    (               reduce using rule 12 (basequantifier -> plus .)
    ^               reduce using rule 12 (basequantifier -> plus .)
    >               reduce using rule 12 (basequantifier -> plus .)
    <               reduce using rule 12 (basequantifier -> plus .)
    /               reduce using rule 12 (basequantifier -> plus .)
    \               reduce using rule 12 (basequantifier -> plus .)
    #               reduce using rule 12 (basequantifier -> plus .)
    %               reduce using rule 12 (basequantifier -> plus .)
    ESCAPED         reduce using rule 12 (basequantifier -> plus .)
    DIGIT           reduce using rule 12 (basequantifier -> plus .)
    OTHER           reduce using rule 12 (basequantifier -> plus .)
    [               reduce using rule 12 (basequantifier -> plus .)
    .               reduce using rule 12 (basequantifier -> plus .)
    ,               reduce using rule 12 (basequantifier -> plus .)
    :               reduce using rule 12 (basequantifier -> plus .)
    ;               reduce using rule 12 (basequantifier -> plus .)
    $               reduce using rule 12 (basequantifier -> plus .)
    `               reduce using rule 12 (basequantifier -> plus .)
    a               reduce using rule 12 (basequantifier -> plus .)
    b               reduce using rule 12 (basequantifier -> plus .)
    c               reduce using rule 12 (basequantifier -> plus .)
    d               reduce using rule 12 (basequantifier -> plus .)
    e               reduce using rule 12 (basequantifier -> plus .)
    f               reduce using rule 12 (basequantifier -> plus .)
    g               reduce using rule 12 (basequantifier -> plus .)
    h               reduce using rule 12 (basequantifier -> plus .)
    i               reduce using rule 12 (basequantifier -> plus .)
    j               reduce using rule 12 (basequantifier -> plus .)
    k               reduce using rule 12 (basequantifier -> plus .)
    l               reduce using rule 12 (basequantifier -> plus .)
    m               reduce using rule 12 (basequantifier -> plus .)
    n               reduce using rule 12 (basequantifier -> plus .)
    o               reduce using rule 12 (basequantifier -> plus .)
    p               reduce using rule 12 (basequantifier -> plus .)
    q               reduce using rule 12 (basequantifier -> plus .)
    r               reduce using rule 12 (basequantifier -> plus .)
    s               reduce using rule 12 (basequantifier -> plus .)
    t               reduce using rule 12 (basequantifier -> plus .)
    u               reduce using rule 12 (basequantifier -> plus .)
    v               reduce using rule 12 (basequantifier -> plus .)
    w               reduce using rule 12 (basequantifier -> plus .)
    x               reduce using rule 12 (basequantifier -> plus .)
    y               reduce using rule 12 (basequantifier -> plus .)
    z               reduce using rule 12 (basequantifier -> plus .)
    A               reduce using rule 12 (basequantifier -> plus .)
    B               reduce using rule 12 (basequantifier -> plus .)
    C               reduce using rule 12 (basequantifier -> plus .)
    D               reduce using rule 12 (basequantifier -> plus .)
    E               reduce using rule 12 (basequantifier -> plus .)
    F               reduce using rule 12 (basequantifier -> plus .)
    G               reduce using rule 12 (basequantifier -> plus .)
    H               reduce using rule 12 (basequantifier -> plus .)
    I               reduce using rule 12 (basequantifier -> plus .)
    J               reduce using rule 12 (basequantifier -> plus .)
    K               reduce using rule 12 (basequantifier -> plus .)
    L               reduce using rule 12 (basequantifier -> plus .)
    M               reduce using rule 12 (basequantifier -> plus .)
    N               reduce using rule 12 (basequantifier -> plus .)
    O               reduce using rule 12 (basequantifier -> plus .)
    P               reduce using rule 12 (basequantifier -> plus .)
    Q               reduce using rule 12 (basequantifier -> plus .)
    R               reduce using rule 12 (basequantifier -> plus .)
    S               reduce using rule 12 (basequantifier -> plus .)
    T               reduce using rule 12 (basequantifier -> plus .)
    U               reduce using rule 12 (basequantifier -> plus .)
    V               reduce using rule 12 (basequantifier -> plus .)
    W               reduce using rule 12 (basequantifier -> plus .)
    X               reduce using rule 12 (basequantifier -> plus .)
    Y               reduce using rule 12 (basequantifier -> plus .)
    Z               reduce using rule 12 (basequantifier -> plus .)
    |               reduce using rule 12 (basequantifier -> plus .)
    )               reduce using rule 12 (basequantifier -> plus .)
    $end            reduce using rule 12 (basequantifier -> plus .)


state 15

    (13) basequantifier -> optional .

    ?               reduce using rule 13 (basequantifier -> optional .)
    (               reduce using rule 13 (basequantifier -> optional .)
    ^               reduce using rule 13 (basequantifier -> optional .)
    >               reduce using rule 13 (basequantifier -> optional .)
    <               reduce using rule 13 (basequantifier -> optional .)
    /               reduce using rule 13 (basequantifier -> optional .)
    \               reduce using rule 13 (basequantifier -> optional .)
    #               reduce using rule 13 (basequantifier -> optional .)
    %               reduce using rule 13 (basequantifier -> optional .)
    ESCAPED         reduce using rule 13 (basequantifier -> optional .)
    DIGIT           reduce using rule 13 (basequantifier -> optional .)
    OTHER           reduce using rule 13 (basequantifier -> optional .)
    [               reduce using rule 13 (basequantifier -> optional .)
    .               reduce using rule 13 (basequantifier -> optional .)
    ,               reduce using rule 13 (basequantifier -> optional .)
    :               reduce using rule 13 (basequantifier -> optional .)
    ;               reduce using rule 13 (basequantifier -> optional .)
    $               reduce using rule 13 (basequantifier -> optional .)
    `               reduce using rule 13 (basequantifier -> optional .)
    a               reduce using rule 13 (basequantifier -> optional .)
    b               reduce using rule 13 (basequantifier -> optional .)
    c               reduce using rule 13 (basequantifier -> optional .)
    d               reduce using rule 13 (basequantifier -> optional .)
    e               reduce using rule 13 (basequantifier -> optional .)
    f               reduce using rule 13 (basequantifier -> optional .)
    g               reduce using rule 13 (basequantifier -> optional .)
    h               reduce using rule 13 (basequantifier -> optional .)
    i               reduce using rule 13 (basequantifier -> optional .)
    j               reduce using rule 13 (basequantifier -> optional .)
    k               reduce using rule 13 (basequantifier -> optional .)
    l               reduce using rule 13 (basequantifier -> optional .)
    m               reduce using rule 13 (basequantifier -> optional .)
    n               reduce using rule 13 (basequantifier -> optional .)
    o               reduce using rule 13 (basequantifier -> optional .)
    p               reduce using rule 13 (basequantifier -> optional .)
    q               reduce using rule 13 (basequantifier -> optional .)
    r               reduce using rule 13 (basequantifier -> optional .)
    s               reduce using rule 13 (basequantifier -> optional .)
    t               reduce using rule 13 (basequantifier -> optional .)
    u               reduce using rule 13 (basequantifier -> optional .)
    v               reduce using rule 13 (basequantifier -> optional .)
    w               reduce using rule 13 (basequantifier -> optional .)
    x               reduce using rule 13 (basequantifier -> optional .)
    y               reduce using rule 13 (basequantifier -> optional .)
    z               reduce using rule 13 (basequantifier -> optional .)
    A               reduce using rule 13 (basequantifier -> optional .)
    B               reduce using rule 13 (basequantifier -> optional .)
    C               reduce using rule 13 (basequantifier -> optional .)
    D               reduce using rule 13 (basequantifier -> optional .)
    E               reduce using rule 13 (basequantifier -> optional .)
    F               reduce using rule 13 (basequantifier -> optional .)
    G               reduce using rule 13 (basequantifier -> optional .)
    H               reduce using rule 13 (basequantifier -> optional .)
    I               reduce using rule 13 (basequantifier -> optional .)
    J               reduce using rule 13 (basequantifier -> optional .)
    K               reduce using rule 13 (basequantifier -> optional .)
    L               reduce using rule 13 (basequantifier -> optional .)
    M               reduce using rule 13 (basequantifier -> optional .)
    N               reduce using rule 13 (basequantifier -> optional .)
    O               reduce using rule 13 (basequantifier -> optional .)
    P               reduce using rule 13 (basequantifier -> optional .)
    Q               reduce using rule 13 (basequantifier -> optional .)
    R               reduce using rule 13 (basequantifier -> optional .)
    S               reduce using rule 13 (basequantifier -> optional .)
    T               reduce using rule 13 (basequantifier -> optional .)
    U               reduce using rule 13 (basequantifier -> optional .)
    V               reduce using rule 13 (basequantifier -> optional .)
    W               reduce using rule 13 (basequantifier -> optional .)
    X               reduce using rule 13 (basequantifier -> optional .)
    Y               reduce using rule 13 (basequantifier -> optional .)
    Z               reduce using rule 13 (basequantifier -> optional .)
    |               reduce using rule 13 (basequantifier -> optional .)
    )               reduce using rule 13 (basequantifier -> optional .)
    $end            reduce using rule 13 (basequantifier -> optional .)


state 16

    (4) simple -> concatenation .

    (               reduce using rule 4 (simple -> concatenation .)
    ^               reduce using rule 4 (simple -> concatenation .)
    >               reduce using rule 4 (simple -> concatenation .)
    <               reduce using rule 4 (simple -> concatenation .)
    /               reduce using rule 4 (simple -> concatenation .)
    \               reduce using rule 4 (simple -> concatenation .)
    #               reduce using rule 4 (simple -> concatenation .)
    %               reduce using rule 4 (simple -> concatenation .)
    ESCAPED         reduce using rule 4 (simple -> concatenation .)
    DIGIT           reduce using rule 4 (simple -> concatenation .)
    OTHER           reduce using rule 4 (simple -> concatenation .)
    [               reduce using rule 4 (simple -> concatenation .)
    .               reduce using rule 4 (simple -> concatenation .)
    ,               reduce using rule 4 (simple -> concatenation .)
    :               reduce using rule 4 (simple -> concatenation .)
    ;               reduce using rule 4 (simple -> concatenation .)
    $               reduce using rule 4 (simple -> concatenation .)
    `               reduce using rule 4 (simple -> concatenation .)
    a               reduce using rule 4 (simple -> concatenation .)
    b               reduce using rule 4 (simple -> concatenation .)
    c               reduce using rule 4 (simple -> concatenation .)
    d               reduce using rule 4 (simple -> concatenation .)
    e               reduce using rule 4 (simple -> concatenation .)
    f               reduce using rule 4 (simple -> concatenation .)
    g               reduce using rule 4 (simple -> concatenation .)
    h               reduce using rule 4 (simple -> concatenation .)
    i               reduce using rule 4 (simple -> concatenation .)
    j               reduce using rule 4 (simple -> concatenation .)
    k               reduce using rule 4 (simple -> concatenation .)
    l               reduce using rule 4 (simple -> concatenation .)
    m               reduce using rule 4 (simple -> concatenation .)
    n               reduce using rule 4 (simple -> concatenation .)
    o               reduce using rule 4 (simple -> concatenation .)
    p               reduce using rule 4 (simple -> concatenation .)
    q               reduce using rule 4 (simple -> concatenation .)
    r               reduce using rule 4 (simple -> concatenation .)
    s               reduce using rule 4 (simple -> concatenation .)
    t               reduce using rule 4 (simple -> concatenation .)
    u               reduce using rule 4 (simple -> concatenation .)
    v               reduce using rule 4 (simple -> concatenation .)
    w               reduce using rule 4 (simple -> concatenation .)
    x               reduce using rule 4 (simple -> concatenation .)
    y               reduce using rule 4 (simple -> concatenation .)
    z               reduce using rule 4 (simple -> concatenation .)
    A               reduce using rule 4 (simple -> concatenation .)
    B               reduce using rule 4 (simple -> concatenation .)
    C               reduce using rule 4 (simple -> concatenation .)
    D               reduce using rule 4 (simple -> concatenation .)
    E               reduce using rule 4 (simple -> concatenation .)
    F               reduce using rule 4 (simple -> concatenation .)
    G               reduce using rule 4 (simple -> concatenation .)
    H               reduce using rule 4 (simple -> concatenation .)
    I               reduce using rule 4 (simple -> concatenation .)
    J               reduce using rule 4 (simple -> concatenation .)
    K               reduce using rule 4 (simple -> concatenation .)
    L               reduce using rule 4 (simple -> concatenation .)
    M               reduce using rule 4 (simple -> concatenation .)
    N               reduce using rule 4 (simple -> concatenation .)
    O               reduce using rule 4 (simple -> concatenation .)
    P               reduce using rule 4 (simple -> concatenation .)
    Q               reduce using rule 4 (simple -> concatenation .)
    R               reduce using rule 4 (simple -> concatenation .)
    S               reduce using rule 4 (simple -> concatenation .)
    T               reduce using rule 4 (simple -> concatenation .)
    U               reduce using rule 4 (simple -> concatenation .)
    V               reduce using rule 4 (simple -> concatenation .)
    W               reduce using rule 4 (simple -> concatenation .)
    X               reduce using rule 4 (simple -> concatenation .)
    Y               reduce using rule 4 (simple -> concatenation .)
    Z               reduce using rule 4 (simple -> concatenation .)
    |               reduce using rule 4 (simple -> concatenation .)
    )               reduce using rule 4 (simple -> concatenation .)
    $end            reduce using rule 4 (simple -> concatenation .)


state 17

    (162) alpha_upper -> U .

    -               reduce using rule 162 (alpha_upper -> U .)
    !               reduce using rule 162 (alpha_upper -> U .)
    "               reduce using rule 162 (alpha_upper -> U .)
    #               reduce using rule 162 (alpha_upper -> U .)
    $               reduce using rule 162 (alpha_upper -> U .)
    %               reduce using rule 162 (alpha_upper -> U .)
    &               reduce using rule 162 (alpha_upper -> U .)
    '               reduce using rule 162 (alpha_upper -> U .)
    (               reduce using rule 162 (alpha_upper -> U .)
    )               reduce using rule 162 (alpha_upper -> U .)
    *               reduce using rule 162 (alpha_upper -> U .)
    +               reduce using rule 162 (alpha_upper -> U .)
    ,               reduce using rule 162 (alpha_upper -> U .)
    .               reduce using rule 162 (alpha_upper -> U .)
    /               reduce using rule 162 (alpha_upper -> U .)
    :               reduce using rule 162 (alpha_upper -> U .)
    ;               reduce using rule 162 (alpha_upper -> U .)
    <               reduce using rule 162 (alpha_upper -> U .)
    =               reduce using rule 162 (alpha_upper -> U .)
    >               reduce using rule 162 (alpha_upper -> U .)
    ?               reduce using rule 162 (alpha_upper -> U .)
    @               reduce using rule 162 (alpha_upper -> U .)
    [               reduce using rule 162 (alpha_upper -> U .)
    \               reduce using rule 162 (alpha_upper -> U .)
    _               reduce using rule 162 (alpha_upper -> U .)
    `               reduce using rule 162 (alpha_upper -> U .)
    {               reduce using rule 162 (alpha_upper -> U .)
    }               reduce using rule 162 (alpha_upper -> U .)
    ~               reduce using rule 162 (alpha_upper -> U .)
    ESCAPED         reduce using rule 162 (alpha_upper -> U .)
    DIGIT           reduce using rule 162 (alpha_upper -> U .)
    OTHER           reduce using rule 162 (alpha_upper -> U .)
    a               reduce using rule 162 (alpha_upper -> U .)
    b               reduce using rule 162 (alpha_upper -> U .)
    c               reduce using rule 162 (alpha_upper -> U .)
    d               reduce using rule 162 (alpha_upper -> U .)
    e               reduce using rule 162 (alpha_upper -> U .)
    f               reduce using rule 162 (alpha_upper -> U .)
    g               reduce using rule 162 (alpha_upper -> U .)
    h               reduce using rule 162 (alpha_upper -> U .)
    i               reduce using rule 162 (alpha_upper -> U .)
    j               reduce using rule 162 (alpha_upper -> U .)
    k               reduce using rule 162 (alpha_upper -> U .)
    l               reduce using rule 162 (alpha_upper -> U .)
    m               reduce using rule 162 (alpha_upper -> U .)
    n               reduce using rule 162 (alpha_upper -> U .)
    o               reduce using rule 162 (alpha_upper -> U .)
    p               reduce using rule 162 (alpha_upper -> U .)
    q               reduce using rule 162 (alpha_upper -> U .)
    r               reduce using rule 162 (alpha_upper -> U .)
    s               reduce using rule 162 (alpha_upper -> U .)
    t               reduce using rule 162 (alpha_upper -> U .)
    u               reduce using rule 162 (alpha_upper -> U .)
    v               reduce using rule 162 (alpha_upper -> U .)
    w               reduce using rule 162 (alpha_upper -> U .)
    x               reduce using rule 162 (alpha_upper -> U .)
    y               reduce using rule 162 (alpha_upper -> U .)
    z               reduce using rule 162 (alpha_upper -> U .)
    A               reduce using rule 162 (alpha_upper -> U .)
    B               reduce using rule 162 (alpha_upper -> U .)
    C               reduce using rule 162 (alpha_upper -> U .)
    D               reduce using rule 162 (alpha_upper -> U .)
    E               reduce using rule 162 (alpha_upper -> U .)
    F               reduce using rule 162 (alpha_upper -> U .)
    G               reduce using rule 162 (alpha_upper -> U .)
    H               reduce using rule 162 (alpha_upper -> U .)
    I               reduce using rule 162 (alpha_upper -> U .)
    J               reduce using rule 162 (alpha_upper -> U .)
    K               reduce using rule 162 (alpha_upper -> U .)
    L               reduce using rule 162 (alpha_upper -> U .)
    M               reduce using rule 162 (alpha_upper -> U .)
    N               reduce using rule 162 (alpha_upper -> U .)
    O               reduce using rule 162 (alpha_upper -> U .)
    P               reduce using rule 162 (alpha_upper -> U .)
    Q               reduce using rule 162 (alpha_upper -> U .)
    R               reduce using rule 162 (alpha_upper -> U .)
    S               reduce using rule 162 (alpha_upper -> U .)
    T               reduce using rule 162 (alpha_upper -> U .)
    U               reduce using rule 162 (alpha_upper -> U .)
    V               reduce using rule 162 (alpha_upper -> U .)
    W               reduce using rule 162 (alpha_upper -> U .)
    X               reduce using rule 162 (alpha_upper -> U .)
    Y               reduce using rule 162 (alpha_upper -> U .)
    Z               reduce using rule 162 (alpha_upper -> U .)
    |               reduce using rule 162 (alpha_upper -> U .)
    ]               reduce using rule 162 (alpha_upper -> U .)
    ^               reduce using rule 162 (alpha_upper -> U .)
    $end            reduce using rule 162 (alpha_upper -> U .)


state 18

    (164) alpha_upper -> W .

    -               reduce using rule 164 (alpha_upper -> W .)
    !               reduce using rule 164 (alpha_upper -> W .)
    "               reduce using rule 164 (alpha_upper -> W .)
    #               reduce using rule 164 (alpha_upper -> W .)
    $               reduce using rule 164 (alpha_upper -> W .)
    %               reduce using rule 164 (alpha_upper -> W .)
    &               reduce using rule 164 (alpha_upper -> W .)
    '               reduce using rule 164 (alpha_upper -> W .)
    (               reduce using rule 164 (alpha_upper -> W .)
    )               reduce using rule 164 (alpha_upper -> W .)
    *               reduce using rule 164 (alpha_upper -> W .)
    +               reduce using rule 164 (alpha_upper -> W .)
    ,               reduce using rule 164 (alpha_upper -> W .)
    .               reduce using rule 164 (alpha_upper -> W .)
    /               reduce using rule 164 (alpha_upper -> W .)
    :               reduce using rule 164 (alpha_upper -> W .)
    ;               reduce using rule 164 (alpha_upper -> W .)
    <               reduce using rule 164 (alpha_upper -> W .)
    =               reduce using rule 164 (alpha_upper -> W .)
    >               reduce using rule 164 (alpha_upper -> W .)
    ?               reduce using rule 164 (alpha_upper -> W .)
    @               reduce using rule 164 (alpha_upper -> W .)
    [               reduce using rule 164 (alpha_upper -> W .)
    \               reduce using rule 164 (alpha_upper -> W .)
    _               reduce using rule 164 (alpha_upper -> W .)
    `               reduce using rule 164 (alpha_upper -> W .)
    {               reduce using rule 164 (alpha_upper -> W .)
    }               reduce using rule 164 (alpha_upper -> W .)
    ~               reduce using rule 164 (alpha_upper -> W .)
    ESCAPED         reduce using rule 164 (alpha_upper -> W .)
    DIGIT           reduce using rule 164 (alpha_upper -> W .)
    OTHER           reduce using rule 164 (alpha_upper -> W .)
    a               reduce using rule 164 (alpha_upper -> W .)
    b               reduce using rule 164 (alpha_upper -> W .)
    c               reduce using rule 164 (alpha_upper -> W .)
    d               reduce using rule 164 (alpha_upper -> W .)
    e               reduce using rule 164 (alpha_upper -> W .)
    f               reduce using rule 164 (alpha_upper -> W .)
    g               reduce using rule 164 (alpha_upper -> W .)
    h               reduce using rule 164 (alpha_upper -> W .)
    i               reduce using rule 164 (alpha_upper -> W .)
    j               reduce using rule 164 (alpha_upper -> W .)
    k               reduce using rule 164 (alpha_upper -> W .)
    l               reduce using rule 164 (alpha_upper -> W .)
    m               reduce using rule 164 (alpha_upper -> W .)
    n               reduce using rule 164 (alpha_upper -> W .)
    o               reduce using rule 164 (alpha_upper -> W .)
    p               reduce using rule 164 (alpha_upper -> W .)
    q               reduce using rule 164 (alpha_upper -> W .)
    r               reduce using rule 164 (alpha_upper -> W .)
    s               reduce using rule 164 (alpha_upper -> W .)
    t               reduce using rule 164 (alpha_upper -> W .)
    u               reduce using rule 164 (alpha_upper -> W .)
    v               reduce using rule 164 (alpha_upper -> W .)
    w               reduce using rule 164 (alpha_upper -> W .)
    x               reduce using rule 164 (alpha_upper -> W .)
    y               reduce using rule 164 (alpha_upper -> W .)
    z               reduce using rule 164 (alpha_upper -> W .)
    A               reduce using rule 164 (alpha_upper -> W .)
    B               reduce using rule 164 (alpha_upper -> W .)
    C               reduce using rule 164 (alpha_upper -> W .)
    D               reduce using rule 164 (alpha_upper -> W .)
    E               reduce using rule 164 (alpha_upper -> W .)
    F               reduce using rule 164 (alpha_upper -> W .)
    G               reduce using rule 164 (alpha_upper -> W .)
    H               reduce using rule 164 (alpha_upper -> W .)
    I               reduce using rule 164 (alpha_upper -> W .)
    J               reduce using rule 164 (alpha_upper -> W .)
    K               reduce using rule 164 (alpha_upper -> W .)
    L               reduce using rule 164 (alpha_upper -> W .)
    M               reduce using rule 164 (alpha_upper -> W .)
    N               reduce using rule 164 (alpha_upper -> W .)
    O               reduce using rule 164 (alpha_upper -> W .)
    P               reduce using rule 164 (alpha_upper -> W .)
    Q               reduce using rule 164 (alpha_upper -> W .)
    R               reduce using rule 164 (alpha_upper -> W .)
    S               reduce using rule 164 (alpha_upper -> W .)
    T               reduce using rule 164 (alpha_upper -> W .)
    U               reduce using rule 164 (alpha_upper -> W .)
    V               reduce using rule 164 (alpha_upper -> W .)
    W               reduce using rule 164 (alpha_upper -> W .)
    X               reduce using rule 164 (alpha_upper -> W .)
    Y               reduce using rule 164 (alpha_upper -> W .)
    Z               reduce using rule 164 (alpha_upper -> W .)
    |               reduce using rule 164 (alpha_upper -> W .)
    ]               reduce using rule 164 (alpha_upper -> W .)
    ^               reduce using rule 164 (alpha_upper -> W .)
    $end            reduce using rule 164 (alpha_upper -> W .)


state 19

    (149) alpha_upper -> H .

    -               reduce using rule 149 (alpha_upper -> H .)
    !               reduce using rule 149 (alpha_upper -> H .)
    "               reduce using rule 149 (alpha_upper -> H .)
    #               reduce using rule 149 (alpha_upper -> H .)
    $               reduce using rule 149 (alpha_upper -> H .)
    %               reduce using rule 149 (alpha_upper -> H .)
    &               reduce using rule 149 (alpha_upper -> H .)
    '               reduce using rule 149 (alpha_upper -> H .)
    (               reduce using rule 149 (alpha_upper -> H .)
    )               reduce using rule 149 (alpha_upper -> H .)
    *               reduce using rule 149 (alpha_upper -> H .)
    +               reduce using rule 149 (alpha_upper -> H .)
    ,               reduce using rule 149 (alpha_upper -> H .)
    .               reduce using rule 149 (alpha_upper -> H .)
    /               reduce using rule 149 (alpha_upper -> H .)
    :               reduce using rule 149 (alpha_upper -> H .)
    ;               reduce using rule 149 (alpha_upper -> H .)
    <               reduce using rule 149 (alpha_upper -> H .)
    =               reduce using rule 149 (alpha_upper -> H .)
    >               reduce using rule 149 (alpha_upper -> H .)
    ?               reduce using rule 149 (alpha_upper -> H .)
    @               reduce using rule 149 (alpha_upper -> H .)
    [               reduce using rule 149 (alpha_upper -> H .)
    \               reduce using rule 149 (alpha_upper -> H .)
    _               reduce using rule 149 (alpha_upper -> H .)
    `               reduce using rule 149 (alpha_upper -> H .)
    {               reduce using rule 149 (alpha_upper -> H .)
    }               reduce using rule 149 (alpha_upper -> H .)
    ~               reduce using rule 149 (alpha_upper -> H .)
    ESCAPED         reduce using rule 149 (alpha_upper -> H .)
    DIGIT           reduce using rule 149 (alpha_upper -> H .)
    OTHER           reduce using rule 149 (alpha_upper -> H .)
    a               reduce using rule 149 (alpha_upper -> H .)
    b               reduce using rule 149 (alpha_upper -> H .)
    c               reduce using rule 149 (alpha_upper -> H .)
    d               reduce using rule 149 (alpha_upper -> H .)
    e               reduce using rule 149 (alpha_upper -> H .)
    f               reduce using rule 149 (alpha_upper -> H .)
    g               reduce using rule 149 (alpha_upper -> H .)
    h               reduce using rule 149 (alpha_upper -> H .)
    i               reduce using rule 149 (alpha_upper -> H .)
    j               reduce using rule 149 (alpha_upper -> H .)
    k               reduce using rule 149 (alpha_upper -> H .)
    l               reduce using rule 149 (alpha_upper -> H .)
    m               reduce using rule 149 (alpha_upper -> H .)
    n               reduce using rule 149 (alpha_upper -> H .)
    o               reduce using rule 149 (alpha_upper -> H .)
    p               reduce using rule 149 (alpha_upper -> H .)
    q               reduce using rule 149 (alpha_upper -> H .)
    r               reduce using rule 149 (alpha_upper -> H .)
    s               reduce using rule 149 (alpha_upper -> H .)
    t               reduce using rule 149 (alpha_upper -> H .)
    u               reduce using rule 149 (alpha_upper -> H .)
    v               reduce using rule 149 (alpha_upper -> H .)
    w               reduce using rule 149 (alpha_upper -> H .)
    x               reduce using rule 149 (alpha_upper -> H .)
    y               reduce using rule 149 (alpha_upper -> H .)
    z               reduce using rule 149 (alpha_upper -> H .)
    A               reduce using rule 149 (alpha_upper -> H .)
    B               reduce using rule 149 (alpha_upper -> H .)
    C               reduce using rule 149 (alpha_upper -> H .)
    D               reduce using rule 149 (alpha_upper -> H .)
    E               reduce using rule 149 (alpha_upper -> H .)
    F               reduce using rule 149 (alpha_upper -> H .)
    G               reduce using rule 149 (alpha_upper -> H .)
    H               reduce using rule 149 (alpha_upper -> H .)
    I               reduce using rule 149 (alpha_upper -> H .)
    J               reduce using rule 149 (alpha_upper -> H .)
    K               reduce using rule 149 (alpha_upper -> H .)
    L               reduce using rule 149 (alpha_upper -> H .)
    M               reduce using rule 149 (alpha_upper -> H .)
    N               reduce using rule 149 (alpha_upper -> H .)
    O               reduce using rule 149 (alpha_upper -> H .)
    P               reduce using rule 149 (alpha_upper -> H .)
    Q               reduce using rule 149 (alpha_upper -> H .)
    R               reduce using rule 149 (alpha_upper -> H .)
    S               reduce using rule 149 (alpha_upper -> H .)
    T               reduce using rule 149 (alpha_upper -> H .)
    U               reduce using rule 149 (alpha_upper -> H .)
    V               reduce using rule 149 (alpha_upper -> H .)
    W               reduce using rule 149 (alpha_upper -> H .)
    X               reduce using rule 149 (alpha_upper -> H .)
    Y               reduce using rule 149 (alpha_upper -> H .)
    Z               reduce using rule 149 (alpha_upper -> H .)
    |               reduce using rule 149 (alpha_upper -> H .)
    ]               reduce using rule 149 (alpha_upper -> H .)
    ^               reduce using rule 149 (alpha_upper -> H .)
    $end            reduce using rule 149 (alpha_upper -> H .)


state 20

    (140) alpha_lower -> y .

    !               reduce using rule 140 (alpha_lower -> y .)
    "               reduce using rule 140 (alpha_lower -> y .)
    #               reduce using rule 140 (alpha_lower -> y .)
    $               reduce using rule 140 (alpha_lower -> y .)
    %               reduce using rule 140 (alpha_lower -> y .)
    &               reduce using rule 140 (alpha_lower -> y .)
    '               reduce using rule 140 (alpha_lower -> y .)
    (               reduce using rule 140 (alpha_lower -> y .)
    )               reduce using rule 140 (alpha_lower -> y .)
    *               reduce using rule 140 (alpha_lower -> y .)
    +               reduce using rule 140 (alpha_lower -> y .)
    ,               reduce using rule 140 (alpha_lower -> y .)
    .               reduce using rule 140 (alpha_lower -> y .)
    /               reduce using rule 140 (alpha_lower -> y .)
    :               reduce using rule 140 (alpha_lower -> y .)
    ;               reduce using rule 140 (alpha_lower -> y .)
    <               reduce using rule 140 (alpha_lower -> y .)
    =               reduce using rule 140 (alpha_lower -> y .)
    >               reduce using rule 140 (alpha_lower -> y .)
    ?               reduce using rule 140 (alpha_lower -> y .)
    @               reduce using rule 140 (alpha_lower -> y .)
    [               reduce using rule 140 (alpha_lower -> y .)
    \               reduce using rule 140 (alpha_lower -> y .)
    _               reduce using rule 140 (alpha_lower -> y .)
    `               reduce using rule 140 (alpha_lower -> y .)
    {               reduce using rule 140 (alpha_lower -> y .)
    }               reduce using rule 140 (alpha_lower -> y .)
    ~               reduce using rule 140 (alpha_lower -> y .)
    ESCAPED         reduce using rule 140 (alpha_lower -> y .)
    DIGIT           reduce using rule 140 (alpha_lower -> y .)
    OTHER           reduce using rule 140 (alpha_lower -> y .)
    a               reduce using rule 140 (alpha_lower -> y .)
    b               reduce using rule 140 (alpha_lower -> y .)
    c               reduce using rule 140 (alpha_lower -> y .)
    d               reduce using rule 140 (alpha_lower -> y .)
    e               reduce using rule 140 (alpha_lower -> y .)
    f               reduce using rule 140 (alpha_lower -> y .)
    g               reduce using rule 140 (alpha_lower -> y .)
    h               reduce using rule 140 (alpha_lower -> y .)
    i               reduce using rule 140 (alpha_lower -> y .)
    j               reduce using rule 140 (alpha_lower -> y .)
    k               reduce using rule 140 (alpha_lower -> y .)
    l               reduce using rule 140 (alpha_lower -> y .)
    m               reduce using rule 140 (alpha_lower -> y .)
    n               reduce using rule 140 (alpha_lower -> y .)
    o               reduce using rule 140 (alpha_lower -> y .)
    p               reduce using rule 140 (alpha_lower -> y .)
    q               reduce using rule 140 (alpha_lower -> y .)
    r               reduce using rule 140 (alpha_lower -> y .)
    s               reduce using rule 140 (alpha_lower -> y .)
    t               reduce using rule 140 (alpha_lower -> y .)
    u               reduce using rule 140 (alpha_lower -> y .)
    v               reduce using rule 140 (alpha_lower -> y .)
    w               reduce using rule 140 (alpha_lower -> y .)
    x               reduce using rule 140 (alpha_lower -> y .)
    y               reduce using rule 140 (alpha_lower -> y .)
    z               reduce using rule 140 (alpha_lower -> y .)
    A               reduce using rule 140 (alpha_lower -> y .)
    B               reduce using rule 140 (alpha_lower -> y .)
    C               reduce using rule 140 (alpha_lower -> y .)
    D               reduce using rule 140 (alpha_lower -> y .)
    E               reduce using rule 140 (alpha_lower -> y .)
    F               reduce using rule 140 (alpha_lower -> y .)
    G               reduce using rule 140 (alpha_lower -> y .)
    H               reduce using rule 140 (alpha_lower -> y .)
    I               reduce using rule 140 (alpha_lower -> y .)
    J               reduce using rule 140 (alpha_lower -> y .)
    K               reduce using rule 140 (alpha_lower -> y .)
    L               reduce using rule 140 (alpha_lower -> y .)
    M               reduce using rule 140 (alpha_lower -> y .)
    N               reduce using rule 140 (alpha_lower -> y .)
    O               reduce using rule 140 (alpha_lower -> y .)
    P               reduce using rule 140 (alpha_lower -> y .)
    Q               reduce using rule 140 (alpha_lower -> y .)
    R               reduce using rule 140 (alpha_lower -> y .)
    S               reduce using rule 140 (alpha_lower -> y .)
    T               reduce using rule 140 (alpha_lower -> y .)
    U               reduce using rule 140 (alpha_lower -> y .)
    V               reduce using rule 140 (alpha_lower -> y .)
    W               reduce using rule 140 (alpha_lower -> y .)
    X               reduce using rule 140 (alpha_lower -> y .)
    Y               reduce using rule 140 (alpha_lower -> y .)
    Z               reduce using rule 140 (alpha_lower -> y .)
    |               reduce using rule 140 (alpha_lower -> y .)
    ]               reduce using rule 140 (alpha_lower -> y .)
    -               reduce using rule 140 (alpha_lower -> y .)
    ^               reduce using rule 140 (alpha_lower -> y .)
    $end            reduce using rule 140 (alpha_lower -> y .)


state 21

    (148) alpha_upper -> G .

    -               reduce using rule 148 (alpha_upper -> G .)
    !               reduce using rule 148 (alpha_upper -> G .)
    "               reduce using rule 148 (alpha_upper -> G .)
    #               reduce using rule 148 (alpha_upper -> G .)
    $               reduce using rule 148 (alpha_upper -> G .)
    %               reduce using rule 148 (alpha_upper -> G .)
    &               reduce using rule 148 (alpha_upper -> G .)
    '               reduce using rule 148 (alpha_upper -> G .)
    (               reduce using rule 148 (alpha_upper -> G .)
    )               reduce using rule 148 (alpha_upper -> G .)
    *               reduce using rule 148 (alpha_upper -> G .)
    +               reduce using rule 148 (alpha_upper -> G .)
    ,               reduce using rule 148 (alpha_upper -> G .)
    .               reduce using rule 148 (alpha_upper -> G .)
    /               reduce using rule 148 (alpha_upper -> G .)
    :               reduce using rule 148 (alpha_upper -> G .)
    ;               reduce using rule 148 (alpha_upper -> G .)
    <               reduce using rule 148 (alpha_upper -> G .)
    =               reduce using rule 148 (alpha_upper -> G .)
    >               reduce using rule 148 (alpha_upper -> G .)
    ?               reduce using rule 148 (alpha_upper -> G .)
    @               reduce using rule 148 (alpha_upper -> G .)
    [               reduce using rule 148 (alpha_upper -> G .)
    \               reduce using rule 148 (alpha_upper -> G .)
    _               reduce using rule 148 (alpha_upper -> G .)
    `               reduce using rule 148 (alpha_upper -> G .)
    {               reduce using rule 148 (alpha_upper -> G .)
    }               reduce using rule 148 (alpha_upper -> G .)
    ~               reduce using rule 148 (alpha_upper -> G .)
    ESCAPED         reduce using rule 148 (alpha_upper -> G .)
    DIGIT           reduce using rule 148 (alpha_upper -> G .)
    OTHER           reduce using rule 148 (alpha_upper -> G .)
    a               reduce using rule 148 (alpha_upper -> G .)
    b               reduce using rule 148 (alpha_upper -> G .)
    c               reduce using rule 148 (alpha_upper -> G .)
    d               reduce using rule 148 (alpha_upper -> G .)
    e               reduce using rule 148 (alpha_upper -> G .)
    f               reduce using rule 148 (alpha_upper -> G .)
    g               reduce using rule 148 (alpha_upper -> G .)
    h               reduce using rule 148 (alpha_upper -> G .)
    i               reduce using rule 148 (alpha_upper -> G .)
    j               reduce using rule 148 (alpha_upper -> G .)
    k               reduce using rule 148 (alpha_upper -> G .)
    l               reduce using rule 148 (alpha_upper -> G .)
    m               reduce using rule 148 (alpha_upper -> G .)
    n               reduce using rule 148 (alpha_upper -> G .)
    o               reduce using rule 148 (alpha_upper -> G .)
    p               reduce using rule 148 (alpha_upper -> G .)
    q               reduce using rule 148 (alpha_upper -> G .)
    r               reduce using rule 148 (alpha_upper -> G .)
    s               reduce using rule 148 (alpha_upper -> G .)
    t               reduce using rule 148 (alpha_upper -> G .)
    u               reduce using rule 148 (alpha_upper -> G .)
    v               reduce using rule 148 (alpha_upper -> G .)
    w               reduce using rule 148 (alpha_upper -> G .)
    x               reduce using rule 148 (alpha_upper -> G .)
    y               reduce using rule 148 (alpha_upper -> G .)
    z               reduce using rule 148 (alpha_upper -> G .)
    A               reduce using rule 148 (alpha_upper -> G .)
    B               reduce using rule 148 (alpha_upper -> G .)
    C               reduce using rule 148 (alpha_upper -> G .)
    D               reduce using rule 148 (alpha_upper -> G .)
    E               reduce using rule 148 (alpha_upper -> G .)
    F               reduce using rule 148 (alpha_upper -> G .)
    G               reduce using rule 148 (alpha_upper -> G .)
    H               reduce using rule 148 (alpha_upper -> G .)
    I               reduce using rule 148 (alpha_upper -> G .)
    J               reduce using rule 148 (alpha_upper -> G .)
    K               reduce using rule 148 (alpha_upper -> G .)
    L               reduce using rule 148 (alpha_upper -> G .)
    M               reduce using rule 148 (alpha_upper -> G .)
    N               reduce using rule 148 (alpha_upper -> G .)
    O               reduce using rule 148 (alpha_upper -> G .)
    P               reduce using rule 148 (alpha_upper -> G .)
    Q               reduce using rule 148 (alpha_upper -> G .)
    R               reduce using rule 148 (alpha_upper -> G .)
    S               reduce using rule 148 (alpha_upper -> G .)
    T               reduce using rule 148 (alpha_upper -> G .)
    U               reduce using rule 148 (alpha_upper -> G .)
    V               reduce using rule 148 (alpha_upper -> G .)
    W               reduce using rule 148 (alpha_upper -> G .)
    X               reduce using rule 148 (alpha_upper -> G .)
    Y               reduce using rule 148 (alpha_upper -> G .)
    Z               reduce using rule 148 (alpha_upper -> G .)
    |               reduce using rule 148 (alpha_upper -> G .)
    ]               reduce using rule 148 (alpha_upper -> G .)
    ^               reduce using rule 148 (alpha_upper -> G .)
    $end            reduce using rule 148 (alpha_upper -> G .)


state 22

    (160) alpha_upper -> S .

    -               reduce using rule 160 (alpha_upper -> S .)
    !               reduce using rule 160 (alpha_upper -> S .)
    "               reduce using rule 160 (alpha_upper -> S .)
    #               reduce using rule 160 (alpha_upper -> S .)
    $               reduce using rule 160 (alpha_upper -> S .)
    %               reduce using rule 160 (alpha_upper -> S .)
    &               reduce using rule 160 (alpha_upper -> S .)
    '               reduce using rule 160 (alpha_upper -> S .)
    (               reduce using rule 160 (alpha_upper -> S .)
    )               reduce using rule 160 (alpha_upper -> S .)
    *               reduce using rule 160 (alpha_upper -> S .)
    +               reduce using rule 160 (alpha_upper -> S .)
    ,               reduce using rule 160 (alpha_upper -> S .)
    .               reduce using rule 160 (alpha_upper -> S .)
    /               reduce using rule 160 (alpha_upper -> S .)
    :               reduce using rule 160 (alpha_upper -> S .)
    ;               reduce using rule 160 (alpha_upper -> S .)
    <               reduce using rule 160 (alpha_upper -> S .)
    =               reduce using rule 160 (alpha_upper -> S .)
    >               reduce using rule 160 (alpha_upper -> S .)
    ?               reduce using rule 160 (alpha_upper -> S .)
    @               reduce using rule 160 (alpha_upper -> S .)
    [               reduce using rule 160 (alpha_upper -> S .)
    \               reduce using rule 160 (alpha_upper -> S .)
    _               reduce using rule 160 (alpha_upper -> S .)
    `               reduce using rule 160 (alpha_upper -> S .)
    {               reduce using rule 160 (alpha_upper -> S .)
    }               reduce using rule 160 (alpha_upper -> S .)
    ~               reduce using rule 160 (alpha_upper -> S .)
    ESCAPED         reduce using rule 160 (alpha_upper -> S .)
    DIGIT           reduce using rule 160 (alpha_upper -> S .)
    OTHER           reduce using rule 160 (alpha_upper -> S .)
    a               reduce using rule 160 (alpha_upper -> S .)
    b               reduce using rule 160 (alpha_upper -> S .)
    c               reduce using rule 160 (alpha_upper -> S .)
    d               reduce using rule 160 (alpha_upper -> S .)
    e               reduce using rule 160 (alpha_upper -> S .)
    f               reduce using rule 160 (alpha_upper -> S .)
    g               reduce using rule 160 (alpha_upper -> S .)
    h               reduce using rule 160 (alpha_upper -> S .)
    i               reduce using rule 160 (alpha_upper -> S .)
    j               reduce using rule 160 (alpha_upper -> S .)
    k               reduce using rule 160 (alpha_upper -> S .)
    l               reduce using rule 160 (alpha_upper -> S .)
    m               reduce using rule 160 (alpha_upper -> S .)
    n               reduce using rule 160 (alpha_upper -> S .)
    o               reduce using rule 160 (alpha_upper -> S .)
    p               reduce using rule 160 (alpha_upper -> S .)
    q               reduce using rule 160 (alpha_upper -> S .)
    r               reduce using rule 160 (alpha_upper -> S .)
    s               reduce using rule 160 (alpha_upper -> S .)
    t               reduce using rule 160 (alpha_upper -> S .)
    u               reduce using rule 160 (alpha_upper -> S .)
    v               reduce using rule 160 (alpha_upper -> S .)
    w               reduce using rule 160 (alpha_upper -> S .)
    x               reduce using rule 160 (alpha_upper -> S .)
    y               reduce using rule 160 (alpha_upper -> S .)
    z               reduce using rule 160 (alpha_upper -> S .)
    A               reduce using rule 160 (alpha_upper -> S .)
    B               reduce using rule 160 (alpha_upper -> S .)
    C               reduce using rule 160 (alpha_upper -> S .)
    D               reduce using rule 160 (alpha_upper -> S .)
    E               reduce using rule 160 (alpha_upper -> S .)
    F               reduce using rule 160 (alpha_upper -> S .)
    G               reduce using rule 160 (alpha_upper -> S .)
    H               reduce using rule 160 (alpha_upper -> S .)
    I               reduce using rule 160 (alpha_upper -> S .)
    J               reduce using rule 160 (alpha_upper -> S .)
    K               reduce using rule 160 (alpha_upper -> S .)
    L               reduce using rule 160 (alpha_upper -> S .)
    M               reduce using rule 160 (alpha_upper -> S .)
    N               reduce using rule 160 (alpha_upper -> S .)
    O               reduce using rule 160 (alpha_upper -> S .)
    P               reduce using rule 160 (alpha_upper -> S .)
    Q               reduce using rule 160 (alpha_upper -> S .)
    R               reduce using rule 160 (alpha_upper -> S .)
    S               reduce using rule 160 (alpha_upper -> S .)
    T               reduce using rule 160 (alpha_upper -> S .)
    U               reduce using rule 160 (alpha_upper -> S .)
    V               reduce using rule 160 (alpha_upper -> S .)
    W               reduce using rule 160 (alpha_upper -> S .)
    X               reduce using rule 160 (alpha_upper -> S .)
    Y               reduce using rule 160 (alpha_upper -> S .)
    Z               reduce using rule 160 (alpha_upper -> S .)
    |               reduce using rule 160 (alpha_upper -> S .)
    ]               reduce using rule 160 (alpha_upper -> S .)
    ^               reduce using rule 160 (alpha_upper -> S .)
    $end            reduce using rule 160 (alpha_upper -> S .)


state 23

    (165) alpha_upper -> X .

    -               reduce using rule 165 (alpha_upper -> X .)
    !               reduce using rule 165 (alpha_upper -> X .)
    "               reduce using rule 165 (alpha_upper -> X .)
    #               reduce using rule 165 (alpha_upper -> X .)
    $               reduce using rule 165 (alpha_upper -> X .)
    %               reduce using rule 165 (alpha_upper -> X .)
    &               reduce using rule 165 (alpha_upper -> X .)
    '               reduce using rule 165 (alpha_upper -> X .)
    (               reduce using rule 165 (alpha_upper -> X .)
    )               reduce using rule 165 (alpha_upper -> X .)
    *               reduce using rule 165 (alpha_upper -> X .)
    +               reduce using rule 165 (alpha_upper -> X .)
    ,               reduce using rule 165 (alpha_upper -> X .)
    .               reduce using rule 165 (alpha_upper -> X .)
    /               reduce using rule 165 (alpha_upper -> X .)
    :               reduce using rule 165 (alpha_upper -> X .)
    ;               reduce using rule 165 (alpha_upper -> X .)
    <               reduce using rule 165 (alpha_upper -> X .)
    =               reduce using rule 165 (alpha_upper -> X .)
    >               reduce using rule 165 (alpha_upper -> X .)
    ?               reduce using rule 165 (alpha_upper -> X .)
    @               reduce using rule 165 (alpha_upper -> X .)
    [               reduce using rule 165 (alpha_upper -> X .)
    \               reduce using rule 165 (alpha_upper -> X .)
    _               reduce using rule 165 (alpha_upper -> X .)
    `               reduce using rule 165 (alpha_upper -> X .)
    {               reduce using rule 165 (alpha_upper -> X .)
    }               reduce using rule 165 (alpha_upper -> X .)
    ~               reduce using rule 165 (alpha_upper -> X .)
    ESCAPED         reduce using rule 165 (alpha_upper -> X .)
    DIGIT           reduce using rule 165 (alpha_upper -> X .)
    OTHER           reduce using rule 165 (alpha_upper -> X .)
    a               reduce using rule 165 (alpha_upper -> X .)
    b               reduce using rule 165 (alpha_upper -> X .)
    c               reduce using rule 165 (alpha_upper -> X .)
    d               reduce using rule 165 (alpha_upper -> X .)
    e               reduce using rule 165 (alpha_upper -> X .)
    f               reduce using rule 165 (alpha_upper -> X .)
    g               reduce using rule 165 (alpha_upper -> X .)
    h               reduce using rule 165 (alpha_upper -> X .)
    i               reduce using rule 165 (alpha_upper -> X .)
    j               reduce using rule 165 (alpha_upper -> X .)
    k               reduce using rule 165 (alpha_upper -> X .)
    l               reduce using rule 165 (alpha_upper -> X .)
    m               reduce using rule 165 (alpha_upper -> X .)
    n               reduce using rule 165 (alpha_upper -> X .)
    o               reduce using rule 165 (alpha_upper -> X .)
    p               reduce using rule 165 (alpha_upper -> X .)
    q               reduce using rule 165 (alpha_upper -> X .)
    r               reduce using rule 165 (alpha_upper -> X .)
    s               reduce using rule 165 (alpha_upper -> X .)
    t               reduce using rule 165 (alpha_upper -> X .)
    u               reduce using rule 165 (alpha_upper -> X .)
    v               reduce using rule 165 (alpha_upper -> X .)
    w               reduce using rule 165 (alpha_upper -> X .)
    x               reduce using rule 165 (alpha_upper -> X .)
    y               reduce using rule 165 (alpha_upper -> X .)
    z               reduce using rule 165 (alpha_upper -> X .)
    A               reduce using rule 165 (alpha_upper -> X .)
    B               reduce using rule 165 (alpha_upper -> X .)
    C               reduce using rule 165 (alpha_upper -> X .)
    D               reduce using rule 165 (alpha_upper -> X .)
    E               reduce using rule 165 (alpha_upper -> X .)
    F               reduce using rule 165 (alpha_upper -> X .)
    G               reduce using rule 165 (alpha_upper -> X .)
    H               reduce using rule 165 (alpha_upper -> X .)
    I               reduce using rule 165 (alpha_upper -> X .)
    J               reduce using rule 165 (alpha_upper -> X .)
    K               reduce using rule 165 (alpha_upper -> X .)
    L               reduce using rule 165 (alpha_upper -> X .)
    M               reduce using rule 165 (alpha_upper -> X .)
    N               reduce using rule 165 (alpha_upper -> X .)
    O               reduce using rule 165 (alpha_upper -> X .)
    P               reduce using rule 165 (alpha_upper -> X .)
    Q               reduce using rule 165 (alpha_upper -> X .)
    R               reduce using rule 165 (alpha_upper -> X .)
    S               reduce using rule 165 (alpha_upper -> X .)
    T               reduce using rule 165 (alpha_upper -> X .)
    U               reduce using rule 165 (alpha_upper -> X .)
    V               reduce using rule 165 (alpha_upper -> X .)
    W               reduce using rule 165 (alpha_upper -> X .)
    X               reduce using rule 165 (alpha_upper -> X .)
    Y               reduce using rule 165 (alpha_upper -> X .)
    Z               reduce using rule 165 (alpha_upper -> X .)
    |               reduce using rule 165 (alpha_upper -> X .)
    ]               reduce using rule 165 (alpha_upper -> X .)
    ^               reduce using rule 165 (alpha_upper -> X .)
    $end            reduce using rule 165 (alpha_upper -> X .)


state 24

    (143) alpha_upper -> B .

    -               reduce using rule 143 (alpha_upper -> B .)
    !               reduce using rule 143 (alpha_upper -> B .)
    "               reduce using rule 143 (alpha_upper -> B .)
    #               reduce using rule 143 (alpha_upper -> B .)
    $               reduce using rule 143 (alpha_upper -> B .)
    %               reduce using rule 143 (alpha_upper -> B .)
    &               reduce using rule 143 (alpha_upper -> B .)
    '               reduce using rule 143 (alpha_upper -> B .)
    (               reduce using rule 143 (alpha_upper -> B .)
    )               reduce using rule 143 (alpha_upper -> B .)
    *               reduce using rule 143 (alpha_upper -> B .)
    +               reduce using rule 143 (alpha_upper -> B .)
    ,               reduce using rule 143 (alpha_upper -> B .)
    .               reduce using rule 143 (alpha_upper -> B .)
    /               reduce using rule 143 (alpha_upper -> B .)
    :               reduce using rule 143 (alpha_upper -> B .)
    ;               reduce using rule 143 (alpha_upper -> B .)
    <               reduce using rule 143 (alpha_upper -> B .)
    =               reduce using rule 143 (alpha_upper -> B .)
    >               reduce using rule 143 (alpha_upper -> B .)
    ?               reduce using rule 143 (alpha_upper -> B .)
    @               reduce using rule 143 (alpha_upper -> B .)
    [               reduce using rule 143 (alpha_upper -> B .)
    \               reduce using rule 143 (alpha_upper -> B .)
    _               reduce using rule 143 (alpha_upper -> B .)
    `               reduce using rule 143 (alpha_upper -> B .)
    {               reduce using rule 143 (alpha_upper -> B .)
    }               reduce using rule 143 (alpha_upper -> B .)
    ~               reduce using rule 143 (alpha_upper -> B .)
    ESCAPED         reduce using rule 143 (alpha_upper -> B .)
    DIGIT           reduce using rule 143 (alpha_upper -> B .)
    OTHER           reduce using rule 143 (alpha_upper -> B .)
    a               reduce using rule 143 (alpha_upper -> B .)
    b               reduce using rule 143 (alpha_upper -> B .)
    c               reduce using rule 143 (alpha_upper -> B .)
    d               reduce using rule 143 (alpha_upper -> B .)
    e               reduce using rule 143 (alpha_upper -> B .)
    f               reduce using rule 143 (alpha_upper -> B .)
    g               reduce using rule 143 (alpha_upper -> B .)
    h               reduce using rule 143 (alpha_upper -> B .)
    i               reduce using rule 143 (alpha_upper -> B .)
    j               reduce using rule 143 (alpha_upper -> B .)
    k               reduce using rule 143 (alpha_upper -> B .)
    l               reduce using rule 143 (alpha_upper -> B .)
    m               reduce using rule 143 (alpha_upper -> B .)
    n               reduce using rule 143 (alpha_upper -> B .)
    o               reduce using rule 143 (alpha_upper -> B .)
    p               reduce using rule 143 (alpha_upper -> B .)
    q               reduce using rule 143 (alpha_upper -> B .)
    r               reduce using rule 143 (alpha_upper -> B .)
    s               reduce using rule 143 (alpha_upper -> B .)
    t               reduce using rule 143 (alpha_upper -> B .)
    u               reduce using rule 143 (alpha_upper -> B .)
    v               reduce using rule 143 (alpha_upper -> B .)
    w               reduce using rule 143 (alpha_upper -> B .)
    x               reduce using rule 143 (alpha_upper -> B .)
    y               reduce using rule 143 (alpha_upper -> B .)
    z               reduce using rule 143 (alpha_upper -> B .)
    A               reduce using rule 143 (alpha_upper -> B .)
    B               reduce using rule 143 (alpha_upper -> B .)
    C               reduce using rule 143 (alpha_upper -> B .)
    D               reduce using rule 143 (alpha_upper -> B .)
    E               reduce using rule 143 (alpha_upper -> B .)
    F               reduce using rule 143 (alpha_upper -> B .)
    G               reduce using rule 143 (alpha_upper -> B .)
    H               reduce using rule 143 (alpha_upper -> B .)
    I               reduce using rule 143 (alpha_upper -> B .)
    J               reduce using rule 143 (alpha_upper -> B .)
    K               reduce using rule 143 (alpha_upper -> B .)
    L               reduce using rule 143 (alpha_upper -> B .)
    M               reduce using rule 143 (alpha_upper -> B .)
    N               reduce using rule 143 (alpha_upper -> B .)
    O               reduce using rule 143 (alpha_upper -> B .)
    P               reduce using rule 143 (alpha_upper -> B .)
    Q               reduce using rule 143 (alpha_upper -> B .)
    R               reduce using rule 143 (alpha_upper -> B .)
    S               reduce using rule 143 (alpha_upper -> B .)
    T               reduce using rule 143 (alpha_upper -> B .)
    U               reduce using rule 143 (alpha_upper -> B .)
    V               reduce using rule 143 (alpha_upper -> B .)
    W               reduce using rule 143 (alpha_upper -> B .)
    X               reduce using rule 143 (alpha_upper -> B .)
    Y               reduce using rule 143 (alpha_upper -> B .)
    Z               reduce using rule 143 (alpha_upper -> B .)
    |               reduce using rule 143 (alpha_upper -> B .)
    ]               reduce using rule 143 (alpha_upper -> B .)
    ^               reduce using rule 143 (alpha_upper -> B .)
    $end            reduce using rule 143 (alpha_upper -> B .)


state 25

    (36) nodispmatch -> ; .

    *               reduce using rule 36 (nodispmatch -> ; .)
    +               reduce using rule 36 (nodispmatch -> ; .)
    ?               reduce using rule 36 (nodispmatch -> ; .)
    {               reduce using rule 36 (nodispmatch -> ; .)
    (               reduce using rule 36 (nodispmatch -> ; .)
    ^               reduce using rule 36 (nodispmatch -> ; .)
    >               reduce using rule 36 (nodispmatch -> ; .)
    <               reduce using rule 36 (nodispmatch -> ; .)
    /               reduce using rule 36 (nodispmatch -> ; .)
    \               reduce using rule 36 (nodispmatch -> ; .)
    #               reduce using rule 36 (nodispmatch -> ; .)
    %               reduce using rule 36 (nodispmatch -> ; .)
    ESCAPED         reduce using rule 36 (nodispmatch -> ; .)
    DIGIT           reduce using rule 36 (nodispmatch -> ; .)
    OTHER           reduce using rule 36 (nodispmatch -> ; .)
    [               reduce using rule 36 (nodispmatch -> ; .)
    .               reduce using rule 36 (nodispmatch -> ; .)
    ,               reduce using rule 36 (nodispmatch -> ; .)
    :               reduce using rule 36 (nodispmatch -> ; .)
    ;               reduce using rule 36 (nodispmatch -> ; .)
    $               reduce using rule 36 (nodispmatch -> ; .)
    `               reduce using rule 36 (nodispmatch -> ; .)
    a               reduce using rule 36 (nodispmatch -> ; .)
    b               reduce using rule 36 (nodispmatch -> ; .)
    c               reduce using rule 36 (nodispmatch -> ; .)
    d               reduce using rule 36 (nodispmatch -> ; .)
    e               reduce using rule 36 (nodispmatch -> ; .)
    f               reduce using rule 36 (nodispmatch -> ; .)
    g               reduce using rule 36 (nodispmatch -> ; .)
    h               reduce using rule 36 (nodispmatch -> ; .)
    i               reduce using rule 36 (nodispmatch -> ; .)
    j               reduce using rule 36 (nodispmatch -> ; .)
    k               reduce using rule 36 (nodispmatch -> ; .)
    l               reduce using rule 36 (nodispmatch -> ; .)
    m               reduce using rule 36 (nodispmatch -> ; .)
    n               reduce using rule 36 (nodispmatch -> ; .)
    o               reduce using rule 36 (nodispmatch -> ; .)
    p               reduce using rule 36 (nodispmatch -> ; .)
    q               reduce using rule 36 (nodispmatch -> ; .)
    r               reduce using rule 36 (nodispmatch -> ; .)
    s               reduce using rule 36 (nodispmatch -> ; .)
    t               reduce using rule 36 (nodispmatch -> ; .)
    u               reduce using rule 36 (nodispmatch -> ; .)
    v               reduce using rule 36 (nodispmatch -> ; .)
    w               reduce using rule 36 (nodispmatch -> ; .)
    x               reduce using rule 36 (nodispmatch -> ; .)
    y               reduce using rule 36 (nodispmatch -> ; .)
    z               reduce using rule 36 (nodispmatch -> ; .)
    A               reduce using rule 36 (nodispmatch -> ; .)
    B               reduce using rule 36 (nodispmatch -> ; .)
    C               reduce using rule 36 (nodispmatch -> ; .)
    D               reduce using rule 36 (nodispmatch -> ; .)
    E               reduce using rule 36 (nodispmatch -> ; .)
    F               reduce using rule 36 (nodispmatch -> ; .)
    G               reduce using rule 36 (nodispmatch -> ; .)
    H               reduce using rule 36 (nodispmatch -> ; .)
    I               reduce using rule 36 (nodispmatch -> ; .)
    J               reduce using rule 36 (nodispmatch -> ; .)
    K               reduce using rule 36 (nodispmatch -> ; .)
    L               reduce using rule 36 (nodispmatch -> ; .)
    M               reduce using rule 36 (nodispmatch -> ; .)
    N               reduce using rule 36 (nodispmatch -> ; .)
    O               reduce using rule 36 (nodispmatch -> ; .)
    P               reduce using rule 36 (nodispmatch -> ; .)
    Q               reduce using rule 36 (nodispmatch -> ; .)
    R               reduce using rule 36 (nodispmatch -> ; .)
    S               reduce using rule 36 (nodispmatch -> ; .)
    T               reduce using rule 36 (nodispmatch -> ; .)
    U               reduce using rule 36 (nodispmatch -> ; .)
    V               reduce using rule 36 (nodispmatch -> ; .)
    W               reduce using rule 36 (nodispmatch -> ; .)
    X               reduce using rule 36 (nodispmatch -> ; .)
    Y               reduce using rule 36 (nodispmatch -> ; .)
    Z               reduce using rule 36 (nodispmatch -> ; .)
    |               reduce using rule 36 (nodispmatch -> ; .)
    )               reduce using rule 36 (nodispmatch -> ; .)
    $end            reduce using rule 36 (nodispmatch -> ; .)


state 26

    (39) group -> ( . groupbody )
    (40) groupbody -> . ? specialgroup
    (41) groupbody -> . basicgroup
    (54) basicgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    ?               shift and go to state 100
    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    nrepeat                        shift and go to state 55
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alternation                    shift and go to state 12
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 101
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    anychar                        shift and go to state 41
    basicgroup                     shift and go to state 102
    groupbody                      shift and go to state 99

state 27

    (133) alpha_lower -> r .

    !               reduce using rule 133 (alpha_lower -> r .)
    "               reduce using rule 133 (alpha_lower -> r .)
    #               reduce using rule 133 (alpha_lower -> r .)
    $               reduce using rule 133 (alpha_lower -> r .)
    %               reduce using rule 133 (alpha_lower -> r .)
    &               reduce using rule 133 (alpha_lower -> r .)
    '               reduce using rule 133 (alpha_lower -> r .)
    (               reduce using rule 133 (alpha_lower -> r .)
    )               reduce using rule 133 (alpha_lower -> r .)
    *               reduce using rule 133 (alpha_lower -> r .)
    +               reduce using rule 133 (alpha_lower -> r .)
    ,               reduce using rule 133 (alpha_lower -> r .)
    .               reduce using rule 133 (alpha_lower -> r .)
    /               reduce using rule 133 (alpha_lower -> r .)
    :               reduce using rule 133 (alpha_lower -> r .)
    ;               reduce using rule 133 (alpha_lower -> r .)
    <               reduce using rule 133 (alpha_lower -> r .)
    =               reduce using rule 133 (alpha_lower -> r .)
    >               reduce using rule 133 (alpha_lower -> r .)
    ?               reduce using rule 133 (alpha_lower -> r .)
    @               reduce using rule 133 (alpha_lower -> r .)
    [               reduce using rule 133 (alpha_lower -> r .)
    \               reduce using rule 133 (alpha_lower -> r .)
    _               reduce using rule 133 (alpha_lower -> r .)
    `               reduce using rule 133 (alpha_lower -> r .)
    {               reduce using rule 133 (alpha_lower -> r .)
    }               reduce using rule 133 (alpha_lower -> r .)
    ~               reduce using rule 133 (alpha_lower -> r .)
    ESCAPED         reduce using rule 133 (alpha_lower -> r .)
    DIGIT           reduce using rule 133 (alpha_lower -> r .)
    OTHER           reduce using rule 133 (alpha_lower -> r .)
    a               reduce using rule 133 (alpha_lower -> r .)
    b               reduce using rule 133 (alpha_lower -> r .)
    c               reduce using rule 133 (alpha_lower -> r .)
    d               reduce using rule 133 (alpha_lower -> r .)
    e               reduce using rule 133 (alpha_lower -> r .)
    f               reduce using rule 133 (alpha_lower -> r .)
    g               reduce using rule 133 (alpha_lower -> r .)
    h               reduce using rule 133 (alpha_lower -> r .)
    i               reduce using rule 133 (alpha_lower -> r .)
    j               reduce using rule 133 (alpha_lower -> r .)
    k               reduce using rule 133 (alpha_lower -> r .)
    l               reduce using rule 133 (alpha_lower -> r .)
    m               reduce using rule 133 (alpha_lower -> r .)
    n               reduce using rule 133 (alpha_lower -> r .)
    o               reduce using rule 133 (alpha_lower -> r .)
    p               reduce using rule 133 (alpha_lower -> r .)
    q               reduce using rule 133 (alpha_lower -> r .)
    r               reduce using rule 133 (alpha_lower -> r .)
    s               reduce using rule 133 (alpha_lower -> r .)
    t               reduce using rule 133 (alpha_lower -> r .)
    u               reduce using rule 133 (alpha_lower -> r .)
    v               reduce using rule 133 (alpha_lower -> r .)
    w               reduce using rule 133 (alpha_lower -> r .)
    x               reduce using rule 133 (alpha_lower -> r .)
    y               reduce using rule 133 (alpha_lower -> r .)
    z               reduce using rule 133 (alpha_lower -> r .)
    A               reduce using rule 133 (alpha_lower -> r .)
    B               reduce using rule 133 (alpha_lower -> r .)
    C               reduce using rule 133 (alpha_lower -> r .)
    D               reduce using rule 133 (alpha_lower -> r .)
    E               reduce using rule 133 (alpha_lower -> r .)
    F               reduce using rule 133 (alpha_lower -> r .)
    G               reduce using rule 133 (alpha_lower -> r .)
    H               reduce using rule 133 (alpha_lower -> r .)
    I               reduce using rule 133 (alpha_lower -> r .)
    J               reduce using rule 133 (alpha_lower -> r .)
    K               reduce using rule 133 (alpha_lower -> r .)
    L               reduce using rule 133 (alpha_lower -> r .)
    M               reduce using rule 133 (alpha_lower -> r .)
    N               reduce using rule 133 (alpha_lower -> r .)
    O               reduce using rule 133 (alpha_lower -> r .)
    P               reduce using rule 133 (alpha_lower -> r .)
    Q               reduce using rule 133 (alpha_lower -> r .)
    R               reduce using rule 133 (alpha_lower -> r .)
    S               reduce using rule 133 (alpha_lower -> r .)
    T               reduce using rule 133 (alpha_lower -> r .)
    U               reduce using rule 133 (alpha_lower -> r .)
    V               reduce using rule 133 (alpha_lower -> r .)
    W               reduce using rule 133 (alpha_lower -> r .)
    X               reduce using rule 133 (alpha_lower -> r .)
    Y               reduce using rule 133 (alpha_lower -> r .)
    Z               reduce using rule 133 (alpha_lower -> r .)
    |               reduce using rule 133 (alpha_lower -> r .)
    ]               reduce using rule 133 (alpha_lower -> r .)
    -               reduce using rule 133 (alpha_lower -> r .)
    ^               reduce using rule 133 (alpha_lower -> r .)
    $end            reduce using rule 133 (alpha_lower -> r .)


state 28

    (147) alpha_upper -> F .

    -               reduce using rule 147 (alpha_upper -> F .)
    !               reduce using rule 147 (alpha_upper -> F .)
    "               reduce using rule 147 (alpha_upper -> F .)
    #               reduce using rule 147 (alpha_upper -> F .)
    $               reduce using rule 147 (alpha_upper -> F .)
    %               reduce using rule 147 (alpha_upper -> F .)
    &               reduce using rule 147 (alpha_upper -> F .)
    '               reduce using rule 147 (alpha_upper -> F .)
    (               reduce using rule 147 (alpha_upper -> F .)
    )               reduce using rule 147 (alpha_upper -> F .)
    *               reduce using rule 147 (alpha_upper -> F .)
    +               reduce using rule 147 (alpha_upper -> F .)
    ,               reduce using rule 147 (alpha_upper -> F .)
    .               reduce using rule 147 (alpha_upper -> F .)
    /               reduce using rule 147 (alpha_upper -> F .)
    :               reduce using rule 147 (alpha_upper -> F .)
    ;               reduce using rule 147 (alpha_upper -> F .)
    <               reduce using rule 147 (alpha_upper -> F .)
    =               reduce using rule 147 (alpha_upper -> F .)
    >               reduce using rule 147 (alpha_upper -> F .)
    ?               reduce using rule 147 (alpha_upper -> F .)
    @               reduce using rule 147 (alpha_upper -> F .)
    [               reduce using rule 147 (alpha_upper -> F .)
    \               reduce using rule 147 (alpha_upper -> F .)
    _               reduce using rule 147 (alpha_upper -> F .)
    `               reduce using rule 147 (alpha_upper -> F .)
    {               reduce using rule 147 (alpha_upper -> F .)
    }               reduce using rule 147 (alpha_upper -> F .)
    ~               reduce using rule 147 (alpha_upper -> F .)
    ESCAPED         reduce using rule 147 (alpha_upper -> F .)
    DIGIT           reduce using rule 147 (alpha_upper -> F .)
    OTHER           reduce using rule 147 (alpha_upper -> F .)
    a               reduce using rule 147 (alpha_upper -> F .)
    b               reduce using rule 147 (alpha_upper -> F .)
    c               reduce using rule 147 (alpha_upper -> F .)
    d               reduce using rule 147 (alpha_upper -> F .)
    e               reduce using rule 147 (alpha_upper -> F .)
    f               reduce using rule 147 (alpha_upper -> F .)
    g               reduce using rule 147 (alpha_upper -> F .)
    h               reduce using rule 147 (alpha_upper -> F .)
    i               reduce using rule 147 (alpha_upper -> F .)
    j               reduce using rule 147 (alpha_upper -> F .)
    k               reduce using rule 147 (alpha_upper -> F .)
    l               reduce using rule 147 (alpha_upper -> F .)
    m               reduce using rule 147 (alpha_upper -> F .)
    n               reduce using rule 147 (alpha_upper -> F .)
    o               reduce using rule 147 (alpha_upper -> F .)
    p               reduce using rule 147 (alpha_upper -> F .)
    q               reduce using rule 147 (alpha_upper -> F .)
    r               reduce using rule 147 (alpha_upper -> F .)
    s               reduce using rule 147 (alpha_upper -> F .)
    t               reduce using rule 147 (alpha_upper -> F .)
    u               reduce using rule 147 (alpha_upper -> F .)
    v               reduce using rule 147 (alpha_upper -> F .)
    w               reduce using rule 147 (alpha_upper -> F .)
    x               reduce using rule 147 (alpha_upper -> F .)
    y               reduce using rule 147 (alpha_upper -> F .)
    z               reduce using rule 147 (alpha_upper -> F .)
    A               reduce using rule 147 (alpha_upper -> F .)
    B               reduce using rule 147 (alpha_upper -> F .)
    C               reduce using rule 147 (alpha_upper -> F .)
    D               reduce using rule 147 (alpha_upper -> F .)
    E               reduce using rule 147 (alpha_upper -> F .)
    F               reduce using rule 147 (alpha_upper -> F .)
    G               reduce using rule 147 (alpha_upper -> F .)
    H               reduce using rule 147 (alpha_upper -> F .)
    I               reduce using rule 147 (alpha_upper -> F .)
    J               reduce using rule 147 (alpha_upper -> F .)
    K               reduce using rule 147 (alpha_upper -> F .)
    L               reduce using rule 147 (alpha_upper -> F .)
    M               reduce using rule 147 (alpha_upper -> F .)
    N               reduce using rule 147 (alpha_upper -> F .)
    O               reduce using rule 147 (alpha_upper -> F .)
    P               reduce using rule 147 (alpha_upper -> F .)
    Q               reduce using rule 147 (alpha_upper -> F .)
    R               reduce using rule 147 (alpha_upper -> F .)
    S               reduce using rule 147 (alpha_upper -> F .)
    T               reduce using rule 147 (alpha_upper -> F .)
    U               reduce using rule 147 (alpha_upper -> F .)
    V               reduce using rule 147 (alpha_upper -> F .)
    W               reduce using rule 147 (alpha_upper -> F .)
    X               reduce using rule 147 (alpha_upper -> F .)
    Y               reduce using rule 147 (alpha_upper -> F .)
    Z               reduce using rule 147 (alpha_upper -> F .)
    |               reduce using rule 147 (alpha_upper -> F .)
    ]               reduce using rule 147 (alpha_upper -> F .)
    ^               reduce using rule 147 (alpha_upper -> F .)
    $end            reduce using rule 147 (alpha_upper -> F .)


state 29

    (157) alpha_upper -> P .

    -               reduce using rule 157 (alpha_upper -> P .)
    !               reduce using rule 157 (alpha_upper -> P .)
    "               reduce using rule 157 (alpha_upper -> P .)
    #               reduce using rule 157 (alpha_upper -> P .)
    $               reduce using rule 157 (alpha_upper -> P .)
    %               reduce using rule 157 (alpha_upper -> P .)
    &               reduce using rule 157 (alpha_upper -> P .)
    '               reduce using rule 157 (alpha_upper -> P .)
    (               reduce using rule 157 (alpha_upper -> P .)
    )               reduce using rule 157 (alpha_upper -> P .)
    *               reduce using rule 157 (alpha_upper -> P .)
    +               reduce using rule 157 (alpha_upper -> P .)
    ,               reduce using rule 157 (alpha_upper -> P .)
    .               reduce using rule 157 (alpha_upper -> P .)
    /               reduce using rule 157 (alpha_upper -> P .)
    :               reduce using rule 157 (alpha_upper -> P .)
    ;               reduce using rule 157 (alpha_upper -> P .)
    <               reduce using rule 157 (alpha_upper -> P .)
    =               reduce using rule 157 (alpha_upper -> P .)
    >               reduce using rule 157 (alpha_upper -> P .)
    ?               reduce using rule 157 (alpha_upper -> P .)
    @               reduce using rule 157 (alpha_upper -> P .)
    [               reduce using rule 157 (alpha_upper -> P .)
    \               reduce using rule 157 (alpha_upper -> P .)
    _               reduce using rule 157 (alpha_upper -> P .)
    `               reduce using rule 157 (alpha_upper -> P .)
    {               reduce using rule 157 (alpha_upper -> P .)
    }               reduce using rule 157 (alpha_upper -> P .)
    ~               reduce using rule 157 (alpha_upper -> P .)
    ESCAPED         reduce using rule 157 (alpha_upper -> P .)
    DIGIT           reduce using rule 157 (alpha_upper -> P .)
    OTHER           reduce using rule 157 (alpha_upper -> P .)
    a               reduce using rule 157 (alpha_upper -> P .)
    b               reduce using rule 157 (alpha_upper -> P .)
    c               reduce using rule 157 (alpha_upper -> P .)
    d               reduce using rule 157 (alpha_upper -> P .)
    e               reduce using rule 157 (alpha_upper -> P .)
    f               reduce using rule 157 (alpha_upper -> P .)
    g               reduce using rule 157 (alpha_upper -> P .)
    h               reduce using rule 157 (alpha_upper -> P .)
    i               reduce using rule 157 (alpha_upper -> P .)
    j               reduce using rule 157 (alpha_upper -> P .)
    k               reduce using rule 157 (alpha_upper -> P .)
    l               reduce using rule 157 (alpha_upper -> P .)
    m               reduce using rule 157 (alpha_upper -> P .)
    n               reduce using rule 157 (alpha_upper -> P .)
    o               reduce using rule 157 (alpha_upper -> P .)
    p               reduce using rule 157 (alpha_upper -> P .)
    q               reduce using rule 157 (alpha_upper -> P .)
    r               reduce using rule 157 (alpha_upper -> P .)
    s               reduce using rule 157 (alpha_upper -> P .)
    t               reduce using rule 157 (alpha_upper -> P .)
    u               reduce using rule 157 (alpha_upper -> P .)
    v               reduce using rule 157 (alpha_upper -> P .)
    w               reduce using rule 157 (alpha_upper -> P .)
    x               reduce using rule 157 (alpha_upper -> P .)
    y               reduce using rule 157 (alpha_upper -> P .)
    z               reduce using rule 157 (alpha_upper -> P .)
    A               reduce using rule 157 (alpha_upper -> P .)
    B               reduce using rule 157 (alpha_upper -> P .)
    C               reduce using rule 157 (alpha_upper -> P .)
    D               reduce using rule 157 (alpha_upper -> P .)
    E               reduce using rule 157 (alpha_upper -> P .)
    F               reduce using rule 157 (alpha_upper -> P .)
    G               reduce using rule 157 (alpha_upper -> P .)
    H               reduce using rule 157 (alpha_upper -> P .)
    I               reduce using rule 157 (alpha_upper -> P .)
    J               reduce using rule 157 (alpha_upper -> P .)
    K               reduce using rule 157 (alpha_upper -> P .)
    L               reduce using rule 157 (alpha_upper -> P .)
    M               reduce using rule 157 (alpha_upper -> P .)
    N               reduce using rule 157 (alpha_upper -> P .)
    O               reduce using rule 157 (alpha_upper -> P .)
    P               reduce using rule 157 (alpha_upper -> P .)
    Q               reduce using rule 157 (alpha_upper -> P .)
    R               reduce using rule 157 (alpha_upper -> P .)
    S               reduce using rule 157 (alpha_upper -> P .)
    T               reduce using rule 157 (alpha_upper -> P .)
    U               reduce using rule 157 (alpha_upper -> P .)
    V               reduce using rule 157 (alpha_upper -> P .)
    W               reduce using rule 157 (alpha_upper -> P .)
    X               reduce using rule 157 (alpha_upper -> P .)
    Y               reduce using rule 157 (alpha_upper -> P .)
    Z               reduce using rule 157 (alpha_upper -> P .)
    |               reduce using rule 157 (alpha_upper -> P .)
    ]               reduce using rule 157 (alpha_upper -> P .)
    ^               reduce using rule 157 (alpha_upper -> P .)
    $end            reduce using rule 157 (alpha_upper -> P .)


state 30

    (106) command -> / .

    *               reduce using rule 106 (command -> / .)
    +               reduce using rule 106 (command -> / .)
    ?               reduce using rule 106 (command -> / .)
    {               reduce using rule 106 (command -> / .)
    (               reduce using rule 106 (command -> / .)
    ^               reduce using rule 106 (command -> / .)
    >               reduce using rule 106 (command -> / .)
    <               reduce using rule 106 (command -> / .)
    /               reduce using rule 106 (command -> / .)
    \               reduce using rule 106 (command -> / .)
    #               reduce using rule 106 (command -> / .)
    %               reduce using rule 106 (command -> / .)
    ESCAPED         reduce using rule 106 (command -> / .)
    DIGIT           reduce using rule 106 (command -> / .)
    OTHER           reduce using rule 106 (command -> / .)
    [               reduce using rule 106 (command -> / .)
    .               reduce using rule 106 (command -> / .)
    ,               reduce using rule 106 (command -> / .)
    :               reduce using rule 106 (command -> / .)
    ;               reduce using rule 106 (command -> / .)
    $               reduce using rule 106 (command -> / .)
    `               reduce using rule 106 (command -> / .)
    a               reduce using rule 106 (command -> / .)
    b               reduce using rule 106 (command -> / .)
    c               reduce using rule 106 (command -> / .)
    d               reduce using rule 106 (command -> / .)
    e               reduce using rule 106 (command -> / .)
    f               reduce using rule 106 (command -> / .)
    g               reduce using rule 106 (command -> / .)
    h               reduce using rule 106 (command -> / .)
    i               reduce using rule 106 (command -> / .)
    j               reduce using rule 106 (command -> / .)
    k               reduce using rule 106 (command -> / .)
    l               reduce using rule 106 (command -> / .)
    m               reduce using rule 106 (command -> / .)
    n               reduce using rule 106 (command -> / .)
    o               reduce using rule 106 (command -> / .)
    p               reduce using rule 106 (command -> / .)
    q               reduce using rule 106 (command -> / .)
    r               reduce using rule 106 (command -> / .)
    s               reduce using rule 106 (command -> / .)
    t               reduce using rule 106 (command -> / .)
    u               reduce using rule 106 (command -> / .)
    v               reduce using rule 106 (command -> / .)
    w               reduce using rule 106 (command -> / .)
    x               reduce using rule 106 (command -> / .)
    y               reduce using rule 106 (command -> / .)
    z               reduce using rule 106 (command -> / .)
    A               reduce using rule 106 (command -> / .)
    B               reduce using rule 106 (command -> / .)
    C               reduce using rule 106 (command -> / .)
    D               reduce using rule 106 (command -> / .)
    E               reduce using rule 106 (command -> / .)
    F               reduce using rule 106 (command -> / .)
    G               reduce using rule 106 (command -> / .)
    H               reduce using rule 106 (command -> / .)
    I               reduce using rule 106 (command -> / .)
    J               reduce using rule 106 (command -> / .)
    K               reduce using rule 106 (command -> / .)
    L               reduce using rule 106 (command -> / .)
    M               reduce using rule 106 (command -> / .)
    N               reduce using rule 106 (command -> / .)
    O               reduce using rule 106 (command -> / .)
    P               reduce using rule 106 (command -> / .)
    Q               reduce using rule 106 (command -> / .)
    R               reduce using rule 106 (command -> / .)
    S               reduce using rule 106 (command -> / .)
    T               reduce using rule 106 (command -> / .)
    U               reduce using rule 106 (command -> / .)
    V               reduce using rule 106 (command -> / .)
    W               reduce using rule 106 (command -> / .)
    X               reduce using rule 106 (command -> / .)
    Y               reduce using rule 106 (command -> / .)
    Z               reduce using rule 106 (command -> / .)
    |               reduce using rule 106 (command -> / .)
    $end            reduce using rule 106 (command -> / .)
    )               reduce using rule 106 (command -> / .)


state 31

    (7) basic -> elementary .
    (26) asterisk -> elementary . *
    (27) plus -> elementary . +
    (28) optional -> elementary . ?
    (29) nrepeat -> elementary . { number }
    (30) nrepeat -> elementary . { , number }
    (31) nrepeat -> elementary . { number , }
    (32) nrepeat -> elementary . { number , number }

    (               reduce using rule 7 (basic -> elementary .)
    ^               reduce using rule 7 (basic -> elementary .)
    >               reduce using rule 7 (basic -> elementary .)
    <               reduce using rule 7 (basic -> elementary .)
    /               reduce using rule 7 (basic -> elementary .)
    \               reduce using rule 7 (basic -> elementary .)
    #               reduce using rule 7 (basic -> elementary .)
    %               reduce using rule 7 (basic -> elementary .)
    ESCAPED         reduce using rule 7 (basic -> elementary .)
    DIGIT           reduce using rule 7 (basic -> elementary .)
    OTHER           reduce using rule 7 (basic -> elementary .)
    [               reduce using rule 7 (basic -> elementary .)
    .               reduce using rule 7 (basic -> elementary .)
    ,               reduce using rule 7 (basic -> elementary .)
    :               reduce using rule 7 (basic -> elementary .)
    ;               reduce using rule 7 (basic -> elementary .)
    $               reduce using rule 7 (basic -> elementary .)
    `               reduce using rule 7 (basic -> elementary .)
    a               reduce using rule 7 (basic -> elementary .)
    b               reduce using rule 7 (basic -> elementary .)
    c               reduce using rule 7 (basic -> elementary .)
    d               reduce using rule 7 (basic -> elementary .)
    e               reduce using rule 7 (basic -> elementary .)
    f               reduce using rule 7 (basic -> elementary .)
    g               reduce using rule 7 (basic -> elementary .)
    h               reduce using rule 7 (basic -> elementary .)
    i               reduce using rule 7 (basic -> elementary .)
    j               reduce using rule 7 (basic -> elementary .)
    k               reduce using rule 7 (basic -> elementary .)
    l               reduce using rule 7 (basic -> elementary .)
    m               reduce using rule 7 (basic -> elementary .)
    n               reduce using rule 7 (basic -> elementary .)
    o               reduce using rule 7 (basic -> elementary .)
    p               reduce using rule 7 (basic -> elementary .)
    q               reduce using rule 7 (basic -> elementary .)
    r               reduce using rule 7 (basic -> elementary .)
    s               reduce using rule 7 (basic -> elementary .)
    t               reduce using rule 7 (basic -> elementary .)
    u               reduce using rule 7 (basic -> elementary .)
    v               reduce using rule 7 (basic -> elementary .)
    w               reduce using rule 7 (basic -> elementary .)
    x               reduce using rule 7 (basic -> elementary .)
    y               reduce using rule 7 (basic -> elementary .)
    z               reduce using rule 7 (basic -> elementary .)
    A               reduce using rule 7 (basic -> elementary .)
    B               reduce using rule 7 (basic -> elementary .)
    C               reduce using rule 7 (basic -> elementary .)
    D               reduce using rule 7 (basic -> elementary .)
    E               reduce using rule 7 (basic -> elementary .)
    F               reduce using rule 7 (basic -> elementary .)
    G               reduce using rule 7 (basic -> elementary .)
    H               reduce using rule 7 (basic -> elementary .)
    I               reduce using rule 7 (basic -> elementary .)
    J               reduce using rule 7 (basic -> elementary .)
    K               reduce using rule 7 (basic -> elementary .)
    L               reduce using rule 7 (basic -> elementary .)
    M               reduce using rule 7 (basic -> elementary .)
    N               reduce using rule 7 (basic -> elementary .)
    O               reduce using rule 7 (basic -> elementary .)
    P               reduce using rule 7 (basic -> elementary .)
    Q               reduce using rule 7 (basic -> elementary .)
    R               reduce using rule 7 (basic -> elementary .)
    S               reduce using rule 7 (basic -> elementary .)
    T               reduce using rule 7 (basic -> elementary .)
    U               reduce using rule 7 (basic -> elementary .)
    V               reduce using rule 7 (basic -> elementary .)
    W               reduce using rule 7 (basic -> elementary .)
    X               reduce using rule 7 (basic -> elementary .)
    Y               reduce using rule 7 (basic -> elementary .)
    Z               reduce using rule 7 (basic -> elementary .)
    |               reduce using rule 7 (basic -> elementary .)
    )               reduce using rule 7 (basic -> elementary .)
    $end            reduce using rule 7 (basic -> elementary .)
    *               shift and go to state 103
    +               shift and go to state 104
    ?               shift and go to state 106
    {               shift and go to state 105


state 32

    (23) elementary -> nodispmatch .

    *               reduce using rule 23 (elementary -> nodispmatch .)
    +               reduce using rule 23 (elementary -> nodispmatch .)
    ?               reduce using rule 23 (elementary -> nodispmatch .)
    {               reduce using rule 23 (elementary -> nodispmatch .)
    (               reduce using rule 23 (elementary -> nodispmatch .)
    ^               reduce using rule 23 (elementary -> nodispmatch .)
    >               reduce using rule 23 (elementary -> nodispmatch .)
    <               reduce using rule 23 (elementary -> nodispmatch .)
    /               reduce using rule 23 (elementary -> nodispmatch .)
    \               reduce using rule 23 (elementary -> nodispmatch .)
    #               reduce using rule 23 (elementary -> nodispmatch .)
    %               reduce using rule 23 (elementary -> nodispmatch .)
    ESCAPED         reduce using rule 23 (elementary -> nodispmatch .)
    DIGIT           reduce using rule 23 (elementary -> nodispmatch .)
    OTHER           reduce using rule 23 (elementary -> nodispmatch .)
    [               reduce using rule 23 (elementary -> nodispmatch .)
    .               reduce using rule 23 (elementary -> nodispmatch .)
    ,               reduce using rule 23 (elementary -> nodispmatch .)
    :               reduce using rule 23 (elementary -> nodispmatch .)
    ;               reduce using rule 23 (elementary -> nodispmatch .)
    $               reduce using rule 23 (elementary -> nodispmatch .)
    `               reduce using rule 23 (elementary -> nodispmatch .)
    a               reduce using rule 23 (elementary -> nodispmatch .)
    b               reduce using rule 23 (elementary -> nodispmatch .)
    c               reduce using rule 23 (elementary -> nodispmatch .)
    d               reduce using rule 23 (elementary -> nodispmatch .)
    e               reduce using rule 23 (elementary -> nodispmatch .)
    f               reduce using rule 23 (elementary -> nodispmatch .)
    g               reduce using rule 23 (elementary -> nodispmatch .)
    h               reduce using rule 23 (elementary -> nodispmatch .)
    i               reduce using rule 23 (elementary -> nodispmatch .)
    j               reduce using rule 23 (elementary -> nodispmatch .)
    k               reduce using rule 23 (elementary -> nodispmatch .)
    l               reduce using rule 23 (elementary -> nodispmatch .)
    m               reduce using rule 23 (elementary -> nodispmatch .)
    n               reduce using rule 23 (elementary -> nodispmatch .)
    o               reduce using rule 23 (elementary -> nodispmatch .)
    p               reduce using rule 23 (elementary -> nodispmatch .)
    q               reduce using rule 23 (elementary -> nodispmatch .)
    r               reduce using rule 23 (elementary -> nodispmatch .)
    s               reduce using rule 23 (elementary -> nodispmatch .)
    t               reduce using rule 23 (elementary -> nodispmatch .)
    u               reduce using rule 23 (elementary -> nodispmatch .)
    v               reduce using rule 23 (elementary -> nodispmatch .)
    w               reduce using rule 23 (elementary -> nodispmatch .)
    x               reduce using rule 23 (elementary -> nodispmatch .)
    y               reduce using rule 23 (elementary -> nodispmatch .)
    z               reduce using rule 23 (elementary -> nodispmatch .)
    A               reduce using rule 23 (elementary -> nodispmatch .)
    B               reduce using rule 23 (elementary -> nodispmatch .)
    C               reduce using rule 23 (elementary -> nodispmatch .)
    D               reduce using rule 23 (elementary -> nodispmatch .)
    E               reduce using rule 23 (elementary -> nodispmatch .)
    F               reduce using rule 23 (elementary -> nodispmatch .)
    G               reduce using rule 23 (elementary -> nodispmatch .)
    H               reduce using rule 23 (elementary -> nodispmatch .)
    I               reduce using rule 23 (elementary -> nodispmatch .)
    J               reduce using rule 23 (elementary -> nodispmatch .)
    K               reduce using rule 23 (elementary -> nodispmatch .)
    L               reduce using rule 23 (elementary -> nodispmatch .)
    M               reduce using rule 23 (elementary -> nodispmatch .)
    N               reduce using rule 23 (elementary -> nodispmatch .)
    O               reduce using rule 23 (elementary -> nodispmatch .)
    P               reduce using rule 23 (elementary -> nodispmatch .)
    Q               reduce using rule 23 (elementary -> nodispmatch .)
    R               reduce using rule 23 (elementary -> nodispmatch .)
    S               reduce using rule 23 (elementary -> nodispmatch .)
    T               reduce using rule 23 (elementary -> nodispmatch .)
    U               reduce using rule 23 (elementary -> nodispmatch .)
    V               reduce using rule 23 (elementary -> nodispmatch .)
    W               reduce using rule 23 (elementary -> nodispmatch .)
    X               reduce using rule 23 (elementary -> nodispmatch .)
    Y               reduce using rule 23 (elementary -> nodispmatch .)
    Z               reduce using rule 23 (elementary -> nodispmatch .)
    |               reduce using rule 23 (elementary -> nodispmatch .)
    $end            reduce using rule 23 (elementary -> nodispmatch .)
    )               reduce using rule 23 (elementary -> nodispmatch .)


state 33

    (55) charclass -> [ . classitems ]
    (56) classitems -> . ^ baseitems
    (57) classitems -> . classitems2
    (58) classitems2 -> . baseitems
    (59) classitems2 -> . baseitems | baseitems
    (60) baseitems -> . classatom
    (61) baseitems -> . classatom baseitems
    (62) classatom -> . classliteral
    (63) classatom -> . classrange
    (64) classliteral -> . !
    (65) classliteral -> . "
    (66) classliteral -> . #
    (67) classliteral -> . $
    (68) classliteral -> . %
    (69) classliteral -> . &
    (70) classliteral -> . '
    (71) classliteral -> . (
    (72) classliteral -> . )
    (73) classliteral -> . *
    (74) classliteral -> . +
    (75) classliteral -> . ,
    (76) classliteral -> . .
    (77) classliteral -> . /
    (78) classliteral -> . :
    (79) classliteral -> . ;
    (80) classliteral -> . <
    (81) classliteral -> . =
    (82) classliteral -> . >
    (83) classliteral -> . ?
    (84) classliteral -> . @
    (85) classliteral -> . [
    (86) classliteral -> . \
    (87) classliteral -> . _
    (88) classliteral -> . `
    (89) classliteral -> . {
    (90) classliteral -> . }
    (91) classliteral -> . ~
    (92) classliteral -> . literal
    (93) classrange -> . classliteral - classliteral
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    ^               shift and go to state 133
    !               shift and go to state 137
    "               shift and go to state 140
    #               shift and go to state 107
    $               shift and go to state 132
    %               shift and go to state 138
    &               shift and go to state 135
    '               shift and go to state 109
    (               shift and go to state 117
    )               shift and go to state 118
    *               shift and go to state 108
    +               shift and go to state 122
    ,               shift and go to state 136
    .               shift and go to state 112
    /               shift and go to state 119
    :               shift and go to state 125
    ;               shift and go to state 116
    <               shift and go to state 131
    =               shift and go to state 142
    >               shift and go to state 134
    ?               shift and go to state 124
    @               shift and go to state 126
    [               shift and go to state 121
    \               shift and go to state 128
    _               shift and go to state 130
    `               shift and go to state 110
    {               shift and go to state 123
    }               shift and go to state 127
    ~               shift and go to state 113
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    classitems2                    shift and go to state 115
    alpha_upper                    shift and go to state 7
    classitems                     shift and go to state 111
    alpha                          shift and go to state 86
    classatom                      shift and go to state 120
    literal                        shift and go to state 129
    classrange                     shift and go to state 141
    alpha_lower                    shift and go to state 88
    baseitems                      shift and go to state 139
    classliteral                   shift and go to state 114

state 34

    (136) alpha_lower -> u .

    !               reduce using rule 136 (alpha_lower -> u .)
    "               reduce using rule 136 (alpha_lower -> u .)
    #               reduce using rule 136 (alpha_lower -> u .)
    $               reduce using rule 136 (alpha_lower -> u .)
    %               reduce using rule 136 (alpha_lower -> u .)
    &               reduce using rule 136 (alpha_lower -> u .)
    '               reduce using rule 136 (alpha_lower -> u .)
    (               reduce using rule 136 (alpha_lower -> u .)
    )               reduce using rule 136 (alpha_lower -> u .)
    *               reduce using rule 136 (alpha_lower -> u .)
    +               reduce using rule 136 (alpha_lower -> u .)
    ,               reduce using rule 136 (alpha_lower -> u .)
    .               reduce using rule 136 (alpha_lower -> u .)
    /               reduce using rule 136 (alpha_lower -> u .)
    :               reduce using rule 136 (alpha_lower -> u .)
    ;               reduce using rule 136 (alpha_lower -> u .)
    <               reduce using rule 136 (alpha_lower -> u .)
    =               reduce using rule 136 (alpha_lower -> u .)
    >               reduce using rule 136 (alpha_lower -> u .)
    ?               reduce using rule 136 (alpha_lower -> u .)
    @               reduce using rule 136 (alpha_lower -> u .)
    [               reduce using rule 136 (alpha_lower -> u .)
    \               reduce using rule 136 (alpha_lower -> u .)
    _               reduce using rule 136 (alpha_lower -> u .)
    `               reduce using rule 136 (alpha_lower -> u .)
    {               reduce using rule 136 (alpha_lower -> u .)
    }               reduce using rule 136 (alpha_lower -> u .)
    ~               reduce using rule 136 (alpha_lower -> u .)
    ESCAPED         reduce using rule 136 (alpha_lower -> u .)
    DIGIT           reduce using rule 136 (alpha_lower -> u .)
    OTHER           reduce using rule 136 (alpha_lower -> u .)
    a               reduce using rule 136 (alpha_lower -> u .)
    b               reduce using rule 136 (alpha_lower -> u .)
    c               reduce using rule 136 (alpha_lower -> u .)
    d               reduce using rule 136 (alpha_lower -> u .)
    e               reduce using rule 136 (alpha_lower -> u .)
    f               reduce using rule 136 (alpha_lower -> u .)
    g               reduce using rule 136 (alpha_lower -> u .)
    h               reduce using rule 136 (alpha_lower -> u .)
    i               reduce using rule 136 (alpha_lower -> u .)
    j               reduce using rule 136 (alpha_lower -> u .)
    k               reduce using rule 136 (alpha_lower -> u .)
    l               reduce using rule 136 (alpha_lower -> u .)
    m               reduce using rule 136 (alpha_lower -> u .)
    n               reduce using rule 136 (alpha_lower -> u .)
    o               reduce using rule 136 (alpha_lower -> u .)
    p               reduce using rule 136 (alpha_lower -> u .)
    q               reduce using rule 136 (alpha_lower -> u .)
    r               reduce using rule 136 (alpha_lower -> u .)
    s               reduce using rule 136 (alpha_lower -> u .)
    t               reduce using rule 136 (alpha_lower -> u .)
    u               reduce using rule 136 (alpha_lower -> u .)
    v               reduce using rule 136 (alpha_lower -> u .)
    w               reduce using rule 136 (alpha_lower -> u .)
    x               reduce using rule 136 (alpha_lower -> u .)
    y               reduce using rule 136 (alpha_lower -> u .)
    z               reduce using rule 136 (alpha_lower -> u .)
    A               reduce using rule 136 (alpha_lower -> u .)
    B               reduce using rule 136 (alpha_lower -> u .)
    C               reduce using rule 136 (alpha_lower -> u .)
    D               reduce using rule 136 (alpha_lower -> u .)
    E               reduce using rule 136 (alpha_lower -> u .)
    F               reduce using rule 136 (alpha_lower -> u .)
    G               reduce using rule 136 (alpha_lower -> u .)
    H               reduce using rule 136 (alpha_lower -> u .)
    I               reduce using rule 136 (alpha_lower -> u .)
    J               reduce using rule 136 (alpha_lower -> u .)
    K               reduce using rule 136 (alpha_lower -> u .)
    L               reduce using rule 136 (alpha_lower -> u .)
    M               reduce using rule 136 (alpha_lower -> u .)
    N               reduce using rule 136 (alpha_lower -> u .)
    O               reduce using rule 136 (alpha_lower -> u .)
    P               reduce using rule 136 (alpha_lower -> u .)
    Q               reduce using rule 136 (alpha_lower -> u .)
    R               reduce using rule 136 (alpha_lower -> u .)
    S               reduce using rule 136 (alpha_lower -> u .)
    T               reduce using rule 136 (alpha_lower -> u .)
    U               reduce using rule 136 (alpha_lower -> u .)
    V               reduce using rule 136 (alpha_lower -> u .)
    W               reduce using rule 136 (alpha_lower -> u .)
    X               reduce using rule 136 (alpha_lower -> u .)
    Y               reduce using rule 136 (alpha_lower -> u .)
    Z               reduce using rule 136 (alpha_lower -> u .)
    |               reduce using rule 136 (alpha_lower -> u .)
    ]               reduce using rule 136 (alpha_lower -> u .)
    -               reduce using rule 136 (alpha_lower -> u .)
    ^               reduce using rule 136 (alpha_lower -> u .)
    $end            reduce using rule 136 (alpha_lower -> u .)


state 35

    (154) alpha_upper -> M .

    -               reduce using rule 154 (alpha_upper -> M .)
    !               reduce using rule 154 (alpha_upper -> M .)
    "               reduce using rule 154 (alpha_upper -> M .)
    #               reduce using rule 154 (alpha_upper -> M .)
    $               reduce using rule 154 (alpha_upper -> M .)
    %               reduce using rule 154 (alpha_upper -> M .)
    &               reduce using rule 154 (alpha_upper -> M .)
    '               reduce using rule 154 (alpha_upper -> M .)
    (               reduce using rule 154 (alpha_upper -> M .)
    )               reduce using rule 154 (alpha_upper -> M .)
    *               reduce using rule 154 (alpha_upper -> M .)
    +               reduce using rule 154 (alpha_upper -> M .)
    ,               reduce using rule 154 (alpha_upper -> M .)
    .               reduce using rule 154 (alpha_upper -> M .)
    /               reduce using rule 154 (alpha_upper -> M .)
    :               reduce using rule 154 (alpha_upper -> M .)
    ;               reduce using rule 154 (alpha_upper -> M .)
    <               reduce using rule 154 (alpha_upper -> M .)
    =               reduce using rule 154 (alpha_upper -> M .)
    >               reduce using rule 154 (alpha_upper -> M .)
    ?               reduce using rule 154 (alpha_upper -> M .)
    @               reduce using rule 154 (alpha_upper -> M .)
    [               reduce using rule 154 (alpha_upper -> M .)
    \               reduce using rule 154 (alpha_upper -> M .)
    _               reduce using rule 154 (alpha_upper -> M .)
    `               reduce using rule 154 (alpha_upper -> M .)
    {               reduce using rule 154 (alpha_upper -> M .)
    }               reduce using rule 154 (alpha_upper -> M .)
    ~               reduce using rule 154 (alpha_upper -> M .)
    ESCAPED         reduce using rule 154 (alpha_upper -> M .)
    DIGIT           reduce using rule 154 (alpha_upper -> M .)
    OTHER           reduce using rule 154 (alpha_upper -> M .)
    a               reduce using rule 154 (alpha_upper -> M .)
    b               reduce using rule 154 (alpha_upper -> M .)
    c               reduce using rule 154 (alpha_upper -> M .)
    d               reduce using rule 154 (alpha_upper -> M .)
    e               reduce using rule 154 (alpha_upper -> M .)
    f               reduce using rule 154 (alpha_upper -> M .)
    g               reduce using rule 154 (alpha_upper -> M .)
    h               reduce using rule 154 (alpha_upper -> M .)
    i               reduce using rule 154 (alpha_upper -> M .)
    j               reduce using rule 154 (alpha_upper -> M .)
    k               reduce using rule 154 (alpha_upper -> M .)
    l               reduce using rule 154 (alpha_upper -> M .)
    m               reduce using rule 154 (alpha_upper -> M .)
    n               reduce using rule 154 (alpha_upper -> M .)
    o               reduce using rule 154 (alpha_upper -> M .)
    p               reduce using rule 154 (alpha_upper -> M .)
    q               reduce using rule 154 (alpha_upper -> M .)
    r               reduce using rule 154 (alpha_upper -> M .)
    s               reduce using rule 154 (alpha_upper -> M .)
    t               reduce using rule 154 (alpha_upper -> M .)
    u               reduce using rule 154 (alpha_upper -> M .)
    v               reduce using rule 154 (alpha_upper -> M .)
    w               reduce using rule 154 (alpha_upper -> M .)
    x               reduce using rule 154 (alpha_upper -> M .)
    y               reduce using rule 154 (alpha_upper -> M .)
    z               reduce using rule 154 (alpha_upper -> M .)
    A               reduce using rule 154 (alpha_upper -> M .)
    B               reduce using rule 154 (alpha_upper -> M .)
    C               reduce using rule 154 (alpha_upper -> M .)
    D               reduce using rule 154 (alpha_upper -> M .)
    E               reduce using rule 154 (alpha_upper -> M .)
    F               reduce using rule 154 (alpha_upper -> M .)
    G               reduce using rule 154 (alpha_upper -> M .)
    H               reduce using rule 154 (alpha_upper -> M .)
    I               reduce using rule 154 (alpha_upper -> M .)
    J               reduce using rule 154 (alpha_upper -> M .)
    K               reduce using rule 154 (alpha_upper -> M .)
    L               reduce using rule 154 (alpha_upper -> M .)
    M               reduce using rule 154 (alpha_upper -> M .)
    N               reduce using rule 154 (alpha_upper -> M .)
    O               reduce using rule 154 (alpha_upper -> M .)
    P               reduce using rule 154 (alpha_upper -> M .)
    Q               reduce using rule 154 (alpha_upper -> M .)
    R               reduce using rule 154 (alpha_upper -> M .)
    S               reduce using rule 154 (alpha_upper -> M .)
    T               reduce using rule 154 (alpha_upper -> M .)
    U               reduce using rule 154 (alpha_upper -> M .)
    V               reduce using rule 154 (alpha_upper -> M .)
    W               reduce using rule 154 (alpha_upper -> M .)
    X               reduce using rule 154 (alpha_upper -> M .)
    Y               reduce using rule 154 (alpha_upper -> M .)
    Z               reduce using rule 154 (alpha_upper -> M .)
    |               reduce using rule 154 (alpha_upper -> M .)
    ]               reduce using rule 154 (alpha_upper -> M .)
    ^               reduce using rule 154 (alpha_upper -> M .)
    $end            reduce using rule 154 (alpha_upper -> M .)


state 36

    (125) alpha_lower -> j .

    !               reduce using rule 125 (alpha_lower -> j .)
    "               reduce using rule 125 (alpha_lower -> j .)
    #               reduce using rule 125 (alpha_lower -> j .)
    $               reduce using rule 125 (alpha_lower -> j .)
    %               reduce using rule 125 (alpha_lower -> j .)
    &               reduce using rule 125 (alpha_lower -> j .)
    '               reduce using rule 125 (alpha_lower -> j .)
    (               reduce using rule 125 (alpha_lower -> j .)
    )               reduce using rule 125 (alpha_lower -> j .)
    *               reduce using rule 125 (alpha_lower -> j .)
    +               reduce using rule 125 (alpha_lower -> j .)
    ,               reduce using rule 125 (alpha_lower -> j .)
    .               reduce using rule 125 (alpha_lower -> j .)
    /               reduce using rule 125 (alpha_lower -> j .)
    :               reduce using rule 125 (alpha_lower -> j .)
    ;               reduce using rule 125 (alpha_lower -> j .)
    <               reduce using rule 125 (alpha_lower -> j .)
    =               reduce using rule 125 (alpha_lower -> j .)
    >               reduce using rule 125 (alpha_lower -> j .)
    ?               reduce using rule 125 (alpha_lower -> j .)
    @               reduce using rule 125 (alpha_lower -> j .)
    [               reduce using rule 125 (alpha_lower -> j .)
    \               reduce using rule 125 (alpha_lower -> j .)
    _               reduce using rule 125 (alpha_lower -> j .)
    `               reduce using rule 125 (alpha_lower -> j .)
    {               reduce using rule 125 (alpha_lower -> j .)
    }               reduce using rule 125 (alpha_lower -> j .)
    ~               reduce using rule 125 (alpha_lower -> j .)
    ESCAPED         reduce using rule 125 (alpha_lower -> j .)
    DIGIT           reduce using rule 125 (alpha_lower -> j .)
    OTHER           reduce using rule 125 (alpha_lower -> j .)
    a               reduce using rule 125 (alpha_lower -> j .)
    b               reduce using rule 125 (alpha_lower -> j .)
    c               reduce using rule 125 (alpha_lower -> j .)
    d               reduce using rule 125 (alpha_lower -> j .)
    e               reduce using rule 125 (alpha_lower -> j .)
    f               reduce using rule 125 (alpha_lower -> j .)
    g               reduce using rule 125 (alpha_lower -> j .)
    h               reduce using rule 125 (alpha_lower -> j .)
    i               reduce using rule 125 (alpha_lower -> j .)
    j               reduce using rule 125 (alpha_lower -> j .)
    k               reduce using rule 125 (alpha_lower -> j .)
    l               reduce using rule 125 (alpha_lower -> j .)
    m               reduce using rule 125 (alpha_lower -> j .)
    n               reduce using rule 125 (alpha_lower -> j .)
    o               reduce using rule 125 (alpha_lower -> j .)
    p               reduce using rule 125 (alpha_lower -> j .)
    q               reduce using rule 125 (alpha_lower -> j .)
    r               reduce using rule 125 (alpha_lower -> j .)
    s               reduce using rule 125 (alpha_lower -> j .)
    t               reduce using rule 125 (alpha_lower -> j .)
    u               reduce using rule 125 (alpha_lower -> j .)
    v               reduce using rule 125 (alpha_lower -> j .)
    w               reduce using rule 125 (alpha_lower -> j .)
    x               reduce using rule 125 (alpha_lower -> j .)
    y               reduce using rule 125 (alpha_lower -> j .)
    z               reduce using rule 125 (alpha_lower -> j .)
    A               reduce using rule 125 (alpha_lower -> j .)
    B               reduce using rule 125 (alpha_lower -> j .)
    C               reduce using rule 125 (alpha_lower -> j .)
    D               reduce using rule 125 (alpha_lower -> j .)
    E               reduce using rule 125 (alpha_lower -> j .)
    F               reduce using rule 125 (alpha_lower -> j .)
    G               reduce using rule 125 (alpha_lower -> j .)
    H               reduce using rule 125 (alpha_lower -> j .)
    I               reduce using rule 125 (alpha_lower -> j .)
    J               reduce using rule 125 (alpha_lower -> j .)
    K               reduce using rule 125 (alpha_lower -> j .)
    L               reduce using rule 125 (alpha_lower -> j .)
    M               reduce using rule 125 (alpha_lower -> j .)
    N               reduce using rule 125 (alpha_lower -> j .)
    O               reduce using rule 125 (alpha_lower -> j .)
    P               reduce using rule 125 (alpha_lower -> j .)
    Q               reduce using rule 125 (alpha_lower -> j .)
    R               reduce using rule 125 (alpha_lower -> j .)
    S               reduce using rule 125 (alpha_lower -> j .)
    T               reduce using rule 125 (alpha_lower -> j .)
    U               reduce using rule 125 (alpha_lower -> j .)
    V               reduce using rule 125 (alpha_lower -> j .)
    W               reduce using rule 125 (alpha_lower -> j .)
    X               reduce using rule 125 (alpha_lower -> j .)
    Y               reduce using rule 125 (alpha_lower -> j .)
    Z               reduce using rule 125 (alpha_lower -> j .)
    |               reduce using rule 125 (alpha_lower -> j .)
    ]               reduce using rule 125 (alpha_lower -> j .)
    -               reduce using rule 125 (alpha_lower -> j .)
    ^               reduce using rule 125 (alpha_lower -> j .)
    $end            reduce using rule 125 (alpha_lower -> j .)


state 37

    (25) elementary -> predefined .

    *               reduce using rule 25 (elementary -> predefined .)
    +               reduce using rule 25 (elementary -> predefined .)
    ?               reduce using rule 25 (elementary -> predefined .)
    {               reduce using rule 25 (elementary -> predefined .)
    (               reduce using rule 25 (elementary -> predefined .)
    ^               reduce using rule 25 (elementary -> predefined .)
    >               reduce using rule 25 (elementary -> predefined .)
    <               reduce using rule 25 (elementary -> predefined .)
    /               reduce using rule 25 (elementary -> predefined .)
    \               reduce using rule 25 (elementary -> predefined .)
    #               reduce using rule 25 (elementary -> predefined .)
    %               reduce using rule 25 (elementary -> predefined .)
    ESCAPED         reduce using rule 25 (elementary -> predefined .)
    DIGIT           reduce using rule 25 (elementary -> predefined .)
    OTHER           reduce using rule 25 (elementary -> predefined .)
    [               reduce using rule 25 (elementary -> predefined .)
    .               reduce using rule 25 (elementary -> predefined .)
    ,               reduce using rule 25 (elementary -> predefined .)
    :               reduce using rule 25 (elementary -> predefined .)
    ;               reduce using rule 25 (elementary -> predefined .)
    $               reduce using rule 25 (elementary -> predefined .)
    `               reduce using rule 25 (elementary -> predefined .)
    a               reduce using rule 25 (elementary -> predefined .)
    b               reduce using rule 25 (elementary -> predefined .)
    c               reduce using rule 25 (elementary -> predefined .)
    d               reduce using rule 25 (elementary -> predefined .)
    e               reduce using rule 25 (elementary -> predefined .)
    f               reduce using rule 25 (elementary -> predefined .)
    g               reduce using rule 25 (elementary -> predefined .)
    h               reduce using rule 25 (elementary -> predefined .)
    i               reduce using rule 25 (elementary -> predefined .)
    j               reduce using rule 25 (elementary -> predefined .)
    k               reduce using rule 25 (elementary -> predefined .)
    l               reduce using rule 25 (elementary -> predefined .)
    m               reduce using rule 25 (elementary -> predefined .)
    n               reduce using rule 25 (elementary -> predefined .)
    o               reduce using rule 25 (elementary -> predefined .)
    p               reduce using rule 25 (elementary -> predefined .)
    q               reduce using rule 25 (elementary -> predefined .)
    r               reduce using rule 25 (elementary -> predefined .)
    s               reduce using rule 25 (elementary -> predefined .)
    t               reduce using rule 25 (elementary -> predefined .)
    u               reduce using rule 25 (elementary -> predefined .)
    v               reduce using rule 25 (elementary -> predefined .)
    w               reduce using rule 25 (elementary -> predefined .)
    x               reduce using rule 25 (elementary -> predefined .)
    y               reduce using rule 25 (elementary -> predefined .)
    z               reduce using rule 25 (elementary -> predefined .)
    A               reduce using rule 25 (elementary -> predefined .)
    B               reduce using rule 25 (elementary -> predefined .)
    C               reduce using rule 25 (elementary -> predefined .)
    D               reduce using rule 25 (elementary -> predefined .)
    E               reduce using rule 25 (elementary -> predefined .)
    F               reduce using rule 25 (elementary -> predefined .)
    G               reduce using rule 25 (elementary -> predefined .)
    H               reduce using rule 25 (elementary -> predefined .)
    I               reduce using rule 25 (elementary -> predefined .)
    J               reduce using rule 25 (elementary -> predefined .)
    K               reduce using rule 25 (elementary -> predefined .)
    L               reduce using rule 25 (elementary -> predefined .)
    M               reduce using rule 25 (elementary -> predefined .)
    N               reduce using rule 25 (elementary -> predefined .)
    O               reduce using rule 25 (elementary -> predefined .)
    P               reduce using rule 25 (elementary -> predefined .)
    Q               reduce using rule 25 (elementary -> predefined .)
    R               reduce using rule 25 (elementary -> predefined .)
    S               reduce using rule 25 (elementary -> predefined .)
    T               reduce using rule 25 (elementary -> predefined .)
    U               reduce using rule 25 (elementary -> predefined .)
    V               reduce using rule 25 (elementary -> predefined .)
    W               reduce using rule 25 (elementary -> predefined .)
    X               reduce using rule 25 (elementary -> predefined .)
    Y               reduce using rule 25 (elementary -> predefined .)
    Z               reduce using rule 25 (elementary -> predefined .)
    |               reduce using rule 25 (elementary -> predefined .)
    $end            reduce using rule 25 (elementary -> predefined .)
    )               reduce using rule 25 (elementary -> predefined .)


state 38

    (116) alpha_lower -> a .

    !               reduce using rule 116 (alpha_lower -> a .)
    "               reduce using rule 116 (alpha_lower -> a .)
    #               reduce using rule 116 (alpha_lower -> a .)
    $               reduce using rule 116 (alpha_lower -> a .)
    %               reduce using rule 116 (alpha_lower -> a .)
    &               reduce using rule 116 (alpha_lower -> a .)
    '               reduce using rule 116 (alpha_lower -> a .)
    (               reduce using rule 116 (alpha_lower -> a .)
    )               reduce using rule 116 (alpha_lower -> a .)
    *               reduce using rule 116 (alpha_lower -> a .)
    +               reduce using rule 116 (alpha_lower -> a .)
    ,               reduce using rule 116 (alpha_lower -> a .)
    .               reduce using rule 116 (alpha_lower -> a .)
    /               reduce using rule 116 (alpha_lower -> a .)
    :               reduce using rule 116 (alpha_lower -> a .)
    ;               reduce using rule 116 (alpha_lower -> a .)
    <               reduce using rule 116 (alpha_lower -> a .)
    =               reduce using rule 116 (alpha_lower -> a .)
    >               reduce using rule 116 (alpha_lower -> a .)
    ?               reduce using rule 116 (alpha_lower -> a .)
    @               reduce using rule 116 (alpha_lower -> a .)
    [               reduce using rule 116 (alpha_lower -> a .)
    \               reduce using rule 116 (alpha_lower -> a .)
    _               reduce using rule 116 (alpha_lower -> a .)
    `               reduce using rule 116 (alpha_lower -> a .)
    {               reduce using rule 116 (alpha_lower -> a .)
    }               reduce using rule 116 (alpha_lower -> a .)
    ~               reduce using rule 116 (alpha_lower -> a .)
    ESCAPED         reduce using rule 116 (alpha_lower -> a .)
    DIGIT           reduce using rule 116 (alpha_lower -> a .)
    OTHER           reduce using rule 116 (alpha_lower -> a .)
    a               reduce using rule 116 (alpha_lower -> a .)
    b               reduce using rule 116 (alpha_lower -> a .)
    c               reduce using rule 116 (alpha_lower -> a .)
    d               reduce using rule 116 (alpha_lower -> a .)
    e               reduce using rule 116 (alpha_lower -> a .)
    f               reduce using rule 116 (alpha_lower -> a .)
    g               reduce using rule 116 (alpha_lower -> a .)
    h               reduce using rule 116 (alpha_lower -> a .)
    i               reduce using rule 116 (alpha_lower -> a .)
    j               reduce using rule 116 (alpha_lower -> a .)
    k               reduce using rule 116 (alpha_lower -> a .)
    l               reduce using rule 116 (alpha_lower -> a .)
    m               reduce using rule 116 (alpha_lower -> a .)
    n               reduce using rule 116 (alpha_lower -> a .)
    o               reduce using rule 116 (alpha_lower -> a .)
    p               reduce using rule 116 (alpha_lower -> a .)
    q               reduce using rule 116 (alpha_lower -> a .)
    r               reduce using rule 116 (alpha_lower -> a .)
    s               reduce using rule 116 (alpha_lower -> a .)
    t               reduce using rule 116 (alpha_lower -> a .)
    u               reduce using rule 116 (alpha_lower -> a .)
    v               reduce using rule 116 (alpha_lower -> a .)
    w               reduce using rule 116 (alpha_lower -> a .)
    x               reduce using rule 116 (alpha_lower -> a .)
    y               reduce using rule 116 (alpha_lower -> a .)
    z               reduce using rule 116 (alpha_lower -> a .)
    A               reduce using rule 116 (alpha_lower -> a .)
    B               reduce using rule 116 (alpha_lower -> a .)
    C               reduce using rule 116 (alpha_lower -> a .)
    D               reduce using rule 116 (alpha_lower -> a .)
    E               reduce using rule 116 (alpha_lower -> a .)
    F               reduce using rule 116 (alpha_lower -> a .)
    G               reduce using rule 116 (alpha_lower -> a .)
    H               reduce using rule 116 (alpha_lower -> a .)
    I               reduce using rule 116 (alpha_lower -> a .)
    J               reduce using rule 116 (alpha_lower -> a .)
    K               reduce using rule 116 (alpha_lower -> a .)
    L               reduce using rule 116 (alpha_lower -> a .)
    M               reduce using rule 116 (alpha_lower -> a .)
    N               reduce using rule 116 (alpha_lower -> a .)
    O               reduce using rule 116 (alpha_lower -> a .)
    P               reduce using rule 116 (alpha_lower -> a .)
    Q               reduce using rule 116 (alpha_lower -> a .)
    R               reduce using rule 116 (alpha_lower -> a .)
    S               reduce using rule 116 (alpha_lower -> a .)
    T               reduce using rule 116 (alpha_lower -> a .)
    U               reduce using rule 116 (alpha_lower -> a .)
    V               reduce using rule 116 (alpha_lower -> a .)
    W               reduce using rule 116 (alpha_lower -> a .)
    X               reduce using rule 116 (alpha_lower -> a .)
    Y               reduce using rule 116 (alpha_lower -> a .)
    Z               reduce using rule 116 (alpha_lower -> a .)
    |               reduce using rule 116 (alpha_lower -> a .)
    ]               reduce using rule 116 (alpha_lower -> a .)
    -               reduce using rule 116 (alpha_lower -> a .)
    ^               reduce using rule 116 (alpha_lower -> a .)
    $end            reduce using rule 116 (alpha_lower -> a .)


state 39

    (35) nomatch -> : .

    *               reduce using rule 35 (nomatch -> : .)
    +               reduce using rule 35 (nomatch -> : .)
    ?               reduce using rule 35 (nomatch -> : .)
    {               reduce using rule 35 (nomatch -> : .)
    (               reduce using rule 35 (nomatch -> : .)
    ^               reduce using rule 35 (nomatch -> : .)
    >               reduce using rule 35 (nomatch -> : .)
    <               reduce using rule 35 (nomatch -> : .)
    /               reduce using rule 35 (nomatch -> : .)
    \               reduce using rule 35 (nomatch -> : .)
    #               reduce using rule 35 (nomatch -> : .)
    %               reduce using rule 35 (nomatch -> : .)
    ESCAPED         reduce using rule 35 (nomatch -> : .)
    DIGIT           reduce using rule 35 (nomatch -> : .)
    OTHER           reduce using rule 35 (nomatch -> : .)
    [               reduce using rule 35 (nomatch -> : .)
    .               reduce using rule 35 (nomatch -> : .)
    ,               reduce using rule 35 (nomatch -> : .)
    :               reduce using rule 35 (nomatch -> : .)
    ;               reduce using rule 35 (nomatch -> : .)
    $               reduce using rule 35 (nomatch -> : .)
    `               reduce using rule 35 (nomatch -> : .)
    a               reduce using rule 35 (nomatch -> : .)
    b               reduce using rule 35 (nomatch -> : .)
    c               reduce using rule 35 (nomatch -> : .)
    d               reduce using rule 35 (nomatch -> : .)
    e               reduce using rule 35 (nomatch -> : .)
    f               reduce using rule 35 (nomatch -> : .)
    g               reduce using rule 35 (nomatch -> : .)
    h               reduce using rule 35 (nomatch -> : .)
    i               reduce using rule 35 (nomatch -> : .)
    j               reduce using rule 35 (nomatch -> : .)
    k               reduce using rule 35 (nomatch -> : .)
    l               reduce using rule 35 (nomatch -> : .)
    m               reduce using rule 35 (nomatch -> : .)
    n               reduce using rule 35 (nomatch -> : .)
    o               reduce using rule 35 (nomatch -> : .)
    p               reduce using rule 35 (nomatch -> : .)
    q               reduce using rule 35 (nomatch -> : .)
    r               reduce using rule 35 (nomatch -> : .)
    s               reduce using rule 35 (nomatch -> : .)
    t               reduce using rule 35 (nomatch -> : .)
    u               reduce using rule 35 (nomatch -> : .)
    v               reduce using rule 35 (nomatch -> : .)
    w               reduce using rule 35 (nomatch -> : .)
    x               reduce using rule 35 (nomatch -> : .)
    y               reduce using rule 35 (nomatch -> : .)
    z               reduce using rule 35 (nomatch -> : .)
    A               reduce using rule 35 (nomatch -> : .)
    B               reduce using rule 35 (nomatch -> : .)
    C               reduce using rule 35 (nomatch -> : .)
    D               reduce using rule 35 (nomatch -> : .)
    E               reduce using rule 35 (nomatch -> : .)
    F               reduce using rule 35 (nomatch -> : .)
    G               reduce using rule 35 (nomatch -> : .)
    H               reduce using rule 35 (nomatch -> : .)
    I               reduce using rule 35 (nomatch -> : .)
    J               reduce using rule 35 (nomatch -> : .)
    K               reduce using rule 35 (nomatch -> : .)
    L               reduce using rule 35 (nomatch -> : .)
    M               reduce using rule 35 (nomatch -> : .)
    N               reduce using rule 35 (nomatch -> : .)
    O               reduce using rule 35 (nomatch -> : .)
    P               reduce using rule 35 (nomatch -> : .)
    Q               reduce using rule 35 (nomatch -> : .)
    R               reduce using rule 35 (nomatch -> : .)
    S               reduce using rule 35 (nomatch -> : .)
    T               reduce using rule 35 (nomatch -> : .)
    U               reduce using rule 35 (nomatch -> : .)
    V               reduce using rule 35 (nomatch -> : .)
    W               reduce using rule 35 (nomatch -> : .)
    X               reduce using rule 35 (nomatch -> : .)
    Y               reduce using rule 35 (nomatch -> : .)
    Z               reduce using rule 35 (nomatch -> : .)
    |               reduce using rule 35 (nomatch -> : .)
    $end            reduce using rule 35 (nomatch -> : .)
    )               reduce using rule 35 (nomatch -> : .)


state 40

    (24) elementary -> anchor .

    *               reduce using rule 24 (elementary -> anchor .)
    +               reduce using rule 24 (elementary -> anchor .)
    ?               reduce using rule 24 (elementary -> anchor .)
    {               reduce using rule 24 (elementary -> anchor .)
    (               reduce using rule 24 (elementary -> anchor .)
    ^               reduce using rule 24 (elementary -> anchor .)
    >               reduce using rule 24 (elementary -> anchor .)
    <               reduce using rule 24 (elementary -> anchor .)
    /               reduce using rule 24 (elementary -> anchor .)
    \               reduce using rule 24 (elementary -> anchor .)
    #               reduce using rule 24 (elementary -> anchor .)
    %               reduce using rule 24 (elementary -> anchor .)
    ESCAPED         reduce using rule 24 (elementary -> anchor .)
    DIGIT           reduce using rule 24 (elementary -> anchor .)
    OTHER           reduce using rule 24 (elementary -> anchor .)
    [               reduce using rule 24 (elementary -> anchor .)
    .               reduce using rule 24 (elementary -> anchor .)
    ,               reduce using rule 24 (elementary -> anchor .)
    :               reduce using rule 24 (elementary -> anchor .)
    ;               reduce using rule 24 (elementary -> anchor .)
    $               reduce using rule 24 (elementary -> anchor .)
    `               reduce using rule 24 (elementary -> anchor .)
    a               reduce using rule 24 (elementary -> anchor .)
    b               reduce using rule 24 (elementary -> anchor .)
    c               reduce using rule 24 (elementary -> anchor .)
    d               reduce using rule 24 (elementary -> anchor .)
    e               reduce using rule 24 (elementary -> anchor .)
    f               reduce using rule 24 (elementary -> anchor .)
    g               reduce using rule 24 (elementary -> anchor .)
    h               reduce using rule 24 (elementary -> anchor .)
    i               reduce using rule 24 (elementary -> anchor .)
    j               reduce using rule 24 (elementary -> anchor .)
    k               reduce using rule 24 (elementary -> anchor .)
    l               reduce using rule 24 (elementary -> anchor .)
    m               reduce using rule 24 (elementary -> anchor .)
    n               reduce using rule 24 (elementary -> anchor .)
    o               reduce using rule 24 (elementary -> anchor .)
    p               reduce using rule 24 (elementary -> anchor .)
    q               reduce using rule 24 (elementary -> anchor .)
    r               reduce using rule 24 (elementary -> anchor .)
    s               reduce using rule 24 (elementary -> anchor .)
    t               reduce using rule 24 (elementary -> anchor .)
    u               reduce using rule 24 (elementary -> anchor .)
    v               reduce using rule 24 (elementary -> anchor .)
    w               reduce using rule 24 (elementary -> anchor .)
    x               reduce using rule 24 (elementary -> anchor .)
    y               reduce using rule 24 (elementary -> anchor .)
    z               reduce using rule 24 (elementary -> anchor .)
    A               reduce using rule 24 (elementary -> anchor .)
    B               reduce using rule 24 (elementary -> anchor .)
    C               reduce using rule 24 (elementary -> anchor .)
    D               reduce using rule 24 (elementary -> anchor .)
    E               reduce using rule 24 (elementary -> anchor .)
    F               reduce using rule 24 (elementary -> anchor .)
    G               reduce using rule 24 (elementary -> anchor .)
    H               reduce using rule 24 (elementary -> anchor .)
    I               reduce using rule 24 (elementary -> anchor .)
    J               reduce using rule 24 (elementary -> anchor .)
    K               reduce using rule 24 (elementary -> anchor .)
    L               reduce using rule 24 (elementary -> anchor .)
    M               reduce using rule 24 (elementary -> anchor .)
    N               reduce using rule 24 (elementary -> anchor .)
    O               reduce using rule 24 (elementary -> anchor .)
    P               reduce using rule 24 (elementary -> anchor .)
    Q               reduce using rule 24 (elementary -> anchor .)
    R               reduce using rule 24 (elementary -> anchor .)
    S               reduce using rule 24 (elementary -> anchor .)
    T               reduce using rule 24 (elementary -> anchor .)
    U               reduce using rule 24 (elementary -> anchor .)
    V               reduce using rule 24 (elementary -> anchor .)
    W               reduce using rule 24 (elementary -> anchor .)
    X               reduce using rule 24 (elementary -> anchor .)
    Y               reduce using rule 24 (elementary -> anchor .)
    Z               reduce using rule 24 (elementary -> anchor .)
    |               reduce using rule 24 (elementary -> anchor .)
    $end            reduce using rule 24 (elementary -> anchor .)
    )               reduce using rule 24 (elementary -> anchor .)


state 41

    (20) elementary -> anychar .

    *               reduce using rule 20 (elementary -> anychar .)
    +               reduce using rule 20 (elementary -> anychar .)
    ?               reduce using rule 20 (elementary -> anychar .)
    {               reduce using rule 20 (elementary -> anychar .)
    (               reduce using rule 20 (elementary -> anychar .)
    ^               reduce using rule 20 (elementary -> anychar .)
    >               reduce using rule 20 (elementary -> anychar .)
    <               reduce using rule 20 (elementary -> anychar .)
    /               reduce using rule 20 (elementary -> anychar .)
    \               reduce using rule 20 (elementary -> anychar .)
    #               reduce using rule 20 (elementary -> anychar .)
    %               reduce using rule 20 (elementary -> anychar .)
    ESCAPED         reduce using rule 20 (elementary -> anychar .)
    DIGIT           reduce using rule 20 (elementary -> anychar .)
    OTHER           reduce using rule 20 (elementary -> anychar .)
    [               reduce using rule 20 (elementary -> anychar .)
    .               reduce using rule 20 (elementary -> anychar .)
    ,               reduce using rule 20 (elementary -> anychar .)
    :               reduce using rule 20 (elementary -> anychar .)
    ;               reduce using rule 20 (elementary -> anychar .)
    $               reduce using rule 20 (elementary -> anychar .)
    `               reduce using rule 20 (elementary -> anychar .)
    a               reduce using rule 20 (elementary -> anychar .)
    b               reduce using rule 20 (elementary -> anychar .)
    c               reduce using rule 20 (elementary -> anychar .)
    d               reduce using rule 20 (elementary -> anychar .)
    e               reduce using rule 20 (elementary -> anychar .)
    f               reduce using rule 20 (elementary -> anychar .)
    g               reduce using rule 20 (elementary -> anychar .)
    h               reduce using rule 20 (elementary -> anychar .)
    i               reduce using rule 20 (elementary -> anychar .)
    j               reduce using rule 20 (elementary -> anychar .)
    k               reduce using rule 20 (elementary -> anychar .)
    l               reduce using rule 20 (elementary -> anychar .)
    m               reduce using rule 20 (elementary -> anychar .)
    n               reduce using rule 20 (elementary -> anychar .)
    o               reduce using rule 20 (elementary -> anychar .)
    p               reduce using rule 20 (elementary -> anychar .)
    q               reduce using rule 20 (elementary -> anychar .)
    r               reduce using rule 20 (elementary -> anychar .)
    s               reduce using rule 20 (elementary -> anychar .)
    t               reduce using rule 20 (elementary -> anychar .)
    u               reduce using rule 20 (elementary -> anychar .)
    v               reduce using rule 20 (elementary -> anychar .)
    w               reduce using rule 20 (elementary -> anychar .)
    x               reduce using rule 20 (elementary -> anychar .)
    y               reduce using rule 20 (elementary -> anychar .)
    z               reduce using rule 20 (elementary -> anychar .)
    A               reduce using rule 20 (elementary -> anychar .)
    B               reduce using rule 20 (elementary -> anychar .)
    C               reduce using rule 20 (elementary -> anychar .)
    D               reduce using rule 20 (elementary -> anychar .)
    E               reduce using rule 20 (elementary -> anychar .)
    F               reduce using rule 20 (elementary -> anychar .)
    G               reduce using rule 20 (elementary -> anychar .)
    H               reduce using rule 20 (elementary -> anychar .)
    I               reduce using rule 20 (elementary -> anychar .)
    J               reduce using rule 20 (elementary -> anychar .)
    K               reduce using rule 20 (elementary -> anychar .)
    L               reduce using rule 20 (elementary -> anychar .)
    M               reduce using rule 20 (elementary -> anychar .)
    N               reduce using rule 20 (elementary -> anychar .)
    O               reduce using rule 20 (elementary -> anychar .)
    P               reduce using rule 20 (elementary -> anychar .)
    Q               reduce using rule 20 (elementary -> anychar .)
    R               reduce using rule 20 (elementary -> anychar .)
    S               reduce using rule 20 (elementary -> anychar .)
    T               reduce using rule 20 (elementary -> anychar .)
    U               reduce using rule 20 (elementary -> anychar .)
    V               reduce using rule 20 (elementary -> anychar .)
    W               reduce using rule 20 (elementary -> anychar .)
    X               reduce using rule 20 (elementary -> anychar .)
    Y               reduce using rule 20 (elementary -> anychar .)
    Z               reduce using rule 20 (elementary -> anychar .)
    |               reduce using rule 20 (elementary -> anychar .)
    $end            reduce using rule 20 (elementary -> anychar .)
    )               reduce using rule 20 (elementary -> anychar .)


state 42

    (167) alpha_upper -> Z .

    -               reduce using rule 167 (alpha_upper -> Z .)
    !               reduce using rule 167 (alpha_upper -> Z .)
    "               reduce using rule 167 (alpha_upper -> Z .)
    #               reduce using rule 167 (alpha_upper -> Z .)
    $               reduce using rule 167 (alpha_upper -> Z .)
    %               reduce using rule 167 (alpha_upper -> Z .)
    &               reduce using rule 167 (alpha_upper -> Z .)
    '               reduce using rule 167 (alpha_upper -> Z .)
    (               reduce using rule 167 (alpha_upper -> Z .)
    )               reduce using rule 167 (alpha_upper -> Z .)
    *               reduce using rule 167 (alpha_upper -> Z .)
    +               reduce using rule 167 (alpha_upper -> Z .)
    ,               reduce using rule 167 (alpha_upper -> Z .)
    .               reduce using rule 167 (alpha_upper -> Z .)
    /               reduce using rule 167 (alpha_upper -> Z .)
    :               reduce using rule 167 (alpha_upper -> Z .)
    ;               reduce using rule 167 (alpha_upper -> Z .)
    <               reduce using rule 167 (alpha_upper -> Z .)
    =               reduce using rule 167 (alpha_upper -> Z .)
    >               reduce using rule 167 (alpha_upper -> Z .)
    ?               reduce using rule 167 (alpha_upper -> Z .)
    @               reduce using rule 167 (alpha_upper -> Z .)
    [               reduce using rule 167 (alpha_upper -> Z .)
    \               reduce using rule 167 (alpha_upper -> Z .)
    _               reduce using rule 167 (alpha_upper -> Z .)
    `               reduce using rule 167 (alpha_upper -> Z .)
    {               reduce using rule 167 (alpha_upper -> Z .)
    }               reduce using rule 167 (alpha_upper -> Z .)
    ~               reduce using rule 167 (alpha_upper -> Z .)
    ESCAPED         reduce using rule 167 (alpha_upper -> Z .)
    DIGIT           reduce using rule 167 (alpha_upper -> Z .)
    OTHER           reduce using rule 167 (alpha_upper -> Z .)
    a               reduce using rule 167 (alpha_upper -> Z .)
    b               reduce using rule 167 (alpha_upper -> Z .)
    c               reduce using rule 167 (alpha_upper -> Z .)
    d               reduce using rule 167 (alpha_upper -> Z .)
    e               reduce using rule 167 (alpha_upper -> Z .)
    f               reduce using rule 167 (alpha_upper -> Z .)
    g               reduce using rule 167 (alpha_upper -> Z .)
    h               reduce using rule 167 (alpha_upper -> Z .)
    i               reduce using rule 167 (alpha_upper -> Z .)
    j               reduce using rule 167 (alpha_upper -> Z .)
    k               reduce using rule 167 (alpha_upper -> Z .)
    l               reduce using rule 167 (alpha_upper -> Z .)
    m               reduce using rule 167 (alpha_upper -> Z .)
    n               reduce using rule 167 (alpha_upper -> Z .)
    o               reduce using rule 167 (alpha_upper -> Z .)
    p               reduce using rule 167 (alpha_upper -> Z .)
    q               reduce using rule 167 (alpha_upper -> Z .)
    r               reduce using rule 167 (alpha_upper -> Z .)
    s               reduce using rule 167 (alpha_upper -> Z .)
    t               reduce using rule 167 (alpha_upper -> Z .)
    u               reduce using rule 167 (alpha_upper -> Z .)
    v               reduce using rule 167 (alpha_upper -> Z .)
    w               reduce using rule 167 (alpha_upper -> Z .)
    x               reduce using rule 167 (alpha_upper -> Z .)
    y               reduce using rule 167 (alpha_upper -> Z .)
    z               reduce using rule 167 (alpha_upper -> Z .)
    A               reduce using rule 167 (alpha_upper -> Z .)
    B               reduce using rule 167 (alpha_upper -> Z .)
    C               reduce using rule 167 (alpha_upper -> Z .)
    D               reduce using rule 167 (alpha_upper -> Z .)
    E               reduce using rule 167 (alpha_upper -> Z .)
    F               reduce using rule 167 (alpha_upper -> Z .)
    G               reduce using rule 167 (alpha_upper -> Z .)
    H               reduce using rule 167 (alpha_upper -> Z .)
    I               reduce using rule 167 (alpha_upper -> Z .)
    J               reduce using rule 167 (alpha_upper -> Z .)
    K               reduce using rule 167 (alpha_upper -> Z .)
    L               reduce using rule 167 (alpha_upper -> Z .)
    M               reduce using rule 167 (alpha_upper -> Z .)
    N               reduce using rule 167 (alpha_upper -> Z .)
    O               reduce using rule 167 (alpha_upper -> Z .)
    P               reduce using rule 167 (alpha_upper -> Z .)
    Q               reduce using rule 167 (alpha_upper -> Z .)
    R               reduce using rule 167 (alpha_upper -> Z .)
    S               reduce using rule 167 (alpha_upper -> Z .)
    T               reduce using rule 167 (alpha_upper -> Z .)
    U               reduce using rule 167 (alpha_upper -> Z .)
    V               reduce using rule 167 (alpha_upper -> Z .)
    W               reduce using rule 167 (alpha_upper -> Z .)
    X               reduce using rule 167 (alpha_upper -> Z .)
    Y               reduce using rule 167 (alpha_upper -> Z .)
    Z               reduce using rule 167 (alpha_upper -> Z .)
    |               reduce using rule 167 (alpha_upper -> Z .)
    ]               reduce using rule 167 (alpha_upper -> Z .)
    ^               reduce using rule 167 (alpha_upper -> Z .)
    $end            reduce using rule 167 (alpha_upper -> Z .)


state 43

    (113) literal -> OTHER .

    -               reduce using rule 113 (literal -> OTHER .)
    !               reduce using rule 113 (literal -> OTHER .)
    "               reduce using rule 113 (literal -> OTHER .)
    #               reduce using rule 113 (literal -> OTHER .)
    $               reduce using rule 113 (literal -> OTHER .)
    %               reduce using rule 113 (literal -> OTHER .)
    &               reduce using rule 113 (literal -> OTHER .)
    '               reduce using rule 113 (literal -> OTHER .)
    (               reduce using rule 113 (literal -> OTHER .)
    )               reduce using rule 113 (literal -> OTHER .)
    *               reduce using rule 113 (literal -> OTHER .)
    +               reduce using rule 113 (literal -> OTHER .)
    ,               reduce using rule 113 (literal -> OTHER .)
    .               reduce using rule 113 (literal -> OTHER .)
    /               reduce using rule 113 (literal -> OTHER .)
    :               reduce using rule 113 (literal -> OTHER .)
    ;               reduce using rule 113 (literal -> OTHER .)
    <               reduce using rule 113 (literal -> OTHER .)
    =               reduce using rule 113 (literal -> OTHER .)
    >               reduce using rule 113 (literal -> OTHER .)
    ?               reduce using rule 113 (literal -> OTHER .)
    @               reduce using rule 113 (literal -> OTHER .)
    [               reduce using rule 113 (literal -> OTHER .)
    \               reduce using rule 113 (literal -> OTHER .)
    _               reduce using rule 113 (literal -> OTHER .)
    `               reduce using rule 113 (literal -> OTHER .)
    {               reduce using rule 113 (literal -> OTHER .)
    }               reduce using rule 113 (literal -> OTHER .)
    ~               reduce using rule 113 (literal -> OTHER .)
    ESCAPED         reduce using rule 113 (literal -> OTHER .)
    DIGIT           reduce using rule 113 (literal -> OTHER .)
    OTHER           reduce using rule 113 (literal -> OTHER .)
    a               reduce using rule 113 (literal -> OTHER .)
    b               reduce using rule 113 (literal -> OTHER .)
    c               reduce using rule 113 (literal -> OTHER .)
    d               reduce using rule 113 (literal -> OTHER .)
    e               reduce using rule 113 (literal -> OTHER .)
    f               reduce using rule 113 (literal -> OTHER .)
    g               reduce using rule 113 (literal -> OTHER .)
    h               reduce using rule 113 (literal -> OTHER .)
    i               reduce using rule 113 (literal -> OTHER .)
    j               reduce using rule 113 (literal -> OTHER .)
    k               reduce using rule 113 (literal -> OTHER .)
    l               reduce using rule 113 (literal -> OTHER .)
    m               reduce using rule 113 (literal -> OTHER .)
    n               reduce using rule 113 (literal -> OTHER .)
    o               reduce using rule 113 (literal -> OTHER .)
    p               reduce using rule 113 (literal -> OTHER .)
    q               reduce using rule 113 (literal -> OTHER .)
    r               reduce using rule 113 (literal -> OTHER .)
    s               reduce using rule 113 (literal -> OTHER .)
    t               reduce using rule 113 (literal -> OTHER .)
    u               reduce using rule 113 (literal -> OTHER .)
    v               reduce using rule 113 (literal -> OTHER .)
    w               reduce using rule 113 (literal -> OTHER .)
    x               reduce using rule 113 (literal -> OTHER .)
    y               reduce using rule 113 (literal -> OTHER .)
    z               reduce using rule 113 (literal -> OTHER .)
    A               reduce using rule 113 (literal -> OTHER .)
    B               reduce using rule 113 (literal -> OTHER .)
    C               reduce using rule 113 (literal -> OTHER .)
    D               reduce using rule 113 (literal -> OTHER .)
    E               reduce using rule 113 (literal -> OTHER .)
    F               reduce using rule 113 (literal -> OTHER .)
    G               reduce using rule 113 (literal -> OTHER .)
    H               reduce using rule 113 (literal -> OTHER .)
    I               reduce using rule 113 (literal -> OTHER .)
    J               reduce using rule 113 (literal -> OTHER .)
    K               reduce using rule 113 (literal -> OTHER .)
    L               reduce using rule 113 (literal -> OTHER .)
    M               reduce using rule 113 (literal -> OTHER .)
    N               reduce using rule 113 (literal -> OTHER .)
    O               reduce using rule 113 (literal -> OTHER .)
    P               reduce using rule 113 (literal -> OTHER .)
    Q               reduce using rule 113 (literal -> OTHER .)
    R               reduce using rule 113 (literal -> OTHER .)
    S               reduce using rule 113 (literal -> OTHER .)
    T               reduce using rule 113 (literal -> OTHER .)
    U               reduce using rule 113 (literal -> OTHER .)
    V               reduce using rule 113 (literal -> OTHER .)
    W               reduce using rule 113 (literal -> OTHER .)
    X               reduce using rule 113 (literal -> OTHER .)
    Y               reduce using rule 113 (literal -> OTHER .)
    Z               reduce using rule 113 (literal -> OTHER .)
    ]               reduce using rule 113 (literal -> OTHER .)
    |               reduce using rule 113 (literal -> OTHER .)
    ^               reduce using rule 113 (literal -> OTHER .)
    $end            reduce using rule 113 (literal -> OTHER .)


state 44

    (123) alpha_lower -> h .

    !               reduce using rule 123 (alpha_lower -> h .)
    "               reduce using rule 123 (alpha_lower -> h .)
    #               reduce using rule 123 (alpha_lower -> h .)
    $               reduce using rule 123 (alpha_lower -> h .)
    %               reduce using rule 123 (alpha_lower -> h .)
    &               reduce using rule 123 (alpha_lower -> h .)
    '               reduce using rule 123 (alpha_lower -> h .)
    (               reduce using rule 123 (alpha_lower -> h .)
    )               reduce using rule 123 (alpha_lower -> h .)
    *               reduce using rule 123 (alpha_lower -> h .)
    +               reduce using rule 123 (alpha_lower -> h .)
    ,               reduce using rule 123 (alpha_lower -> h .)
    .               reduce using rule 123 (alpha_lower -> h .)
    /               reduce using rule 123 (alpha_lower -> h .)
    :               reduce using rule 123 (alpha_lower -> h .)
    ;               reduce using rule 123 (alpha_lower -> h .)
    <               reduce using rule 123 (alpha_lower -> h .)
    =               reduce using rule 123 (alpha_lower -> h .)
    >               reduce using rule 123 (alpha_lower -> h .)
    ?               reduce using rule 123 (alpha_lower -> h .)
    @               reduce using rule 123 (alpha_lower -> h .)
    [               reduce using rule 123 (alpha_lower -> h .)
    \               reduce using rule 123 (alpha_lower -> h .)
    _               reduce using rule 123 (alpha_lower -> h .)
    `               reduce using rule 123 (alpha_lower -> h .)
    {               reduce using rule 123 (alpha_lower -> h .)
    }               reduce using rule 123 (alpha_lower -> h .)
    ~               reduce using rule 123 (alpha_lower -> h .)
    ESCAPED         reduce using rule 123 (alpha_lower -> h .)
    DIGIT           reduce using rule 123 (alpha_lower -> h .)
    OTHER           reduce using rule 123 (alpha_lower -> h .)
    a               reduce using rule 123 (alpha_lower -> h .)
    b               reduce using rule 123 (alpha_lower -> h .)
    c               reduce using rule 123 (alpha_lower -> h .)
    d               reduce using rule 123 (alpha_lower -> h .)
    e               reduce using rule 123 (alpha_lower -> h .)
    f               reduce using rule 123 (alpha_lower -> h .)
    g               reduce using rule 123 (alpha_lower -> h .)
    h               reduce using rule 123 (alpha_lower -> h .)
    i               reduce using rule 123 (alpha_lower -> h .)
    j               reduce using rule 123 (alpha_lower -> h .)
    k               reduce using rule 123 (alpha_lower -> h .)
    l               reduce using rule 123 (alpha_lower -> h .)
    m               reduce using rule 123 (alpha_lower -> h .)
    n               reduce using rule 123 (alpha_lower -> h .)
    o               reduce using rule 123 (alpha_lower -> h .)
    p               reduce using rule 123 (alpha_lower -> h .)
    q               reduce using rule 123 (alpha_lower -> h .)
    r               reduce using rule 123 (alpha_lower -> h .)
    s               reduce using rule 123 (alpha_lower -> h .)
    t               reduce using rule 123 (alpha_lower -> h .)
    u               reduce using rule 123 (alpha_lower -> h .)
    v               reduce using rule 123 (alpha_lower -> h .)
    w               reduce using rule 123 (alpha_lower -> h .)
    x               reduce using rule 123 (alpha_lower -> h .)
    y               reduce using rule 123 (alpha_lower -> h .)
    z               reduce using rule 123 (alpha_lower -> h .)
    A               reduce using rule 123 (alpha_lower -> h .)
    B               reduce using rule 123 (alpha_lower -> h .)
    C               reduce using rule 123 (alpha_lower -> h .)
    D               reduce using rule 123 (alpha_lower -> h .)
    E               reduce using rule 123 (alpha_lower -> h .)
    F               reduce using rule 123 (alpha_lower -> h .)
    G               reduce using rule 123 (alpha_lower -> h .)
    H               reduce using rule 123 (alpha_lower -> h .)
    I               reduce using rule 123 (alpha_lower -> h .)
    J               reduce using rule 123 (alpha_lower -> h .)
    K               reduce using rule 123 (alpha_lower -> h .)
    L               reduce using rule 123 (alpha_lower -> h .)
    M               reduce using rule 123 (alpha_lower -> h .)
    N               reduce using rule 123 (alpha_lower -> h .)
    O               reduce using rule 123 (alpha_lower -> h .)
    P               reduce using rule 123 (alpha_lower -> h .)
    Q               reduce using rule 123 (alpha_lower -> h .)
    R               reduce using rule 123 (alpha_lower -> h .)
    S               reduce using rule 123 (alpha_lower -> h .)
    T               reduce using rule 123 (alpha_lower -> h .)
    U               reduce using rule 123 (alpha_lower -> h .)
    V               reduce using rule 123 (alpha_lower -> h .)
    W               reduce using rule 123 (alpha_lower -> h .)
    X               reduce using rule 123 (alpha_lower -> h .)
    Y               reduce using rule 123 (alpha_lower -> h .)
    Z               reduce using rule 123 (alpha_lower -> h .)
    |               reduce using rule 123 (alpha_lower -> h .)
    ]               reduce using rule 123 (alpha_lower -> h .)
    -               reduce using rule 123 (alpha_lower -> h .)
    ^               reduce using rule 123 (alpha_lower -> h .)
    $end            reduce using rule 123 (alpha_lower -> h .)


state 45

    (161) alpha_upper -> T .

    -               reduce using rule 161 (alpha_upper -> T .)
    !               reduce using rule 161 (alpha_upper -> T .)
    "               reduce using rule 161 (alpha_upper -> T .)
    #               reduce using rule 161 (alpha_upper -> T .)
    $               reduce using rule 161 (alpha_upper -> T .)
    %               reduce using rule 161 (alpha_upper -> T .)
    &               reduce using rule 161 (alpha_upper -> T .)
    '               reduce using rule 161 (alpha_upper -> T .)
    (               reduce using rule 161 (alpha_upper -> T .)
    )               reduce using rule 161 (alpha_upper -> T .)
    *               reduce using rule 161 (alpha_upper -> T .)
    +               reduce using rule 161 (alpha_upper -> T .)
    ,               reduce using rule 161 (alpha_upper -> T .)
    .               reduce using rule 161 (alpha_upper -> T .)
    /               reduce using rule 161 (alpha_upper -> T .)
    :               reduce using rule 161 (alpha_upper -> T .)
    ;               reduce using rule 161 (alpha_upper -> T .)
    <               reduce using rule 161 (alpha_upper -> T .)
    =               reduce using rule 161 (alpha_upper -> T .)
    >               reduce using rule 161 (alpha_upper -> T .)
    ?               reduce using rule 161 (alpha_upper -> T .)
    @               reduce using rule 161 (alpha_upper -> T .)
    [               reduce using rule 161 (alpha_upper -> T .)
    \               reduce using rule 161 (alpha_upper -> T .)
    _               reduce using rule 161 (alpha_upper -> T .)
    `               reduce using rule 161 (alpha_upper -> T .)
    {               reduce using rule 161 (alpha_upper -> T .)
    }               reduce using rule 161 (alpha_upper -> T .)
    ~               reduce using rule 161 (alpha_upper -> T .)
    ESCAPED         reduce using rule 161 (alpha_upper -> T .)
    DIGIT           reduce using rule 161 (alpha_upper -> T .)
    OTHER           reduce using rule 161 (alpha_upper -> T .)
    a               reduce using rule 161 (alpha_upper -> T .)
    b               reduce using rule 161 (alpha_upper -> T .)
    c               reduce using rule 161 (alpha_upper -> T .)
    d               reduce using rule 161 (alpha_upper -> T .)
    e               reduce using rule 161 (alpha_upper -> T .)
    f               reduce using rule 161 (alpha_upper -> T .)
    g               reduce using rule 161 (alpha_upper -> T .)
    h               reduce using rule 161 (alpha_upper -> T .)
    i               reduce using rule 161 (alpha_upper -> T .)
    j               reduce using rule 161 (alpha_upper -> T .)
    k               reduce using rule 161 (alpha_upper -> T .)
    l               reduce using rule 161 (alpha_upper -> T .)
    m               reduce using rule 161 (alpha_upper -> T .)
    n               reduce using rule 161 (alpha_upper -> T .)
    o               reduce using rule 161 (alpha_upper -> T .)
    p               reduce using rule 161 (alpha_upper -> T .)
    q               reduce using rule 161 (alpha_upper -> T .)
    r               reduce using rule 161 (alpha_upper -> T .)
    s               reduce using rule 161 (alpha_upper -> T .)
    t               reduce using rule 161 (alpha_upper -> T .)
    u               reduce using rule 161 (alpha_upper -> T .)
    v               reduce using rule 161 (alpha_upper -> T .)
    w               reduce using rule 161 (alpha_upper -> T .)
    x               reduce using rule 161 (alpha_upper -> T .)
    y               reduce using rule 161 (alpha_upper -> T .)
    z               reduce using rule 161 (alpha_upper -> T .)
    A               reduce using rule 161 (alpha_upper -> T .)
    B               reduce using rule 161 (alpha_upper -> T .)
    C               reduce using rule 161 (alpha_upper -> T .)
    D               reduce using rule 161 (alpha_upper -> T .)
    E               reduce using rule 161 (alpha_upper -> T .)
    F               reduce using rule 161 (alpha_upper -> T .)
    G               reduce using rule 161 (alpha_upper -> T .)
    H               reduce using rule 161 (alpha_upper -> T .)
    I               reduce using rule 161 (alpha_upper -> T .)
    J               reduce using rule 161 (alpha_upper -> T .)
    K               reduce using rule 161 (alpha_upper -> T .)
    L               reduce using rule 161 (alpha_upper -> T .)
    M               reduce using rule 161 (alpha_upper -> T .)
    N               reduce using rule 161 (alpha_upper -> T .)
    O               reduce using rule 161 (alpha_upper -> T .)
    P               reduce using rule 161 (alpha_upper -> T .)
    Q               reduce using rule 161 (alpha_upper -> T .)
    R               reduce using rule 161 (alpha_upper -> T .)
    S               reduce using rule 161 (alpha_upper -> T .)
    T               reduce using rule 161 (alpha_upper -> T .)
    U               reduce using rule 161 (alpha_upper -> T .)
    V               reduce using rule 161 (alpha_upper -> T .)
    W               reduce using rule 161 (alpha_upper -> T .)
    X               reduce using rule 161 (alpha_upper -> T .)
    Y               reduce using rule 161 (alpha_upper -> T .)
    Z               reduce using rule 161 (alpha_upper -> T .)
    |               reduce using rule 161 (alpha_upper -> T .)
    ]               reduce using rule 161 (alpha_upper -> T .)
    ^               reduce using rule 161 (alpha_upper -> T .)
    $end            reduce using rule 161 (alpha_upper -> T .)


state 46

    (142) alpha_upper -> A .

    -               reduce using rule 142 (alpha_upper -> A .)
    !               reduce using rule 142 (alpha_upper -> A .)
    "               reduce using rule 142 (alpha_upper -> A .)
    #               reduce using rule 142 (alpha_upper -> A .)
    $               reduce using rule 142 (alpha_upper -> A .)
    %               reduce using rule 142 (alpha_upper -> A .)
    &               reduce using rule 142 (alpha_upper -> A .)
    '               reduce using rule 142 (alpha_upper -> A .)
    (               reduce using rule 142 (alpha_upper -> A .)
    )               reduce using rule 142 (alpha_upper -> A .)
    *               reduce using rule 142 (alpha_upper -> A .)
    +               reduce using rule 142 (alpha_upper -> A .)
    ,               reduce using rule 142 (alpha_upper -> A .)
    .               reduce using rule 142 (alpha_upper -> A .)
    /               reduce using rule 142 (alpha_upper -> A .)
    :               reduce using rule 142 (alpha_upper -> A .)
    ;               reduce using rule 142 (alpha_upper -> A .)
    <               reduce using rule 142 (alpha_upper -> A .)
    =               reduce using rule 142 (alpha_upper -> A .)
    >               reduce using rule 142 (alpha_upper -> A .)
    ?               reduce using rule 142 (alpha_upper -> A .)
    @               reduce using rule 142 (alpha_upper -> A .)
    [               reduce using rule 142 (alpha_upper -> A .)
    \               reduce using rule 142 (alpha_upper -> A .)
    _               reduce using rule 142 (alpha_upper -> A .)
    `               reduce using rule 142 (alpha_upper -> A .)
    {               reduce using rule 142 (alpha_upper -> A .)
    }               reduce using rule 142 (alpha_upper -> A .)
    ~               reduce using rule 142 (alpha_upper -> A .)
    ESCAPED         reduce using rule 142 (alpha_upper -> A .)
    DIGIT           reduce using rule 142 (alpha_upper -> A .)
    OTHER           reduce using rule 142 (alpha_upper -> A .)
    a               reduce using rule 142 (alpha_upper -> A .)
    b               reduce using rule 142 (alpha_upper -> A .)
    c               reduce using rule 142 (alpha_upper -> A .)
    d               reduce using rule 142 (alpha_upper -> A .)
    e               reduce using rule 142 (alpha_upper -> A .)
    f               reduce using rule 142 (alpha_upper -> A .)
    g               reduce using rule 142 (alpha_upper -> A .)
    h               reduce using rule 142 (alpha_upper -> A .)
    i               reduce using rule 142 (alpha_upper -> A .)
    j               reduce using rule 142 (alpha_upper -> A .)
    k               reduce using rule 142 (alpha_upper -> A .)
    l               reduce using rule 142 (alpha_upper -> A .)
    m               reduce using rule 142 (alpha_upper -> A .)
    n               reduce using rule 142 (alpha_upper -> A .)
    o               reduce using rule 142 (alpha_upper -> A .)
    p               reduce using rule 142 (alpha_upper -> A .)
    q               reduce using rule 142 (alpha_upper -> A .)
    r               reduce using rule 142 (alpha_upper -> A .)
    s               reduce using rule 142 (alpha_upper -> A .)
    t               reduce using rule 142 (alpha_upper -> A .)
    u               reduce using rule 142 (alpha_upper -> A .)
    v               reduce using rule 142 (alpha_upper -> A .)
    w               reduce using rule 142 (alpha_upper -> A .)
    x               reduce using rule 142 (alpha_upper -> A .)
    y               reduce using rule 142 (alpha_upper -> A .)
    z               reduce using rule 142 (alpha_upper -> A .)
    A               reduce using rule 142 (alpha_upper -> A .)
    B               reduce using rule 142 (alpha_upper -> A .)
    C               reduce using rule 142 (alpha_upper -> A .)
    D               reduce using rule 142 (alpha_upper -> A .)
    E               reduce using rule 142 (alpha_upper -> A .)
    F               reduce using rule 142 (alpha_upper -> A .)
    G               reduce using rule 142 (alpha_upper -> A .)
    H               reduce using rule 142 (alpha_upper -> A .)
    I               reduce using rule 142 (alpha_upper -> A .)
    J               reduce using rule 142 (alpha_upper -> A .)
    K               reduce using rule 142 (alpha_upper -> A .)
    L               reduce using rule 142 (alpha_upper -> A .)
    M               reduce using rule 142 (alpha_upper -> A .)
    N               reduce using rule 142 (alpha_upper -> A .)
    O               reduce using rule 142 (alpha_upper -> A .)
    P               reduce using rule 142 (alpha_upper -> A .)
    Q               reduce using rule 142 (alpha_upper -> A .)
    R               reduce using rule 142 (alpha_upper -> A .)
    S               reduce using rule 142 (alpha_upper -> A .)
    T               reduce using rule 142 (alpha_upper -> A .)
    U               reduce using rule 142 (alpha_upper -> A .)
    V               reduce using rule 142 (alpha_upper -> A .)
    W               reduce using rule 142 (alpha_upper -> A .)
    X               reduce using rule 142 (alpha_upper -> A .)
    Y               reduce using rule 142 (alpha_upper -> A .)
    Z               reduce using rule 142 (alpha_upper -> A .)
    |               reduce using rule 142 (alpha_upper -> A .)
    ]               reduce using rule 142 (alpha_upper -> A .)
    ^               reduce using rule 142 (alpha_upper -> A .)
    $end            reduce using rule 142 (alpha_upper -> A .)


state 47

    (141) alpha_lower -> z .

    !               reduce using rule 141 (alpha_lower -> z .)
    "               reduce using rule 141 (alpha_lower -> z .)
    #               reduce using rule 141 (alpha_lower -> z .)
    $               reduce using rule 141 (alpha_lower -> z .)
    %               reduce using rule 141 (alpha_lower -> z .)
    &               reduce using rule 141 (alpha_lower -> z .)
    '               reduce using rule 141 (alpha_lower -> z .)
    (               reduce using rule 141 (alpha_lower -> z .)
    )               reduce using rule 141 (alpha_lower -> z .)
    *               reduce using rule 141 (alpha_lower -> z .)
    +               reduce using rule 141 (alpha_lower -> z .)
    ,               reduce using rule 141 (alpha_lower -> z .)
    .               reduce using rule 141 (alpha_lower -> z .)
    /               reduce using rule 141 (alpha_lower -> z .)
    :               reduce using rule 141 (alpha_lower -> z .)
    ;               reduce using rule 141 (alpha_lower -> z .)
    <               reduce using rule 141 (alpha_lower -> z .)
    =               reduce using rule 141 (alpha_lower -> z .)
    >               reduce using rule 141 (alpha_lower -> z .)
    ?               reduce using rule 141 (alpha_lower -> z .)
    @               reduce using rule 141 (alpha_lower -> z .)
    [               reduce using rule 141 (alpha_lower -> z .)
    \               reduce using rule 141 (alpha_lower -> z .)
    _               reduce using rule 141 (alpha_lower -> z .)
    `               reduce using rule 141 (alpha_lower -> z .)
    {               reduce using rule 141 (alpha_lower -> z .)
    }               reduce using rule 141 (alpha_lower -> z .)
    ~               reduce using rule 141 (alpha_lower -> z .)
    ESCAPED         reduce using rule 141 (alpha_lower -> z .)
    DIGIT           reduce using rule 141 (alpha_lower -> z .)
    OTHER           reduce using rule 141 (alpha_lower -> z .)
    a               reduce using rule 141 (alpha_lower -> z .)
    b               reduce using rule 141 (alpha_lower -> z .)
    c               reduce using rule 141 (alpha_lower -> z .)
    d               reduce using rule 141 (alpha_lower -> z .)
    e               reduce using rule 141 (alpha_lower -> z .)
    f               reduce using rule 141 (alpha_lower -> z .)
    g               reduce using rule 141 (alpha_lower -> z .)
    h               reduce using rule 141 (alpha_lower -> z .)
    i               reduce using rule 141 (alpha_lower -> z .)
    j               reduce using rule 141 (alpha_lower -> z .)
    k               reduce using rule 141 (alpha_lower -> z .)
    l               reduce using rule 141 (alpha_lower -> z .)
    m               reduce using rule 141 (alpha_lower -> z .)
    n               reduce using rule 141 (alpha_lower -> z .)
    o               reduce using rule 141 (alpha_lower -> z .)
    p               reduce using rule 141 (alpha_lower -> z .)
    q               reduce using rule 141 (alpha_lower -> z .)
    r               reduce using rule 141 (alpha_lower -> z .)
    s               reduce using rule 141 (alpha_lower -> z .)
    t               reduce using rule 141 (alpha_lower -> z .)
    u               reduce using rule 141 (alpha_lower -> z .)
    v               reduce using rule 141 (alpha_lower -> z .)
    w               reduce using rule 141 (alpha_lower -> z .)
    x               reduce using rule 141 (alpha_lower -> z .)
    y               reduce using rule 141 (alpha_lower -> z .)
    z               reduce using rule 141 (alpha_lower -> z .)
    A               reduce using rule 141 (alpha_lower -> z .)
    B               reduce using rule 141 (alpha_lower -> z .)
    C               reduce using rule 141 (alpha_lower -> z .)
    D               reduce using rule 141 (alpha_lower -> z .)
    E               reduce using rule 141 (alpha_lower -> z .)
    F               reduce using rule 141 (alpha_lower -> z .)
    G               reduce using rule 141 (alpha_lower -> z .)
    H               reduce using rule 141 (alpha_lower -> z .)
    I               reduce using rule 141 (alpha_lower -> z .)
    J               reduce using rule 141 (alpha_lower -> z .)
    K               reduce using rule 141 (alpha_lower -> z .)
    L               reduce using rule 141 (alpha_lower -> z .)
    M               reduce using rule 141 (alpha_lower -> z .)
    N               reduce using rule 141 (alpha_lower -> z .)
    O               reduce using rule 141 (alpha_lower -> z .)
    P               reduce using rule 141 (alpha_lower -> z .)
    Q               reduce using rule 141 (alpha_lower -> z .)
    R               reduce using rule 141 (alpha_lower -> z .)
    S               reduce using rule 141 (alpha_lower -> z .)
    T               reduce using rule 141 (alpha_lower -> z .)
    U               reduce using rule 141 (alpha_lower -> z .)
    V               reduce using rule 141 (alpha_lower -> z .)
    W               reduce using rule 141 (alpha_lower -> z .)
    X               reduce using rule 141 (alpha_lower -> z .)
    Y               reduce using rule 141 (alpha_lower -> z .)
    Z               reduce using rule 141 (alpha_lower -> z .)
    |               reduce using rule 141 (alpha_lower -> z .)
    ]               reduce using rule 141 (alpha_lower -> z .)
    -               reduce using rule 141 (alpha_lower -> z .)
    ^               reduce using rule 141 (alpha_lower -> z .)
    $end            reduce using rule 141 (alpha_lower -> z .)


state 48

    (166) alpha_upper -> Y .

    -               reduce using rule 166 (alpha_upper -> Y .)
    !               reduce using rule 166 (alpha_upper -> Y .)
    "               reduce using rule 166 (alpha_upper -> Y .)
    #               reduce using rule 166 (alpha_upper -> Y .)
    $               reduce using rule 166 (alpha_upper -> Y .)
    %               reduce using rule 166 (alpha_upper -> Y .)
    &               reduce using rule 166 (alpha_upper -> Y .)
    '               reduce using rule 166 (alpha_upper -> Y .)
    (               reduce using rule 166 (alpha_upper -> Y .)
    )               reduce using rule 166 (alpha_upper -> Y .)
    *               reduce using rule 166 (alpha_upper -> Y .)
    +               reduce using rule 166 (alpha_upper -> Y .)
    ,               reduce using rule 166 (alpha_upper -> Y .)
    .               reduce using rule 166 (alpha_upper -> Y .)
    /               reduce using rule 166 (alpha_upper -> Y .)
    :               reduce using rule 166 (alpha_upper -> Y .)
    ;               reduce using rule 166 (alpha_upper -> Y .)
    <               reduce using rule 166 (alpha_upper -> Y .)
    =               reduce using rule 166 (alpha_upper -> Y .)
    >               reduce using rule 166 (alpha_upper -> Y .)
    ?               reduce using rule 166 (alpha_upper -> Y .)
    @               reduce using rule 166 (alpha_upper -> Y .)
    [               reduce using rule 166 (alpha_upper -> Y .)
    \               reduce using rule 166 (alpha_upper -> Y .)
    _               reduce using rule 166 (alpha_upper -> Y .)
    `               reduce using rule 166 (alpha_upper -> Y .)
    {               reduce using rule 166 (alpha_upper -> Y .)
    }               reduce using rule 166 (alpha_upper -> Y .)
    ~               reduce using rule 166 (alpha_upper -> Y .)
    ESCAPED         reduce using rule 166 (alpha_upper -> Y .)
    DIGIT           reduce using rule 166 (alpha_upper -> Y .)
    OTHER           reduce using rule 166 (alpha_upper -> Y .)
    a               reduce using rule 166 (alpha_upper -> Y .)
    b               reduce using rule 166 (alpha_upper -> Y .)
    c               reduce using rule 166 (alpha_upper -> Y .)
    d               reduce using rule 166 (alpha_upper -> Y .)
    e               reduce using rule 166 (alpha_upper -> Y .)
    f               reduce using rule 166 (alpha_upper -> Y .)
    g               reduce using rule 166 (alpha_upper -> Y .)
    h               reduce using rule 166 (alpha_upper -> Y .)
    i               reduce using rule 166 (alpha_upper -> Y .)
    j               reduce using rule 166 (alpha_upper -> Y .)
    k               reduce using rule 166 (alpha_upper -> Y .)
    l               reduce using rule 166 (alpha_upper -> Y .)
    m               reduce using rule 166 (alpha_upper -> Y .)
    n               reduce using rule 166 (alpha_upper -> Y .)
    o               reduce using rule 166 (alpha_upper -> Y .)
    p               reduce using rule 166 (alpha_upper -> Y .)
    q               reduce using rule 166 (alpha_upper -> Y .)
    r               reduce using rule 166 (alpha_upper -> Y .)
    s               reduce using rule 166 (alpha_upper -> Y .)
    t               reduce using rule 166 (alpha_upper -> Y .)
    u               reduce using rule 166 (alpha_upper -> Y .)
    v               reduce using rule 166 (alpha_upper -> Y .)
    w               reduce using rule 166 (alpha_upper -> Y .)
    x               reduce using rule 166 (alpha_upper -> Y .)
    y               reduce using rule 166 (alpha_upper -> Y .)
    z               reduce using rule 166 (alpha_upper -> Y .)
    A               reduce using rule 166 (alpha_upper -> Y .)
    B               reduce using rule 166 (alpha_upper -> Y .)
    C               reduce using rule 166 (alpha_upper -> Y .)
    D               reduce using rule 166 (alpha_upper -> Y .)
    E               reduce using rule 166 (alpha_upper -> Y .)
    F               reduce using rule 166 (alpha_upper -> Y .)
    G               reduce using rule 166 (alpha_upper -> Y .)
    H               reduce using rule 166 (alpha_upper -> Y .)
    I               reduce using rule 166 (alpha_upper -> Y .)
    J               reduce using rule 166 (alpha_upper -> Y .)
    K               reduce using rule 166 (alpha_upper -> Y .)
    L               reduce using rule 166 (alpha_upper -> Y .)
    M               reduce using rule 166 (alpha_upper -> Y .)
    N               reduce using rule 166 (alpha_upper -> Y .)
    O               reduce using rule 166 (alpha_upper -> Y .)
    P               reduce using rule 166 (alpha_upper -> Y .)
    Q               reduce using rule 166 (alpha_upper -> Y .)
    R               reduce using rule 166 (alpha_upper -> Y .)
    S               reduce using rule 166 (alpha_upper -> Y .)
    T               reduce using rule 166 (alpha_upper -> Y .)
    U               reduce using rule 166 (alpha_upper -> Y .)
    V               reduce using rule 166 (alpha_upper -> Y .)
    W               reduce using rule 166 (alpha_upper -> Y .)
    X               reduce using rule 166 (alpha_upper -> Y .)
    Y               reduce using rule 166 (alpha_upper -> Y .)
    Z               reduce using rule 166 (alpha_upper -> Y .)
    |               reduce using rule 166 (alpha_upper -> Y .)
    ]               reduce using rule 166 (alpha_upper -> Y .)
    ^               reduce using rule 166 (alpha_upper -> Y .)
    $end            reduce using rule 166 (alpha_upper -> Y .)


state 49

    (105) command -> < .

    *               reduce using rule 105 (command -> < .)
    +               reduce using rule 105 (command -> < .)
    ?               reduce using rule 105 (command -> < .)
    {               reduce using rule 105 (command -> < .)
    (               reduce using rule 105 (command -> < .)
    ^               reduce using rule 105 (command -> < .)
    >               reduce using rule 105 (command -> < .)
    <               reduce using rule 105 (command -> < .)
    /               reduce using rule 105 (command -> < .)
    \               reduce using rule 105 (command -> < .)
    #               reduce using rule 105 (command -> < .)
    %               reduce using rule 105 (command -> < .)
    ESCAPED         reduce using rule 105 (command -> < .)
    DIGIT           reduce using rule 105 (command -> < .)
    OTHER           reduce using rule 105 (command -> < .)
    [               reduce using rule 105 (command -> < .)
    .               reduce using rule 105 (command -> < .)
    ,               reduce using rule 105 (command -> < .)
    :               reduce using rule 105 (command -> < .)
    ;               reduce using rule 105 (command -> < .)
    $               reduce using rule 105 (command -> < .)
    `               reduce using rule 105 (command -> < .)
    a               reduce using rule 105 (command -> < .)
    b               reduce using rule 105 (command -> < .)
    c               reduce using rule 105 (command -> < .)
    d               reduce using rule 105 (command -> < .)
    e               reduce using rule 105 (command -> < .)
    f               reduce using rule 105 (command -> < .)
    g               reduce using rule 105 (command -> < .)
    h               reduce using rule 105 (command -> < .)
    i               reduce using rule 105 (command -> < .)
    j               reduce using rule 105 (command -> < .)
    k               reduce using rule 105 (command -> < .)
    l               reduce using rule 105 (command -> < .)
    m               reduce using rule 105 (command -> < .)
    n               reduce using rule 105 (command -> < .)
    o               reduce using rule 105 (command -> < .)
    p               reduce using rule 105 (command -> < .)
    q               reduce using rule 105 (command -> < .)
    r               reduce using rule 105 (command -> < .)
    s               reduce using rule 105 (command -> < .)
    t               reduce using rule 105 (command -> < .)
    u               reduce using rule 105 (command -> < .)
    v               reduce using rule 105 (command -> < .)
    w               reduce using rule 105 (command -> < .)
    x               reduce using rule 105 (command -> < .)
    y               reduce using rule 105 (command -> < .)
    z               reduce using rule 105 (command -> < .)
    A               reduce using rule 105 (command -> < .)
    B               reduce using rule 105 (command -> < .)
    C               reduce using rule 105 (command -> < .)
    D               reduce using rule 105 (command -> < .)
    E               reduce using rule 105 (command -> < .)
    F               reduce using rule 105 (command -> < .)
    G               reduce using rule 105 (command -> < .)
    H               reduce using rule 105 (command -> < .)
    I               reduce using rule 105 (command -> < .)
    J               reduce using rule 105 (command -> < .)
    K               reduce using rule 105 (command -> < .)
    L               reduce using rule 105 (command -> < .)
    M               reduce using rule 105 (command -> < .)
    N               reduce using rule 105 (command -> < .)
    O               reduce using rule 105 (command -> < .)
    P               reduce using rule 105 (command -> < .)
    Q               reduce using rule 105 (command -> < .)
    R               reduce using rule 105 (command -> < .)
    S               reduce using rule 105 (command -> < .)
    T               reduce using rule 105 (command -> < .)
    U               reduce using rule 105 (command -> < .)
    V               reduce using rule 105 (command -> < .)
    W               reduce using rule 105 (command -> < .)
    X               reduce using rule 105 (command -> < .)
    Y               reduce using rule 105 (command -> < .)
    Z               reduce using rule 105 (command -> < .)
    |               reduce using rule 105 (command -> < .)
    $end            reduce using rule 105 (command -> < .)
    )               reduce using rule 105 (command -> < .)


state 50

    (128) alpha_lower -> m .

    !               reduce using rule 128 (alpha_lower -> m .)
    "               reduce using rule 128 (alpha_lower -> m .)
    #               reduce using rule 128 (alpha_lower -> m .)
    $               reduce using rule 128 (alpha_lower -> m .)
    %               reduce using rule 128 (alpha_lower -> m .)
    &               reduce using rule 128 (alpha_lower -> m .)
    '               reduce using rule 128 (alpha_lower -> m .)
    (               reduce using rule 128 (alpha_lower -> m .)
    )               reduce using rule 128 (alpha_lower -> m .)
    *               reduce using rule 128 (alpha_lower -> m .)
    +               reduce using rule 128 (alpha_lower -> m .)
    ,               reduce using rule 128 (alpha_lower -> m .)
    .               reduce using rule 128 (alpha_lower -> m .)
    /               reduce using rule 128 (alpha_lower -> m .)
    :               reduce using rule 128 (alpha_lower -> m .)
    ;               reduce using rule 128 (alpha_lower -> m .)
    <               reduce using rule 128 (alpha_lower -> m .)
    =               reduce using rule 128 (alpha_lower -> m .)
    >               reduce using rule 128 (alpha_lower -> m .)
    ?               reduce using rule 128 (alpha_lower -> m .)
    @               reduce using rule 128 (alpha_lower -> m .)
    [               reduce using rule 128 (alpha_lower -> m .)
    \               reduce using rule 128 (alpha_lower -> m .)
    _               reduce using rule 128 (alpha_lower -> m .)
    `               reduce using rule 128 (alpha_lower -> m .)
    {               reduce using rule 128 (alpha_lower -> m .)
    }               reduce using rule 128 (alpha_lower -> m .)
    ~               reduce using rule 128 (alpha_lower -> m .)
    ESCAPED         reduce using rule 128 (alpha_lower -> m .)
    DIGIT           reduce using rule 128 (alpha_lower -> m .)
    OTHER           reduce using rule 128 (alpha_lower -> m .)
    a               reduce using rule 128 (alpha_lower -> m .)
    b               reduce using rule 128 (alpha_lower -> m .)
    c               reduce using rule 128 (alpha_lower -> m .)
    d               reduce using rule 128 (alpha_lower -> m .)
    e               reduce using rule 128 (alpha_lower -> m .)
    f               reduce using rule 128 (alpha_lower -> m .)
    g               reduce using rule 128 (alpha_lower -> m .)
    h               reduce using rule 128 (alpha_lower -> m .)
    i               reduce using rule 128 (alpha_lower -> m .)
    j               reduce using rule 128 (alpha_lower -> m .)
    k               reduce using rule 128 (alpha_lower -> m .)
    l               reduce using rule 128 (alpha_lower -> m .)
    m               reduce using rule 128 (alpha_lower -> m .)
    n               reduce using rule 128 (alpha_lower -> m .)
    o               reduce using rule 128 (alpha_lower -> m .)
    p               reduce using rule 128 (alpha_lower -> m .)
    q               reduce using rule 128 (alpha_lower -> m .)
    r               reduce using rule 128 (alpha_lower -> m .)
    s               reduce using rule 128 (alpha_lower -> m .)
    t               reduce using rule 128 (alpha_lower -> m .)
    u               reduce using rule 128 (alpha_lower -> m .)
    v               reduce using rule 128 (alpha_lower -> m .)
    w               reduce using rule 128 (alpha_lower -> m .)
    x               reduce using rule 128 (alpha_lower -> m .)
    y               reduce using rule 128 (alpha_lower -> m .)
    z               reduce using rule 128 (alpha_lower -> m .)
    A               reduce using rule 128 (alpha_lower -> m .)
    B               reduce using rule 128 (alpha_lower -> m .)
    C               reduce using rule 128 (alpha_lower -> m .)
    D               reduce using rule 128 (alpha_lower -> m .)
    E               reduce using rule 128 (alpha_lower -> m .)
    F               reduce using rule 128 (alpha_lower -> m .)
    G               reduce using rule 128 (alpha_lower -> m .)
    H               reduce using rule 128 (alpha_lower -> m .)
    I               reduce using rule 128 (alpha_lower -> m .)
    J               reduce using rule 128 (alpha_lower -> m .)
    K               reduce using rule 128 (alpha_lower -> m .)
    L               reduce using rule 128 (alpha_lower -> m .)
    M               reduce using rule 128 (alpha_lower -> m .)
    N               reduce using rule 128 (alpha_lower -> m .)
    O               reduce using rule 128 (alpha_lower -> m .)
    P               reduce using rule 128 (alpha_lower -> m .)
    Q               reduce using rule 128 (alpha_lower -> m .)
    R               reduce using rule 128 (alpha_lower -> m .)
    S               reduce using rule 128 (alpha_lower -> m .)
    T               reduce using rule 128 (alpha_lower -> m .)
    U               reduce using rule 128 (alpha_lower -> m .)
    V               reduce using rule 128 (alpha_lower -> m .)
    W               reduce using rule 128 (alpha_lower -> m .)
    X               reduce using rule 128 (alpha_lower -> m .)
    Y               reduce using rule 128 (alpha_lower -> m .)
    Z               reduce using rule 128 (alpha_lower -> m .)
    |               reduce using rule 128 (alpha_lower -> m .)
    ]               reduce using rule 128 (alpha_lower -> m .)
    -               reduce using rule 128 (alpha_lower -> m .)
    ^               reduce using rule 128 (alpha_lower -> m .)
    $end            reduce using rule 128 (alpha_lower -> m .)


state 51

    (112) literal -> DIGIT .

    -               reduce using rule 112 (literal -> DIGIT .)
    !               reduce using rule 112 (literal -> DIGIT .)
    "               reduce using rule 112 (literal -> DIGIT .)
    #               reduce using rule 112 (literal -> DIGIT .)
    $               reduce using rule 112 (literal -> DIGIT .)
    %               reduce using rule 112 (literal -> DIGIT .)
    &               reduce using rule 112 (literal -> DIGIT .)
    '               reduce using rule 112 (literal -> DIGIT .)
    (               reduce using rule 112 (literal -> DIGIT .)
    )               reduce using rule 112 (literal -> DIGIT .)
    *               reduce using rule 112 (literal -> DIGIT .)
    +               reduce using rule 112 (literal -> DIGIT .)
    ,               reduce using rule 112 (literal -> DIGIT .)
    .               reduce using rule 112 (literal -> DIGIT .)
    /               reduce using rule 112 (literal -> DIGIT .)
    :               reduce using rule 112 (literal -> DIGIT .)
    ;               reduce using rule 112 (literal -> DIGIT .)
    <               reduce using rule 112 (literal -> DIGIT .)
    =               reduce using rule 112 (literal -> DIGIT .)
    >               reduce using rule 112 (literal -> DIGIT .)
    ?               reduce using rule 112 (literal -> DIGIT .)
    @               reduce using rule 112 (literal -> DIGIT .)
    [               reduce using rule 112 (literal -> DIGIT .)
    \               reduce using rule 112 (literal -> DIGIT .)
    _               reduce using rule 112 (literal -> DIGIT .)
    `               reduce using rule 112 (literal -> DIGIT .)
    {               reduce using rule 112 (literal -> DIGIT .)
    }               reduce using rule 112 (literal -> DIGIT .)
    ~               reduce using rule 112 (literal -> DIGIT .)
    ESCAPED         reduce using rule 112 (literal -> DIGIT .)
    DIGIT           reduce using rule 112 (literal -> DIGIT .)
    OTHER           reduce using rule 112 (literal -> DIGIT .)
    a               reduce using rule 112 (literal -> DIGIT .)
    b               reduce using rule 112 (literal -> DIGIT .)
    c               reduce using rule 112 (literal -> DIGIT .)
    d               reduce using rule 112 (literal -> DIGIT .)
    e               reduce using rule 112 (literal -> DIGIT .)
    f               reduce using rule 112 (literal -> DIGIT .)
    g               reduce using rule 112 (literal -> DIGIT .)
    h               reduce using rule 112 (literal -> DIGIT .)
    i               reduce using rule 112 (literal -> DIGIT .)
    j               reduce using rule 112 (literal -> DIGIT .)
    k               reduce using rule 112 (literal -> DIGIT .)
    l               reduce using rule 112 (literal -> DIGIT .)
    m               reduce using rule 112 (literal -> DIGIT .)
    n               reduce using rule 112 (literal -> DIGIT .)
    o               reduce using rule 112 (literal -> DIGIT .)
    p               reduce using rule 112 (literal -> DIGIT .)
    q               reduce using rule 112 (literal -> DIGIT .)
    r               reduce using rule 112 (literal -> DIGIT .)
    s               reduce using rule 112 (literal -> DIGIT .)
    t               reduce using rule 112 (literal -> DIGIT .)
    u               reduce using rule 112 (literal -> DIGIT .)
    v               reduce using rule 112 (literal -> DIGIT .)
    w               reduce using rule 112 (literal -> DIGIT .)
    x               reduce using rule 112 (literal -> DIGIT .)
    y               reduce using rule 112 (literal -> DIGIT .)
    z               reduce using rule 112 (literal -> DIGIT .)
    A               reduce using rule 112 (literal -> DIGIT .)
    B               reduce using rule 112 (literal -> DIGIT .)
    C               reduce using rule 112 (literal -> DIGIT .)
    D               reduce using rule 112 (literal -> DIGIT .)
    E               reduce using rule 112 (literal -> DIGIT .)
    F               reduce using rule 112 (literal -> DIGIT .)
    G               reduce using rule 112 (literal -> DIGIT .)
    H               reduce using rule 112 (literal -> DIGIT .)
    I               reduce using rule 112 (literal -> DIGIT .)
    J               reduce using rule 112 (literal -> DIGIT .)
    K               reduce using rule 112 (literal -> DIGIT .)
    L               reduce using rule 112 (literal -> DIGIT .)
    M               reduce using rule 112 (literal -> DIGIT .)
    N               reduce using rule 112 (literal -> DIGIT .)
    O               reduce using rule 112 (literal -> DIGIT .)
    P               reduce using rule 112 (literal -> DIGIT .)
    Q               reduce using rule 112 (literal -> DIGIT .)
    R               reduce using rule 112 (literal -> DIGIT .)
    S               reduce using rule 112 (literal -> DIGIT .)
    T               reduce using rule 112 (literal -> DIGIT .)
    U               reduce using rule 112 (literal -> DIGIT .)
    V               reduce using rule 112 (literal -> DIGIT .)
    W               reduce using rule 112 (literal -> DIGIT .)
    X               reduce using rule 112 (literal -> DIGIT .)
    Y               reduce using rule 112 (literal -> DIGIT .)
    Z               reduce using rule 112 (literal -> DIGIT .)
    ]               reduce using rule 112 (literal -> DIGIT .)
    |               reduce using rule 112 (literal -> DIGIT .)
    ^               reduce using rule 112 (literal -> DIGIT .)
    $end            reduce using rule 112 (literal -> DIGIT .)


state 52

    (110) literal -> ESCAPED .

    -               reduce using rule 110 (literal -> ESCAPED .)
    !               reduce using rule 110 (literal -> ESCAPED .)
    "               reduce using rule 110 (literal -> ESCAPED .)
    #               reduce using rule 110 (literal -> ESCAPED .)
    $               reduce using rule 110 (literal -> ESCAPED .)
    %               reduce using rule 110 (literal -> ESCAPED .)
    &               reduce using rule 110 (literal -> ESCAPED .)
    '               reduce using rule 110 (literal -> ESCAPED .)
    (               reduce using rule 110 (literal -> ESCAPED .)
    )               reduce using rule 110 (literal -> ESCAPED .)
    *               reduce using rule 110 (literal -> ESCAPED .)
    +               reduce using rule 110 (literal -> ESCAPED .)
    ,               reduce using rule 110 (literal -> ESCAPED .)
    .               reduce using rule 110 (literal -> ESCAPED .)
    /               reduce using rule 110 (literal -> ESCAPED .)
    :               reduce using rule 110 (literal -> ESCAPED .)
    ;               reduce using rule 110 (literal -> ESCAPED .)
    <               reduce using rule 110 (literal -> ESCAPED .)
    =               reduce using rule 110 (literal -> ESCAPED .)
    >               reduce using rule 110 (literal -> ESCAPED .)
    ?               reduce using rule 110 (literal -> ESCAPED .)
    @               reduce using rule 110 (literal -> ESCAPED .)
    [               reduce using rule 110 (literal -> ESCAPED .)
    \               reduce using rule 110 (literal -> ESCAPED .)
    _               reduce using rule 110 (literal -> ESCAPED .)
    `               reduce using rule 110 (literal -> ESCAPED .)
    {               reduce using rule 110 (literal -> ESCAPED .)
    }               reduce using rule 110 (literal -> ESCAPED .)
    ~               reduce using rule 110 (literal -> ESCAPED .)
    ESCAPED         reduce using rule 110 (literal -> ESCAPED .)
    DIGIT           reduce using rule 110 (literal -> ESCAPED .)
    OTHER           reduce using rule 110 (literal -> ESCAPED .)
    a               reduce using rule 110 (literal -> ESCAPED .)
    b               reduce using rule 110 (literal -> ESCAPED .)
    c               reduce using rule 110 (literal -> ESCAPED .)
    d               reduce using rule 110 (literal -> ESCAPED .)
    e               reduce using rule 110 (literal -> ESCAPED .)
    f               reduce using rule 110 (literal -> ESCAPED .)
    g               reduce using rule 110 (literal -> ESCAPED .)
    h               reduce using rule 110 (literal -> ESCAPED .)
    i               reduce using rule 110 (literal -> ESCAPED .)
    j               reduce using rule 110 (literal -> ESCAPED .)
    k               reduce using rule 110 (literal -> ESCAPED .)
    l               reduce using rule 110 (literal -> ESCAPED .)
    m               reduce using rule 110 (literal -> ESCAPED .)
    n               reduce using rule 110 (literal -> ESCAPED .)
    o               reduce using rule 110 (literal -> ESCAPED .)
    p               reduce using rule 110 (literal -> ESCAPED .)
    q               reduce using rule 110 (literal -> ESCAPED .)
    r               reduce using rule 110 (literal -> ESCAPED .)
    s               reduce using rule 110 (literal -> ESCAPED .)
    t               reduce using rule 110 (literal -> ESCAPED .)
    u               reduce using rule 110 (literal -> ESCAPED .)
    v               reduce using rule 110 (literal -> ESCAPED .)
    w               reduce using rule 110 (literal -> ESCAPED .)
    x               reduce using rule 110 (literal -> ESCAPED .)
    y               reduce using rule 110 (literal -> ESCAPED .)
    z               reduce using rule 110 (literal -> ESCAPED .)
    A               reduce using rule 110 (literal -> ESCAPED .)
    B               reduce using rule 110 (literal -> ESCAPED .)
    C               reduce using rule 110 (literal -> ESCAPED .)
    D               reduce using rule 110 (literal -> ESCAPED .)
    E               reduce using rule 110 (literal -> ESCAPED .)
    F               reduce using rule 110 (literal -> ESCAPED .)
    G               reduce using rule 110 (literal -> ESCAPED .)
    H               reduce using rule 110 (literal -> ESCAPED .)
    I               reduce using rule 110 (literal -> ESCAPED .)
    J               reduce using rule 110 (literal -> ESCAPED .)
    K               reduce using rule 110 (literal -> ESCAPED .)
    L               reduce using rule 110 (literal -> ESCAPED .)
    M               reduce using rule 110 (literal -> ESCAPED .)
    N               reduce using rule 110 (literal -> ESCAPED .)
    O               reduce using rule 110 (literal -> ESCAPED .)
    P               reduce using rule 110 (literal -> ESCAPED .)
    Q               reduce using rule 110 (literal -> ESCAPED .)
    R               reduce using rule 110 (literal -> ESCAPED .)
    S               reduce using rule 110 (literal -> ESCAPED .)
    T               reduce using rule 110 (literal -> ESCAPED .)
    U               reduce using rule 110 (literal -> ESCAPED .)
    V               reduce using rule 110 (literal -> ESCAPED .)
    W               reduce using rule 110 (literal -> ESCAPED .)
    X               reduce using rule 110 (literal -> ESCAPED .)
    Y               reduce using rule 110 (literal -> ESCAPED .)
    Z               reduce using rule 110 (literal -> ESCAPED .)
    ]               reduce using rule 110 (literal -> ESCAPED .)
    |               reduce using rule 110 (literal -> ESCAPED .)
    ^               reduce using rule 110 (literal -> ESCAPED .)
    $end            reduce using rule 110 (literal -> ESCAPED .)


state 53

    (99) anchor -> $ . DIGIT
    (100) anchor -> $ . alpha
    (101) anchor -> $ . *
    (102) anchor -> $ . +
    (103) anchor -> $ . ^
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    DIGIT           shift and go to state 144
    *               shift and go to state 143
    +               shift and go to state 147
    ^               shift and go to state 145
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 146
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88

state 54

    (145) alpha_upper -> D .

    -               reduce using rule 145 (alpha_upper -> D .)
    !               reduce using rule 145 (alpha_upper -> D .)
    "               reduce using rule 145 (alpha_upper -> D .)
    #               reduce using rule 145 (alpha_upper -> D .)
    $               reduce using rule 145 (alpha_upper -> D .)
    %               reduce using rule 145 (alpha_upper -> D .)
    &               reduce using rule 145 (alpha_upper -> D .)
    '               reduce using rule 145 (alpha_upper -> D .)
    (               reduce using rule 145 (alpha_upper -> D .)
    )               reduce using rule 145 (alpha_upper -> D .)
    *               reduce using rule 145 (alpha_upper -> D .)
    +               reduce using rule 145 (alpha_upper -> D .)
    ,               reduce using rule 145 (alpha_upper -> D .)
    .               reduce using rule 145 (alpha_upper -> D .)
    /               reduce using rule 145 (alpha_upper -> D .)
    :               reduce using rule 145 (alpha_upper -> D .)
    ;               reduce using rule 145 (alpha_upper -> D .)
    <               reduce using rule 145 (alpha_upper -> D .)
    =               reduce using rule 145 (alpha_upper -> D .)
    >               reduce using rule 145 (alpha_upper -> D .)
    ?               reduce using rule 145 (alpha_upper -> D .)
    @               reduce using rule 145 (alpha_upper -> D .)
    [               reduce using rule 145 (alpha_upper -> D .)
    \               reduce using rule 145 (alpha_upper -> D .)
    _               reduce using rule 145 (alpha_upper -> D .)
    `               reduce using rule 145 (alpha_upper -> D .)
    {               reduce using rule 145 (alpha_upper -> D .)
    }               reduce using rule 145 (alpha_upper -> D .)
    ~               reduce using rule 145 (alpha_upper -> D .)
    ESCAPED         reduce using rule 145 (alpha_upper -> D .)
    DIGIT           reduce using rule 145 (alpha_upper -> D .)
    OTHER           reduce using rule 145 (alpha_upper -> D .)
    a               reduce using rule 145 (alpha_upper -> D .)
    b               reduce using rule 145 (alpha_upper -> D .)
    c               reduce using rule 145 (alpha_upper -> D .)
    d               reduce using rule 145 (alpha_upper -> D .)
    e               reduce using rule 145 (alpha_upper -> D .)
    f               reduce using rule 145 (alpha_upper -> D .)
    g               reduce using rule 145 (alpha_upper -> D .)
    h               reduce using rule 145 (alpha_upper -> D .)
    i               reduce using rule 145 (alpha_upper -> D .)
    j               reduce using rule 145 (alpha_upper -> D .)
    k               reduce using rule 145 (alpha_upper -> D .)
    l               reduce using rule 145 (alpha_upper -> D .)
    m               reduce using rule 145 (alpha_upper -> D .)
    n               reduce using rule 145 (alpha_upper -> D .)
    o               reduce using rule 145 (alpha_upper -> D .)
    p               reduce using rule 145 (alpha_upper -> D .)
    q               reduce using rule 145 (alpha_upper -> D .)
    r               reduce using rule 145 (alpha_upper -> D .)
    s               reduce using rule 145 (alpha_upper -> D .)
    t               reduce using rule 145 (alpha_upper -> D .)
    u               reduce using rule 145 (alpha_upper -> D .)
    v               reduce using rule 145 (alpha_upper -> D .)
    w               reduce using rule 145 (alpha_upper -> D .)
    x               reduce using rule 145 (alpha_upper -> D .)
    y               reduce using rule 145 (alpha_upper -> D .)
    z               reduce using rule 145 (alpha_upper -> D .)
    A               reduce using rule 145 (alpha_upper -> D .)
    B               reduce using rule 145 (alpha_upper -> D .)
    C               reduce using rule 145 (alpha_upper -> D .)
    D               reduce using rule 145 (alpha_upper -> D .)
    E               reduce using rule 145 (alpha_upper -> D .)
    F               reduce using rule 145 (alpha_upper -> D .)
    G               reduce using rule 145 (alpha_upper -> D .)
    H               reduce using rule 145 (alpha_upper -> D .)
    I               reduce using rule 145 (alpha_upper -> D .)
    J               reduce using rule 145 (alpha_upper -> D .)
    K               reduce using rule 145 (alpha_upper -> D .)
    L               reduce using rule 145 (alpha_upper -> D .)
    M               reduce using rule 145 (alpha_upper -> D .)
    N               reduce using rule 145 (alpha_upper -> D .)
    O               reduce using rule 145 (alpha_upper -> D .)
    P               reduce using rule 145 (alpha_upper -> D .)
    Q               reduce using rule 145 (alpha_upper -> D .)
    R               reduce using rule 145 (alpha_upper -> D .)
    S               reduce using rule 145 (alpha_upper -> D .)
    T               reduce using rule 145 (alpha_upper -> D .)
    U               reduce using rule 145 (alpha_upper -> D .)
    V               reduce using rule 145 (alpha_upper -> D .)
    W               reduce using rule 145 (alpha_upper -> D .)
    X               reduce using rule 145 (alpha_upper -> D .)
    Y               reduce using rule 145 (alpha_upper -> D .)
    Z               reduce using rule 145 (alpha_upper -> D .)
    |               reduce using rule 145 (alpha_upper -> D .)
    ]               reduce using rule 145 (alpha_upper -> D .)
    ^               reduce using rule 145 (alpha_upper -> D .)
    $end            reduce using rule 145 (alpha_upper -> D .)


state 55

    (14) basequantifier -> nrepeat .

    ?               reduce using rule 14 (basequantifier -> nrepeat .)
    (               reduce using rule 14 (basequantifier -> nrepeat .)
    ^               reduce using rule 14 (basequantifier -> nrepeat .)
    >               reduce using rule 14 (basequantifier -> nrepeat .)
    <               reduce using rule 14 (basequantifier -> nrepeat .)
    /               reduce using rule 14 (basequantifier -> nrepeat .)
    \               reduce using rule 14 (basequantifier -> nrepeat .)
    #               reduce using rule 14 (basequantifier -> nrepeat .)
    %               reduce using rule 14 (basequantifier -> nrepeat .)
    ESCAPED         reduce using rule 14 (basequantifier -> nrepeat .)
    DIGIT           reduce using rule 14 (basequantifier -> nrepeat .)
    OTHER           reduce using rule 14 (basequantifier -> nrepeat .)
    [               reduce using rule 14 (basequantifier -> nrepeat .)
    .               reduce using rule 14 (basequantifier -> nrepeat .)
    ,               reduce using rule 14 (basequantifier -> nrepeat .)
    :               reduce using rule 14 (basequantifier -> nrepeat .)
    ;               reduce using rule 14 (basequantifier -> nrepeat .)
    $               reduce using rule 14 (basequantifier -> nrepeat .)
    `               reduce using rule 14 (basequantifier -> nrepeat .)
    a               reduce using rule 14 (basequantifier -> nrepeat .)
    b               reduce using rule 14 (basequantifier -> nrepeat .)
    c               reduce using rule 14 (basequantifier -> nrepeat .)
    d               reduce using rule 14 (basequantifier -> nrepeat .)
    e               reduce using rule 14 (basequantifier -> nrepeat .)
    f               reduce using rule 14 (basequantifier -> nrepeat .)
    g               reduce using rule 14 (basequantifier -> nrepeat .)
    h               reduce using rule 14 (basequantifier -> nrepeat .)
    i               reduce using rule 14 (basequantifier -> nrepeat .)
    j               reduce using rule 14 (basequantifier -> nrepeat .)
    k               reduce using rule 14 (basequantifier -> nrepeat .)
    l               reduce using rule 14 (basequantifier -> nrepeat .)
    m               reduce using rule 14 (basequantifier -> nrepeat .)
    n               reduce using rule 14 (basequantifier -> nrepeat .)
    o               reduce using rule 14 (basequantifier -> nrepeat .)
    p               reduce using rule 14 (basequantifier -> nrepeat .)
    q               reduce using rule 14 (basequantifier -> nrepeat .)
    r               reduce using rule 14 (basequantifier -> nrepeat .)
    s               reduce using rule 14 (basequantifier -> nrepeat .)
    t               reduce using rule 14 (basequantifier -> nrepeat .)
    u               reduce using rule 14 (basequantifier -> nrepeat .)
    v               reduce using rule 14 (basequantifier -> nrepeat .)
    w               reduce using rule 14 (basequantifier -> nrepeat .)
    x               reduce using rule 14 (basequantifier -> nrepeat .)
    y               reduce using rule 14 (basequantifier -> nrepeat .)
    z               reduce using rule 14 (basequantifier -> nrepeat .)
    A               reduce using rule 14 (basequantifier -> nrepeat .)
    B               reduce using rule 14 (basequantifier -> nrepeat .)
    C               reduce using rule 14 (basequantifier -> nrepeat .)
    D               reduce using rule 14 (basequantifier -> nrepeat .)
    E               reduce using rule 14 (basequantifier -> nrepeat .)
    F               reduce using rule 14 (basequantifier -> nrepeat .)
    G               reduce using rule 14 (basequantifier -> nrepeat .)
    H               reduce using rule 14 (basequantifier -> nrepeat .)
    I               reduce using rule 14 (basequantifier -> nrepeat .)
    J               reduce using rule 14 (basequantifier -> nrepeat .)
    K               reduce using rule 14 (basequantifier -> nrepeat .)
    L               reduce using rule 14 (basequantifier -> nrepeat .)
    M               reduce using rule 14 (basequantifier -> nrepeat .)
    N               reduce using rule 14 (basequantifier -> nrepeat .)
    O               reduce using rule 14 (basequantifier -> nrepeat .)
    P               reduce using rule 14 (basequantifier -> nrepeat .)
    Q               reduce using rule 14 (basequantifier -> nrepeat .)
    R               reduce using rule 14 (basequantifier -> nrepeat .)
    S               reduce using rule 14 (basequantifier -> nrepeat .)
    T               reduce using rule 14 (basequantifier -> nrepeat .)
    U               reduce using rule 14 (basequantifier -> nrepeat .)
    V               reduce using rule 14 (basequantifier -> nrepeat .)
    W               reduce using rule 14 (basequantifier -> nrepeat .)
    X               reduce using rule 14 (basequantifier -> nrepeat .)
    Y               reduce using rule 14 (basequantifier -> nrepeat .)
    Z               reduce using rule 14 (basequantifier -> nrepeat .)
    |               reduce using rule 14 (basequantifier -> nrepeat .)
    )               reduce using rule 14 (basequantifier -> nrepeat .)
    $end            reduce using rule 14 (basequantifier -> nrepeat .)


state 56

    (135) alpha_lower -> t .

    !               reduce using rule 135 (alpha_lower -> t .)
    "               reduce using rule 135 (alpha_lower -> t .)
    #               reduce using rule 135 (alpha_lower -> t .)
    $               reduce using rule 135 (alpha_lower -> t .)
    %               reduce using rule 135 (alpha_lower -> t .)
    &               reduce using rule 135 (alpha_lower -> t .)
    '               reduce using rule 135 (alpha_lower -> t .)
    (               reduce using rule 135 (alpha_lower -> t .)
    )               reduce using rule 135 (alpha_lower -> t .)
    *               reduce using rule 135 (alpha_lower -> t .)
    +               reduce using rule 135 (alpha_lower -> t .)
    ,               reduce using rule 135 (alpha_lower -> t .)
    .               reduce using rule 135 (alpha_lower -> t .)
    /               reduce using rule 135 (alpha_lower -> t .)
    :               reduce using rule 135 (alpha_lower -> t .)
    ;               reduce using rule 135 (alpha_lower -> t .)
    <               reduce using rule 135 (alpha_lower -> t .)
    =               reduce using rule 135 (alpha_lower -> t .)
    >               reduce using rule 135 (alpha_lower -> t .)
    ?               reduce using rule 135 (alpha_lower -> t .)
    @               reduce using rule 135 (alpha_lower -> t .)
    [               reduce using rule 135 (alpha_lower -> t .)
    \               reduce using rule 135 (alpha_lower -> t .)
    _               reduce using rule 135 (alpha_lower -> t .)
    `               reduce using rule 135 (alpha_lower -> t .)
    {               reduce using rule 135 (alpha_lower -> t .)
    }               reduce using rule 135 (alpha_lower -> t .)
    ~               reduce using rule 135 (alpha_lower -> t .)
    ESCAPED         reduce using rule 135 (alpha_lower -> t .)
    DIGIT           reduce using rule 135 (alpha_lower -> t .)
    OTHER           reduce using rule 135 (alpha_lower -> t .)
    a               reduce using rule 135 (alpha_lower -> t .)
    b               reduce using rule 135 (alpha_lower -> t .)
    c               reduce using rule 135 (alpha_lower -> t .)
    d               reduce using rule 135 (alpha_lower -> t .)
    e               reduce using rule 135 (alpha_lower -> t .)
    f               reduce using rule 135 (alpha_lower -> t .)
    g               reduce using rule 135 (alpha_lower -> t .)
    h               reduce using rule 135 (alpha_lower -> t .)
    i               reduce using rule 135 (alpha_lower -> t .)
    j               reduce using rule 135 (alpha_lower -> t .)
    k               reduce using rule 135 (alpha_lower -> t .)
    l               reduce using rule 135 (alpha_lower -> t .)
    m               reduce using rule 135 (alpha_lower -> t .)
    n               reduce using rule 135 (alpha_lower -> t .)
    o               reduce using rule 135 (alpha_lower -> t .)
    p               reduce using rule 135 (alpha_lower -> t .)
    q               reduce using rule 135 (alpha_lower -> t .)
    r               reduce using rule 135 (alpha_lower -> t .)
    s               reduce using rule 135 (alpha_lower -> t .)
    t               reduce using rule 135 (alpha_lower -> t .)
    u               reduce using rule 135 (alpha_lower -> t .)
    v               reduce using rule 135 (alpha_lower -> t .)
    w               reduce using rule 135 (alpha_lower -> t .)
    x               reduce using rule 135 (alpha_lower -> t .)
    y               reduce using rule 135 (alpha_lower -> t .)
    z               reduce using rule 135 (alpha_lower -> t .)
    A               reduce using rule 135 (alpha_lower -> t .)
    B               reduce using rule 135 (alpha_lower -> t .)
    C               reduce using rule 135 (alpha_lower -> t .)
    D               reduce using rule 135 (alpha_lower -> t .)
    E               reduce using rule 135 (alpha_lower -> t .)
    F               reduce using rule 135 (alpha_lower -> t .)
    G               reduce using rule 135 (alpha_lower -> t .)
    H               reduce using rule 135 (alpha_lower -> t .)
    I               reduce using rule 135 (alpha_lower -> t .)
    J               reduce using rule 135 (alpha_lower -> t .)
    K               reduce using rule 135 (alpha_lower -> t .)
    L               reduce using rule 135 (alpha_lower -> t .)
    M               reduce using rule 135 (alpha_lower -> t .)
    N               reduce using rule 135 (alpha_lower -> t .)
    O               reduce using rule 135 (alpha_lower -> t .)
    P               reduce using rule 135 (alpha_lower -> t .)
    Q               reduce using rule 135 (alpha_lower -> t .)
    R               reduce using rule 135 (alpha_lower -> t .)
    S               reduce using rule 135 (alpha_lower -> t .)
    T               reduce using rule 135 (alpha_lower -> t .)
    U               reduce using rule 135 (alpha_lower -> t .)
    V               reduce using rule 135 (alpha_lower -> t .)
    W               reduce using rule 135 (alpha_lower -> t .)
    X               reduce using rule 135 (alpha_lower -> t .)
    Y               reduce using rule 135 (alpha_lower -> t .)
    Z               reduce using rule 135 (alpha_lower -> t .)
    |               reduce using rule 135 (alpha_lower -> t .)
    ]               reduce using rule 135 (alpha_lower -> t .)
    -               reduce using rule 135 (alpha_lower -> t .)
    ^               reduce using rule 135 (alpha_lower -> t .)
    $end            reduce using rule 135 (alpha_lower -> t .)


state 57

    (15) elementary -> group .

    *               reduce using rule 15 (elementary -> group .)
    +               reduce using rule 15 (elementary -> group .)
    ?               reduce using rule 15 (elementary -> group .)
    {               reduce using rule 15 (elementary -> group .)
    (               reduce using rule 15 (elementary -> group .)
    ^               reduce using rule 15 (elementary -> group .)
    >               reduce using rule 15 (elementary -> group .)
    <               reduce using rule 15 (elementary -> group .)
    /               reduce using rule 15 (elementary -> group .)
    \               reduce using rule 15 (elementary -> group .)
    #               reduce using rule 15 (elementary -> group .)
    %               reduce using rule 15 (elementary -> group .)
    ESCAPED         reduce using rule 15 (elementary -> group .)
    DIGIT           reduce using rule 15 (elementary -> group .)
    OTHER           reduce using rule 15 (elementary -> group .)
    [               reduce using rule 15 (elementary -> group .)
    .               reduce using rule 15 (elementary -> group .)
    ,               reduce using rule 15 (elementary -> group .)
    :               reduce using rule 15 (elementary -> group .)
    ;               reduce using rule 15 (elementary -> group .)
    $               reduce using rule 15 (elementary -> group .)
    `               reduce using rule 15 (elementary -> group .)
    a               reduce using rule 15 (elementary -> group .)
    b               reduce using rule 15 (elementary -> group .)
    c               reduce using rule 15 (elementary -> group .)
    d               reduce using rule 15 (elementary -> group .)
    e               reduce using rule 15 (elementary -> group .)
    f               reduce using rule 15 (elementary -> group .)
    g               reduce using rule 15 (elementary -> group .)
    h               reduce using rule 15 (elementary -> group .)
    i               reduce using rule 15 (elementary -> group .)
    j               reduce using rule 15 (elementary -> group .)
    k               reduce using rule 15 (elementary -> group .)
    l               reduce using rule 15 (elementary -> group .)
    m               reduce using rule 15 (elementary -> group .)
    n               reduce using rule 15 (elementary -> group .)
    o               reduce using rule 15 (elementary -> group .)
    p               reduce using rule 15 (elementary -> group .)
    q               reduce using rule 15 (elementary -> group .)
    r               reduce using rule 15 (elementary -> group .)
    s               reduce using rule 15 (elementary -> group .)
    t               reduce using rule 15 (elementary -> group .)
    u               reduce using rule 15 (elementary -> group .)
    v               reduce using rule 15 (elementary -> group .)
    w               reduce using rule 15 (elementary -> group .)
    x               reduce using rule 15 (elementary -> group .)
    y               reduce using rule 15 (elementary -> group .)
    z               reduce using rule 15 (elementary -> group .)
    A               reduce using rule 15 (elementary -> group .)
    B               reduce using rule 15 (elementary -> group .)
    C               reduce using rule 15 (elementary -> group .)
    D               reduce using rule 15 (elementary -> group .)
    E               reduce using rule 15 (elementary -> group .)
    F               reduce using rule 15 (elementary -> group .)
    G               reduce using rule 15 (elementary -> group .)
    H               reduce using rule 15 (elementary -> group .)
    I               reduce using rule 15 (elementary -> group .)
    J               reduce using rule 15 (elementary -> group .)
    K               reduce using rule 15 (elementary -> group .)
    L               reduce using rule 15 (elementary -> group .)
    M               reduce using rule 15 (elementary -> group .)
    N               reduce using rule 15 (elementary -> group .)
    O               reduce using rule 15 (elementary -> group .)
    P               reduce using rule 15 (elementary -> group .)
    Q               reduce using rule 15 (elementary -> group .)
    R               reduce using rule 15 (elementary -> group .)
    S               reduce using rule 15 (elementary -> group .)
    T               reduce using rule 15 (elementary -> group .)
    U               reduce using rule 15 (elementary -> group .)
    V               reduce using rule 15 (elementary -> group .)
    W               reduce using rule 15 (elementary -> group .)
    X               reduce using rule 15 (elementary -> group .)
    Y               reduce using rule 15 (elementary -> group .)
    Z               reduce using rule 15 (elementary -> group .)
    |               reduce using rule 15 (elementary -> group .)
    $end            reduce using rule 15 (elementary -> group .)
    )               reduce using rule 15 (elementary -> group .)


state 58

    (129) alpha_lower -> n .

    !               reduce using rule 129 (alpha_lower -> n .)
    "               reduce using rule 129 (alpha_lower -> n .)
    #               reduce using rule 129 (alpha_lower -> n .)
    $               reduce using rule 129 (alpha_lower -> n .)
    %               reduce using rule 129 (alpha_lower -> n .)
    &               reduce using rule 129 (alpha_lower -> n .)
    '               reduce using rule 129 (alpha_lower -> n .)
    (               reduce using rule 129 (alpha_lower -> n .)
    )               reduce using rule 129 (alpha_lower -> n .)
    *               reduce using rule 129 (alpha_lower -> n .)
    +               reduce using rule 129 (alpha_lower -> n .)
    ,               reduce using rule 129 (alpha_lower -> n .)
    .               reduce using rule 129 (alpha_lower -> n .)
    /               reduce using rule 129 (alpha_lower -> n .)
    :               reduce using rule 129 (alpha_lower -> n .)
    ;               reduce using rule 129 (alpha_lower -> n .)
    <               reduce using rule 129 (alpha_lower -> n .)
    =               reduce using rule 129 (alpha_lower -> n .)
    >               reduce using rule 129 (alpha_lower -> n .)
    ?               reduce using rule 129 (alpha_lower -> n .)
    @               reduce using rule 129 (alpha_lower -> n .)
    [               reduce using rule 129 (alpha_lower -> n .)
    \               reduce using rule 129 (alpha_lower -> n .)
    _               reduce using rule 129 (alpha_lower -> n .)
    `               reduce using rule 129 (alpha_lower -> n .)
    {               reduce using rule 129 (alpha_lower -> n .)
    }               reduce using rule 129 (alpha_lower -> n .)
    ~               reduce using rule 129 (alpha_lower -> n .)
    ESCAPED         reduce using rule 129 (alpha_lower -> n .)
    DIGIT           reduce using rule 129 (alpha_lower -> n .)
    OTHER           reduce using rule 129 (alpha_lower -> n .)
    a               reduce using rule 129 (alpha_lower -> n .)
    b               reduce using rule 129 (alpha_lower -> n .)
    c               reduce using rule 129 (alpha_lower -> n .)
    d               reduce using rule 129 (alpha_lower -> n .)
    e               reduce using rule 129 (alpha_lower -> n .)
    f               reduce using rule 129 (alpha_lower -> n .)
    g               reduce using rule 129 (alpha_lower -> n .)
    h               reduce using rule 129 (alpha_lower -> n .)
    i               reduce using rule 129 (alpha_lower -> n .)
    j               reduce using rule 129 (alpha_lower -> n .)
    k               reduce using rule 129 (alpha_lower -> n .)
    l               reduce using rule 129 (alpha_lower -> n .)
    m               reduce using rule 129 (alpha_lower -> n .)
    n               reduce using rule 129 (alpha_lower -> n .)
    o               reduce using rule 129 (alpha_lower -> n .)
    p               reduce using rule 129 (alpha_lower -> n .)
    q               reduce using rule 129 (alpha_lower -> n .)
    r               reduce using rule 129 (alpha_lower -> n .)
    s               reduce using rule 129 (alpha_lower -> n .)
    t               reduce using rule 129 (alpha_lower -> n .)
    u               reduce using rule 129 (alpha_lower -> n .)
    v               reduce using rule 129 (alpha_lower -> n .)
    w               reduce using rule 129 (alpha_lower -> n .)
    x               reduce using rule 129 (alpha_lower -> n .)
    y               reduce using rule 129 (alpha_lower -> n .)
    z               reduce using rule 129 (alpha_lower -> n .)
    A               reduce using rule 129 (alpha_lower -> n .)
    B               reduce using rule 129 (alpha_lower -> n .)
    C               reduce using rule 129 (alpha_lower -> n .)
    D               reduce using rule 129 (alpha_lower -> n .)
    E               reduce using rule 129 (alpha_lower -> n .)
    F               reduce using rule 129 (alpha_lower -> n .)
    G               reduce using rule 129 (alpha_lower -> n .)
    H               reduce using rule 129 (alpha_lower -> n .)
    I               reduce using rule 129 (alpha_lower -> n .)
    J               reduce using rule 129 (alpha_lower -> n .)
    K               reduce using rule 129 (alpha_lower -> n .)
    L               reduce using rule 129 (alpha_lower -> n .)
    M               reduce using rule 129 (alpha_lower -> n .)
    N               reduce using rule 129 (alpha_lower -> n .)
    O               reduce using rule 129 (alpha_lower -> n .)
    P               reduce using rule 129 (alpha_lower -> n .)
    Q               reduce using rule 129 (alpha_lower -> n .)
    R               reduce using rule 129 (alpha_lower -> n .)
    S               reduce using rule 129 (alpha_lower -> n .)
    T               reduce using rule 129 (alpha_lower -> n .)
    U               reduce using rule 129 (alpha_lower -> n .)
    V               reduce using rule 129 (alpha_lower -> n .)
    W               reduce using rule 129 (alpha_lower -> n .)
    X               reduce using rule 129 (alpha_lower -> n .)
    Y               reduce using rule 129 (alpha_lower -> n .)
    Z               reduce using rule 129 (alpha_lower -> n .)
    |               reduce using rule 129 (alpha_lower -> n .)
    ]               reduce using rule 129 (alpha_lower -> n .)
    -               reduce using rule 129 (alpha_lower -> n .)
    ^               reduce using rule 129 (alpha_lower -> n .)
    $end            reduce using rule 129 (alpha_lower -> n .)


state 59

    (21) elementary -> nodisplay .

    *               reduce using rule 21 (elementary -> nodisplay .)
    +               reduce using rule 21 (elementary -> nodisplay .)
    ?               reduce using rule 21 (elementary -> nodisplay .)
    {               reduce using rule 21 (elementary -> nodisplay .)
    (               reduce using rule 21 (elementary -> nodisplay .)
    ^               reduce using rule 21 (elementary -> nodisplay .)
    >               reduce using rule 21 (elementary -> nodisplay .)
    <               reduce using rule 21 (elementary -> nodisplay .)
    /               reduce using rule 21 (elementary -> nodisplay .)
    \               reduce using rule 21 (elementary -> nodisplay .)
    #               reduce using rule 21 (elementary -> nodisplay .)
    %               reduce using rule 21 (elementary -> nodisplay .)
    ESCAPED         reduce using rule 21 (elementary -> nodisplay .)
    DIGIT           reduce using rule 21 (elementary -> nodisplay .)
    OTHER           reduce using rule 21 (elementary -> nodisplay .)
    [               reduce using rule 21 (elementary -> nodisplay .)
    .               reduce using rule 21 (elementary -> nodisplay .)
    ,               reduce using rule 21 (elementary -> nodisplay .)
    :               reduce using rule 21 (elementary -> nodisplay .)
    ;               reduce using rule 21 (elementary -> nodisplay .)
    $               reduce using rule 21 (elementary -> nodisplay .)
    `               reduce using rule 21 (elementary -> nodisplay .)
    a               reduce using rule 21 (elementary -> nodisplay .)
    b               reduce using rule 21 (elementary -> nodisplay .)
    c               reduce using rule 21 (elementary -> nodisplay .)
    d               reduce using rule 21 (elementary -> nodisplay .)
    e               reduce using rule 21 (elementary -> nodisplay .)
    f               reduce using rule 21 (elementary -> nodisplay .)
    g               reduce using rule 21 (elementary -> nodisplay .)
    h               reduce using rule 21 (elementary -> nodisplay .)
    i               reduce using rule 21 (elementary -> nodisplay .)
    j               reduce using rule 21 (elementary -> nodisplay .)
    k               reduce using rule 21 (elementary -> nodisplay .)
    l               reduce using rule 21 (elementary -> nodisplay .)
    m               reduce using rule 21 (elementary -> nodisplay .)
    n               reduce using rule 21 (elementary -> nodisplay .)
    o               reduce using rule 21 (elementary -> nodisplay .)
    p               reduce using rule 21 (elementary -> nodisplay .)
    q               reduce using rule 21 (elementary -> nodisplay .)
    r               reduce using rule 21 (elementary -> nodisplay .)
    s               reduce using rule 21 (elementary -> nodisplay .)
    t               reduce using rule 21 (elementary -> nodisplay .)
    u               reduce using rule 21 (elementary -> nodisplay .)
    v               reduce using rule 21 (elementary -> nodisplay .)
    w               reduce using rule 21 (elementary -> nodisplay .)
    x               reduce using rule 21 (elementary -> nodisplay .)
    y               reduce using rule 21 (elementary -> nodisplay .)
    z               reduce using rule 21 (elementary -> nodisplay .)
    A               reduce using rule 21 (elementary -> nodisplay .)
    B               reduce using rule 21 (elementary -> nodisplay .)
    C               reduce using rule 21 (elementary -> nodisplay .)
    D               reduce using rule 21 (elementary -> nodisplay .)
    E               reduce using rule 21 (elementary -> nodisplay .)
    F               reduce using rule 21 (elementary -> nodisplay .)
    G               reduce using rule 21 (elementary -> nodisplay .)
    H               reduce using rule 21 (elementary -> nodisplay .)
    I               reduce using rule 21 (elementary -> nodisplay .)
    J               reduce using rule 21 (elementary -> nodisplay .)
    K               reduce using rule 21 (elementary -> nodisplay .)
    L               reduce using rule 21 (elementary -> nodisplay .)
    M               reduce using rule 21 (elementary -> nodisplay .)
    N               reduce using rule 21 (elementary -> nodisplay .)
    O               reduce using rule 21 (elementary -> nodisplay .)
    P               reduce using rule 21 (elementary -> nodisplay .)
    Q               reduce using rule 21 (elementary -> nodisplay .)
    R               reduce using rule 21 (elementary -> nodisplay .)
    S               reduce using rule 21 (elementary -> nodisplay .)
    T               reduce using rule 21 (elementary -> nodisplay .)
    U               reduce using rule 21 (elementary -> nodisplay .)
    V               reduce using rule 21 (elementary -> nodisplay .)
    W               reduce using rule 21 (elementary -> nodisplay .)
    X               reduce using rule 21 (elementary -> nodisplay .)
    Y               reduce using rule 21 (elementary -> nodisplay .)
    Z               reduce using rule 21 (elementary -> nodisplay .)
    |               reduce using rule 21 (elementary -> nodisplay .)
    $end            reduce using rule 21 (elementary -> nodisplay .)
    )               reduce using rule 21 (elementary -> nodisplay .)


state 60

    (163) alpha_upper -> V .

    -               reduce using rule 163 (alpha_upper -> V .)
    !               reduce using rule 163 (alpha_upper -> V .)
    "               reduce using rule 163 (alpha_upper -> V .)
    #               reduce using rule 163 (alpha_upper -> V .)
    $               reduce using rule 163 (alpha_upper -> V .)
    %               reduce using rule 163 (alpha_upper -> V .)
    &               reduce using rule 163 (alpha_upper -> V .)
    '               reduce using rule 163 (alpha_upper -> V .)
    (               reduce using rule 163 (alpha_upper -> V .)
    )               reduce using rule 163 (alpha_upper -> V .)
    *               reduce using rule 163 (alpha_upper -> V .)
    +               reduce using rule 163 (alpha_upper -> V .)
    ,               reduce using rule 163 (alpha_upper -> V .)
    .               reduce using rule 163 (alpha_upper -> V .)
    /               reduce using rule 163 (alpha_upper -> V .)
    :               reduce using rule 163 (alpha_upper -> V .)
    ;               reduce using rule 163 (alpha_upper -> V .)
    <               reduce using rule 163 (alpha_upper -> V .)
    =               reduce using rule 163 (alpha_upper -> V .)
    >               reduce using rule 163 (alpha_upper -> V .)
    ?               reduce using rule 163 (alpha_upper -> V .)
    @               reduce using rule 163 (alpha_upper -> V .)
    [               reduce using rule 163 (alpha_upper -> V .)
    \               reduce using rule 163 (alpha_upper -> V .)
    _               reduce using rule 163 (alpha_upper -> V .)
    `               reduce using rule 163 (alpha_upper -> V .)
    {               reduce using rule 163 (alpha_upper -> V .)
    }               reduce using rule 163 (alpha_upper -> V .)
    ~               reduce using rule 163 (alpha_upper -> V .)
    ESCAPED         reduce using rule 163 (alpha_upper -> V .)
    DIGIT           reduce using rule 163 (alpha_upper -> V .)
    OTHER           reduce using rule 163 (alpha_upper -> V .)
    a               reduce using rule 163 (alpha_upper -> V .)
    b               reduce using rule 163 (alpha_upper -> V .)
    c               reduce using rule 163 (alpha_upper -> V .)
    d               reduce using rule 163 (alpha_upper -> V .)
    e               reduce using rule 163 (alpha_upper -> V .)
    f               reduce using rule 163 (alpha_upper -> V .)
    g               reduce using rule 163 (alpha_upper -> V .)
    h               reduce using rule 163 (alpha_upper -> V .)
    i               reduce using rule 163 (alpha_upper -> V .)
    j               reduce using rule 163 (alpha_upper -> V .)
    k               reduce using rule 163 (alpha_upper -> V .)
    l               reduce using rule 163 (alpha_upper -> V .)
    m               reduce using rule 163 (alpha_upper -> V .)
    n               reduce using rule 163 (alpha_upper -> V .)
    o               reduce using rule 163 (alpha_upper -> V .)
    p               reduce using rule 163 (alpha_upper -> V .)
    q               reduce using rule 163 (alpha_upper -> V .)
    r               reduce using rule 163 (alpha_upper -> V .)
    s               reduce using rule 163 (alpha_upper -> V .)
    t               reduce using rule 163 (alpha_upper -> V .)
    u               reduce using rule 163 (alpha_upper -> V .)
    v               reduce using rule 163 (alpha_upper -> V .)
    w               reduce using rule 163 (alpha_upper -> V .)
    x               reduce using rule 163 (alpha_upper -> V .)
    y               reduce using rule 163 (alpha_upper -> V .)
    z               reduce using rule 163 (alpha_upper -> V .)
    A               reduce using rule 163 (alpha_upper -> V .)
    B               reduce using rule 163 (alpha_upper -> V .)
    C               reduce using rule 163 (alpha_upper -> V .)
    D               reduce using rule 163 (alpha_upper -> V .)
    E               reduce using rule 163 (alpha_upper -> V .)
    F               reduce using rule 163 (alpha_upper -> V .)
    G               reduce using rule 163 (alpha_upper -> V .)
    H               reduce using rule 163 (alpha_upper -> V .)
    I               reduce using rule 163 (alpha_upper -> V .)
    J               reduce using rule 163 (alpha_upper -> V .)
    K               reduce using rule 163 (alpha_upper -> V .)
    L               reduce using rule 163 (alpha_upper -> V .)
    M               reduce using rule 163 (alpha_upper -> V .)
    N               reduce using rule 163 (alpha_upper -> V .)
    O               reduce using rule 163 (alpha_upper -> V .)
    P               reduce using rule 163 (alpha_upper -> V .)
    Q               reduce using rule 163 (alpha_upper -> V .)
    R               reduce using rule 163 (alpha_upper -> V .)
    S               reduce using rule 163 (alpha_upper -> V .)
    T               reduce using rule 163 (alpha_upper -> V .)
    U               reduce using rule 163 (alpha_upper -> V .)
    V               reduce using rule 163 (alpha_upper -> V .)
    W               reduce using rule 163 (alpha_upper -> V .)
    X               reduce using rule 163 (alpha_upper -> V .)
    Y               reduce using rule 163 (alpha_upper -> V .)
    Z               reduce using rule 163 (alpha_upper -> V .)
    |               reduce using rule 163 (alpha_upper -> V .)
    ]               reduce using rule 163 (alpha_upper -> V .)
    ^               reduce using rule 163 (alpha_upper -> V .)
    $end            reduce using rule 163 (alpha_upper -> V .)


state 61

    (9) quantifier -> basequantifier .
    (10) quantifier -> basequantifier . ?

    (               reduce using rule 9 (quantifier -> basequantifier .)
    ^               reduce using rule 9 (quantifier -> basequantifier .)
    >               reduce using rule 9 (quantifier -> basequantifier .)
    <               reduce using rule 9 (quantifier -> basequantifier .)
    /               reduce using rule 9 (quantifier -> basequantifier .)
    \               reduce using rule 9 (quantifier -> basequantifier .)
    #               reduce using rule 9 (quantifier -> basequantifier .)
    %               reduce using rule 9 (quantifier -> basequantifier .)
    ESCAPED         reduce using rule 9 (quantifier -> basequantifier .)
    DIGIT           reduce using rule 9 (quantifier -> basequantifier .)
    OTHER           reduce using rule 9 (quantifier -> basequantifier .)
    [               reduce using rule 9 (quantifier -> basequantifier .)
    .               reduce using rule 9 (quantifier -> basequantifier .)
    ,               reduce using rule 9 (quantifier -> basequantifier .)
    :               reduce using rule 9 (quantifier -> basequantifier .)
    ;               reduce using rule 9 (quantifier -> basequantifier .)
    $               reduce using rule 9 (quantifier -> basequantifier .)
    `               reduce using rule 9 (quantifier -> basequantifier .)
    a               reduce using rule 9 (quantifier -> basequantifier .)
    b               reduce using rule 9 (quantifier -> basequantifier .)
    c               reduce using rule 9 (quantifier -> basequantifier .)
    d               reduce using rule 9 (quantifier -> basequantifier .)
    e               reduce using rule 9 (quantifier -> basequantifier .)
    f               reduce using rule 9 (quantifier -> basequantifier .)
    g               reduce using rule 9 (quantifier -> basequantifier .)
    h               reduce using rule 9 (quantifier -> basequantifier .)
    i               reduce using rule 9 (quantifier -> basequantifier .)
    j               reduce using rule 9 (quantifier -> basequantifier .)
    k               reduce using rule 9 (quantifier -> basequantifier .)
    l               reduce using rule 9 (quantifier -> basequantifier .)
    m               reduce using rule 9 (quantifier -> basequantifier .)
    n               reduce using rule 9 (quantifier -> basequantifier .)
    o               reduce using rule 9 (quantifier -> basequantifier .)
    p               reduce using rule 9 (quantifier -> basequantifier .)
    q               reduce using rule 9 (quantifier -> basequantifier .)
    r               reduce using rule 9 (quantifier -> basequantifier .)
    s               reduce using rule 9 (quantifier -> basequantifier .)
    t               reduce using rule 9 (quantifier -> basequantifier .)
    u               reduce using rule 9 (quantifier -> basequantifier .)
    v               reduce using rule 9 (quantifier -> basequantifier .)
    w               reduce using rule 9 (quantifier -> basequantifier .)
    x               reduce using rule 9 (quantifier -> basequantifier .)
    y               reduce using rule 9 (quantifier -> basequantifier .)
    z               reduce using rule 9 (quantifier -> basequantifier .)
    A               reduce using rule 9 (quantifier -> basequantifier .)
    B               reduce using rule 9 (quantifier -> basequantifier .)
    C               reduce using rule 9 (quantifier -> basequantifier .)
    D               reduce using rule 9 (quantifier -> basequantifier .)
    E               reduce using rule 9 (quantifier -> basequantifier .)
    F               reduce using rule 9 (quantifier -> basequantifier .)
    G               reduce using rule 9 (quantifier -> basequantifier .)
    H               reduce using rule 9 (quantifier -> basequantifier .)
    I               reduce using rule 9 (quantifier -> basequantifier .)
    J               reduce using rule 9 (quantifier -> basequantifier .)
    K               reduce using rule 9 (quantifier -> basequantifier .)
    L               reduce using rule 9 (quantifier -> basequantifier .)
    M               reduce using rule 9 (quantifier -> basequantifier .)
    N               reduce using rule 9 (quantifier -> basequantifier .)
    O               reduce using rule 9 (quantifier -> basequantifier .)
    P               reduce using rule 9 (quantifier -> basequantifier .)
    Q               reduce using rule 9 (quantifier -> basequantifier .)
    R               reduce using rule 9 (quantifier -> basequantifier .)
    S               reduce using rule 9 (quantifier -> basequantifier .)
    T               reduce using rule 9 (quantifier -> basequantifier .)
    U               reduce using rule 9 (quantifier -> basequantifier .)
    V               reduce using rule 9 (quantifier -> basequantifier .)
    W               reduce using rule 9 (quantifier -> basequantifier .)
    X               reduce using rule 9 (quantifier -> basequantifier .)
    Y               reduce using rule 9 (quantifier -> basequantifier .)
    Z               reduce using rule 9 (quantifier -> basequantifier .)
    |               reduce using rule 9 (quantifier -> basequantifier .)
    $end            reduce using rule 9 (quantifier -> basequantifier .)
    )               reduce using rule 9 (quantifier -> basequantifier .)
    ?               shift and go to state 148


state 62

    (138) alpha_lower -> w .

    !               reduce using rule 138 (alpha_lower -> w .)
    "               reduce using rule 138 (alpha_lower -> w .)
    #               reduce using rule 138 (alpha_lower -> w .)
    $               reduce using rule 138 (alpha_lower -> w .)
    %               reduce using rule 138 (alpha_lower -> w .)
    &               reduce using rule 138 (alpha_lower -> w .)
    '               reduce using rule 138 (alpha_lower -> w .)
    (               reduce using rule 138 (alpha_lower -> w .)
    )               reduce using rule 138 (alpha_lower -> w .)
    *               reduce using rule 138 (alpha_lower -> w .)
    +               reduce using rule 138 (alpha_lower -> w .)
    ,               reduce using rule 138 (alpha_lower -> w .)
    .               reduce using rule 138 (alpha_lower -> w .)
    /               reduce using rule 138 (alpha_lower -> w .)
    :               reduce using rule 138 (alpha_lower -> w .)
    ;               reduce using rule 138 (alpha_lower -> w .)
    <               reduce using rule 138 (alpha_lower -> w .)
    =               reduce using rule 138 (alpha_lower -> w .)
    >               reduce using rule 138 (alpha_lower -> w .)
    ?               reduce using rule 138 (alpha_lower -> w .)
    @               reduce using rule 138 (alpha_lower -> w .)
    [               reduce using rule 138 (alpha_lower -> w .)
    \               reduce using rule 138 (alpha_lower -> w .)
    _               reduce using rule 138 (alpha_lower -> w .)
    `               reduce using rule 138 (alpha_lower -> w .)
    {               reduce using rule 138 (alpha_lower -> w .)
    }               reduce using rule 138 (alpha_lower -> w .)
    ~               reduce using rule 138 (alpha_lower -> w .)
    ESCAPED         reduce using rule 138 (alpha_lower -> w .)
    DIGIT           reduce using rule 138 (alpha_lower -> w .)
    OTHER           reduce using rule 138 (alpha_lower -> w .)
    a               reduce using rule 138 (alpha_lower -> w .)
    b               reduce using rule 138 (alpha_lower -> w .)
    c               reduce using rule 138 (alpha_lower -> w .)
    d               reduce using rule 138 (alpha_lower -> w .)
    e               reduce using rule 138 (alpha_lower -> w .)
    f               reduce using rule 138 (alpha_lower -> w .)
    g               reduce using rule 138 (alpha_lower -> w .)
    h               reduce using rule 138 (alpha_lower -> w .)
    i               reduce using rule 138 (alpha_lower -> w .)
    j               reduce using rule 138 (alpha_lower -> w .)
    k               reduce using rule 138 (alpha_lower -> w .)
    l               reduce using rule 138 (alpha_lower -> w .)
    m               reduce using rule 138 (alpha_lower -> w .)
    n               reduce using rule 138 (alpha_lower -> w .)
    o               reduce using rule 138 (alpha_lower -> w .)
    p               reduce using rule 138 (alpha_lower -> w .)
    q               reduce using rule 138 (alpha_lower -> w .)
    r               reduce using rule 138 (alpha_lower -> w .)
    s               reduce using rule 138 (alpha_lower -> w .)
    t               reduce using rule 138 (alpha_lower -> w .)
    u               reduce using rule 138 (alpha_lower -> w .)
    v               reduce using rule 138 (alpha_lower -> w .)
    w               reduce using rule 138 (alpha_lower -> w .)
    x               reduce using rule 138 (alpha_lower -> w .)
    y               reduce using rule 138 (alpha_lower -> w .)
    z               reduce using rule 138 (alpha_lower -> w .)
    A               reduce using rule 138 (alpha_lower -> w .)
    B               reduce using rule 138 (alpha_lower -> w .)
    C               reduce using rule 138 (alpha_lower -> w .)
    D               reduce using rule 138 (alpha_lower -> w .)
    E               reduce using rule 138 (alpha_lower -> w .)
    F               reduce using rule 138 (alpha_lower -> w .)
    G               reduce using rule 138 (alpha_lower -> w .)
    H               reduce using rule 138 (alpha_lower -> w .)
    I               reduce using rule 138 (alpha_lower -> w .)
    J               reduce using rule 138 (alpha_lower -> w .)
    K               reduce using rule 138 (alpha_lower -> w .)
    L               reduce using rule 138 (alpha_lower -> w .)
    M               reduce using rule 138 (alpha_lower -> w .)
    N               reduce using rule 138 (alpha_lower -> w .)
    O               reduce using rule 138 (alpha_lower -> w .)
    P               reduce using rule 138 (alpha_lower -> w .)
    Q               reduce using rule 138 (alpha_lower -> w .)
    R               reduce using rule 138 (alpha_lower -> w .)
    S               reduce using rule 138 (alpha_lower -> w .)
    T               reduce using rule 138 (alpha_lower -> w .)
    U               reduce using rule 138 (alpha_lower -> w .)
    V               reduce using rule 138 (alpha_lower -> w .)
    W               reduce using rule 138 (alpha_lower -> w .)
    X               reduce using rule 138 (alpha_lower -> w .)
    Y               reduce using rule 138 (alpha_lower -> w .)
    Z               reduce using rule 138 (alpha_lower -> w .)
    |               reduce using rule 138 (alpha_lower -> w .)
    ]               reduce using rule 138 (alpha_lower -> w .)
    -               reduce using rule 138 (alpha_lower -> w .)
    ^               reduce using rule 138 (alpha_lower -> w .)
    $end            reduce using rule 138 (alpha_lower -> w .)


state 63

    (22) elementary -> nomatch .

    *               reduce using rule 22 (elementary -> nomatch .)
    +               reduce using rule 22 (elementary -> nomatch .)
    ?               reduce using rule 22 (elementary -> nomatch .)
    {               reduce using rule 22 (elementary -> nomatch .)
    (               reduce using rule 22 (elementary -> nomatch .)
    ^               reduce using rule 22 (elementary -> nomatch .)
    >               reduce using rule 22 (elementary -> nomatch .)
    <               reduce using rule 22 (elementary -> nomatch .)
    /               reduce using rule 22 (elementary -> nomatch .)
    \               reduce using rule 22 (elementary -> nomatch .)
    #               reduce using rule 22 (elementary -> nomatch .)
    %               reduce using rule 22 (elementary -> nomatch .)
    ESCAPED         reduce using rule 22 (elementary -> nomatch .)
    DIGIT           reduce using rule 22 (elementary -> nomatch .)
    OTHER           reduce using rule 22 (elementary -> nomatch .)
    [               reduce using rule 22 (elementary -> nomatch .)
    .               reduce using rule 22 (elementary -> nomatch .)
    ,               reduce using rule 22 (elementary -> nomatch .)
    :               reduce using rule 22 (elementary -> nomatch .)
    ;               reduce using rule 22 (elementary -> nomatch .)
    $               reduce using rule 22 (elementary -> nomatch .)
    `               reduce using rule 22 (elementary -> nomatch .)
    a               reduce using rule 22 (elementary -> nomatch .)
    b               reduce using rule 22 (elementary -> nomatch .)
    c               reduce using rule 22 (elementary -> nomatch .)
    d               reduce using rule 22 (elementary -> nomatch .)
    e               reduce using rule 22 (elementary -> nomatch .)
    f               reduce using rule 22 (elementary -> nomatch .)
    g               reduce using rule 22 (elementary -> nomatch .)
    h               reduce using rule 22 (elementary -> nomatch .)
    i               reduce using rule 22 (elementary -> nomatch .)
    j               reduce using rule 22 (elementary -> nomatch .)
    k               reduce using rule 22 (elementary -> nomatch .)
    l               reduce using rule 22 (elementary -> nomatch .)
    m               reduce using rule 22 (elementary -> nomatch .)
    n               reduce using rule 22 (elementary -> nomatch .)
    o               reduce using rule 22 (elementary -> nomatch .)
    p               reduce using rule 22 (elementary -> nomatch .)
    q               reduce using rule 22 (elementary -> nomatch .)
    r               reduce using rule 22 (elementary -> nomatch .)
    s               reduce using rule 22 (elementary -> nomatch .)
    t               reduce using rule 22 (elementary -> nomatch .)
    u               reduce using rule 22 (elementary -> nomatch .)
    v               reduce using rule 22 (elementary -> nomatch .)
    w               reduce using rule 22 (elementary -> nomatch .)
    x               reduce using rule 22 (elementary -> nomatch .)
    y               reduce using rule 22 (elementary -> nomatch .)
    z               reduce using rule 22 (elementary -> nomatch .)
    A               reduce using rule 22 (elementary -> nomatch .)
    B               reduce using rule 22 (elementary -> nomatch .)
    C               reduce using rule 22 (elementary -> nomatch .)
    D               reduce using rule 22 (elementary -> nomatch .)
    E               reduce using rule 22 (elementary -> nomatch .)
    F               reduce using rule 22 (elementary -> nomatch .)
    G               reduce using rule 22 (elementary -> nomatch .)
    H               reduce using rule 22 (elementary -> nomatch .)
    I               reduce using rule 22 (elementary -> nomatch .)
    J               reduce using rule 22 (elementary -> nomatch .)
    K               reduce using rule 22 (elementary -> nomatch .)
    L               reduce using rule 22 (elementary -> nomatch .)
    M               reduce using rule 22 (elementary -> nomatch .)
    N               reduce using rule 22 (elementary -> nomatch .)
    O               reduce using rule 22 (elementary -> nomatch .)
    P               reduce using rule 22 (elementary -> nomatch .)
    Q               reduce using rule 22 (elementary -> nomatch .)
    R               reduce using rule 22 (elementary -> nomatch .)
    S               reduce using rule 22 (elementary -> nomatch .)
    T               reduce using rule 22 (elementary -> nomatch .)
    U               reduce using rule 22 (elementary -> nomatch .)
    V               reduce using rule 22 (elementary -> nomatch .)
    W               reduce using rule 22 (elementary -> nomatch .)
    X               reduce using rule 22 (elementary -> nomatch .)
    Y               reduce using rule 22 (elementary -> nomatch .)
    Z               reduce using rule 22 (elementary -> nomatch .)
    |               reduce using rule 22 (elementary -> nomatch .)
    $end            reduce using rule 22 (elementary -> nomatch .)
    )               reduce using rule 22 (elementary -> nomatch .)


state 64

    (95) directional -> ^ . DIGIT
    (96) directional -> ^ . alpha
    (97) directional -> ^ . *
    (98) directional -> ^ . +
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    DIGIT           shift and go to state 150
    *               shift and go to state 149
    +               shift and go to state 152
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 151
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88

state 65

    (104) command -> > .

    *               reduce using rule 104 (command -> > .)
    +               reduce using rule 104 (command -> > .)
    ?               reduce using rule 104 (command -> > .)
    {               reduce using rule 104 (command -> > .)
    (               reduce using rule 104 (command -> > .)
    ^               reduce using rule 104 (command -> > .)
    >               reduce using rule 104 (command -> > .)
    <               reduce using rule 104 (command -> > .)
    /               reduce using rule 104 (command -> > .)
    \               reduce using rule 104 (command -> > .)
    #               reduce using rule 104 (command -> > .)
    %               reduce using rule 104 (command -> > .)
    ESCAPED         reduce using rule 104 (command -> > .)
    DIGIT           reduce using rule 104 (command -> > .)
    OTHER           reduce using rule 104 (command -> > .)
    [               reduce using rule 104 (command -> > .)
    .               reduce using rule 104 (command -> > .)
    ,               reduce using rule 104 (command -> > .)
    :               reduce using rule 104 (command -> > .)
    ;               reduce using rule 104 (command -> > .)
    $               reduce using rule 104 (command -> > .)
    `               reduce using rule 104 (command -> > .)
    a               reduce using rule 104 (command -> > .)
    b               reduce using rule 104 (command -> > .)
    c               reduce using rule 104 (command -> > .)
    d               reduce using rule 104 (command -> > .)
    e               reduce using rule 104 (command -> > .)
    f               reduce using rule 104 (command -> > .)
    g               reduce using rule 104 (command -> > .)
    h               reduce using rule 104 (command -> > .)
    i               reduce using rule 104 (command -> > .)
    j               reduce using rule 104 (command -> > .)
    k               reduce using rule 104 (command -> > .)
    l               reduce using rule 104 (command -> > .)
    m               reduce using rule 104 (command -> > .)
    n               reduce using rule 104 (command -> > .)
    o               reduce using rule 104 (command -> > .)
    p               reduce using rule 104 (command -> > .)
    q               reduce using rule 104 (command -> > .)
    r               reduce using rule 104 (command -> > .)
    s               reduce using rule 104 (command -> > .)
    t               reduce using rule 104 (command -> > .)
    u               reduce using rule 104 (command -> > .)
    v               reduce using rule 104 (command -> > .)
    w               reduce using rule 104 (command -> > .)
    x               reduce using rule 104 (command -> > .)
    y               reduce using rule 104 (command -> > .)
    z               reduce using rule 104 (command -> > .)
    A               reduce using rule 104 (command -> > .)
    B               reduce using rule 104 (command -> > .)
    C               reduce using rule 104 (command -> > .)
    D               reduce using rule 104 (command -> > .)
    E               reduce using rule 104 (command -> > .)
    F               reduce using rule 104 (command -> > .)
    G               reduce using rule 104 (command -> > .)
    H               reduce using rule 104 (command -> > .)
    I               reduce using rule 104 (command -> > .)
    J               reduce using rule 104 (command -> > .)
    K               reduce using rule 104 (command -> > .)
    L               reduce using rule 104 (command -> > .)
    M               reduce using rule 104 (command -> > .)
    N               reduce using rule 104 (command -> > .)
    O               reduce using rule 104 (command -> > .)
    P               reduce using rule 104 (command -> > .)
    Q               reduce using rule 104 (command -> > .)
    R               reduce using rule 104 (command -> > .)
    S               reduce using rule 104 (command -> > .)
    T               reduce using rule 104 (command -> > .)
    U               reduce using rule 104 (command -> > .)
    V               reduce using rule 104 (command -> > .)
    W               reduce using rule 104 (command -> > .)
    X               reduce using rule 104 (command -> > .)
    Y               reduce using rule 104 (command -> > .)
    Z               reduce using rule 104 (command -> > .)
    |               reduce using rule 104 (command -> > .)
    $end            reduce using rule 104 (command -> > .)
    )               reduce using rule 104 (command -> > .)


state 66

    (5) simple -> basic .

    (               reduce using rule 5 (simple -> basic .)
    ^               reduce using rule 5 (simple -> basic .)
    >               reduce using rule 5 (simple -> basic .)
    <               reduce using rule 5 (simple -> basic .)
    /               reduce using rule 5 (simple -> basic .)
    \               reduce using rule 5 (simple -> basic .)
    #               reduce using rule 5 (simple -> basic .)
    %               reduce using rule 5 (simple -> basic .)
    ESCAPED         reduce using rule 5 (simple -> basic .)
    DIGIT           reduce using rule 5 (simple -> basic .)
    OTHER           reduce using rule 5 (simple -> basic .)
    [               reduce using rule 5 (simple -> basic .)
    .               reduce using rule 5 (simple -> basic .)
    ,               reduce using rule 5 (simple -> basic .)
    :               reduce using rule 5 (simple -> basic .)
    ;               reduce using rule 5 (simple -> basic .)
    $               reduce using rule 5 (simple -> basic .)
    `               reduce using rule 5 (simple -> basic .)
    a               reduce using rule 5 (simple -> basic .)
    b               reduce using rule 5 (simple -> basic .)
    c               reduce using rule 5 (simple -> basic .)
    d               reduce using rule 5 (simple -> basic .)
    e               reduce using rule 5 (simple -> basic .)
    f               reduce using rule 5 (simple -> basic .)
    g               reduce using rule 5 (simple -> basic .)
    h               reduce using rule 5 (simple -> basic .)
    i               reduce using rule 5 (simple -> basic .)
    j               reduce using rule 5 (simple -> basic .)
    k               reduce using rule 5 (simple -> basic .)
    l               reduce using rule 5 (simple -> basic .)
    m               reduce using rule 5 (simple -> basic .)
    n               reduce using rule 5 (simple -> basic .)
    o               reduce using rule 5 (simple -> basic .)
    p               reduce using rule 5 (simple -> basic .)
    q               reduce using rule 5 (simple -> basic .)
    r               reduce using rule 5 (simple -> basic .)
    s               reduce using rule 5 (simple -> basic .)
    t               reduce using rule 5 (simple -> basic .)
    u               reduce using rule 5 (simple -> basic .)
    v               reduce using rule 5 (simple -> basic .)
    w               reduce using rule 5 (simple -> basic .)
    x               reduce using rule 5 (simple -> basic .)
    y               reduce using rule 5 (simple -> basic .)
    z               reduce using rule 5 (simple -> basic .)
    A               reduce using rule 5 (simple -> basic .)
    B               reduce using rule 5 (simple -> basic .)
    C               reduce using rule 5 (simple -> basic .)
    D               reduce using rule 5 (simple -> basic .)
    E               reduce using rule 5 (simple -> basic .)
    F               reduce using rule 5 (simple -> basic .)
    G               reduce using rule 5 (simple -> basic .)
    H               reduce using rule 5 (simple -> basic .)
    I               reduce using rule 5 (simple -> basic .)
    J               reduce using rule 5 (simple -> basic .)
    K               reduce using rule 5 (simple -> basic .)
    L               reduce using rule 5 (simple -> basic .)
    M               reduce using rule 5 (simple -> basic .)
    N               reduce using rule 5 (simple -> basic .)
    O               reduce using rule 5 (simple -> basic .)
    P               reduce using rule 5 (simple -> basic .)
    Q               reduce using rule 5 (simple -> basic .)
    R               reduce using rule 5 (simple -> basic .)
    S               reduce using rule 5 (simple -> basic .)
    T               reduce using rule 5 (simple -> basic .)
    U               reduce using rule 5 (simple -> basic .)
    V               reduce using rule 5 (simple -> basic .)
    W               reduce using rule 5 (simple -> basic .)
    X               reduce using rule 5 (simple -> basic .)
    Y               reduce using rule 5 (simple -> basic .)
    Z               reduce using rule 5 (simple -> basic .)
    |               reduce using rule 5 (simple -> basic .)
    )               reduce using rule 5 (simple -> basic .)
    $end            reduce using rule 5 (simple -> basic .)


state 67

    (159) alpha_upper -> R .

    -               reduce using rule 159 (alpha_upper -> R .)
    !               reduce using rule 159 (alpha_upper -> R .)
    "               reduce using rule 159 (alpha_upper -> R .)
    #               reduce using rule 159 (alpha_upper -> R .)
    $               reduce using rule 159 (alpha_upper -> R .)
    %               reduce using rule 159 (alpha_upper -> R .)
    &               reduce using rule 159 (alpha_upper -> R .)
    '               reduce using rule 159 (alpha_upper -> R .)
    (               reduce using rule 159 (alpha_upper -> R .)
    )               reduce using rule 159 (alpha_upper -> R .)
    *               reduce using rule 159 (alpha_upper -> R .)
    +               reduce using rule 159 (alpha_upper -> R .)
    ,               reduce using rule 159 (alpha_upper -> R .)
    .               reduce using rule 159 (alpha_upper -> R .)
    /               reduce using rule 159 (alpha_upper -> R .)
    :               reduce using rule 159 (alpha_upper -> R .)
    ;               reduce using rule 159 (alpha_upper -> R .)
    <               reduce using rule 159 (alpha_upper -> R .)
    =               reduce using rule 159 (alpha_upper -> R .)
    >               reduce using rule 159 (alpha_upper -> R .)
    ?               reduce using rule 159 (alpha_upper -> R .)
    @               reduce using rule 159 (alpha_upper -> R .)
    [               reduce using rule 159 (alpha_upper -> R .)
    \               reduce using rule 159 (alpha_upper -> R .)
    _               reduce using rule 159 (alpha_upper -> R .)
    `               reduce using rule 159 (alpha_upper -> R .)
    {               reduce using rule 159 (alpha_upper -> R .)
    }               reduce using rule 159 (alpha_upper -> R .)
    ~               reduce using rule 159 (alpha_upper -> R .)
    ESCAPED         reduce using rule 159 (alpha_upper -> R .)
    DIGIT           reduce using rule 159 (alpha_upper -> R .)
    OTHER           reduce using rule 159 (alpha_upper -> R .)
    a               reduce using rule 159 (alpha_upper -> R .)
    b               reduce using rule 159 (alpha_upper -> R .)
    c               reduce using rule 159 (alpha_upper -> R .)
    d               reduce using rule 159 (alpha_upper -> R .)
    e               reduce using rule 159 (alpha_upper -> R .)
    f               reduce using rule 159 (alpha_upper -> R .)
    g               reduce using rule 159 (alpha_upper -> R .)
    h               reduce using rule 159 (alpha_upper -> R .)
    i               reduce using rule 159 (alpha_upper -> R .)
    j               reduce using rule 159 (alpha_upper -> R .)
    k               reduce using rule 159 (alpha_upper -> R .)
    l               reduce using rule 159 (alpha_upper -> R .)
    m               reduce using rule 159 (alpha_upper -> R .)
    n               reduce using rule 159 (alpha_upper -> R .)
    o               reduce using rule 159 (alpha_upper -> R .)
    p               reduce using rule 159 (alpha_upper -> R .)
    q               reduce using rule 159 (alpha_upper -> R .)
    r               reduce using rule 159 (alpha_upper -> R .)
    s               reduce using rule 159 (alpha_upper -> R .)
    t               reduce using rule 159 (alpha_upper -> R .)
    u               reduce using rule 159 (alpha_upper -> R .)
    v               reduce using rule 159 (alpha_upper -> R .)
    w               reduce using rule 159 (alpha_upper -> R .)
    x               reduce using rule 159 (alpha_upper -> R .)
    y               reduce using rule 159 (alpha_upper -> R .)
    z               reduce using rule 159 (alpha_upper -> R .)
    A               reduce using rule 159 (alpha_upper -> R .)
    B               reduce using rule 159 (alpha_upper -> R .)
    C               reduce using rule 159 (alpha_upper -> R .)
    D               reduce using rule 159 (alpha_upper -> R .)
    E               reduce using rule 159 (alpha_upper -> R .)
    F               reduce using rule 159 (alpha_upper -> R .)
    G               reduce using rule 159 (alpha_upper -> R .)
    H               reduce using rule 159 (alpha_upper -> R .)
    I               reduce using rule 159 (alpha_upper -> R .)
    J               reduce using rule 159 (alpha_upper -> R .)
    K               reduce using rule 159 (alpha_upper -> R .)
    L               reduce using rule 159 (alpha_upper -> R .)
    M               reduce using rule 159 (alpha_upper -> R .)
    N               reduce using rule 159 (alpha_upper -> R .)
    O               reduce using rule 159 (alpha_upper -> R .)
    P               reduce using rule 159 (alpha_upper -> R .)
    Q               reduce using rule 159 (alpha_upper -> R .)
    R               reduce using rule 159 (alpha_upper -> R .)
    S               reduce using rule 159 (alpha_upper -> R .)
    T               reduce using rule 159 (alpha_upper -> R .)
    U               reduce using rule 159 (alpha_upper -> R .)
    V               reduce using rule 159 (alpha_upper -> R .)
    W               reduce using rule 159 (alpha_upper -> R .)
    X               reduce using rule 159 (alpha_upper -> R .)
    Y               reduce using rule 159 (alpha_upper -> R .)
    Z               reduce using rule 159 (alpha_upper -> R .)
    |               reduce using rule 159 (alpha_upper -> R .)
    ]               reduce using rule 159 (alpha_upper -> R .)
    ^               reduce using rule 159 (alpha_upper -> R .)
    $end            reduce using rule 159 (alpha_upper -> R .)


state 68

    (158) alpha_upper -> Q .

    -               reduce using rule 158 (alpha_upper -> Q .)
    !               reduce using rule 158 (alpha_upper -> Q .)
    "               reduce using rule 158 (alpha_upper -> Q .)
    #               reduce using rule 158 (alpha_upper -> Q .)
    $               reduce using rule 158 (alpha_upper -> Q .)
    %               reduce using rule 158 (alpha_upper -> Q .)
    &               reduce using rule 158 (alpha_upper -> Q .)
    '               reduce using rule 158 (alpha_upper -> Q .)
    (               reduce using rule 158 (alpha_upper -> Q .)
    )               reduce using rule 158 (alpha_upper -> Q .)
    *               reduce using rule 158 (alpha_upper -> Q .)
    +               reduce using rule 158 (alpha_upper -> Q .)
    ,               reduce using rule 158 (alpha_upper -> Q .)
    .               reduce using rule 158 (alpha_upper -> Q .)
    /               reduce using rule 158 (alpha_upper -> Q .)
    :               reduce using rule 158 (alpha_upper -> Q .)
    ;               reduce using rule 158 (alpha_upper -> Q .)
    <               reduce using rule 158 (alpha_upper -> Q .)
    =               reduce using rule 158 (alpha_upper -> Q .)
    >               reduce using rule 158 (alpha_upper -> Q .)
    ?               reduce using rule 158 (alpha_upper -> Q .)
    @               reduce using rule 158 (alpha_upper -> Q .)
    [               reduce using rule 158 (alpha_upper -> Q .)
    \               reduce using rule 158 (alpha_upper -> Q .)
    _               reduce using rule 158 (alpha_upper -> Q .)
    `               reduce using rule 158 (alpha_upper -> Q .)
    {               reduce using rule 158 (alpha_upper -> Q .)
    }               reduce using rule 158 (alpha_upper -> Q .)
    ~               reduce using rule 158 (alpha_upper -> Q .)
    ESCAPED         reduce using rule 158 (alpha_upper -> Q .)
    DIGIT           reduce using rule 158 (alpha_upper -> Q .)
    OTHER           reduce using rule 158 (alpha_upper -> Q .)
    a               reduce using rule 158 (alpha_upper -> Q .)
    b               reduce using rule 158 (alpha_upper -> Q .)
    c               reduce using rule 158 (alpha_upper -> Q .)
    d               reduce using rule 158 (alpha_upper -> Q .)
    e               reduce using rule 158 (alpha_upper -> Q .)
    f               reduce using rule 158 (alpha_upper -> Q .)
    g               reduce using rule 158 (alpha_upper -> Q .)
    h               reduce using rule 158 (alpha_upper -> Q .)
    i               reduce using rule 158 (alpha_upper -> Q .)
    j               reduce using rule 158 (alpha_upper -> Q .)
    k               reduce using rule 158 (alpha_upper -> Q .)
    l               reduce using rule 158 (alpha_upper -> Q .)
    m               reduce using rule 158 (alpha_upper -> Q .)
    n               reduce using rule 158 (alpha_upper -> Q .)
    o               reduce using rule 158 (alpha_upper -> Q .)
    p               reduce using rule 158 (alpha_upper -> Q .)
    q               reduce using rule 158 (alpha_upper -> Q .)
    r               reduce using rule 158 (alpha_upper -> Q .)
    s               reduce using rule 158 (alpha_upper -> Q .)
    t               reduce using rule 158 (alpha_upper -> Q .)
    u               reduce using rule 158 (alpha_upper -> Q .)
    v               reduce using rule 158 (alpha_upper -> Q .)
    w               reduce using rule 158 (alpha_upper -> Q .)
    x               reduce using rule 158 (alpha_upper -> Q .)
    y               reduce using rule 158 (alpha_upper -> Q .)
    z               reduce using rule 158 (alpha_upper -> Q .)
    A               reduce using rule 158 (alpha_upper -> Q .)
    B               reduce using rule 158 (alpha_upper -> Q .)
    C               reduce using rule 158 (alpha_upper -> Q .)
    D               reduce using rule 158 (alpha_upper -> Q .)
    E               reduce using rule 158 (alpha_upper -> Q .)
    F               reduce using rule 158 (alpha_upper -> Q .)
    G               reduce using rule 158 (alpha_upper -> Q .)
    H               reduce using rule 158 (alpha_upper -> Q .)
    I               reduce using rule 158 (alpha_upper -> Q .)
    J               reduce using rule 158 (alpha_upper -> Q .)
    K               reduce using rule 158 (alpha_upper -> Q .)
    L               reduce using rule 158 (alpha_upper -> Q .)
    M               reduce using rule 158 (alpha_upper -> Q .)
    N               reduce using rule 158 (alpha_upper -> Q .)
    O               reduce using rule 158 (alpha_upper -> Q .)
    P               reduce using rule 158 (alpha_upper -> Q .)
    Q               reduce using rule 158 (alpha_upper -> Q .)
    R               reduce using rule 158 (alpha_upper -> Q .)
    S               reduce using rule 158 (alpha_upper -> Q .)
    T               reduce using rule 158 (alpha_upper -> Q .)
    U               reduce using rule 158 (alpha_upper -> Q .)
    V               reduce using rule 158 (alpha_upper -> Q .)
    W               reduce using rule 158 (alpha_upper -> Q .)
    X               reduce using rule 158 (alpha_upper -> Q .)
    Y               reduce using rule 158 (alpha_upper -> Q .)
    Z               reduce using rule 158 (alpha_upper -> Q .)
    |               reduce using rule 158 (alpha_upper -> Q .)
    ]               reduce using rule 158 (alpha_upper -> Q .)
    ^               reduce using rule 158 (alpha_upper -> Q .)
    $end            reduce using rule 158 (alpha_upper -> Q .)


state 69

    (118) alpha_lower -> c .

    !               reduce using rule 118 (alpha_lower -> c .)
    "               reduce using rule 118 (alpha_lower -> c .)
    #               reduce using rule 118 (alpha_lower -> c .)
    $               reduce using rule 118 (alpha_lower -> c .)
    %               reduce using rule 118 (alpha_lower -> c .)
    &               reduce using rule 118 (alpha_lower -> c .)
    '               reduce using rule 118 (alpha_lower -> c .)
    (               reduce using rule 118 (alpha_lower -> c .)
    )               reduce using rule 118 (alpha_lower -> c .)
    *               reduce using rule 118 (alpha_lower -> c .)
    +               reduce using rule 118 (alpha_lower -> c .)
    ,               reduce using rule 118 (alpha_lower -> c .)
    .               reduce using rule 118 (alpha_lower -> c .)
    /               reduce using rule 118 (alpha_lower -> c .)
    :               reduce using rule 118 (alpha_lower -> c .)
    ;               reduce using rule 118 (alpha_lower -> c .)
    <               reduce using rule 118 (alpha_lower -> c .)
    =               reduce using rule 118 (alpha_lower -> c .)
    >               reduce using rule 118 (alpha_lower -> c .)
    ?               reduce using rule 118 (alpha_lower -> c .)
    @               reduce using rule 118 (alpha_lower -> c .)
    [               reduce using rule 118 (alpha_lower -> c .)
    \               reduce using rule 118 (alpha_lower -> c .)
    _               reduce using rule 118 (alpha_lower -> c .)
    `               reduce using rule 118 (alpha_lower -> c .)
    {               reduce using rule 118 (alpha_lower -> c .)
    }               reduce using rule 118 (alpha_lower -> c .)
    ~               reduce using rule 118 (alpha_lower -> c .)
    ESCAPED         reduce using rule 118 (alpha_lower -> c .)
    DIGIT           reduce using rule 118 (alpha_lower -> c .)
    OTHER           reduce using rule 118 (alpha_lower -> c .)
    a               reduce using rule 118 (alpha_lower -> c .)
    b               reduce using rule 118 (alpha_lower -> c .)
    c               reduce using rule 118 (alpha_lower -> c .)
    d               reduce using rule 118 (alpha_lower -> c .)
    e               reduce using rule 118 (alpha_lower -> c .)
    f               reduce using rule 118 (alpha_lower -> c .)
    g               reduce using rule 118 (alpha_lower -> c .)
    h               reduce using rule 118 (alpha_lower -> c .)
    i               reduce using rule 118 (alpha_lower -> c .)
    j               reduce using rule 118 (alpha_lower -> c .)
    k               reduce using rule 118 (alpha_lower -> c .)
    l               reduce using rule 118 (alpha_lower -> c .)
    m               reduce using rule 118 (alpha_lower -> c .)
    n               reduce using rule 118 (alpha_lower -> c .)
    o               reduce using rule 118 (alpha_lower -> c .)
    p               reduce using rule 118 (alpha_lower -> c .)
    q               reduce using rule 118 (alpha_lower -> c .)
    r               reduce using rule 118 (alpha_lower -> c .)
    s               reduce using rule 118 (alpha_lower -> c .)
    t               reduce using rule 118 (alpha_lower -> c .)
    u               reduce using rule 118 (alpha_lower -> c .)
    v               reduce using rule 118 (alpha_lower -> c .)
    w               reduce using rule 118 (alpha_lower -> c .)
    x               reduce using rule 118 (alpha_lower -> c .)
    y               reduce using rule 118 (alpha_lower -> c .)
    z               reduce using rule 118 (alpha_lower -> c .)
    A               reduce using rule 118 (alpha_lower -> c .)
    B               reduce using rule 118 (alpha_lower -> c .)
    C               reduce using rule 118 (alpha_lower -> c .)
    D               reduce using rule 118 (alpha_lower -> c .)
    E               reduce using rule 118 (alpha_lower -> c .)
    F               reduce using rule 118 (alpha_lower -> c .)
    G               reduce using rule 118 (alpha_lower -> c .)
    H               reduce using rule 118 (alpha_lower -> c .)
    I               reduce using rule 118 (alpha_lower -> c .)
    J               reduce using rule 118 (alpha_lower -> c .)
    K               reduce using rule 118 (alpha_lower -> c .)
    L               reduce using rule 118 (alpha_lower -> c .)
    M               reduce using rule 118 (alpha_lower -> c .)
    N               reduce using rule 118 (alpha_lower -> c .)
    O               reduce using rule 118 (alpha_lower -> c .)
    P               reduce using rule 118 (alpha_lower -> c .)
    Q               reduce using rule 118 (alpha_lower -> c .)
    R               reduce using rule 118 (alpha_lower -> c .)
    S               reduce using rule 118 (alpha_lower -> c .)
    T               reduce using rule 118 (alpha_lower -> c .)
    U               reduce using rule 118 (alpha_lower -> c .)
    V               reduce using rule 118 (alpha_lower -> c .)
    W               reduce using rule 118 (alpha_lower -> c .)
    X               reduce using rule 118 (alpha_lower -> c .)
    Y               reduce using rule 118 (alpha_lower -> c .)
    Z               reduce using rule 118 (alpha_lower -> c .)
    |               reduce using rule 118 (alpha_lower -> c .)
    ]               reduce using rule 118 (alpha_lower -> c .)
    -               reduce using rule 118 (alpha_lower -> c .)
    ^               reduce using rule 118 (alpha_lower -> c .)
    $end            reduce using rule 118 (alpha_lower -> c .)


state 70

    (153) alpha_upper -> L .

    -               reduce using rule 153 (alpha_upper -> L .)
    !               reduce using rule 153 (alpha_upper -> L .)
    "               reduce using rule 153 (alpha_upper -> L .)
    #               reduce using rule 153 (alpha_upper -> L .)
    $               reduce using rule 153 (alpha_upper -> L .)
    %               reduce using rule 153 (alpha_upper -> L .)
    &               reduce using rule 153 (alpha_upper -> L .)
    '               reduce using rule 153 (alpha_upper -> L .)
    (               reduce using rule 153 (alpha_upper -> L .)
    )               reduce using rule 153 (alpha_upper -> L .)
    *               reduce using rule 153 (alpha_upper -> L .)
    +               reduce using rule 153 (alpha_upper -> L .)
    ,               reduce using rule 153 (alpha_upper -> L .)
    .               reduce using rule 153 (alpha_upper -> L .)
    /               reduce using rule 153 (alpha_upper -> L .)
    :               reduce using rule 153 (alpha_upper -> L .)
    ;               reduce using rule 153 (alpha_upper -> L .)
    <               reduce using rule 153 (alpha_upper -> L .)
    =               reduce using rule 153 (alpha_upper -> L .)
    >               reduce using rule 153 (alpha_upper -> L .)
    ?               reduce using rule 153 (alpha_upper -> L .)
    @               reduce using rule 153 (alpha_upper -> L .)
    [               reduce using rule 153 (alpha_upper -> L .)
    \               reduce using rule 153 (alpha_upper -> L .)
    _               reduce using rule 153 (alpha_upper -> L .)
    `               reduce using rule 153 (alpha_upper -> L .)
    {               reduce using rule 153 (alpha_upper -> L .)
    }               reduce using rule 153 (alpha_upper -> L .)
    ~               reduce using rule 153 (alpha_upper -> L .)
    ESCAPED         reduce using rule 153 (alpha_upper -> L .)
    DIGIT           reduce using rule 153 (alpha_upper -> L .)
    OTHER           reduce using rule 153 (alpha_upper -> L .)
    a               reduce using rule 153 (alpha_upper -> L .)
    b               reduce using rule 153 (alpha_upper -> L .)
    c               reduce using rule 153 (alpha_upper -> L .)
    d               reduce using rule 153 (alpha_upper -> L .)
    e               reduce using rule 153 (alpha_upper -> L .)
    f               reduce using rule 153 (alpha_upper -> L .)
    g               reduce using rule 153 (alpha_upper -> L .)
    h               reduce using rule 153 (alpha_upper -> L .)
    i               reduce using rule 153 (alpha_upper -> L .)
    j               reduce using rule 153 (alpha_upper -> L .)
    k               reduce using rule 153 (alpha_upper -> L .)
    l               reduce using rule 153 (alpha_upper -> L .)
    m               reduce using rule 153 (alpha_upper -> L .)
    n               reduce using rule 153 (alpha_upper -> L .)
    o               reduce using rule 153 (alpha_upper -> L .)
    p               reduce using rule 153 (alpha_upper -> L .)
    q               reduce using rule 153 (alpha_upper -> L .)
    r               reduce using rule 153 (alpha_upper -> L .)
    s               reduce using rule 153 (alpha_upper -> L .)
    t               reduce using rule 153 (alpha_upper -> L .)
    u               reduce using rule 153 (alpha_upper -> L .)
    v               reduce using rule 153 (alpha_upper -> L .)
    w               reduce using rule 153 (alpha_upper -> L .)
    x               reduce using rule 153 (alpha_upper -> L .)
    y               reduce using rule 153 (alpha_upper -> L .)
    z               reduce using rule 153 (alpha_upper -> L .)
    A               reduce using rule 153 (alpha_upper -> L .)
    B               reduce using rule 153 (alpha_upper -> L .)
    C               reduce using rule 153 (alpha_upper -> L .)
    D               reduce using rule 153 (alpha_upper -> L .)
    E               reduce using rule 153 (alpha_upper -> L .)
    F               reduce using rule 153 (alpha_upper -> L .)
    G               reduce using rule 153 (alpha_upper -> L .)
    H               reduce using rule 153 (alpha_upper -> L .)
    I               reduce using rule 153 (alpha_upper -> L .)
    J               reduce using rule 153 (alpha_upper -> L .)
    K               reduce using rule 153 (alpha_upper -> L .)
    L               reduce using rule 153 (alpha_upper -> L .)
    M               reduce using rule 153 (alpha_upper -> L .)
    N               reduce using rule 153 (alpha_upper -> L .)
    O               reduce using rule 153 (alpha_upper -> L .)
    P               reduce using rule 153 (alpha_upper -> L .)
    Q               reduce using rule 153 (alpha_upper -> L .)
    R               reduce using rule 153 (alpha_upper -> L .)
    S               reduce using rule 153 (alpha_upper -> L .)
    T               reduce using rule 153 (alpha_upper -> L .)
    U               reduce using rule 153 (alpha_upper -> L .)
    V               reduce using rule 153 (alpha_upper -> L .)
    W               reduce using rule 153 (alpha_upper -> L .)
    X               reduce using rule 153 (alpha_upper -> L .)
    Y               reduce using rule 153 (alpha_upper -> L .)
    Z               reduce using rule 153 (alpha_upper -> L .)
    |               reduce using rule 153 (alpha_upper -> L .)
    ]               reduce using rule 153 (alpha_upper -> L .)
    ^               reduce using rule 153 (alpha_upper -> L .)
    $end            reduce using rule 153 (alpha_upper -> L .)


state 71

    (137) alpha_lower -> v .

    !               reduce using rule 137 (alpha_lower -> v .)
    "               reduce using rule 137 (alpha_lower -> v .)
    #               reduce using rule 137 (alpha_lower -> v .)
    $               reduce using rule 137 (alpha_lower -> v .)
    %               reduce using rule 137 (alpha_lower -> v .)
    &               reduce using rule 137 (alpha_lower -> v .)
    '               reduce using rule 137 (alpha_lower -> v .)
    (               reduce using rule 137 (alpha_lower -> v .)
    )               reduce using rule 137 (alpha_lower -> v .)
    *               reduce using rule 137 (alpha_lower -> v .)
    +               reduce using rule 137 (alpha_lower -> v .)
    ,               reduce using rule 137 (alpha_lower -> v .)
    .               reduce using rule 137 (alpha_lower -> v .)
    /               reduce using rule 137 (alpha_lower -> v .)
    :               reduce using rule 137 (alpha_lower -> v .)
    ;               reduce using rule 137 (alpha_lower -> v .)
    <               reduce using rule 137 (alpha_lower -> v .)
    =               reduce using rule 137 (alpha_lower -> v .)
    >               reduce using rule 137 (alpha_lower -> v .)
    ?               reduce using rule 137 (alpha_lower -> v .)
    @               reduce using rule 137 (alpha_lower -> v .)
    [               reduce using rule 137 (alpha_lower -> v .)
    \               reduce using rule 137 (alpha_lower -> v .)
    _               reduce using rule 137 (alpha_lower -> v .)
    `               reduce using rule 137 (alpha_lower -> v .)
    {               reduce using rule 137 (alpha_lower -> v .)
    }               reduce using rule 137 (alpha_lower -> v .)
    ~               reduce using rule 137 (alpha_lower -> v .)
    ESCAPED         reduce using rule 137 (alpha_lower -> v .)
    DIGIT           reduce using rule 137 (alpha_lower -> v .)
    OTHER           reduce using rule 137 (alpha_lower -> v .)
    a               reduce using rule 137 (alpha_lower -> v .)
    b               reduce using rule 137 (alpha_lower -> v .)
    c               reduce using rule 137 (alpha_lower -> v .)
    d               reduce using rule 137 (alpha_lower -> v .)
    e               reduce using rule 137 (alpha_lower -> v .)
    f               reduce using rule 137 (alpha_lower -> v .)
    g               reduce using rule 137 (alpha_lower -> v .)
    h               reduce using rule 137 (alpha_lower -> v .)
    i               reduce using rule 137 (alpha_lower -> v .)
    j               reduce using rule 137 (alpha_lower -> v .)
    k               reduce using rule 137 (alpha_lower -> v .)
    l               reduce using rule 137 (alpha_lower -> v .)
    m               reduce using rule 137 (alpha_lower -> v .)
    n               reduce using rule 137 (alpha_lower -> v .)
    o               reduce using rule 137 (alpha_lower -> v .)
    p               reduce using rule 137 (alpha_lower -> v .)
    q               reduce using rule 137 (alpha_lower -> v .)
    r               reduce using rule 137 (alpha_lower -> v .)
    s               reduce using rule 137 (alpha_lower -> v .)
    t               reduce using rule 137 (alpha_lower -> v .)
    u               reduce using rule 137 (alpha_lower -> v .)
    v               reduce using rule 137 (alpha_lower -> v .)
    w               reduce using rule 137 (alpha_lower -> v .)
    x               reduce using rule 137 (alpha_lower -> v .)
    y               reduce using rule 137 (alpha_lower -> v .)
    z               reduce using rule 137 (alpha_lower -> v .)
    A               reduce using rule 137 (alpha_lower -> v .)
    B               reduce using rule 137 (alpha_lower -> v .)
    C               reduce using rule 137 (alpha_lower -> v .)
    D               reduce using rule 137 (alpha_lower -> v .)
    E               reduce using rule 137 (alpha_lower -> v .)
    F               reduce using rule 137 (alpha_lower -> v .)
    G               reduce using rule 137 (alpha_lower -> v .)
    H               reduce using rule 137 (alpha_lower -> v .)
    I               reduce using rule 137 (alpha_lower -> v .)
    J               reduce using rule 137 (alpha_lower -> v .)
    K               reduce using rule 137 (alpha_lower -> v .)
    L               reduce using rule 137 (alpha_lower -> v .)
    M               reduce using rule 137 (alpha_lower -> v .)
    N               reduce using rule 137 (alpha_lower -> v .)
    O               reduce using rule 137 (alpha_lower -> v .)
    P               reduce using rule 137 (alpha_lower -> v .)
    Q               reduce using rule 137 (alpha_lower -> v .)
    R               reduce using rule 137 (alpha_lower -> v .)
    S               reduce using rule 137 (alpha_lower -> v .)
    T               reduce using rule 137 (alpha_lower -> v .)
    U               reduce using rule 137 (alpha_lower -> v .)
    V               reduce using rule 137 (alpha_lower -> v .)
    W               reduce using rule 137 (alpha_lower -> v .)
    X               reduce using rule 137 (alpha_lower -> v .)
    Y               reduce using rule 137 (alpha_lower -> v .)
    Z               reduce using rule 137 (alpha_lower -> v .)
    |               reduce using rule 137 (alpha_lower -> v .)
    ]               reduce using rule 137 (alpha_lower -> v .)
    -               reduce using rule 137 (alpha_lower -> v .)
    ^               reduce using rule 137 (alpha_lower -> v .)
    $end            reduce using rule 137 (alpha_lower -> v .)


state 72

    (119) alpha_lower -> d .

    !               reduce using rule 119 (alpha_lower -> d .)
    "               reduce using rule 119 (alpha_lower -> d .)
    #               reduce using rule 119 (alpha_lower -> d .)
    $               reduce using rule 119 (alpha_lower -> d .)
    %               reduce using rule 119 (alpha_lower -> d .)
    &               reduce using rule 119 (alpha_lower -> d .)
    '               reduce using rule 119 (alpha_lower -> d .)
    (               reduce using rule 119 (alpha_lower -> d .)
    )               reduce using rule 119 (alpha_lower -> d .)
    *               reduce using rule 119 (alpha_lower -> d .)
    +               reduce using rule 119 (alpha_lower -> d .)
    ,               reduce using rule 119 (alpha_lower -> d .)
    .               reduce using rule 119 (alpha_lower -> d .)
    /               reduce using rule 119 (alpha_lower -> d .)
    :               reduce using rule 119 (alpha_lower -> d .)
    ;               reduce using rule 119 (alpha_lower -> d .)
    <               reduce using rule 119 (alpha_lower -> d .)
    =               reduce using rule 119 (alpha_lower -> d .)
    >               reduce using rule 119 (alpha_lower -> d .)
    ?               reduce using rule 119 (alpha_lower -> d .)
    @               reduce using rule 119 (alpha_lower -> d .)
    [               reduce using rule 119 (alpha_lower -> d .)
    \               reduce using rule 119 (alpha_lower -> d .)
    _               reduce using rule 119 (alpha_lower -> d .)
    `               reduce using rule 119 (alpha_lower -> d .)
    {               reduce using rule 119 (alpha_lower -> d .)
    }               reduce using rule 119 (alpha_lower -> d .)
    ~               reduce using rule 119 (alpha_lower -> d .)
    ESCAPED         reduce using rule 119 (alpha_lower -> d .)
    DIGIT           reduce using rule 119 (alpha_lower -> d .)
    OTHER           reduce using rule 119 (alpha_lower -> d .)
    a               reduce using rule 119 (alpha_lower -> d .)
    b               reduce using rule 119 (alpha_lower -> d .)
    c               reduce using rule 119 (alpha_lower -> d .)
    d               reduce using rule 119 (alpha_lower -> d .)
    e               reduce using rule 119 (alpha_lower -> d .)
    f               reduce using rule 119 (alpha_lower -> d .)
    g               reduce using rule 119 (alpha_lower -> d .)
    h               reduce using rule 119 (alpha_lower -> d .)
    i               reduce using rule 119 (alpha_lower -> d .)
    j               reduce using rule 119 (alpha_lower -> d .)
    k               reduce using rule 119 (alpha_lower -> d .)
    l               reduce using rule 119 (alpha_lower -> d .)
    m               reduce using rule 119 (alpha_lower -> d .)
    n               reduce using rule 119 (alpha_lower -> d .)
    o               reduce using rule 119 (alpha_lower -> d .)
    p               reduce using rule 119 (alpha_lower -> d .)
    q               reduce using rule 119 (alpha_lower -> d .)
    r               reduce using rule 119 (alpha_lower -> d .)
    s               reduce using rule 119 (alpha_lower -> d .)
    t               reduce using rule 119 (alpha_lower -> d .)
    u               reduce using rule 119 (alpha_lower -> d .)
    v               reduce using rule 119 (alpha_lower -> d .)
    w               reduce using rule 119 (alpha_lower -> d .)
    x               reduce using rule 119 (alpha_lower -> d .)
    y               reduce using rule 119 (alpha_lower -> d .)
    z               reduce using rule 119 (alpha_lower -> d .)
    A               reduce using rule 119 (alpha_lower -> d .)
    B               reduce using rule 119 (alpha_lower -> d .)
    C               reduce using rule 119 (alpha_lower -> d .)
    D               reduce using rule 119 (alpha_lower -> d .)
    E               reduce using rule 119 (alpha_lower -> d .)
    F               reduce using rule 119 (alpha_lower -> d .)
    G               reduce using rule 119 (alpha_lower -> d .)
    H               reduce using rule 119 (alpha_lower -> d .)
    I               reduce using rule 119 (alpha_lower -> d .)
    J               reduce using rule 119 (alpha_lower -> d .)
    K               reduce using rule 119 (alpha_lower -> d .)
    L               reduce using rule 119 (alpha_lower -> d .)
    M               reduce using rule 119 (alpha_lower -> d .)
    N               reduce using rule 119 (alpha_lower -> d .)
    O               reduce using rule 119 (alpha_lower -> d .)
    P               reduce using rule 119 (alpha_lower -> d .)
    Q               reduce using rule 119 (alpha_lower -> d .)
    R               reduce using rule 119 (alpha_lower -> d .)
    S               reduce using rule 119 (alpha_lower -> d .)
    T               reduce using rule 119 (alpha_lower -> d .)
    U               reduce using rule 119 (alpha_lower -> d .)
    V               reduce using rule 119 (alpha_lower -> d .)
    W               reduce using rule 119 (alpha_lower -> d .)
    X               reduce using rule 119 (alpha_lower -> d .)
    Y               reduce using rule 119 (alpha_lower -> d .)
    Z               reduce using rule 119 (alpha_lower -> d .)
    |               reduce using rule 119 (alpha_lower -> d .)
    ]               reduce using rule 119 (alpha_lower -> d .)
    -               reduce using rule 119 (alpha_lower -> d .)
    ^               reduce using rule 119 (alpha_lower -> d .)
    $end            reduce using rule 119 (alpha_lower -> d .)


state 73

    (34) nodisplay -> , .

    *               reduce using rule 34 (nodisplay -> , .)
    +               reduce using rule 34 (nodisplay -> , .)
    ?               reduce using rule 34 (nodisplay -> , .)
    {               reduce using rule 34 (nodisplay -> , .)
    (               reduce using rule 34 (nodisplay -> , .)
    ^               reduce using rule 34 (nodisplay -> , .)
    >               reduce using rule 34 (nodisplay -> , .)
    <               reduce using rule 34 (nodisplay -> , .)
    /               reduce using rule 34 (nodisplay -> , .)
    \               reduce using rule 34 (nodisplay -> , .)
    #               reduce using rule 34 (nodisplay -> , .)
    %               reduce using rule 34 (nodisplay -> , .)
    ESCAPED         reduce using rule 34 (nodisplay -> , .)
    DIGIT           reduce using rule 34 (nodisplay -> , .)
    OTHER           reduce using rule 34 (nodisplay -> , .)
    [               reduce using rule 34 (nodisplay -> , .)
    .               reduce using rule 34 (nodisplay -> , .)
    ,               reduce using rule 34 (nodisplay -> , .)
    :               reduce using rule 34 (nodisplay -> , .)
    ;               reduce using rule 34 (nodisplay -> , .)
    $               reduce using rule 34 (nodisplay -> , .)
    `               reduce using rule 34 (nodisplay -> , .)
    a               reduce using rule 34 (nodisplay -> , .)
    b               reduce using rule 34 (nodisplay -> , .)
    c               reduce using rule 34 (nodisplay -> , .)
    d               reduce using rule 34 (nodisplay -> , .)
    e               reduce using rule 34 (nodisplay -> , .)
    f               reduce using rule 34 (nodisplay -> , .)
    g               reduce using rule 34 (nodisplay -> , .)
    h               reduce using rule 34 (nodisplay -> , .)
    i               reduce using rule 34 (nodisplay -> , .)
    j               reduce using rule 34 (nodisplay -> , .)
    k               reduce using rule 34 (nodisplay -> , .)
    l               reduce using rule 34 (nodisplay -> , .)
    m               reduce using rule 34 (nodisplay -> , .)
    n               reduce using rule 34 (nodisplay -> , .)
    o               reduce using rule 34 (nodisplay -> , .)
    p               reduce using rule 34 (nodisplay -> , .)
    q               reduce using rule 34 (nodisplay -> , .)
    r               reduce using rule 34 (nodisplay -> , .)
    s               reduce using rule 34 (nodisplay -> , .)
    t               reduce using rule 34 (nodisplay -> , .)
    u               reduce using rule 34 (nodisplay -> , .)
    v               reduce using rule 34 (nodisplay -> , .)
    w               reduce using rule 34 (nodisplay -> , .)
    x               reduce using rule 34 (nodisplay -> , .)
    y               reduce using rule 34 (nodisplay -> , .)
    z               reduce using rule 34 (nodisplay -> , .)
    A               reduce using rule 34 (nodisplay -> , .)
    B               reduce using rule 34 (nodisplay -> , .)
    C               reduce using rule 34 (nodisplay -> , .)
    D               reduce using rule 34 (nodisplay -> , .)
    E               reduce using rule 34 (nodisplay -> , .)
    F               reduce using rule 34 (nodisplay -> , .)
    G               reduce using rule 34 (nodisplay -> , .)
    H               reduce using rule 34 (nodisplay -> , .)
    I               reduce using rule 34 (nodisplay -> , .)
    J               reduce using rule 34 (nodisplay -> , .)
    K               reduce using rule 34 (nodisplay -> , .)
    L               reduce using rule 34 (nodisplay -> , .)
    M               reduce using rule 34 (nodisplay -> , .)
    N               reduce using rule 34 (nodisplay -> , .)
    O               reduce using rule 34 (nodisplay -> , .)
    P               reduce using rule 34 (nodisplay -> , .)
    Q               reduce using rule 34 (nodisplay -> , .)
    R               reduce using rule 34 (nodisplay -> , .)
    S               reduce using rule 34 (nodisplay -> , .)
    T               reduce using rule 34 (nodisplay -> , .)
    U               reduce using rule 34 (nodisplay -> , .)
    V               reduce using rule 34 (nodisplay -> , .)
    W               reduce using rule 34 (nodisplay -> , .)
    X               reduce using rule 34 (nodisplay -> , .)
    Y               reduce using rule 34 (nodisplay -> , .)
    Z               reduce using rule 34 (nodisplay -> , .)
    |               reduce using rule 34 (nodisplay -> , .)
    )               reduce using rule 34 (nodisplay -> , .)
    $end            reduce using rule 34 (nodisplay -> , .)


state 74

    (150) alpha_upper -> I .

    -               reduce using rule 150 (alpha_upper -> I .)
    !               reduce using rule 150 (alpha_upper -> I .)
    "               reduce using rule 150 (alpha_upper -> I .)
    #               reduce using rule 150 (alpha_upper -> I .)
    $               reduce using rule 150 (alpha_upper -> I .)
    %               reduce using rule 150 (alpha_upper -> I .)
    &               reduce using rule 150 (alpha_upper -> I .)
    '               reduce using rule 150 (alpha_upper -> I .)
    (               reduce using rule 150 (alpha_upper -> I .)
    )               reduce using rule 150 (alpha_upper -> I .)
    *               reduce using rule 150 (alpha_upper -> I .)
    +               reduce using rule 150 (alpha_upper -> I .)
    ,               reduce using rule 150 (alpha_upper -> I .)
    .               reduce using rule 150 (alpha_upper -> I .)
    /               reduce using rule 150 (alpha_upper -> I .)
    :               reduce using rule 150 (alpha_upper -> I .)
    ;               reduce using rule 150 (alpha_upper -> I .)
    <               reduce using rule 150 (alpha_upper -> I .)
    =               reduce using rule 150 (alpha_upper -> I .)
    >               reduce using rule 150 (alpha_upper -> I .)
    ?               reduce using rule 150 (alpha_upper -> I .)
    @               reduce using rule 150 (alpha_upper -> I .)
    [               reduce using rule 150 (alpha_upper -> I .)
    \               reduce using rule 150 (alpha_upper -> I .)
    _               reduce using rule 150 (alpha_upper -> I .)
    `               reduce using rule 150 (alpha_upper -> I .)
    {               reduce using rule 150 (alpha_upper -> I .)
    }               reduce using rule 150 (alpha_upper -> I .)
    ~               reduce using rule 150 (alpha_upper -> I .)
    ESCAPED         reduce using rule 150 (alpha_upper -> I .)
    DIGIT           reduce using rule 150 (alpha_upper -> I .)
    OTHER           reduce using rule 150 (alpha_upper -> I .)
    a               reduce using rule 150 (alpha_upper -> I .)
    b               reduce using rule 150 (alpha_upper -> I .)
    c               reduce using rule 150 (alpha_upper -> I .)
    d               reduce using rule 150 (alpha_upper -> I .)
    e               reduce using rule 150 (alpha_upper -> I .)
    f               reduce using rule 150 (alpha_upper -> I .)
    g               reduce using rule 150 (alpha_upper -> I .)
    h               reduce using rule 150 (alpha_upper -> I .)
    i               reduce using rule 150 (alpha_upper -> I .)
    j               reduce using rule 150 (alpha_upper -> I .)
    k               reduce using rule 150 (alpha_upper -> I .)
    l               reduce using rule 150 (alpha_upper -> I .)
    m               reduce using rule 150 (alpha_upper -> I .)
    n               reduce using rule 150 (alpha_upper -> I .)
    o               reduce using rule 150 (alpha_upper -> I .)
    p               reduce using rule 150 (alpha_upper -> I .)
    q               reduce using rule 150 (alpha_upper -> I .)
    r               reduce using rule 150 (alpha_upper -> I .)
    s               reduce using rule 150 (alpha_upper -> I .)
    t               reduce using rule 150 (alpha_upper -> I .)
    u               reduce using rule 150 (alpha_upper -> I .)
    v               reduce using rule 150 (alpha_upper -> I .)
    w               reduce using rule 150 (alpha_upper -> I .)
    x               reduce using rule 150 (alpha_upper -> I .)
    y               reduce using rule 150 (alpha_upper -> I .)
    z               reduce using rule 150 (alpha_upper -> I .)
    A               reduce using rule 150 (alpha_upper -> I .)
    B               reduce using rule 150 (alpha_upper -> I .)
    C               reduce using rule 150 (alpha_upper -> I .)
    D               reduce using rule 150 (alpha_upper -> I .)
    E               reduce using rule 150 (alpha_upper -> I .)
    F               reduce using rule 150 (alpha_upper -> I .)
    G               reduce using rule 150 (alpha_upper -> I .)
    H               reduce using rule 150 (alpha_upper -> I .)
    I               reduce using rule 150 (alpha_upper -> I .)
    J               reduce using rule 150 (alpha_upper -> I .)
    K               reduce using rule 150 (alpha_upper -> I .)
    L               reduce using rule 150 (alpha_upper -> I .)
    M               reduce using rule 150 (alpha_upper -> I .)
    N               reduce using rule 150 (alpha_upper -> I .)
    O               reduce using rule 150 (alpha_upper -> I .)
    P               reduce using rule 150 (alpha_upper -> I .)
    Q               reduce using rule 150 (alpha_upper -> I .)
    R               reduce using rule 150 (alpha_upper -> I .)
    S               reduce using rule 150 (alpha_upper -> I .)
    T               reduce using rule 150 (alpha_upper -> I .)
    U               reduce using rule 150 (alpha_upper -> I .)
    V               reduce using rule 150 (alpha_upper -> I .)
    W               reduce using rule 150 (alpha_upper -> I .)
    X               reduce using rule 150 (alpha_upper -> I .)
    Y               reduce using rule 150 (alpha_upper -> I .)
    Z               reduce using rule 150 (alpha_upper -> I .)
    |               reduce using rule 150 (alpha_upper -> I .)
    ]               reduce using rule 150 (alpha_upper -> I .)
    ^               reduce using rule 150 (alpha_upper -> I .)
    $end            reduce using rule 150 (alpha_upper -> I .)


state 75

    (155) alpha_upper -> N .

    -               reduce using rule 155 (alpha_upper -> N .)
    !               reduce using rule 155 (alpha_upper -> N .)
    "               reduce using rule 155 (alpha_upper -> N .)
    #               reduce using rule 155 (alpha_upper -> N .)
    $               reduce using rule 155 (alpha_upper -> N .)
    %               reduce using rule 155 (alpha_upper -> N .)
    &               reduce using rule 155 (alpha_upper -> N .)
    '               reduce using rule 155 (alpha_upper -> N .)
    (               reduce using rule 155 (alpha_upper -> N .)
    )               reduce using rule 155 (alpha_upper -> N .)
    *               reduce using rule 155 (alpha_upper -> N .)
    +               reduce using rule 155 (alpha_upper -> N .)
    ,               reduce using rule 155 (alpha_upper -> N .)
    .               reduce using rule 155 (alpha_upper -> N .)
    /               reduce using rule 155 (alpha_upper -> N .)
    :               reduce using rule 155 (alpha_upper -> N .)
    ;               reduce using rule 155 (alpha_upper -> N .)
    <               reduce using rule 155 (alpha_upper -> N .)
    =               reduce using rule 155 (alpha_upper -> N .)
    >               reduce using rule 155 (alpha_upper -> N .)
    ?               reduce using rule 155 (alpha_upper -> N .)
    @               reduce using rule 155 (alpha_upper -> N .)
    [               reduce using rule 155 (alpha_upper -> N .)
    \               reduce using rule 155 (alpha_upper -> N .)
    _               reduce using rule 155 (alpha_upper -> N .)
    `               reduce using rule 155 (alpha_upper -> N .)
    {               reduce using rule 155 (alpha_upper -> N .)
    }               reduce using rule 155 (alpha_upper -> N .)
    ~               reduce using rule 155 (alpha_upper -> N .)
    ESCAPED         reduce using rule 155 (alpha_upper -> N .)
    DIGIT           reduce using rule 155 (alpha_upper -> N .)
    OTHER           reduce using rule 155 (alpha_upper -> N .)
    a               reduce using rule 155 (alpha_upper -> N .)
    b               reduce using rule 155 (alpha_upper -> N .)
    c               reduce using rule 155 (alpha_upper -> N .)
    d               reduce using rule 155 (alpha_upper -> N .)
    e               reduce using rule 155 (alpha_upper -> N .)
    f               reduce using rule 155 (alpha_upper -> N .)
    g               reduce using rule 155 (alpha_upper -> N .)
    h               reduce using rule 155 (alpha_upper -> N .)
    i               reduce using rule 155 (alpha_upper -> N .)
    j               reduce using rule 155 (alpha_upper -> N .)
    k               reduce using rule 155 (alpha_upper -> N .)
    l               reduce using rule 155 (alpha_upper -> N .)
    m               reduce using rule 155 (alpha_upper -> N .)
    n               reduce using rule 155 (alpha_upper -> N .)
    o               reduce using rule 155 (alpha_upper -> N .)
    p               reduce using rule 155 (alpha_upper -> N .)
    q               reduce using rule 155 (alpha_upper -> N .)
    r               reduce using rule 155 (alpha_upper -> N .)
    s               reduce using rule 155 (alpha_upper -> N .)
    t               reduce using rule 155 (alpha_upper -> N .)
    u               reduce using rule 155 (alpha_upper -> N .)
    v               reduce using rule 155 (alpha_upper -> N .)
    w               reduce using rule 155 (alpha_upper -> N .)
    x               reduce using rule 155 (alpha_upper -> N .)
    y               reduce using rule 155 (alpha_upper -> N .)
    z               reduce using rule 155 (alpha_upper -> N .)
    A               reduce using rule 155 (alpha_upper -> N .)
    B               reduce using rule 155 (alpha_upper -> N .)
    C               reduce using rule 155 (alpha_upper -> N .)
    D               reduce using rule 155 (alpha_upper -> N .)
    E               reduce using rule 155 (alpha_upper -> N .)
    F               reduce using rule 155 (alpha_upper -> N .)
    G               reduce using rule 155 (alpha_upper -> N .)
    H               reduce using rule 155 (alpha_upper -> N .)
    I               reduce using rule 155 (alpha_upper -> N .)
    J               reduce using rule 155 (alpha_upper -> N .)
    K               reduce using rule 155 (alpha_upper -> N .)
    L               reduce using rule 155 (alpha_upper -> N .)
    M               reduce using rule 155 (alpha_upper -> N .)
    N               reduce using rule 155 (alpha_upper -> N .)
    O               reduce using rule 155 (alpha_upper -> N .)
    P               reduce using rule 155 (alpha_upper -> N .)
    Q               reduce using rule 155 (alpha_upper -> N .)
    R               reduce using rule 155 (alpha_upper -> N .)
    S               reduce using rule 155 (alpha_upper -> N .)
    T               reduce using rule 155 (alpha_upper -> N .)
    U               reduce using rule 155 (alpha_upper -> N .)
    V               reduce using rule 155 (alpha_upper -> N .)
    W               reduce using rule 155 (alpha_upper -> N .)
    X               reduce using rule 155 (alpha_upper -> N .)
    Y               reduce using rule 155 (alpha_upper -> N .)
    Z               reduce using rule 155 (alpha_upper -> N .)
    |               reduce using rule 155 (alpha_upper -> N .)
    ]               reduce using rule 155 (alpha_upper -> N .)
    ^               reduce using rule 155 (alpha_upper -> N .)
    $end            reduce using rule 155 (alpha_upper -> N .)


state 76

    (107) command -> \ .

    *               reduce using rule 107 (command -> \ .)
    +               reduce using rule 107 (command -> \ .)
    ?               reduce using rule 107 (command -> \ .)
    {               reduce using rule 107 (command -> \ .)
    (               reduce using rule 107 (command -> \ .)
    ^               reduce using rule 107 (command -> \ .)
    >               reduce using rule 107 (command -> \ .)
    <               reduce using rule 107 (command -> \ .)
    /               reduce using rule 107 (command -> \ .)
    \               reduce using rule 107 (command -> \ .)
    #               reduce using rule 107 (command -> \ .)
    %               reduce using rule 107 (command -> \ .)
    ESCAPED         reduce using rule 107 (command -> \ .)
    DIGIT           reduce using rule 107 (command -> \ .)
    OTHER           reduce using rule 107 (command -> \ .)
    [               reduce using rule 107 (command -> \ .)
    .               reduce using rule 107 (command -> \ .)
    ,               reduce using rule 107 (command -> \ .)
    :               reduce using rule 107 (command -> \ .)
    ;               reduce using rule 107 (command -> \ .)
    $               reduce using rule 107 (command -> \ .)
    `               reduce using rule 107 (command -> \ .)
    a               reduce using rule 107 (command -> \ .)
    b               reduce using rule 107 (command -> \ .)
    c               reduce using rule 107 (command -> \ .)
    d               reduce using rule 107 (command -> \ .)
    e               reduce using rule 107 (command -> \ .)
    f               reduce using rule 107 (command -> \ .)
    g               reduce using rule 107 (command -> \ .)
    h               reduce using rule 107 (command -> \ .)
    i               reduce using rule 107 (command -> \ .)
    j               reduce using rule 107 (command -> \ .)
    k               reduce using rule 107 (command -> \ .)
    l               reduce using rule 107 (command -> \ .)
    m               reduce using rule 107 (command -> \ .)
    n               reduce using rule 107 (command -> \ .)
    o               reduce using rule 107 (command -> \ .)
    p               reduce using rule 107 (command -> \ .)
    q               reduce using rule 107 (command -> \ .)
    r               reduce using rule 107 (command -> \ .)
    s               reduce using rule 107 (command -> \ .)
    t               reduce using rule 107 (command -> \ .)
    u               reduce using rule 107 (command -> \ .)
    v               reduce using rule 107 (command -> \ .)
    w               reduce using rule 107 (command -> \ .)
    x               reduce using rule 107 (command -> \ .)
    y               reduce using rule 107 (command -> \ .)
    z               reduce using rule 107 (command -> \ .)
    A               reduce using rule 107 (command -> \ .)
    B               reduce using rule 107 (command -> \ .)
    C               reduce using rule 107 (command -> \ .)
    D               reduce using rule 107 (command -> \ .)
    E               reduce using rule 107 (command -> \ .)
    F               reduce using rule 107 (command -> \ .)
    G               reduce using rule 107 (command -> \ .)
    H               reduce using rule 107 (command -> \ .)
    I               reduce using rule 107 (command -> \ .)
    J               reduce using rule 107 (command -> \ .)
    K               reduce using rule 107 (command -> \ .)
    L               reduce using rule 107 (command -> \ .)
    M               reduce using rule 107 (command -> \ .)
    N               reduce using rule 107 (command -> \ .)
    O               reduce using rule 107 (command -> \ .)
    P               reduce using rule 107 (command -> \ .)
    Q               reduce using rule 107 (command -> \ .)
    R               reduce using rule 107 (command -> \ .)
    S               reduce using rule 107 (command -> \ .)
    T               reduce using rule 107 (command -> \ .)
    U               reduce using rule 107 (command -> \ .)
    V               reduce using rule 107 (command -> \ .)
    W               reduce using rule 107 (command -> \ .)
    X               reduce using rule 107 (command -> \ .)
    Y               reduce using rule 107 (command -> \ .)
    Z               reduce using rule 107 (command -> \ .)
    |               reduce using rule 107 (command -> \ .)
    $end            reduce using rule 107 (command -> \ .)
    )               reduce using rule 107 (command -> \ .)


state 77

    (144) alpha_upper -> C .

    -               reduce using rule 144 (alpha_upper -> C .)
    !               reduce using rule 144 (alpha_upper -> C .)
    "               reduce using rule 144 (alpha_upper -> C .)
    #               reduce using rule 144 (alpha_upper -> C .)
    $               reduce using rule 144 (alpha_upper -> C .)
    %               reduce using rule 144 (alpha_upper -> C .)
    &               reduce using rule 144 (alpha_upper -> C .)
    '               reduce using rule 144 (alpha_upper -> C .)
    (               reduce using rule 144 (alpha_upper -> C .)
    )               reduce using rule 144 (alpha_upper -> C .)
    *               reduce using rule 144 (alpha_upper -> C .)
    +               reduce using rule 144 (alpha_upper -> C .)
    ,               reduce using rule 144 (alpha_upper -> C .)
    .               reduce using rule 144 (alpha_upper -> C .)
    /               reduce using rule 144 (alpha_upper -> C .)
    :               reduce using rule 144 (alpha_upper -> C .)
    ;               reduce using rule 144 (alpha_upper -> C .)
    <               reduce using rule 144 (alpha_upper -> C .)
    =               reduce using rule 144 (alpha_upper -> C .)
    >               reduce using rule 144 (alpha_upper -> C .)
    ?               reduce using rule 144 (alpha_upper -> C .)
    @               reduce using rule 144 (alpha_upper -> C .)
    [               reduce using rule 144 (alpha_upper -> C .)
    \               reduce using rule 144 (alpha_upper -> C .)
    _               reduce using rule 144 (alpha_upper -> C .)
    `               reduce using rule 144 (alpha_upper -> C .)
    {               reduce using rule 144 (alpha_upper -> C .)
    }               reduce using rule 144 (alpha_upper -> C .)
    ~               reduce using rule 144 (alpha_upper -> C .)
    ESCAPED         reduce using rule 144 (alpha_upper -> C .)
    DIGIT           reduce using rule 144 (alpha_upper -> C .)
    OTHER           reduce using rule 144 (alpha_upper -> C .)
    a               reduce using rule 144 (alpha_upper -> C .)
    b               reduce using rule 144 (alpha_upper -> C .)
    c               reduce using rule 144 (alpha_upper -> C .)
    d               reduce using rule 144 (alpha_upper -> C .)
    e               reduce using rule 144 (alpha_upper -> C .)
    f               reduce using rule 144 (alpha_upper -> C .)
    g               reduce using rule 144 (alpha_upper -> C .)
    h               reduce using rule 144 (alpha_upper -> C .)
    i               reduce using rule 144 (alpha_upper -> C .)
    j               reduce using rule 144 (alpha_upper -> C .)
    k               reduce using rule 144 (alpha_upper -> C .)
    l               reduce using rule 144 (alpha_upper -> C .)
    m               reduce using rule 144 (alpha_upper -> C .)
    n               reduce using rule 144 (alpha_upper -> C .)
    o               reduce using rule 144 (alpha_upper -> C .)
    p               reduce using rule 144 (alpha_upper -> C .)
    q               reduce using rule 144 (alpha_upper -> C .)
    r               reduce using rule 144 (alpha_upper -> C .)
    s               reduce using rule 144 (alpha_upper -> C .)
    t               reduce using rule 144 (alpha_upper -> C .)
    u               reduce using rule 144 (alpha_upper -> C .)
    v               reduce using rule 144 (alpha_upper -> C .)
    w               reduce using rule 144 (alpha_upper -> C .)
    x               reduce using rule 144 (alpha_upper -> C .)
    y               reduce using rule 144 (alpha_upper -> C .)
    z               reduce using rule 144 (alpha_upper -> C .)
    A               reduce using rule 144 (alpha_upper -> C .)
    B               reduce using rule 144 (alpha_upper -> C .)
    C               reduce using rule 144 (alpha_upper -> C .)
    D               reduce using rule 144 (alpha_upper -> C .)
    E               reduce using rule 144 (alpha_upper -> C .)
    F               reduce using rule 144 (alpha_upper -> C .)
    G               reduce using rule 144 (alpha_upper -> C .)
    H               reduce using rule 144 (alpha_upper -> C .)
    I               reduce using rule 144 (alpha_upper -> C .)
    J               reduce using rule 144 (alpha_upper -> C .)
    K               reduce using rule 144 (alpha_upper -> C .)
    L               reduce using rule 144 (alpha_upper -> C .)
    M               reduce using rule 144 (alpha_upper -> C .)
    N               reduce using rule 144 (alpha_upper -> C .)
    O               reduce using rule 144 (alpha_upper -> C .)
    P               reduce using rule 144 (alpha_upper -> C .)
    Q               reduce using rule 144 (alpha_upper -> C .)
    R               reduce using rule 144 (alpha_upper -> C .)
    S               reduce using rule 144 (alpha_upper -> C .)
    T               reduce using rule 144 (alpha_upper -> C .)
    U               reduce using rule 144 (alpha_upper -> C .)
    V               reduce using rule 144 (alpha_upper -> C .)
    W               reduce using rule 144 (alpha_upper -> C .)
    X               reduce using rule 144 (alpha_upper -> C .)
    Y               reduce using rule 144 (alpha_upper -> C .)
    Z               reduce using rule 144 (alpha_upper -> C .)
    |               reduce using rule 144 (alpha_upper -> C .)
    ]               reduce using rule 144 (alpha_upper -> C .)
    ^               reduce using rule 144 (alpha_upper -> C .)
    $end            reduce using rule 144 (alpha_upper -> C .)


state 78

    (121) alpha_lower -> f .

    !               reduce using rule 121 (alpha_lower -> f .)
    "               reduce using rule 121 (alpha_lower -> f .)
    #               reduce using rule 121 (alpha_lower -> f .)
    $               reduce using rule 121 (alpha_lower -> f .)
    %               reduce using rule 121 (alpha_lower -> f .)
    &               reduce using rule 121 (alpha_lower -> f .)
    '               reduce using rule 121 (alpha_lower -> f .)
    (               reduce using rule 121 (alpha_lower -> f .)
    )               reduce using rule 121 (alpha_lower -> f .)
    *               reduce using rule 121 (alpha_lower -> f .)
    +               reduce using rule 121 (alpha_lower -> f .)
    ,               reduce using rule 121 (alpha_lower -> f .)
    .               reduce using rule 121 (alpha_lower -> f .)
    /               reduce using rule 121 (alpha_lower -> f .)
    :               reduce using rule 121 (alpha_lower -> f .)
    ;               reduce using rule 121 (alpha_lower -> f .)
    <               reduce using rule 121 (alpha_lower -> f .)
    =               reduce using rule 121 (alpha_lower -> f .)
    >               reduce using rule 121 (alpha_lower -> f .)
    ?               reduce using rule 121 (alpha_lower -> f .)
    @               reduce using rule 121 (alpha_lower -> f .)
    [               reduce using rule 121 (alpha_lower -> f .)
    \               reduce using rule 121 (alpha_lower -> f .)
    _               reduce using rule 121 (alpha_lower -> f .)
    `               reduce using rule 121 (alpha_lower -> f .)
    {               reduce using rule 121 (alpha_lower -> f .)
    }               reduce using rule 121 (alpha_lower -> f .)
    ~               reduce using rule 121 (alpha_lower -> f .)
    ESCAPED         reduce using rule 121 (alpha_lower -> f .)
    DIGIT           reduce using rule 121 (alpha_lower -> f .)
    OTHER           reduce using rule 121 (alpha_lower -> f .)
    a               reduce using rule 121 (alpha_lower -> f .)
    b               reduce using rule 121 (alpha_lower -> f .)
    c               reduce using rule 121 (alpha_lower -> f .)
    d               reduce using rule 121 (alpha_lower -> f .)
    e               reduce using rule 121 (alpha_lower -> f .)
    f               reduce using rule 121 (alpha_lower -> f .)
    g               reduce using rule 121 (alpha_lower -> f .)
    h               reduce using rule 121 (alpha_lower -> f .)
    i               reduce using rule 121 (alpha_lower -> f .)
    j               reduce using rule 121 (alpha_lower -> f .)
    k               reduce using rule 121 (alpha_lower -> f .)
    l               reduce using rule 121 (alpha_lower -> f .)
    m               reduce using rule 121 (alpha_lower -> f .)
    n               reduce using rule 121 (alpha_lower -> f .)
    o               reduce using rule 121 (alpha_lower -> f .)
    p               reduce using rule 121 (alpha_lower -> f .)
    q               reduce using rule 121 (alpha_lower -> f .)
    r               reduce using rule 121 (alpha_lower -> f .)
    s               reduce using rule 121 (alpha_lower -> f .)
    t               reduce using rule 121 (alpha_lower -> f .)
    u               reduce using rule 121 (alpha_lower -> f .)
    v               reduce using rule 121 (alpha_lower -> f .)
    w               reduce using rule 121 (alpha_lower -> f .)
    x               reduce using rule 121 (alpha_lower -> f .)
    y               reduce using rule 121 (alpha_lower -> f .)
    z               reduce using rule 121 (alpha_lower -> f .)
    A               reduce using rule 121 (alpha_lower -> f .)
    B               reduce using rule 121 (alpha_lower -> f .)
    C               reduce using rule 121 (alpha_lower -> f .)
    D               reduce using rule 121 (alpha_lower -> f .)
    E               reduce using rule 121 (alpha_lower -> f .)
    F               reduce using rule 121 (alpha_lower -> f .)
    G               reduce using rule 121 (alpha_lower -> f .)
    H               reduce using rule 121 (alpha_lower -> f .)
    I               reduce using rule 121 (alpha_lower -> f .)
    J               reduce using rule 121 (alpha_lower -> f .)
    K               reduce using rule 121 (alpha_lower -> f .)
    L               reduce using rule 121 (alpha_lower -> f .)
    M               reduce using rule 121 (alpha_lower -> f .)
    N               reduce using rule 121 (alpha_lower -> f .)
    O               reduce using rule 121 (alpha_lower -> f .)
    P               reduce using rule 121 (alpha_lower -> f .)
    Q               reduce using rule 121 (alpha_lower -> f .)
    R               reduce using rule 121 (alpha_lower -> f .)
    S               reduce using rule 121 (alpha_lower -> f .)
    T               reduce using rule 121 (alpha_lower -> f .)
    U               reduce using rule 121 (alpha_lower -> f .)
    V               reduce using rule 121 (alpha_lower -> f .)
    W               reduce using rule 121 (alpha_lower -> f .)
    X               reduce using rule 121 (alpha_lower -> f .)
    Y               reduce using rule 121 (alpha_lower -> f .)
    Z               reduce using rule 121 (alpha_lower -> f .)
    |               reduce using rule 121 (alpha_lower -> f .)
    ]               reduce using rule 121 (alpha_lower -> f .)
    -               reduce using rule 121 (alpha_lower -> f .)
    ^               reduce using rule 121 (alpha_lower -> f .)
    $end            reduce using rule 121 (alpha_lower -> f .)


state 79

    (134) alpha_lower -> s .

    !               reduce using rule 134 (alpha_lower -> s .)
    "               reduce using rule 134 (alpha_lower -> s .)
    #               reduce using rule 134 (alpha_lower -> s .)
    $               reduce using rule 134 (alpha_lower -> s .)
    %               reduce using rule 134 (alpha_lower -> s .)
    &               reduce using rule 134 (alpha_lower -> s .)
    '               reduce using rule 134 (alpha_lower -> s .)
    (               reduce using rule 134 (alpha_lower -> s .)
    )               reduce using rule 134 (alpha_lower -> s .)
    *               reduce using rule 134 (alpha_lower -> s .)
    +               reduce using rule 134 (alpha_lower -> s .)
    ,               reduce using rule 134 (alpha_lower -> s .)
    .               reduce using rule 134 (alpha_lower -> s .)
    /               reduce using rule 134 (alpha_lower -> s .)
    :               reduce using rule 134 (alpha_lower -> s .)
    ;               reduce using rule 134 (alpha_lower -> s .)
    <               reduce using rule 134 (alpha_lower -> s .)
    =               reduce using rule 134 (alpha_lower -> s .)
    >               reduce using rule 134 (alpha_lower -> s .)
    ?               reduce using rule 134 (alpha_lower -> s .)
    @               reduce using rule 134 (alpha_lower -> s .)
    [               reduce using rule 134 (alpha_lower -> s .)
    \               reduce using rule 134 (alpha_lower -> s .)
    _               reduce using rule 134 (alpha_lower -> s .)
    `               reduce using rule 134 (alpha_lower -> s .)
    {               reduce using rule 134 (alpha_lower -> s .)
    }               reduce using rule 134 (alpha_lower -> s .)
    ~               reduce using rule 134 (alpha_lower -> s .)
    ESCAPED         reduce using rule 134 (alpha_lower -> s .)
    DIGIT           reduce using rule 134 (alpha_lower -> s .)
    OTHER           reduce using rule 134 (alpha_lower -> s .)
    a               reduce using rule 134 (alpha_lower -> s .)
    b               reduce using rule 134 (alpha_lower -> s .)
    c               reduce using rule 134 (alpha_lower -> s .)
    d               reduce using rule 134 (alpha_lower -> s .)
    e               reduce using rule 134 (alpha_lower -> s .)
    f               reduce using rule 134 (alpha_lower -> s .)
    g               reduce using rule 134 (alpha_lower -> s .)
    h               reduce using rule 134 (alpha_lower -> s .)
    i               reduce using rule 134 (alpha_lower -> s .)
    j               reduce using rule 134 (alpha_lower -> s .)
    k               reduce using rule 134 (alpha_lower -> s .)
    l               reduce using rule 134 (alpha_lower -> s .)
    m               reduce using rule 134 (alpha_lower -> s .)
    n               reduce using rule 134 (alpha_lower -> s .)
    o               reduce using rule 134 (alpha_lower -> s .)
    p               reduce using rule 134 (alpha_lower -> s .)
    q               reduce using rule 134 (alpha_lower -> s .)
    r               reduce using rule 134 (alpha_lower -> s .)
    s               reduce using rule 134 (alpha_lower -> s .)
    t               reduce using rule 134 (alpha_lower -> s .)
    u               reduce using rule 134 (alpha_lower -> s .)
    v               reduce using rule 134 (alpha_lower -> s .)
    w               reduce using rule 134 (alpha_lower -> s .)
    x               reduce using rule 134 (alpha_lower -> s .)
    y               reduce using rule 134 (alpha_lower -> s .)
    z               reduce using rule 134 (alpha_lower -> s .)
    A               reduce using rule 134 (alpha_lower -> s .)
    B               reduce using rule 134 (alpha_lower -> s .)
    C               reduce using rule 134 (alpha_lower -> s .)
    D               reduce using rule 134 (alpha_lower -> s .)
    E               reduce using rule 134 (alpha_lower -> s .)
    F               reduce using rule 134 (alpha_lower -> s .)
    G               reduce using rule 134 (alpha_lower -> s .)
    H               reduce using rule 134 (alpha_lower -> s .)
    I               reduce using rule 134 (alpha_lower -> s .)
    J               reduce using rule 134 (alpha_lower -> s .)
    K               reduce using rule 134 (alpha_lower -> s .)
    L               reduce using rule 134 (alpha_lower -> s .)
    M               reduce using rule 134 (alpha_lower -> s .)
    N               reduce using rule 134 (alpha_lower -> s .)
    O               reduce using rule 134 (alpha_lower -> s .)
    P               reduce using rule 134 (alpha_lower -> s .)
    Q               reduce using rule 134 (alpha_lower -> s .)
    R               reduce using rule 134 (alpha_lower -> s .)
    S               reduce using rule 134 (alpha_lower -> s .)
    T               reduce using rule 134 (alpha_lower -> s .)
    U               reduce using rule 134 (alpha_lower -> s .)
    V               reduce using rule 134 (alpha_lower -> s .)
    W               reduce using rule 134 (alpha_lower -> s .)
    X               reduce using rule 134 (alpha_lower -> s .)
    Y               reduce using rule 134 (alpha_lower -> s .)
    Z               reduce using rule 134 (alpha_lower -> s .)
    |               reduce using rule 134 (alpha_lower -> s .)
    ]               reduce using rule 134 (alpha_lower -> s .)
    -               reduce using rule 134 (alpha_lower -> s .)
    ^               reduce using rule 134 (alpha_lower -> s .)
    $end            reduce using rule 134 (alpha_lower -> s .)


state 80

    (126) alpha_lower -> k .

    !               reduce using rule 126 (alpha_lower -> k .)
    "               reduce using rule 126 (alpha_lower -> k .)
    #               reduce using rule 126 (alpha_lower -> k .)
    $               reduce using rule 126 (alpha_lower -> k .)
    %               reduce using rule 126 (alpha_lower -> k .)
    &               reduce using rule 126 (alpha_lower -> k .)
    '               reduce using rule 126 (alpha_lower -> k .)
    (               reduce using rule 126 (alpha_lower -> k .)
    )               reduce using rule 126 (alpha_lower -> k .)
    *               reduce using rule 126 (alpha_lower -> k .)
    +               reduce using rule 126 (alpha_lower -> k .)
    ,               reduce using rule 126 (alpha_lower -> k .)
    .               reduce using rule 126 (alpha_lower -> k .)
    /               reduce using rule 126 (alpha_lower -> k .)
    :               reduce using rule 126 (alpha_lower -> k .)
    ;               reduce using rule 126 (alpha_lower -> k .)
    <               reduce using rule 126 (alpha_lower -> k .)
    =               reduce using rule 126 (alpha_lower -> k .)
    >               reduce using rule 126 (alpha_lower -> k .)
    ?               reduce using rule 126 (alpha_lower -> k .)
    @               reduce using rule 126 (alpha_lower -> k .)
    [               reduce using rule 126 (alpha_lower -> k .)
    \               reduce using rule 126 (alpha_lower -> k .)
    _               reduce using rule 126 (alpha_lower -> k .)
    `               reduce using rule 126 (alpha_lower -> k .)
    {               reduce using rule 126 (alpha_lower -> k .)
    }               reduce using rule 126 (alpha_lower -> k .)
    ~               reduce using rule 126 (alpha_lower -> k .)
    ESCAPED         reduce using rule 126 (alpha_lower -> k .)
    DIGIT           reduce using rule 126 (alpha_lower -> k .)
    OTHER           reduce using rule 126 (alpha_lower -> k .)
    a               reduce using rule 126 (alpha_lower -> k .)
    b               reduce using rule 126 (alpha_lower -> k .)
    c               reduce using rule 126 (alpha_lower -> k .)
    d               reduce using rule 126 (alpha_lower -> k .)
    e               reduce using rule 126 (alpha_lower -> k .)
    f               reduce using rule 126 (alpha_lower -> k .)
    g               reduce using rule 126 (alpha_lower -> k .)
    h               reduce using rule 126 (alpha_lower -> k .)
    i               reduce using rule 126 (alpha_lower -> k .)
    j               reduce using rule 126 (alpha_lower -> k .)
    k               reduce using rule 126 (alpha_lower -> k .)
    l               reduce using rule 126 (alpha_lower -> k .)
    m               reduce using rule 126 (alpha_lower -> k .)
    n               reduce using rule 126 (alpha_lower -> k .)
    o               reduce using rule 126 (alpha_lower -> k .)
    p               reduce using rule 126 (alpha_lower -> k .)
    q               reduce using rule 126 (alpha_lower -> k .)
    r               reduce using rule 126 (alpha_lower -> k .)
    s               reduce using rule 126 (alpha_lower -> k .)
    t               reduce using rule 126 (alpha_lower -> k .)
    u               reduce using rule 126 (alpha_lower -> k .)
    v               reduce using rule 126 (alpha_lower -> k .)
    w               reduce using rule 126 (alpha_lower -> k .)
    x               reduce using rule 126 (alpha_lower -> k .)
    y               reduce using rule 126 (alpha_lower -> k .)
    z               reduce using rule 126 (alpha_lower -> k .)
    A               reduce using rule 126 (alpha_lower -> k .)
    B               reduce using rule 126 (alpha_lower -> k .)
    C               reduce using rule 126 (alpha_lower -> k .)
    D               reduce using rule 126 (alpha_lower -> k .)
    E               reduce using rule 126 (alpha_lower -> k .)
    F               reduce using rule 126 (alpha_lower -> k .)
    G               reduce using rule 126 (alpha_lower -> k .)
    H               reduce using rule 126 (alpha_lower -> k .)
    I               reduce using rule 126 (alpha_lower -> k .)
    J               reduce using rule 126 (alpha_lower -> k .)
    K               reduce using rule 126 (alpha_lower -> k .)
    L               reduce using rule 126 (alpha_lower -> k .)
    M               reduce using rule 126 (alpha_lower -> k .)
    N               reduce using rule 126 (alpha_lower -> k .)
    O               reduce using rule 126 (alpha_lower -> k .)
    P               reduce using rule 126 (alpha_lower -> k .)
    Q               reduce using rule 126 (alpha_lower -> k .)
    R               reduce using rule 126 (alpha_lower -> k .)
    S               reduce using rule 126 (alpha_lower -> k .)
    T               reduce using rule 126 (alpha_lower -> k .)
    U               reduce using rule 126 (alpha_lower -> k .)
    V               reduce using rule 126 (alpha_lower -> k .)
    W               reduce using rule 126 (alpha_lower -> k .)
    X               reduce using rule 126 (alpha_lower -> k .)
    Y               reduce using rule 126 (alpha_lower -> k .)
    Z               reduce using rule 126 (alpha_lower -> k .)
    |               reduce using rule 126 (alpha_lower -> k .)
    ]               reduce using rule 126 (alpha_lower -> k .)
    -               reduce using rule 126 (alpha_lower -> k .)
    ^               reduce using rule 126 (alpha_lower -> k .)
    $end            reduce using rule 126 (alpha_lower -> k .)


state 81

    (146) alpha_upper -> E .

    -               reduce using rule 146 (alpha_upper -> E .)
    !               reduce using rule 146 (alpha_upper -> E .)
    "               reduce using rule 146 (alpha_upper -> E .)
    #               reduce using rule 146 (alpha_upper -> E .)
    $               reduce using rule 146 (alpha_upper -> E .)
    %               reduce using rule 146 (alpha_upper -> E .)
    &               reduce using rule 146 (alpha_upper -> E .)
    '               reduce using rule 146 (alpha_upper -> E .)
    (               reduce using rule 146 (alpha_upper -> E .)
    )               reduce using rule 146 (alpha_upper -> E .)
    *               reduce using rule 146 (alpha_upper -> E .)
    +               reduce using rule 146 (alpha_upper -> E .)
    ,               reduce using rule 146 (alpha_upper -> E .)
    .               reduce using rule 146 (alpha_upper -> E .)
    /               reduce using rule 146 (alpha_upper -> E .)
    :               reduce using rule 146 (alpha_upper -> E .)
    ;               reduce using rule 146 (alpha_upper -> E .)
    <               reduce using rule 146 (alpha_upper -> E .)
    =               reduce using rule 146 (alpha_upper -> E .)
    >               reduce using rule 146 (alpha_upper -> E .)
    ?               reduce using rule 146 (alpha_upper -> E .)
    @               reduce using rule 146 (alpha_upper -> E .)
    [               reduce using rule 146 (alpha_upper -> E .)
    \               reduce using rule 146 (alpha_upper -> E .)
    _               reduce using rule 146 (alpha_upper -> E .)
    `               reduce using rule 146 (alpha_upper -> E .)
    {               reduce using rule 146 (alpha_upper -> E .)
    }               reduce using rule 146 (alpha_upper -> E .)
    ~               reduce using rule 146 (alpha_upper -> E .)
    ESCAPED         reduce using rule 146 (alpha_upper -> E .)
    DIGIT           reduce using rule 146 (alpha_upper -> E .)
    OTHER           reduce using rule 146 (alpha_upper -> E .)
    a               reduce using rule 146 (alpha_upper -> E .)
    b               reduce using rule 146 (alpha_upper -> E .)
    c               reduce using rule 146 (alpha_upper -> E .)
    d               reduce using rule 146 (alpha_upper -> E .)
    e               reduce using rule 146 (alpha_upper -> E .)
    f               reduce using rule 146 (alpha_upper -> E .)
    g               reduce using rule 146 (alpha_upper -> E .)
    h               reduce using rule 146 (alpha_upper -> E .)
    i               reduce using rule 146 (alpha_upper -> E .)
    j               reduce using rule 146 (alpha_upper -> E .)
    k               reduce using rule 146 (alpha_upper -> E .)
    l               reduce using rule 146 (alpha_upper -> E .)
    m               reduce using rule 146 (alpha_upper -> E .)
    n               reduce using rule 146 (alpha_upper -> E .)
    o               reduce using rule 146 (alpha_upper -> E .)
    p               reduce using rule 146 (alpha_upper -> E .)
    q               reduce using rule 146 (alpha_upper -> E .)
    r               reduce using rule 146 (alpha_upper -> E .)
    s               reduce using rule 146 (alpha_upper -> E .)
    t               reduce using rule 146 (alpha_upper -> E .)
    u               reduce using rule 146 (alpha_upper -> E .)
    v               reduce using rule 146 (alpha_upper -> E .)
    w               reduce using rule 146 (alpha_upper -> E .)
    x               reduce using rule 146 (alpha_upper -> E .)
    y               reduce using rule 146 (alpha_upper -> E .)
    z               reduce using rule 146 (alpha_upper -> E .)
    A               reduce using rule 146 (alpha_upper -> E .)
    B               reduce using rule 146 (alpha_upper -> E .)
    C               reduce using rule 146 (alpha_upper -> E .)
    D               reduce using rule 146 (alpha_upper -> E .)
    E               reduce using rule 146 (alpha_upper -> E .)
    F               reduce using rule 146 (alpha_upper -> E .)
    G               reduce using rule 146 (alpha_upper -> E .)
    H               reduce using rule 146 (alpha_upper -> E .)
    I               reduce using rule 146 (alpha_upper -> E .)
    J               reduce using rule 146 (alpha_upper -> E .)
    K               reduce using rule 146 (alpha_upper -> E .)
    L               reduce using rule 146 (alpha_upper -> E .)
    M               reduce using rule 146 (alpha_upper -> E .)
    N               reduce using rule 146 (alpha_upper -> E .)
    O               reduce using rule 146 (alpha_upper -> E .)
    P               reduce using rule 146 (alpha_upper -> E .)
    Q               reduce using rule 146 (alpha_upper -> E .)
    R               reduce using rule 146 (alpha_upper -> E .)
    S               reduce using rule 146 (alpha_upper -> E .)
    T               reduce using rule 146 (alpha_upper -> E .)
    U               reduce using rule 146 (alpha_upper -> E .)
    V               reduce using rule 146 (alpha_upper -> E .)
    W               reduce using rule 146 (alpha_upper -> E .)
    X               reduce using rule 146 (alpha_upper -> E .)
    Y               reduce using rule 146 (alpha_upper -> E .)
    Z               reduce using rule 146 (alpha_upper -> E .)
    |               reduce using rule 146 (alpha_upper -> E .)
    ]               reduce using rule 146 (alpha_upper -> E .)
    ^               reduce using rule 146 (alpha_upper -> E .)
    $end            reduce using rule 146 (alpha_upper -> E .)


state 82

    (132) alpha_lower -> q .

    !               reduce using rule 132 (alpha_lower -> q .)
    "               reduce using rule 132 (alpha_lower -> q .)
    #               reduce using rule 132 (alpha_lower -> q .)
    $               reduce using rule 132 (alpha_lower -> q .)
    %               reduce using rule 132 (alpha_lower -> q .)
    &               reduce using rule 132 (alpha_lower -> q .)
    '               reduce using rule 132 (alpha_lower -> q .)
    (               reduce using rule 132 (alpha_lower -> q .)
    )               reduce using rule 132 (alpha_lower -> q .)
    *               reduce using rule 132 (alpha_lower -> q .)
    +               reduce using rule 132 (alpha_lower -> q .)
    ,               reduce using rule 132 (alpha_lower -> q .)
    .               reduce using rule 132 (alpha_lower -> q .)
    /               reduce using rule 132 (alpha_lower -> q .)
    :               reduce using rule 132 (alpha_lower -> q .)
    ;               reduce using rule 132 (alpha_lower -> q .)
    <               reduce using rule 132 (alpha_lower -> q .)
    =               reduce using rule 132 (alpha_lower -> q .)
    >               reduce using rule 132 (alpha_lower -> q .)
    ?               reduce using rule 132 (alpha_lower -> q .)
    @               reduce using rule 132 (alpha_lower -> q .)
    [               reduce using rule 132 (alpha_lower -> q .)
    \               reduce using rule 132 (alpha_lower -> q .)
    _               reduce using rule 132 (alpha_lower -> q .)
    `               reduce using rule 132 (alpha_lower -> q .)
    {               reduce using rule 132 (alpha_lower -> q .)
    }               reduce using rule 132 (alpha_lower -> q .)
    ~               reduce using rule 132 (alpha_lower -> q .)
    ESCAPED         reduce using rule 132 (alpha_lower -> q .)
    DIGIT           reduce using rule 132 (alpha_lower -> q .)
    OTHER           reduce using rule 132 (alpha_lower -> q .)
    a               reduce using rule 132 (alpha_lower -> q .)
    b               reduce using rule 132 (alpha_lower -> q .)
    c               reduce using rule 132 (alpha_lower -> q .)
    d               reduce using rule 132 (alpha_lower -> q .)
    e               reduce using rule 132 (alpha_lower -> q .)
    f               reduce using rule 132 (alpha_lower -> q .)
    g               reduce using rule 132 (alpha_lower -> q .)
    h               reduce using rule 132 (alpha_lower -> q .)
    i               reduce using rule 132 (alpha_lower -> q .)
    j               reduce using rule 132 (alpha_lower -> q .)
    k               reduce using rule 132 (alpha_lower -> q .)
    l               reduce using rule 132 (alpha_lower -> q .)
    m               reduce using rule 132 (alpha_lower -> q .)
    n               reduce using rule 132 (alpha_lower -> q .)
    o               reduce using rule 132 (alpha_lower -> q .)
    p               reduce using rule 132 (alpha_lower -> q .)
    q               reduce using rule 132 (alpha_lower -> q .)
    r               reduce using rule 132 (alpha_lower -> q .)
    s               reduce using rule 132 (alpha_lower -> q .)
    t               reduce using rule 132 (alpha_lower -> q .)
    u               reduce using rule 132 (alpha_lower -> q .)
    v               reduce using rule 132 (alpha_lower -> q .)
    w               reduce using rule 132 (alpha_lower -> q .)
    x               reduce using rule 132 (alpha_lower -> q .)
    y               reduce using rule 132 (alpha_lower -> q .)
    z               reduce using rule 132 (alpha_lower -> q .)
    A               reduce using rule 132 (alpha_lower -> q .)
    B               reduce using rule 132 (alpha_lower -> q .)
    C               reduce using rule 132 (alpha_lower -> q .)
    D               reduce using rule 132 (alpha_lower -> q .)
    E               reduce using rule 132 (alpha_lower -> q .)
    F               reduce using rule 132 (alpha_lower -> q .)
    G               reduce using rule 132 (alpha_lower -> q .)
    H               reduce using rule 132 (alpha_lower -> q .)
    I               reduce using rule 132 (alpha_lower -> q .)
    J               reduce using rule 132 (alpha_lower -> q .)
    K               reduce using rule 132 (alpha_lower -> q .)
    L               reduce using rule 132 (alpha_lower -> q .)
    M               reduce using rule 132 (alpha_lower -> q .)
    N               reduce using rule 132 (alpha_lower -> q .)
    O               reduce using rule 132 (alpha_lower -> q .)
    P               reduce using rule 132 (alpha_lower -> q .)
    Q               reduce using rule 132 (alpha_lower -> q .)
    R               reduce using rule 132 (alpha_lower -> q .)
    S               reduce using rule 132 (alpha_lower -> q .)
    T               reduce using rule 132 (alpha_lower -> q .)
    U               reduce using rule 132 (alpha_lower -> q .)
    V               reduce using rule 132 (alpha_lower -> q .)
    W               reduce using rule 132 (alpha_lower -> q .)
    X               reduce using rule 132 (alpha_lower -> q .)
    Y               reduce using rule 132 (alpha_lower -> q .)
    Z               reduce using rule 132 (alpha_lower -> q .)
    |               reduce using rule 132 (alpha_lower -> q .)
    ]               reduce using rule 132 (alpha_lower -> q .)
    -               reduce using rule 132 (alpha_lower -> q .)
    ^               reduce using rule 132 (alpha_lower -> q .)
    $end            reduce using rule 132 (alpha_lower -> q .)


state 83

    (127) alpha_lower -> l .

    !               reduce using rule 127 (alpha_lower -> l .)
    "               reduce using rule 127 (alpha_lower -> l .)
    #               reduce using rule 127 (alpha_lower -> l .)
    $               reduce using rule 127 (alpha_lower -> l .)
    %               reduce using rule 127 (alpha_lower -> l .)
    &               reduce using rule 127 (alpha_lower -> l .)
    '               reduce using rule 127 (alpha_lower -> l .)
    (               reduce using rule 127 (alpha_lower -> l .)
    )               reduce using rule 127 (alpha_lower -> l .)
    *               reduce using rule 127 (alpha_lower -> l .)
    +               reduce using rule 127 (alpha_lower -> l .)
    ,               reduce using rule 127 (alpha_lower -> l .)
    .               reduce using rule 127 (alpha_lower -> l .)
    /               reduce using rule 127 (alpha_lower -> l .)
    :               reduce using rule 127 (alpha_lower -> l .)
    ;               reduce using rule 127 (alpha_lower -> l .)
    <               reduce using rule 127 (alpha_lower -> l .)
    =               reduce using rule 127 (alpha_lower -> l .)
    >               reduce using rule 127 (alpha_lower -> l .)
    ?               reduce using rule 127 (alpha_lower -> l .)
    @               reduce using rule 127 (alpha_lower -> l .)
    [               reduce using rule 127 (alpha_lower -> l .)
    \               reduce using rule 127 (alpha_lower -> l .)
    _               reduce using rule 127 (alpha_lower -> l .)
    `               reduce using rule 127 (alpha_lower -> l .)
    {               reduce using rule 127 (alpha_lower -> l .)
    }               reduce using rule 127 (alpha_lower -> l .)
    ~               reduce using rule 127 (alpha_lower -> l .)
    ESCAPED         reduce using rule 127 (alpha_lower -> l .)
    DIGIT           reduce using rule 127 (alpha_lower -> l .)
    OTHER           reduce using rule 127 (alpha_lower -> l .)
    a               reduce using rule 127 (alpha_lower -> l .)
    b               reduce using rule 127 (alpha_lower -> l .)
    c               reduce using rule 127 (alpha_lower -> l .)
    d               reduce using rule 127 (alpha_lower -> l .)
    e               reduce using rule 127 (alpha_lower -> l .)
    f               reduce using rule 127 (alpha_lower -> l .)
    g               reduce using rule 127 (alpha_lower -> l .)
    h               reduce using rule 127 (alpha_lower -> l .)
    i               reduce using rule 127 (alpha_lower -> l .)
    j               reduce using rule 127 (alpha_lower -> l .)
    k               reduce using rule 127 (alpha_lower -> l .)
    l               reduce using rule 127 (alpha_lower -> l .)
    m               reduce using rule 127 (alpha_lower -> l .)
    n               reduce using rule 127 (alpha_lower -> l .)
    o               reduce using rule 127 (alpha_lower -> l .)
    p               reduce using rule 127 (alpha_lower -> l .)
    q               reduce using rule 127 (alpha_lower -> l .)
    r               reduce using rule 127 (alpha_lower -> l .)
    s               reduce using rule 127 (alpha_lower -> l .)
    t               reduce using rule 127 (alpha_lower -> l .)
    u               reduce using rule 127 (alpha_lower -> l .)
    v               reduce using rule 127 (alpha_lower -> l .)
    w               reduce using rule 127 (alpha_lower -> l .)
    x               reduce using rule 127 (alpha_lower -> l .)
    y               reduce using rule 127 (alpha_lower -> l .)
    z               reduce using rule 127 (alpha_lower -> l .)
    A               reduce using rule 127 (alpha_lower -> l .)
    B               reduce using rule 127 (alpha_lower -> l .)
    C               reduce using rule 127 (alpha_lower -> l .)
    D               reduce using rule 127 (alpha_lower -> l .)
    E               reduce using rule 127 (alpha_lower -> l .)
    F               reduce using rule 127 (alpha_lower -> l .)
    G               reduce using rule 127 (alpha_lower -> l .)
    H               reduce using rule 127 (alpha_lower -> l .)
    I               reduce using rule 127 (alpha_lower -> l .)
    J               reduce using rule 127 (alpha_lower -> l .)
    K               reduce using rule 127 (alpha_lower -> l .)
    L               reduce using rule 127 (alpha_lower -> l .)
    M               reduce using rule 127 (alpha_lower -> l .)
    N               reduce using rule 127 (alpha_lower -> l .)
    O               reduce using rule 127 (alpha_lower -> l .)
    P               reduce using rule 127 (alpha_lower -> l .)
    Q               reduce using rule 127 (alpha_lower -> l .)
    R               reduce using rule 127 (alpha_lower -> l .)
    S               reduce using rule 127 (alpha_lower -> l .)
    T               reduce using rule 127 (alpha_lower -> l .)
    U               reduce using rule 127 (alpha_lower -> l .)
    V               reduce using rule 127 (alpha_lower -> l .)
    W               reduce using rule 127 (alpha_lower -> l .)
    X               reduce using rule 127 (alpha_lower -> l .)
    Y               reduce using rule 127 (alpha_lower -> l .)
    Z               reduce using rule 127 (alpha_lower -> l .)
    |               reduce using rule 127 (alpha_lower -> l .)
    ]               reduce using rule 127 (alpha_lower -> l .)
    -               reduce using rule 127 (alpha_lower -> l .)
    ^               reduce using rule 127 (alpha_lower -> l .)
    $end            reduce using rule 127 (alpha_lower -> l .)


state 84

    (151) alpha_upper -> J .

    -               reduce using rule 151 (alpha_upper -> J .)
    !               reduce using rule 151 (alpha_upper -> J .)
    "               reduce using rule 151 (alpha_upper -> J .)
    #               reduce using rule 151 (alpha_upper -> J .)
    $               reduce using rule 151 (alpha_upper -> J .)
    %               reduce using rule 151 (alpha_upper -> J .)
    &               reduce using rule 151 (alpha_upper -> J .)
    '               reduce using rule 151 (alpha_upper -> J .)
    (               reduce using rule 151 (alpha_upper -> J .)
    )               reduce using rule 151 (alpha_upper -> J .)
    *               reduce using rule 151 (alpha_upper -> J .)
    +               reduce using rule 151 (alpha_upper -> J .)
    ,               reduce using rule 151 (alpha_upper -> J .)
    .               reduce using rule 151 (alpha_upper -> J .)
    /               reduce using rule 151 (alpha_upper -> J .)
    :               reduce using rule 151 (alpha_upper -> J .)
    ;               reduce using rule 151 (alpha_upper -> J .)
    <               reduce using rule 151 (alpha_upper -> J .)
    =               reduce using rule 151 (alpha_upper -> J .)
    >               reduce using rule 151 (alpha_upper -> J .)
    ?               reduce using rule 151 (alpha_upper -> J .)
    @               reduce using rule 151 (alpha_upper -> J .)
    [               reduce using rule 151 (alpha_upper -> J .)
    \               reduce using rule 151 (alpha_upper -> J .)
    _               reduce using rule 151 (alpha_upper -> J .)
    `               reduce using rule 151 (alpha_upper -> J .)
    {               reduce using rule 151 (alpha_upper -> J .)
    }               reduce using rule 151 (alpha_upper -> J .)
    ~               reduce using rule 151 (alpha_upper -> J .)
    ESCAPED         reduce using rule 151 (alpha_upper -> J .)
    DIGIT           reduce using rule 151 (alpha_upper -> J .)
    OTHER           reduce using rule 151 (alpha_upper -> J .)
    a               reduce using rule 151 (alpha_upper -> J .)
    b               reduce using rule 151 (alpha_upper -> J .)
    c               reduce using rule 151 (alpha_upper -> J .)
    d               reduce using rule 151 (alpha_upper -> J .)
    e               reduce using rule 151 (alpha_upper -> J .)
    f               reduce using rule 151 (alpha_upper -> J .)
    g               reduce using rule 151 (alpha_upper -> J .)
    h               reduce using rule 151 (alpha_upper -> J .)
    i               reduce using rule 151 (alpha_upper -> J .)
    j               reduce using rule 151 (alpha_upper -> J .)
    k               reduce using rule 151 (alpha_upper -> J .)
    l               reduce using rule 151 (alpha_upper -> J .)
    m               reduce using rule 151 (alpha_upper -> J .)
    n               reduce using rule 151 (alpha_upper -> J .)
    o               reduce using rule 151 (alpha_upper -> J .)
    p               reduce using rule 151 (alpha_upper -> J .)
    q               reduce using rule 151 (alpha_upper -> J .)
    r               reduce using rule 151 (alpha_upper -> J .)
    s               reduce using rule 151 (alpha_upper -> J .)
    t               reduce using rule 151 (alpha_upper -> J .)
    u               reduce using rule 151 (alpha_upper -> J .)
    v               reduce using rule 151 (alpha_upper -> J .)
    w               reduce using rule 151 (alpha_upper -> J .)
    x               reduce using rule 151 (alpha_upper -> J .)
    y               reduce using rule 151 (alpha_upper -> J .)
    z               reduce using rule 151 (alpha_upper -> J .)
    A               reduce using rule 151 (alpha_upper -> J .)
    B               reduce using rule 151 (alpha_upper -> J .)
    C               reduce using rule 151 (alpha_upper -> J .)
    D               reduce using rule 151 (alpha_upper -> J .)
    E               reduce using rule 151 (alpha_upper -> J .)
    F               reduce using rule 151 (alpha_upper -> J .)
    G               reduce using rule 151 (alpha_upper -> J .)
    H               reduce using rule 151 (alpha_upper -> J .)
    I               reduce using rule 151 (alpha_upper -> J .)
    J               reduce using rule 151 (alpha_upper -> J .)
    K               reduce using rule 151 (alpha_upper -> J .)
    L               reduce using rule 151 (alpha_upper -> J .)
    M               reduce using rule 151 (alpha_upper -> J .)
    N               reduce using rule 151 (alpha_upper -> J .)
    O               reduce using rule 151 (alpha_upper -> J .)
    P               reduce using rule 151 (alpha_upper -> J .)
    Q               reduce using rule 151 (alpha_upper -> J .)
    R               reduce using rule 151 (alpha_upper -> J .)
    S               reduce using rule 151 (alpha_upper -> J .)
    T               reduce using rule 151 (alpha_upper -> J .)
    U               reduce using rule 151 (alpha_upper -> J .)
    V               reduce using rule 151 (alpha_upper -> J .)
    W               reduce using rule 151 (alpha_upper -> J .)
    X               reduce using rule 151 (alpha_upper -> J .)
    Y               reduce using rule 151 (alpha_upper -> J .)
    Z               reduce using rule 151 (alpha_upper -> J .)
    |               reduce using rule 151 (alpha_upper -> J .)
    ]               reduce using rule 151 (alpha_upper -> J .)
    ^               reduce using rule 151 (alpha_upper -> J .)
    $end            reduce using rule 151 (alpha_upper -> J .)


state 85

    (109) command -> % .

    *               reduce using rule 109 (command -> % .)
    +               reduce using rule 109 (command -> % .)
    ?               reduce using rule 109 (command -> % .)
    {               reduce using rule 109 (command -> % .)
    (               reduce using rule 109 (command -> % .)
    ^               reduce using rule 109 (command -> % .)
    >               reduce using rule 109 (command -> % .)
    <               reduce using rule 109 (command -> % .)
    /               reduce using rule 109 (command -> % .)
    \               reduce using rule 109 (command -> % .)
    #               reduce using rule 109 (command -> % .)
    %               reduce using rule 109 (command -> % .)
    ESCAPED         reduce using rule 109 (command -> % .)
    DIGIT           reduce using rule 109 (command -> % .)
    OTHER           reduce using rule 109 (command -> % .)
    [               reduce using rule 109 (command -> % .)
    .               reduce using rule 109 (command -> % .)
    ,               reduce using rule 109 (command -> % .)
    :               reduce using rule 109 (command -> % .)
    ;               reduce using rule 109 (command -> % .)
    $               reduce using rule 109 (command -> % .)
    `               reduce using rule 109 (command -> % .)
    a               reduce using rule 109 (command -> % .)
    b               reduce using rule 109 (command -> % .)
    c               reduce using rule 109 (command -> % .)
    d               reduce using rule 109 (command -> % .)
    e               reduce using rule 109 (command -> % .)
    f               reduce using rule 109 (command -> % .)
    g               reduce using rule 109 (command -> % .)
    h               reduce using rule 109 (command -> % .)
    i               reduce using rule 109 (command -> % .)
    j               reduce using rule 109 (command -> % .)
    k               reduce using rule 109 (command -> % .)
    l               reduce using rule 109 (command -> % .)
    m               reduce using rule 109 (command -> % .)
    n               reduce using rule 109 (command -> % .)
    o               reduce using rule 109 (command -> % .)
    p               reduce using rule 109 (command -> % .)
    q               reduce using rule 109 (command -> % .)
    r               reduce using rule 109 (command -> % .)
    s               reduce using rule 109 (command -> % .)
    t               reduce using rule 109 (command -> % .)
    u               reduce using rule 109 (command -> % .)
    v               reduce using rule 109 (command -> % .)
    w               reduce using rule 109 (command -> % .)
    x               reduce using rule 109 (command -> % .)
    y               reduce using rule 109 (command -> % .)
    z               reduce using rule 109 (command -> % .)
    A               reduce using rule 109 (command -> % .)
    B               reduce using rule 109 (command -> % .)
    C               reduce using rule 109 (command -> % .)
    D               reduce using rule 109 (command -> % .)
    E               reduce using rule 109 (command -> % .)
    F               reduce using rule 109 (command -> % .)
    G               reduce using rule 109 (command -> % .)
    H               reduce using rule 109 (command -> % .)
    I               reduce using rule 109 (command -> % .)
    J               reduce using rule 109 (command -> % .)
    K               reduce using rule 109 (command -> % .)
    L               reduce using rule 109 (command -> % .)
    M               reduce using rule 109 (command -> % .)
    N               reduce using rule 109 (command -> % .)
    O               reduce using rule 109 (command -> % .)
    P               reduce using rule 109 (command -> % .)
    Q               reduce using rule 109 (command -> % .)
    R               reduce using rule 109 (command -> % .)
    S               reduce using rule 109 (command -> % .)
    T               reduce using rule 109 (command -> % .)
    U               reduce using rule 109 (command -> % .)
    V               reduce using rule 109 (command -> % .)
    W               reduce using rule 109 (command -> % .)
    X               reduce using rule 109 (command -> % .)
    Y               reduce using rule 109 (command -> % .)
    Z               reduce using rule 109 (command -> % .)
    |               reduce using rule 109 (command -> % .)
    $end            reduce using rule 109 (command -> % .)
    )               reduce using rule 109 (command -> % .)


state 86

    (111) literal -> alpha .

    -               reduce using rule 111 (literal -> alpha .)
    !               reduce using rule 111 (literal -> alpha .)
    "               reduce using rule 111 (literal -> alpha .)
    #               reduce using rule 111 (literal -> alpha .)
    $               reduce using rule 111 (literal -> alpha .)
    %               reduce using rule 111 (literal -> alpha .)
    &               reduce using rule 111 (literal -> alpha .)
    '               reduce using rule 111 (literal -> alpha .)
    (               reduce using rule 111 (literal -> alpha .)
    )               reduce using rule 111 (literal -> alpha .)
    *               reduce using rule 111 (literal -> alpha .)
    +               reduce using rule 111 (literal -> alpha .)
    ,               reduce using rule 111 (literal -> alpha .)
    .               reduce using rule 111 (literal -> alpha .)
    /               reduce using rule 111 (literal -> alpha .)
    :               reduce using rule 111 (literal -> alpha .)
    ;               reduce using rule 111 (literal -> alpha .)
    <               reduce using rule 111 (literal -> alpha .)
    =               reduce using rule 111 (literal -> alpha .)
    >               reduce using rule 111 (literal -> alpha .)
    ?               reduce using rule 111 (literal -> alpha .)
    @               reduce using rule 111 (literal -> alpha .)
    [               reduce using rule 111 (literal -> alpha .)
    \               reduce using rule 111 (literal -> alpha .)
    _               reduce using rule 111 (literal -> alpha .)
    `               reduce using rule 111 (literal -> alpha .)
    {               reduce using rule 111 (literal -> alpha .)
    }               reduce using rule 111 (literal -> alpha .)
    ~               reduce using rule 111 (literal -> alpha .)
    ESCAPED         reduce using rule 111 (literal -> alpha .)
    DIGIT           reduce using rule 111 (literal -> alpha .)
    OTHER           reduce using rule 111 (literal -> alpha .)
    a               reduce using rule 111 (literal -> alpha .)
    b               reduce using rule 111 (literal -> alpha .)
    c               reduce using rule 111 (literal -> alpha .)
    d               reduce using rule 111 (literal -> alpha .)
    e               reduce using rule 111 (literal -> alpha .)
    f               reduce using rule 111 (literal -> alpha .)
    g               reduce using rule 111 (literal -> alpha .)
    h               reduce using rule 111 (literal -> alpha .)
    i               reduce using rule 111 (literal -> alpha .)
    j               reduce using rule 111 (literal -> alpha .)
    k               reduce using rule 111 (literal -> alpha .)
    l               reduce using rule 111 (literal -> alpha .)
    m               reduce using rule 111 (literal -> alpha .)
    n               reduce using rule 111 (literal -> alpha .)
    o               reduce using rule 111 (literal -> alpha .)
    p               reduce using rule 111 (literal -> alpha .)
    q               reduce using rule 111 (literal -> alpha .)
    r               reduce using rule 111 (literal -> alpha .)
    s               reduce using rule 111 (literal -> alpha .)
    t               reduce using rule 111 (literal -> alpha .)
    u               reduce using rule 111 (literal -> alpha .)
    v               reduce using rule 111 (literal -> alpha .)
    w               reduce using rule 111 (literal -> alpha .)
    x               reduce using rule 111 (literal -> alpha .)
    y               reduce using rule 111 (literal -> alpha .)
    z               reduce using rule 111 (literal -> alpha .)
    A               reduce using rule 111 (literal -> alpha .)
    B               reduce using rule 111 (literal -> alpha .)
    C               reduce using rule 111 (literal -> alpha .)
    D               reduce using rule 111 (literal -> alpha .)
    E               reduce using rule 111 (literal -> alpha .)
    F               reduce using rule 111 (literal -> alpha .)
    G               reduce using rule 111 (literal -> alpha .)
    H               reduce using rule 111 (literal -> alpha .)
    I               reduce using rule 111 (literal -> alpha .)
    J               reduce using rule 111 (literal -> alpha .)
    K               reduce using rule 111 (literal -> alpha .)
    L               reduce using rule 111 (literal -> alpha .)
    M               reduce using rule 111 (literal -> alpha .)
    N               reduce using rule 111 (literal -> alpha .)
    O               reduce using rule 111 (literal -> alpha .)
    P               reduce using rule 111 (literal -> alpha .)
    Q               reduce using rule 111 (literal -> alpha .)
    R               reduce using rule 111 (literal -> alpha .)
    S               reduce using rule 111 (literal -> alpha .)
    T               reduce using rule 111 (literal -> alpha .)
    U               reduce using rule 111 (literal -> alpha .)
    V               reduce using rule 111 (literal -> alpha .)
    W               reduce using rule 111 (literal -> alpha .)
    X               reduce using rule 111 (literal -> alpha .)
    Y               reduce using rule 111 (literal -> alpha .)
    Z               reduce using rule 111 (literal -> alpha .)
    ]               reduce using rule 111 (literal -> alpha .)
    |               reduce using rule 111 (literal -> alpha .)
    ^               reduce using rule 111 (literal -> alpha .)
    $end            reduce using rule 111 (literal -> alpha .)


state 87

    (11) basequantifier -> asterisk .

    ?               reduce using rule 11 (basequantifier -> asterisk .)
    (               reduce using rule 11 (basequantifier -> asterisk .)
    ^               reduce using rule 11 (basequantifier -> asterisk .)
    >               reduce using rule 11 (basequantifier -> asterisk .)
    <               reduce using rule 11 (basequantifier -> asterisk .)
    /               reduce using rule 11 (basequantifier -> asterisk .)
    \               reduce using rule 11 (basequantifier -> asterisk .)
    #               reduce using rule 11 (basequantifier -> asterisk .)
    %               reduce using rule 11 (basequantifier -> asterisk .)
    ESCAPED         reduce using rule 11 (basequantifier -> asterisk .)
    DIGIT           reduce using rule 11 (basequantifier -> asterisk .)
    OTHER           reduce using rule 11 (basequantifier -> asterisk .)
    [               reduce using rule 11 (basequantifier -> asterisk .)
    .               reduce using rule 11 (basequantifier -> asterisk .)
    ,               reduce using rule 11 (basequantifier -> asterisk .)
    :               reduce using rule 11 (basequantifier -> asterisk .)
    ;               reduce using rule 11 (basequantifier -> asterisk .)
    $               reduce using rule 11 (basequantifier -> asterisk .)
    `               reduce using rule 11 (basequantifier -> asterisk .)
    a               reduce using rule 11 (basequantifier -> asterisk .)
    b               reduce using rule 11 (basequantifier -> asterisk .)
    c               reduce using rule 11 (basequantifier -> asterisk .)
    d               reduce using rule 11 (basequantifier -> asterisk .)
    e               reduce using rule 11 (basequantifier -> asterisk .)
    f               reduce using rule 11 (basequantifier -> asterisk .)
    g               reduce using rule 11 (basequantifier -> asterisk .)
    h               reduce using rule 11 (basequantifier -> asterisk .)
    i               reduce using rule 11 (basequantifier -> asterisk .)
    j               reduce using rule 11 (basequantifier -> asterisk .)
    k               reduce using rule 11 (basequantifier -> asterisk .)
    l               reduce using rule 11 (basequantifier -> asterisk .)
    m               reduce using rule 11 (basequantifier -> asterisk .)
    n               reduce using rule 11 (basequantifier -> asterisk .)
    o               reduce using rule 11 (basequantifier -> asterisk .)
    p               reduce using rule 11 (basequantifier -> asterisk .)
    q               reduce using rule 11 (basequantifier -> asterisk .)
    r               reduce using rule 11 (basequantifier -> asterisk .)
    s               reduce using rule 11 (basequantifier -> asterisk .)
    t               reduce using rule 11 (basequantifier -> asterisk .)
    u               reduce using rule 11 (basequantifier -> asterisk .)
    v               reduce using rule 11 (basequantifier -> asterisk .)
    w               reduce using rule 11 (basequantifier -> asterisk .)
    x               reduce using rule 11 (basequantifier -> asterisk .)
    y               reduce using rule 11 (basequantifier -> asterisk .)
    z               reduce using rule 11 (basequantifier -> asterisk .)
    A               reduce using rule 11 (basequantifier -> asterisk .)
    B               reduce using rule 11 (basequantifier -> asterisk .)
    C               reduce using rule 11 (basequantifier -> asterisk .)
    D               reduce using rule 11 (basequantifier -> asterisk .)
    E               reduce using rule 11 (basequantifier -> asterisk .)
    F               reduce using rule 11 (basequantifier -> asterisk .)
    G               reduce using rule 11 (basequantifier -> asterisk .)
    H               reduce using rule 11 (basequantifier -> asterisk .)
    I               reduce using rule 11 (basequantifier -> asterisk .)
    J               reduce using rule 11 (basequantifier -> asterisk .)
    K               reduce using rule 11 (basequantifier -> asterisk .)
    L               reduce using rule 11 (basequantifier -> asterisk .)
    M               reduce using rule 11 (basequantifier -> asterisk .)
    N               reduce using rule 11 (basequantifier -> asterisk .)
    O               reduce using rule 11 (basequantifier -> asterisk .)
    P               reduce using rule 11 (basequantifier -> asterisk .)
    Q               reduce using rule 11 (basequantifier -> asterisk .)
    R               reduce using rule 11 (basequantifier -> asterisk .)
    S               reduce using rule 11 (basequantifier -> asterisk .)
    T               reduce using rule 11 (basequantifier -> asterisk .)
    U               reduce using rule 11 (basequantifier -> asterisk .)
    V               reduce using rule 11 (basequantifier -> asterisk .)
    W               reduce using rule 11 (basequantifier -> asterisk .)
    X               reduce using rule 11 (basequantifier -> asterisk .)
    Y               reduce using rule 11 (basequantifier -> asterisk .)
    Z               reduce using rule 11 (basequantifier -> asterisk .)
    |               reduce using rule 11 (basequantifier -> asterisk .)
    )               reduce using rule 11 (basequantifier -> asterisk .)
    $end            reduce using rule 11 (basequantifier -> asterisk .)


state 88

    (114) alpha -> alpha_lower .

    *               reduce using rule 114 (alpha -> alpha_lower .)
    +               reduce using rule 114 (alpha -> alpha_lower .)
    ?               reduce using rule 114 (alpha -> alpha_lower .)
    {               reduce using rule 114 (alpha -> alpha_lower .)
    (               reduce using rule 114 (alpha -> alpha_lower .)
    ^               reduce using rule 114 (alpha -> alpha_lower .)
    >               reduce using rule 114 (alpha -> alpha_lower .)
    <               reduce using rule 114 (alpha -> alpha_lower .)
    /               reduce using rule 114 (alpha -> alpha_lower .)
    \               reduce using rule 114 (alpha -> alpha_lower .)
    #               reduce using rule 114 (alpha -> alpha_lower .)
    %               reduce using rule 114 (alpha -> alpha_lower .)
    ESCAPED         reduce using rule 114 (alpha -> alpha_lower .)
    DIGIT           reduce using rule 114 (alpha -> alpha_lower .)
    OTHER           reduce using rule 114 (alpha -> alpha_lower .)
    [               reduce using rule 114 (alpha -> alpha_lower .)
    .               reduce using rule 114 (alpha -> alpha_lower .)
    ,               reduce using rule 114 (alpha -> alpha_lower .)
    :               reduce using rule 114 (alpha -> alpha_lower .)
    ;               reduce using rule 114 (alpha -> alpha_lower .)
    $               reduce using rule 114 (alpha -> alpha_lower .)
    `               reduce using rule 114 (alpha -> alpha_lower .)
    a               reduce using rule 114 (alpha -> alpha_lower .)
    b               reduce using rule 114 (alpha -> alpha_lower .)
    c               reduce using rule 114 (alpha -> alpha_lower .)
    d               reduce using rule 114 (alpha -> alpha_lower .)
    e               reduce using rule 114 (alpha -> alpha_lower .)
    f               reduce using rule 114 (alpha -> alpha_lower .)
    g               reduce using rule 114 (alpha -> alpha_lower .)
    h               reduce using rule 114 (alpha -> alpha_lower .)
    i               reduce using rule 114 (alpha -> alpha_lower .)
    j               reduce using rule 114 (alpha -> alpha_lower .)
    k               reduce using rule 114 (alpha -> alpha_lower .)
    l               reduce using rule 114 (alpha -> alpha_lower .)
    m               reduce using rule 114 (alpha -> alpha_lower .)
    n               reduce using rule 114 (alpha -> alpha_lower .)
    o               reduce using rule 114 (alpha -> alpha_lower .)
    p               reduce using rule 114 (alpha -> alpha_lower .)
    q               reduce using rule 114 (alpha -> alpha_lower .)
    r               reduce using rule 114 (alpha -> alpha_lower .)
    s               reduce using rule 114 (alpha -> alpha_lower .)
    t               reduce using rule 114 (alpha -> alpha_lower .)
    u               reduce using rule 114 (alpha -> alpha_lower .)
    v               reduce using rule 114 (alpha -> alpha_lower .)
    w               reduce using rule 114 (alpha -> alpha_lower .)
    x               reduce using rule 114 (alpha -> alpha_lower .)
    y               reduce using rule 114 (alpha -> alpha_lower .)
    z               reduce using rule 114 (alpha -> alpha_lower .)
    A               reduce using rule 114 (alpha -> alpha_lower .)
    B               reduce using rule 114 (alpha -> alpha_lower .)
    C               reduce using rule 114 (alpha -> alpha_lower .)
    D               reduce using rule 114 (alpha -> alpha_lower .)
    E               reduce using rule 114 (alpha -> alpha_lower .)
    F               reduce using rule 114 (alpha -> alpha_lower .)
    G               reduce using rule 114 (alpha -> alpha_lower .)
    H               reduce using rule 114 (alpha -> alpha_lower .)
    I               reduce using rule 114 (alpha -> alpha_lower .)
    J               reduce using rule 114 (alpha -> alpha_lower .)
    K               reduce using rule 114 (alpha -> alpha_lower .)
    L               reduce using rule 114 (alpha -> alpha_lower .)
    M               reduce using rule 114 (alpha -> alpha_lower .)
    N               reduce using rule 114 (alpha -> alpha_lower .)
    O               reduce using rule 114 (alpha -> alpha_lower .)
    P               reduce using rule 114 (alpha -> alpha_lower .)
    Q               reduce using rule 114 (alpha -> alpha_lower .)
    R               reduce using rule 114 (alpha -> alpha_lower .)
    S               reduce using rule 114 (alpha -> alpha_lower .)
    T               reduce using rule 114 (alpha -> alpha_lower .)
    U               reduce using rule 114 (alpha -> alpha_lower .)
    V               reduce using rule 114 (alpha -> alpha_lower .)
    W               reduce using rule 114 (alpha -> alpha_lower .)
    X               reduce using rule 114 (alpha -> alpha_lower .)
    Y               reduce using rule 114 (alpha -> alpha_lower .)
    Z               reduce using rule 114 (alpha -> alpha_lower .)
    |               reduce using rule 114 (alpha -> alpha_lower .)
    $end            reduce using rule 114 (alpha -> alpha_lower .)
    )               reduce using rule 114 (alpha -> alpha_lower .)
    -               reduce using rule 114 (alpha -> alpha_lower .)
    !               reduce using rule 114 (alpha -> alpha_lower .)
    "               reduce using rule 114 (alpha -> alpha_lower .)
    &               reduce using rule 114 (alpha -> alpha_lower .)
    '               reduce using rule 114 (alpha -> alpha_lower .)
    =               reduce using rule 114 (alpha -> alpha_lower .)
    @               reduce using rule 114 (alpha -> alpha_lower .)
    _               reduce using rule 114 (alpha -> alpha_lower .)
    }               reduce using rule 114 (alpha -> alpha_lower .)
    ~               reduce using rule 114 (alpha -> alpha_lower .)
    ]               reduce using rule 114 (alpha -> alpha_lower .)


state 89

    (156) alpha_upper -> O .

    -               reduce using rule 156 (alpha_upper -> O .)
    !               reduce using rule 156 (alpha_upper -> O .)
    "               reduce using rule 156 (alpha_upper -> O .)
    #               reduce using rule 156 (alpha_upper -> O .)
    $               reduce using rule 156 (alpha_upper -> O .)
    %               reduce using rule 156 (alpha_upper -> O .)
    &               reduce using rule 156 (alpha_upper -> O .)
    '               reduce using rule 156 (alpha_upper -> O .)
    (               reduce using rule 156 (alpha_upper -> O .)
    )               reduce using rule 156 (alpha_upper -> O .)
    *               reduce using rule 156 (alpha_upper -> O .)
    +               reduce using rule 156 (alpha_upper -> O .)
    ,               reduce using rule 156 (alpha_upper -> O .)
    .               reduce using rule 156 (alpha_upper -> O .)
    /               reduce using rule 156 (alpha_upper -> O .)
    :               reduce using rule 156 (alpha_upper -> O .)
    ;               reduce using rule 156 (alpha_upper -> O .)
    <               reduce using rule 156 (alpha_upper -> O .)
    =               reduce using rule 156 (alpha_upper -> O .)
    >               reduce using rule 156 (alpha_upper -> O .)
    ?               reduce using rule 156 (alpha_upper -> O .)
    @               reduce using rule 156 (alpha_upper -> O .)
    [               reduce using rule 156 (alpha_upper -> O .)
    \               reduce using rule 156 (alpha_upper -> O .)
    _               reduce using rule 156 (alpha_upper -> O .)
    `               reduce using rule 156 (alpha_upper -> O .)
    {               reduce using rule 156 (alpha_upper -> O .)
    }               reduce using rule 156 (alpha_upper -> O .)
    ~               reduce using rule 156 (alpha_upper -> O .)
    ESCAPED         reduce using rule 156 (alpha_upper -> O .)
    DIGIT           reduce using rule 156 (alpha_upper -> O .)
    OTHER           reduce using rule 156 (alpha_upper -> O .)
    a               reduce using rule 156 (alpha_upper -> O .)
    b               reduce using rule 156 (alpha_upper -> O .)
    c               reduce using rule 156 (alpha_upper -> O .)
    d               reduce using rule 156 (alpha_upper -> O .)
    e               reduce using rule 156 (alpha_upper -> O .)
    f               reduce using rule 156 (alpha_upper -> O .)
    g               reduce using rule 156 (alpha_upper -> O .)
    h               reduce using rule 156 (alpha_upper -> O .)
    i               reduce using rule 156 (alpha_upper -> O .)
    j               reduce using rule 156 (alpha_upper -> O .)
    k               reduce using rule 156 (alpha_upper -> O .)
    l               reduce using rule 156 (alpha_upper -> O .)
    m               reduce using rule 156 (alpha_upper -> O .)
    n               reduce using rule 156 (alpha_upper -> O .)
    o               reduce using rule 156 (alpha_upper -> O .)
    p               reduce using rule 156 (alpha_upper -> O .)
    q               reduce using rule 156 (alpha_upper -> O .)
    r               reduce using rule 156 (alpha_upper -> O .)
    s               reduce using rule 156 (alpha_upper -> O .)
    t               reduce using rule 156 (alpha_upper -> O .)
    u               reduce using rule 156 (alpha_upper -> O .)
    v               reduce using rule 156 (alpha_upper -> O .)
    w               reduce using rule 156 (alpha_upper -> O .)
    x               reduce using rule 156 (alpha_upper -> O .)
    y               reduce using rule 156 (alpha_upper -> O .)
    z               reduce using rule 156 (alpha_upper -> O .)
    A               reduce using rule 156 (alpha_upper -> O .)
    B               reduce using rule 156 (alpha_upper -> O .)
    C               reduce using rule 156 (alpha_upper -> O .)
    D               reduce using rule 156 (alpha_upper -> O .)
    E               reduce using rule 156 (alpha_upper -> O .)
    F               reduce using rule 156 (alpha_upper -> O .)
    G               reduce using rule 156 (alpha_upper -> O .)
    H               reduce using rule 156 (alpha_upper -> O .)
    I               reduce using rule 156 (alpha_upper -> O .)
    J               reduce using rule 156 (alpha_upper -> O .)
    K               reduce using rule 156 (alpha_upper -> O .)
    L               reduce using rule 156 (alpha_upper -> O .)
    M               reduce using rule 156 (alpha_upper -> O .)
    N               reduce using rule 156 (alpha_upper -> O .)
    O               reduce using rule 156 (alpha_upper -> O .)
    P               reduce using rule 156 (alpha_upper -> O .)
    Q               reduce using rule 156 (alpha_upper -> O .)
    R               reduce using rule 156 (alpha_upper -> O .)
    S               reduce using rule 156 (alpha_upper -> O .)
    T               reduce using rule 156 (alpha_upper -> O .)
    U               reduce using rule 156 (alpha_upper -> O .)
    V               reduce using rule 156 (alpha_upper -> O .)
    W               reduce using rule 156 (alpha_upper -> O .)
    X               reduce using rule 156 (alpha_upper -> O .)
    Y               reduce using rule 156 (alpha_upper -> O .)
    Z               reduce using rule 156 (alpha_upper -> O .)
    |               reduce using rule 156 (alpha_upper -> O .)
    ]               reduce using rule 156 (alpha_upper -> O .)
    ^               reduce using rule 156 (alpha_upper -> O .)
    $end            reduce using rule 156 (alpha_upper -> O .)


state 90

    (131) alpha_lower -> p .

    !               reduce using rule 131 (alpha_lower -> p .)
    "               reduce using rule 131 (alpha_lower -> p .)
    #               reduce using rule 131 (alpha_lower -> p .)
    $               reduce using rule 131 (alpha_lower -> p .)
    %               reduce using rule 131 (alpha_lower -> p .)
    &               reduce using rule 131 (alpha_lower -> p .)
    '               reduce using rule 131 (alpha_lower -> p .)
    (               reduce using rule 131 (alpha_lower -> p .)
    )               reduce using rule 131 (alpha_lower -> p .)
    *               reduce using rule 131 (alpha_lower -> p .)
    +               reduce using rule 131 (alpha_lower -> p .)
    ,               reduce using rule 131 (alpha_lower -> p .)
    .               reduce using rule 131 (alpha_lower -> p .)
    /               reduce using rule 131 (alpha_lower -> p .)
    :               reduce using rule 131 (alpha_lower -> p .)
    ;               reduce using rule 131 (alpha_lower -> p .)
    <               reduce using rule 131 (alpha_lower -> p .)
    =               reduce using rule 131 (alpha_lower -> p .)
    >               reduce using rule 131 (alpha_lower -> p .)
    ?               reduce using rule 131 (alpha_lower -> p .)
    @               reduce using rule 131 (alpha_lower -> p .)
    [               reduce using rule 131 (alpha_lower -> p .)
    \               reduce using rule 131 (alpha_lower -> p .)
    _               reduce using rule 131 (alpha_lower -> p .)
    `               reduce using rule 131 (alpha_lower -> p .)
    {               reduce using rule 131 (alpha_lower -> p .)
    }               reduce using rule 131 (alpha_lower -> p .)
    ~               reduce using rule 131 (alpha_lower -> p .)
    ESCAPED         reduce using rule 131 (alpha_lower -> p .)
    DIGIT           reduce using rule 131 (alpha_lower -> p .)
    OTHER           reduce using rule 131 (alpha_lower -> p .)
    a               reduce using rule 131 (alpha_lower -> p .)
    b               reduce using rule 131 (alpha_lower -> p .)
    c               reduce using rule 131 (alpha_lower -> p .)
    d               reduce using rule 131 (alpha_lower -> p .)
    e               reduce using rule 131 (alpha_lower -> p .)
    f               reduce using rule 131 (alpha_lower -> p .)
    g               reduce using rule 131 (alpha_lower -> p .)
    h               reduce using rule 131 (alpha_lower -> p .)
    i               reduce using rule 131 (alpha_lower -> p .)
    j               reduce using rule 131 (alpha_lower -> p .)
    k               reduce using rule 131 (alpha_lower -> p .)
    l               reduce using rule 131 (alpha_lower -> p .)
    m               reduce using rule 131 (alpha_lower -> p .)
    n               reduce using rule 131 (alpha_lower -> p .)
    o               reduce using rule 131 (alpha_lower -> p .)
    p               reduce using rule 131 (alpha_lower -> p .)
    q               reduce using rule 131 (alpha_lower -> p .)
    r               reduce using rule 131 (alpha_lower -> p .)
    s               reduce using rule 131 (alpha_lower -> p .)
    t               reduce using rule 131 (alpha_lower -> p .)
    u               reduce using rule 131 (alpha_lower -> p .)
    v               reduce using rule 131 (alpha_lower -> p .)
    w               reduce using rule 131 (alpha_lower -> p .)
    x               reduce using rule 131 (alpha_lower -> p .)
    y               reduce using rule 131 (alpha_lower -> p .)
    z               reduce using rule 131 (alpha_lower -> p .)
    A               reduce using rule 131 (alpha_lower -> p .)
    B               reduce using rule 131 (alpha_lower -> p .)
    C               reduce using rule 131 (alpha_lower -> p .)
    D               reduce using rule 131 (alpha_lower -> p .)
    E               reduce using rule 131 (alpha_lower -> p .)
    F               reduce using rule 131 (alpha_lower -> p .)
    G               reduce using rule 131 (alpha_lower -> p .)
    H               reduce using rule 131 (alpha_lower -> p .)
    I               reduce using rule 131 (alpha_lower -> p .)
    J               reduce using rule 131 (alpha_lower -> p .)
    K               reduce using rule 131 (alpha_lower -> p .)
    L               reduce using rule 131 (alpha_lower -> p .)
    M               reduce using rule 131 (alpha_lower -> p .)
    N               reduce using rule 131 (alpha_lower -> p .)
    O               reduce using rule 131 (alpha_lower -> p .)
    P               reduce using rule 131 (alpha_lower -> p .)
    Q               reduce using rule 131 (alpha_lower -> p .)
    R               reduce using rule 131 (alpha_lower -> p .)
    S               reduce using rule 131 (alpha_lower -> p .)
    T               reduce using rule 131 (alpha_lower -> p .)
    U               reduce using rule 131 (alpha_lower -> p .)
    V               reduce using rule 131 (alpha_lower -> p .)
    W               reduce using rule 131 (alpha_lower -> p .)
    X               reduce using rule 131 (alpha_lower -> p .)
    Y               reduce using rule 131 (alpha_lower -> p .)
    Z               reduce using rule 131 (alpha_lower -> p .)
    |               reduce using rule 131 (alpha_lower -> p .)
    ]               reduce using rule 131 (alpha_lower -> p .)
    -               reduce using rule 131 (alpha_lower -> p .)
    ^               reduce using rule 131 (alpha_lower -> p .)
    $end            reduce using rule 131 (alpha_lower -> p .)


state 91

    (18) elementary -> literal .

    *               reduce using rule 18 (elementary -> literal .)
    +               reduce using rule 18 (elementary -> literal .)
    ?               reduce using rule 18 (elementary -> literal .)
    {               reduce using rule 18 (elementary -> literal .)
    (               reduce using rule 18 (elementary -> literal .)
    ^               reduce using rule 18 (elementary -> literal .)
    >               reduce using rule 18 (elementary -> literal .)
    <               reduce using rule 18 (elementary -> literal .)
    /               reduce using rule 18 (elementary -> literal .)
    \               reduce using rule 18 (elementary -> literal .)
    #               reduce using rule 18 (elementary -> literal .)
    %               reduce using rule 18 (elementary -> literal .)
    ESCAPED         reduce using rule 18 (elementary -> literal .)
    DIGIT           reduce using rule 18 (elementary -> literal .)
    OTHER           reduce using rule 18 (elementary -> literal .)
    [               reduce using rule 18 (elementary -> literal .)
    .               reduce using rule 18 (elementary -> literal .)
    ,               reduce using rule 18 (elementary -> literal .)
    :               reduce using rule 18 (elementary -> literal .)
    ;               reduce using rule 18 (elementary -> literal .)
    $               reduce using rule 18 (elementary -> literal .)
    `               reduce using rule 18 (elementary -> literal .)
    a               reduce using rule 18 (elementary -> literal .)
    b               reduce using rule 18 (elementary -> literal .)
    c               reduce using rule 18 (elementary -> literal .)
    d               reduce using rule 18 (elementary -> literal .)
    e               reduce using rule 18 (elementary -> literal .)
    f               reduce using rule 18 (elementary -> literal .)
    g               reduce using rule 18 (elementary -> literal .)
    h               reduce using rule 18 (elementary -> literal .)
    i               reduce using rule 18 (elementary -> literal .)
    j               reduce using rule 18 (elementary -> literal .)
    k               reduce using rule 18 (elementary -> literal .)
    l               reduce using rule 18 (elementary -> literal .)
    m               reduce using rule 18 (elementary -> literal .)
    n               reduce using rule 18 (elementary -> literal .)
    o               reduce using rule 18 (elementary -> literal .)
    p               reduce using rule 18 (elementary -> literal .)
    q               reduce using rule 18 (elementary -> literal .)
    r               reduce using rule 18 (elementary -> literal .)
    s               reduce using rule 18 (elementary -> literal .)
    t               reduce using rule 18 (elementary -> literal .)
    u               reduce using rule 18 (elementary -> literal .)
    v               reduce using rule 18 (elementary -> literal .)
    w               reduce using rule 18 (elementary -> literal .)
    x               reduce using rule 18 (elementary -> literal .)
    y               reduce using rule 18 (elementary -> literal .)
    z               reduce using rule 18 (elementary -> literal .)
    A               reduce using rule 18 (elementary -> literal .)
    B               reduce using rule 18 (elementary -> literal .)
    C               reduce using rule 18 (elementary -> literal .)
    D               reduce using rule 18 (elementary -> literal .)
    E               reduce using rule 18 (elementary -> literal .)
    F               reduce using rule 18 (elementary -> literal .)
    G               reduce using rule 18 (elementary -> literal .)
    H               reduce using rule 18 (elementary -> literal .)
    I               reduce using rule 18 (elementary -> literal .)
    J               reduce using rule 18 (elementary -> literal .)
    K               reduce using rule 18 (elementary -> literal .)
    L               reduce using rule 18 (elementary -> literal .)
    M               reduce using rule 18 (elementary -> literal .)
    N               reduce using rule 18 (elementary -> literal .)
    O               reduce using rule 18 (elementary -> literal .)
    P               reduce using rule 18 (elementary -> literal .)
    Q               reduce using rule 18 (elementary -> literal .)
    R               reduce using rule 18 (elementary -> literal .)
    S               reduce using rule 18 (elementary -> literal .)
    T               reduce using rule 18 (elementary -> literal .)
    U               reduce using rule 18 (elementary -> literal .)
    V               reduce using rule 18 (elementary -> literal .)
    W               reduce using rule 18 (elementary -> literal .)
    X               reduce using rule 18 (elementary -> literal .)
    Y               reduce using rule 18 (elementary -> literal .)
    Z               reduce using rule 18 (elementary -> literal .)
    |               reduce using rule 18 (elementary -> literal .)
    $end            reduce using rule 18 (elementary -> literal .)
    )               reduce using rule 18 (elementary -> literal .)


state 92

    (124) alpha_lower -> i .

    !               reduce using rule 124 (alpha_lower -> i .)
    "               reduce using rule 124 (alpha_lower -> i .)
    #               reduce using rule 124 (alpha_lower -> i .)
    $               reduce using rule 124 (alpha_lower -> i .)
    %               reduce using rule 124 (alpha_lower -> i .)
    &               reduce using rule 124 (alpha_lower -> i .)
    '               reduce using rule 124 (alpha_lower -> i .)
    (               reduce using rule 124 (alpha_lower -> i .)
    )               reduce using rule 124 (alpha_lower -> i .)
    *               reduce using rule 124 (alpha_lower -> i .)
    +               reduce using rule 124 (alpha_lower -> i .)
    ,               reduce using rule 124 (alpha_lower -> i .)
    .               reduce using rule 124 (alpha_lower -> i .)
    /               reduce using rule 124 (alpha_lower -> i .)
    :               reduce using rule 124 (alpha_lower -> i .)
    ;               reduce using rule 124 (alpha_lower -> i .)
    <               reduce using rule 124 (alpha_lower -> i .)
    =               reduce using rule 124 (alpha_lower -> i .)
    >               reduce using rule 124 (alpha_lower -> i .)
    ?               reduce using rule 124 (alpha_lower -> i .)
    @               reduce using rule 124 (alpha_lower -> i .)
    [               reduce using rule 124 (alpha_lower -> i .)
    \               reduce using rule 124 (alpha_lower -> i .)
    _               reduce using rule 124 (alpha_lower -> i .)
    `               reduce using rule 124 (alpha_lower -> i .)
    {               reduce using rule 124 (alpha_lower -> i .)
    }               reduce using rule 124 (alpha_lower -> i .)
    ~               reduce using rule 124 (alpha_lower -> i .)
    ESCAPED         reduce using rule 124 (alpha_lower -> i .)
    DIGIT           reduce using rule 124 (alpha_lower -> i .)
    OTHER           reduce using rule 124 (alpha_lower -> i .)
    a               reduce using rule 124 (alpha_lower -> i .)
    b               reduce using rule 124 (alpha_lower -> i .)
    c               reduce using rule 124 (alpha_lower -> i .)
    d               reduce using rule 124 (alpha_lower -> i .)
    e               reduce using rule 124 (alpha_lower -> i .)
    f               reduce using rule 124 (alpha_lower -> i .)
    g               reduce using rule 124 (alpha_lower -> i .)
    h               reduce using rule 124 (alpha_lower -> i .)
    i               reduce using rule 124 (alpha_lower -> i .)
    j               reduce using rule 124 (alpha_lower -> i .)
    k               reduce using rule 124 (alpha_lower -> i .)
    l               reduce using rule 124 (alpha_lower -> i .)
    m               reduce using rule 124 (alpha_lower -> i .)
    n               reduce using rule 124 (alpha_lower -> i .)
    o               reduce using rule 124 (alpha_lower -> i .)
    p               reduce using rule 124 (alpha_lower -> i .)
    q               reduce using rule 124 (alpha_lower -> i .)
    r               reduce using rule 124 (alpha_lower -> i .)
    s               reduce using rule 124 (alpha_lower -> i .)
    t               reduce using rule 124 (alpha_lower -> i .)
    u               reduce using rule 124 (alpha_lower -> i .)
    v               reduce using rule 124 (alpha_lower -> i .)
    w               reduce using rule 124 (alpha_lower -> i .)
    x               reduce using rule 124 (alpha_lower -> i .)
    y               reduce using rule 124 (alpha_lower -> i .)
    z               reduce using rule 124 (alpha_lower -> i .)
    A               reduce using rule 124 (alpha_lower -> i .)
    B               reduce using rule 124 (alpha_lower -> i .)
    C               reduce using rule 124 (alpha_lower -> i .)
    D               reduce using rule 124 (alpha_lower -> i .)
    E               reduce using rule 124 (alpha_lower -> i .)
    F               reduce using rule 124 (alpha_lower -> i .)
    G               reduce using rule 124 (alpha_lower -> i .)
    H               reduce using rule 124 (alpha_lower -> i .)
    I               reduce using rule 124 (alpha_lower -> i .)
    J               reduce using rule 124 (alpha_lower -> i .)
    K               reduce using rule 124 (alpha_lower -> i .)
    L               reduce using rule 124 (alpha_lower -> i .)
    M               reduce using rule 124 (alpha_lower -> i .)
    N               reduce using rule 124 (alpha_lower -> i .)
    O               reduce using rule 124 (alpha_lower -> i .)
    P               reduce using rule 124 (alpha_lower -> i .)
    Q               reduce using rule 124 (alpha_lower -> i .)
    R               reduce using rule 124 (alpha_lower -> i .)
    S               reduce using rule 124 (alpha_lower -> i .)
    T               reduce using rule 124 (alpha_lower -> i .)
    U               reduce using rule 124 (alpha_lower -> i .)
    V               reduce using rule 124 (alpha_lower -> i .)
    W               reduce using rule 124 (alpha_lower -> i .)
    X               reduce using rule 124 (alpha_lower -> i .)
    Y               reduce using rule 124 (alpha_lower -> i .)
    Z               reduce using rule 124 (alpha_lower -> i .)
    |               reduce using rule 124 (alpha_lower -> i .)
    ]               reduce using rule 124 (alpha_lower -> i .)
    -               reduce using rule 124 (alpha_lower -> i .)
    ^               reduce using rule 124 (alpha_lower -> i .)
    $end            reduce using rule 124 (alpha_lower -> i .)


state 93

    (152) alpha_upper -> K .

    -               reduce using rule 152 (alpha_upper -> K .)
    !               reduce using rule 152 (alpha_upper -> K .)
    "               reduce using rule 152 (alpha_upper -> K .)
    #               reduce using rule 152 (alpha_upper -> K .)
    $               reduce using rule 152 (alpha_upper -> K .)
    %               reduce using rule 152 (alpha_upper -> K .)
    &               reduce using rule 152 (alpha_upper -> K .)
    '               reduce using rule 152 (alpha_upper -> K .)
    (               reduce using rule 152 (alpha_upper -> K .)
    )               reduce using rule 152 (alpha_upper -> K .)
    *               reduce using rule 152 (alpha_upper -> K .)
    +               reduce using rule 152 (alpha_upper -> K .)
    ,               reduce using rule 152 (alpha_upper -> K .)
    .               reduce using rule 152 (alpha_upper -> K .)
    /               reduce using rule 152 (alpha_upper -> K .)
    :               reduce using rule 152 (alpha_upper -> K .)
    ;               reduce using rule 152 (alpha_upper -> K .)
    <               reduce using rule 152 (alpha_upper -> K .)
    =               reduce using rule 152 (alpha_upper -> K .)
    >               reduce using rule 152 (alpha_upper -> K .)
    ?               reduce using rule 152 (alpha_upper -> K .)
    @               reduce using rule 152 (alpha_upper -> K .)
    [               reduce using rule 152 (alpha_upper -> K .)
    \               reduce using rule 152 (alpha_upper -> K .)
    _               reduce using rule 152 (alpha_upper -> K .)
    `               reduce using rule 152 (alpha_upper -> K .)
    {               reduce using rule 152 (alpha_upper -> K .)
    }               reduce using rule 152 (alpha_upper -> K .)
    ~               reduce using rule 152 (alpha_upper -> K .)
    ESCAPED         reduce using rule 152 (alpha_upper -> K .)
    DIGIT           reduce using rule 152 (alpha_upper -> K .)
    OTHER           reduce using rule 152 (alpha_upper -> K .)
    a               reduce using rule 152 (alpha_upper -> K .)
    b               reduce using rule 152 (alpha_upper -> K .)
    c               reduce using rule 152 (alpha_upper -> K .)
    d               reduce using rule 152 (alpha_upper -> K .)
    e               reduce using rule 152 (alpha_upper -> K .)
    f               reduce using rule 152 (alpha_upper -> K .)
    g               reduce using rule 152 (alpha_upper -> K .)
    h               reduce using rule 152 (alpha_upper -> K .)
    i               reduce using rule 152 (alpha_upper -> K .)
    j               reduce using rule 152 (alpha_upper -> K .)
    k               reduce using rule 152 (alpha_upper -> K .)
    l               reduce using rule 152 (alpha_upper -> K .)
    m               reduce using rule 152 (alpha_upper -> K .)
    n               reduce using rule 152 (alpha_upper -> K .)
    o               reduce using rule 152 (alpha_upper -> K .)
    p               reduce using rule 152 (alpha_upper -> K .)
    q               reduce using rule 152 (alpha_upper -> K .)
    r               reduce using rule 152 (alpha_upper -> K .)
    s               reduce using rule 152 (alpha_upper -> K .)
    t               reduce using rule 152 (alpha_upper -> K .)
    u               reduce using rule 152 (alpha_upper -> K .)
    v               reduce using rule 152 (alpha_upper -> K .)
    w               reduce using rule 152 (alpha_upper -> K .)
    x               reduce using rule 152 (alpha_upper -> K .)
    y               reduce using rule 152 (alpha_upper -> K .)
    z               reduce using rule 152 (alpha_upper -> K .)
    A               reduce using rule 152 (alpha_upper -> K .)
    B               reduce using rule 152 (alpha_upper -> K .)
    C               reduce using rule 152 (alpha_upper -> K .)
    D               reduce using rule 152 (alpha_upper -> K .)
    E               reduce using rule 152 (alpha_upper -> K .)
    F               reduce using rule 152 (alpha_upper -> K .)
    G               reduce using rule 152 (alpha_upper -> K .)
    H               reduce using rule 152 (alpha_upper -> K .)
    I               reduce using rule 152 (alpha_upper -> K .)
    J               reduce using rule 152 (alpha_upper -> K .)
    K               reduce using rule 152 (alpha_upper -> K .)
    L               reduce using rule 152 (alpha_upper -> K .)
    M               reduce using rule 152 (alpha_upper -> K .)
    N               reduce using rule 152 (alpha_upper -> K .)
    O               reduce using rule 152 (alpha_upper -> K .)
    P               reduce using rule 152 (alpha_upper -> K .)
    Q               reduce using rule 152 (alpha_upper -> K .)
    R               reduce using rule 152 (alpha_upper -> K .)
    S               reduce using rule 152 (alpha_upper -> K .)
    T               reduce using rule 152 (alpha_upper -> K .)
    U               reduce using rule 152 (alpha_upper -> K .)
    V               reduce using rule 152 (alpha_upper -> K .)
    W               reduce using rule 152 (alpha_upper -> K .)
    X               reduce using rule 152 (alpha_upper -> K .)
    Y               reduce using rule 152 (alpha_upper -> K .)
    Z               reduce using rule 152 (alpha_upper -> K .)
    |               reduce using rule 152 (alpha_upper -> K .)
    ]               reduce using rule 152 (alpha_upper -> K .)
    ^               reduce using rule 152 (alpha_upper -> K .)
    $end            reduce using rule 152 (alpha_upper -> K .)


state 94

    (117) alpha_lower -> b .

    !               reduce using rule 117 (alpha_lower -> b .)
    "               reduce using rule 117 (alpha_lower -> b .)
    #               reduce using rule 117 (alpha_lower -> b .)
    $               reduce using rule 117 (alpha_lower -> b .)
    %               reduce using rule 117 (alpha_lower -> b .)
    &               reduce using rule 117 (alpha_lower -> b .)
    '               reduce using rule 117 (alpha_lower -> b .)
    (               reduce using rule 117 (alpha_lower -> b .)
    )               reduce using rule 117 (alpha_lower -> b .)
    *               reduce using rule 117 (alpha_lower -> b .)
    +               reduce using rule 117 (alpha_lower -> b .)
    ,               reduce using rule 117 (alpha_lower -> b .)
    .               reduce using rule 117 (alpha_lower -> b .)
    /               reduce using rule 117 (alpha_lower -> b .)
    :               reduce using rule 117 (alpha_lower -> b .)
    ;               reduce using rule 117 (alpha_lower -> b .)
    <               reduce using rule 117 (alpha_lower -> b .)
    =               reduce using rule 117 (alpha_lower -> b .)
    >               reduce using rule 117 (alpha_lower -> b .)
    ?               reduce using rule 117 (alpha_lower -> b .)
    @               reduce using rule 117 (alpha_lower -> b .)
    [               reduce using rule 117 (alpha_lower -> b .)
    \               reduce using rule 117 (alpha_lower -> b .)
    _               reduce using rule 117 (alpha_lower -> b .)
    `               reduce using rule 117 (alpha_lower -> b .)
    {               reduce using rule 117 (alpha_lower -> b .)
    }               reduce using rule 117 (alpha_lower -> b .)
    ~               reduce using rule 117 (alpha_lower -> b .)
    ESCAPED         reduce using rule 117 (alpha_lower -> b .)
    DIGIT           reduce using rule 117 (alpha_lower -> b .)
    OTHER           reduce using rule 117 (alpha_lower -> b .)
    a               reduce using rule 117 (alpha_lower -> b .)
    b               reduce using rule 117 (alpha_lower -> b .)
    c               reduce using rule 117 (alpha_lower -> b .)
    d               reduce using rule 117 (alpha_lower -> b .)
    e               reduce using rule 117 (alpha_lower -> b .)
    f               reduce using rule 117 (alpha_lower -> b .)
    g               reduce using rule 117 (alpha_lower -> b .)
    h               reduce using rule 117 (alpha_lower -> b .)
    i               reduce using rule 117 (alpha_lower -> b .)
    j               reduce using rule 117 (alpha_lower -> b .)
    k               reduce using rule 117 (alpha_lower -> b .)
    l               reduce using rule 117 (alpha_lower -> b .)
    m               reduce using rule 117 (alpha_lower -> b .)
    n               reduce using rule 117 (alpha_lower -> b .)
    o               reduce using rule 117 (alpha_lower -> b .)
    p               reduce using rule 117 (alpha_lower -> b .)
    q               reduce using rule 117 (alpha_lower -> b .)
    r               reduce using rule 117 (alpha_lower -> b .)
    s               reduce using rule 117 (alpha_lower -> b .)
    t               reduce using rule 117 (alpha_lower -> b .)
    u               reduce using rule 117 (alpha_lower -> b .)
    v               reduce using rule 117 (alpha_lower -> b .)
    w               reduce using rule 117 (alpha_lower -> b .)
    x               reduce using rule 117 (alpha_lower -> b .)
    y               reduce using rule 117 (alpha_lower -> b .)
    z               reduce using rule 117 (alpha_lower -> b .)
    A               reduce using rule 117 (alpha_lower -> b .)
    B               reduce using rule 117 (alpha_lower -> b .)
    C               reduce using rule 117 (alpha_lower -> b .)
    D               reduce using rule 117 (alpha_lower -> b .)
    E               reduce using rule 117 (alpha_lower -> b .)
    F               reduce using rule 117 (alpha_lower -> b .)
    G               reduce using rule 117 (alpha_lower -> b .)
    H               reduce using rule 117 (alpha_lower -> b .)
    I               reduce using rule 117 (alpha_lower -> b .)
    J               reduce using rule 117 (alpha_lower -> b .)
    K               reduce using rule 117 (alpha_lower -> b .)
    L               reduce using rule 117 (alpha_lower -> b .)
    M               reduce using rule 117 (alpha_lower -> b .)
    N               reduce using rule 117 (alpha_lower -> b .)
    O               reduce using rule 117 (alpha_lower -> b .)
    P               reduce using rule 117 (alpha_lower -> b .)
    Q               reduce using rule 117 (alpha_lower -> b .)
    R               reduce using rule 117 (alpha_lower -> b .)
    S               reduce using rule 117 (alpha_lower -> b .)
    T               reduce using rule 117 (alpha_lower -> b .)
    U               reduce using rule 117 (alpha_lower -> b .)
    V               reduce using rule 117 (alpha_lower -> b .)
    W               reduce using rule 117 (alpha_lower -> b .)
    X               reduce using rule 117 (alpha_lower -> b .)
    Y               reduce using rule 117 (alpha_lower -> b .)
    Z               reduce using rule 117 (alpha_lower -> b .)
    |               reduce using rule 117 (alpha_lower -> b .)
    ]               reduce using rule 117 (alpha_lower -> b .)
    -               reduce using rule 117 (alpha_lower -> b .)
    ^               reduce using rule 117 (alpha_lower -> b .)
    $end            reduce using rule 117 (alpha_lower -> b .)


state 95

    (139) alpha_lower -> x .

    !               reduce using rule 139 (alpha_lower -> x .)
    "               reduce using rule 139 (alpha_lower -> x .)
    #               reduce using rule 139 (alpha_lower -> x .)
    $               reduce using rule 139 (alpha_lower -> x .)
    %               reduce using rule 139 (alpha_lower -> x .)
    &               reduce using rule 139 (alpha_lower -> x .)
    '               reduce using rule 139 (alpha_lower -> x .)
    (               reduce using rule 139 (alpha_lower -> x .)
    )               reduce using rule 139 (alpha_lower -> x .)
    *               reduce using rule 139 (alpha_lower -> x .)
    +               reduce using rule 139 (alpha_lower -> x .)
    ,               reduce using rule 139 (alpha_lower -> x .)
    .               reduce using rule 139 (alpha_lower -> x .)
    /               reduce using rule 139 (alpha_lower -> x .)
    :               reduce using rule 139 (alpha_lower -> x .)
    ;               reduce using rule 139 (alpha_lower -> x .)
    <               reduce using rule 139 (alpha_lower -> x .)
    =               reduce using rule 139 (alpha_lower -> x .)
    >               reduce using rule 139 (alpha_lower -> x .)
    ?               reduce using rule 139 (alpha_lower -> x .)
    @               reduce using rule 139 (alpha_lower -> x .)
    [               reduce using rule 139 (alpha_lower -> x .)
    \               reduce using rule 139 (alpha_lower -> x .)
    _               reduce using rule 139 (alpha_lower -> x .)
    `               reduce using rule 139 (alpha_lower -> x .)
    {               reduce using rule 139 (alpha_lower -> x .)
    }               reduce using rule 139 (alpha_lower -> x .)
    ~               reduce using rule 139 (alpha_lower -> x .)
    ESCAPED         reduce using rule 139 (alpha_lower -> x .)
    DIGIT           reduce using rule 139 (alpha_lower -> x .)
    OTHER           reduce using rule 139 (alpha_lower -> x .)
    a               reduce using rule 139 (alpha_lower -> x .)
    b               reduce using rule 139 (alpha_lower -> x .)
    c               reduce using rule 139 (alpha_lower -> x .)
    d               reduce using rule 139 (alpha_lower -> x .)
    e               reduce using rule 139 (alpha_lower -> x .)
    f               reduce using rule 139 (alpha_lower -> x .)
    g               reduce using rule 139 (alpha_lower -> x .)
    h               reduce using rule 139 (alpha_lower -> x .)
    i               reduce using rule 139 (alpha_lower -> x .)
    j               reduce using rule 139 (alpha_lower -> x .)
    k               reduce using rule 139 (alpha_lower -> x .)
    l               reduce using rule 139 (alpha_lower -> x .)
    m               reduce using rule 139 (alpha_lower -> x .)
    n               reduce using rule 139 (alpha_lower -> x .)
    o               reduce using rule 139 (alpha_lower -> x .)
    p               reduce using rule 139 (alpha_lower -> x .)
    q               reduce using rule 139 (alpha_lower -> x .)
    r               reduce using rule 139 (alpha_lower -> x .)
    s               reduce using rule 139 (alpha_lower -> x .)
    t               reduce using rule 139 (alpha_lower -> x .)
    u               reduce using rule 139 (alpha_lower -> x .)
    v               reduce using rule 139 (alpha_lower -> x .)
    w               reduce using rule 139 (alpha_lower -> x .)
    x               reduce using rule 139 (alpha_lower -> x .)
    y               reduce using rule 139 (alpha_lower -> x .)
    z               reduce using rule 139 (alpha_lower -> x .)
    A               reduce using rule 139 (alpha_lower -> x .)
    B               reduce using rule 139 (alpha_lower -> x .)
    C               reduce using rule 139 (alpha_lower -> x .)
    D               reduce using rule 139 (alpha_lower -> x .)
    E               reduce using rule 139 (alpha_lower -> x .)
    F               reduce using rule 139 (alpha_lower -> x .)
    G               reduce using rule 139 (alpha_lower -> x .)
    H               reduce using rule 139 (alpha_lower -> x .)
    I               reduce using rule 139 (alpha_lower -> x .)
    J               reduce using rule 139 (alpha_lower -> x .)
    K               reduce using rule 139 (alpha_lower -> x .)
    L               reduce using rule 139 (alpha_lower -> x .)
    M               reduce using rule 139 (alpha_lower -> x .)
    N               reduce using rule 139 (alpha_lower -> x .)
    O               reduce using rule 139 (alpha_lower -> x .)
    P               reduce using rule 139 (alpha_lower -> x .)
    Q               reduce using rule 139 (alpha_lower -> x .)
    R               reduce using rule 139 (alpha_lower -> x .)
    S               reduce using rule 139 (alpha_lower -> x .)
    T               reduce using rule 139 (alpha_lower -> x .)
    U               reduce using rule 139 (alpha_lower -> x .)
    V               reduce using rule 139 (alpha_lower -> x .)
    W               reduce using rule 139 (alpha_lower -> x .)
    X               reduce using rule 139 (alpha_lower -> x .)
    Y               reduce using rule 139 (alpha_lower -> x .)
    Z               reduce using rule 139 (alpha_lower -> x .)
    |               reduce using rule 139 (alpha_lower -> x .)
    ]               reduce using rule 139 (alpha_lower -> x .)
    -               reduce using rule 139 (alpha_lower -> x .)
    ^               reduce using rule 139 (alpha_lower -> x .)
    $end            reduce using rule 139 (alpha_lower -> x .)


state 96

    (0) S' -> re .
    (3) alternation -> re . | simple

    |               shift and go to state 153


state 97

    (6) concatenation -> simple basic .

    (               reduce using rule 6 (concatenation -> simple basic .)
    ^               reduce using rule 6 (concatenation -> simple basic .)
    >               reduce using rule 6 (concatenation -> simple basic .)
    <               reduce using rule 6 (concatenation -> simple basic .)
    /               reduce using rule 6 (concatenation -> simple basic .)
    \               reduce using rule 6 (concatenation -> simple basic .)
    #               reduce using rule 6 (concatenation -> simple basic .)
    %               reduce using rule 6 (concatenation -> simple basic .)
    ESCAPED         reduce using rule 6 (concatenation -> simple basic .)
    DIGIT           reduce using rule 6 (concatenation -> simple basic .)
    OTHER           reduce using rule 6 (concatenation -> simple basic .)
    [               reduce using rule 6 (concatenation -> simple basic .)
    .               reduce using rule 6 (concatenation -> simple basic .)
    ,               reduce using rule 6 (concatenation -> simple basic .)
    :               reduce using rule 6 (concatenation -> simple basic .)
    ;               reduce using rule 6 (concatenation -> simple basic .)
    $               reduce using rule 6 (concatenation -> simple basic .)
    `               reduce using rule 6 (concatenation -> simple basic .)
    a               reduce using rule 6 (concatenation -> simple basic .)
    b               reduce using rule 6 (concatenation -> simple basic .)
    c               reduce using rule 6 (concatenation -> simple basic .)
    d               reduce using rule 6 (concatenation -> simple basic .)
    e               reduce using rule 6 (concatenation -> simple basic .)
    f               reduce using rule 6 (concatenation -> simple basic .)
    g               reduce using rule 6 (concatenation -> simple basic .)
    h               reduce using rule 6 (concatenation -> simple basic .)
    i               reduce using rule 6 (concatenation -> simple basic .)
    j               reduce using rule 6 (concatenation -> simple basic .)
    k               reduce using rule 6 (concatenation -> simple basic .)
    l               reduce using rule 6 (concatenation -> simple basic .)
    m               reduce using rule 6 (concatenation -> simple basic .)
    n               reduce using rule 6 (concatenation -> simple basic .)
    o               reduce using rule 6 (concatenation -> simple basic .)
    p               reduce using rule 6 (concatenation -> simple basic .)
    q               reduce using rule 6 (concatenation -> simple basic .)
    r               reduce using rule 6 (concatenation -> simple basic .)
    s               reduce using rule 6 (concatenation -> simple basic .)
    t               reduce using rule 6 (concatenation -> simple basic .)
    u               reduce using rule 6 (concatenation -> simple basic .)
    v               reduce using rule 6 (concatenation -> simple basic .)
    w               reduce using rule 6 (concatenation -> simple basic .)
    x               reduce using rule 6 (concatenation -> simple basic .)
    y               reduce using rule 6 (concatenation -> simple basic .)
    z               reduce using rule 6 (concatenation -> simple basic .)
    A               reduce using rule 6 (concatenation -> simple basic .)
    B               reduce using rule 6 (concatenation -> simple basic .)
    C               reduce using rule 6 (concatenation -> simple basic .)
    D               reduce using rule 6 (concatenation -> simple basic .)
    E               reduce using rule 6 (concatenation -> simple basic .)
    F               reduce using rule 6 (concatenation -> simple basic .)
    G               reduce using rule 6 (concatenation -> simple basic .)
    H               reduce using rule 6 (concatenation -> simple basic .)
    I               reduce using rule 6 (concatenation -> simple basic .)
    J               reduce using rule 6 (concatenation -> simple basic .)
    K               reduce using rule 6 (concatenation -> simple basic .)
    L               reduce using rule 6 (concatenation -> simple basic .)
    M               reduce using rule 6 (concatenation -> simple basic .)
    N               reduce using rule 6 (concatenation -> simple basic .)
    O               reduce using rule 6 (concatenation -> simple basic .)
    P               reduce using rule 6 (concatenation -> simple basic .)
    Q               reduce using rule 6 (concatenation -> simple basic .)
    R               reduce using rule 6 (concatenation -> simple basic .)
    S               reduce using rule 6 (concatenation -> simple basic .)
    T               reduce using rule 6 (concatenation -> simple basic .)
    U               reduce using rule 6 (concatenation -> simple basic .)
    V               reduce using rule 6 (concatenation -> simple basic .)
    W               reduce using rule 6 (concatenation -> simple basic .)
    X               reduce using rule 6 (concatenation -> simple basic .)
    Y               reduce using rule 6 (concatenation -> simple basic .)
    Z               reduce using rule 6 (concatenation -> simple basic .)
    |               reduce using rule 6 (concatenation -> simple basic .)
    )               reduce using rule 6 (concatenation -> simple basic .)
    $end            reduce using rule 6 (concatenation -> simple basic .)


state 98

    (94) predefined -> ` alpha .

    *               reduce using rule 94 (predefined -> ` alpha .)
    +               reduce using rule 94 (predefined -> ` alpha .)
    ?               reduce using rule 94 (predefined -> ` alpha .)
    {               reduce using rule 94 (predefined -> ` alpha .)
    (               reduce using rule 94 (predefined -> ` alpha .)
    ^               reduce using rule 94 (predefined -> ` alpha .)
    >               reduce using rule 94 (predefined -> ` alpha .)
    <               reduce using rule 94 (predefined -> ` alpha .)
    /               reduce using rule 94 (predefined -> ` alpha .)
    \               reduce using rule 94 (predefined -> ` alpha .)
    #               reduce using rule 94 (predefined -> ` alpha .)
    %               reduce using rule 94 (predefined -> ` alpha .)
    ESCAPED         reduce using rule 94 (predefined -> ` alpha .)
    DIGIT           reduce using rule 94 (predefined -> ` alpha .)
    OTHER           reduce using rule 94 (predefined -> ` alpha .)
    [               reduce using rule 94 (predefined -> ` alpha .)
    .               reduce using rule 94 (predefined -> ` alpha .)
    ,               reduce using rule 94 (predefined -> ` alpha .)
    :               reduce using rule 94 (predefined -> ` alpha .)
    ;               reduce using rule 94 (predefined -> ` alpha .)
    $               reduce using rule 94 (predefined -> ` alpha .)
    `               reduce using rule 94 (predefined -> ` alpha .)
    a               reduce using rule 94 (predefined -> ` alpha .)
    b               reduce using rule 94 (predefined -> ` alpha .)
    c               reduce using rule 94 (predefined -> ` alpha .)
    d               reduce using rule 94 (predefined -> ` alpha .)
    e               reduce using rule 94 (predefined -> ` alpha .)
    f               reduce using rule 94 (predefined -> ` alpha .)
    g               reduce using rule 94 (predefined -> ` alpha .)
    h               reduce using rule 94 (predefined -> ` alpha .)
    i               reduce using rule 94 (predefined -> ` alpha .)
    j               reduce using rule 94 (predefined -> ` alpha .)
    k               reduce using rule 94 (predefined -> ` alpha .)
    l               reduce using rule 94 (predefined -> ` alpha .)
    m               reduce using rule 94 (predefined -> ` alpha .)
    n               reduce using rule 94 (predefined -> ` alpha .)
    o               reduce using rule 94 (predefined -> ` alpha .)
    p               reduce using rule 94 (predefined -> ` alpha .)
    q               reduce using rule 94 (predefined -> ` alpha .)
    r               reduce using rule 94 (predefined -> ` alpha .)
    s               reduce using rule 94 (predefined -> ` alpha .)
    t               reduce using rule 94 (predefined -> ` alpha .)
    u               reduce using rule 94 (predefined -> ` alpha .)
    v               reduce using rule 94 (predefined -> ` alpha .)
    w               reduce using rule 94 (predefined -> ` alpha .)
    x               reduce using rule 94 (predefined -> ` alpha .)
    y               reduce using rule 94 (predefined -> ` alpha .)
    z               reduce using rule 94 (predefined -> ` alpha .)
    A               reduce using rule 94 (predefined -> ` alpha .)
    B               reduce using rule 94 (predefined -> ` alpha .)
    C               reduce using rule 94 (predefined -> ` alpha .)
    D               reduce using rule 94 (predefined -> ` alpha .)
    E               reduce using rule 94 (predefined -> ` alpha .)
    F               reduce using rule 94 (predefined -> ` alpha .)
    G               reduce using rule 94 (predefined -> ` alpha .)
    H               reduce using rule 94 (predefined -> ` alpha .)
    I               reduce using rule 94 (predefined -> ` alpha .)
    J               reduce using rule 94 (predefined -> ` alpha .)
    K               reduce using rule 94 (predefined -> ` alpha .)
    L               reduce using rule 94 (predefined -> ` alpha .)
    M               reduce using rule 94 (predefined -> ` alpha .)
    N               reduce using rule 94 (predefined -> ` alpha .)
    O               reduce using rule 94 (predefined -> ` alpha .)
    P               reduce using rule 94 (predefined -> ` alpha .)
    Q               reduce using rule 94 (predefined -> ` alpha .)
    R               reduce using rule 94 (predefined -> ` alpha .)
    S               reduce using rule 94 (predefined -> ` alpha .)
    T               reduce using rule 94 (predefined -> ` alpha .)
    U               reduce using rule 94 (predefined -> ` alpha .)
    V               reduce using rule 94 (predefined -> ` alpha .)
    W               reduce using rule 94 (predefined -> ` alpha .)
    X               reduce using rule 94 (predefined -> ` alpha .)
    Y               reduce using rule 94 (predefined -> ` alpha .)
    Z               reduce using rule 94 (predefined -> ` alpha .)
    |               reduce using rule 94 (predefined -> ` alpha .)
    $end            reduce using rule 94 (predefined -> ` alpha .)
    )               reduce using rule 94 (predefined -> ` alpha .)


state 99

    (39) group -> ( groupbody . )

    )               shift and go to state 154


state 100

    (40) groupbody -> ? . specialgroup
    (42) specialgroup -> . _ lengthcheck
    (43) specialgroup -> . | stationarygroup
    (44) specialgroup -> . : nomatchgroup
    (45) specialgroup -> . , nodispgroup
    (46) specialgroup -> . ; nodispmatchgroup
    (47) specialgroup -> . recursive
    (53) recursive -> . R

    _               shift and go to state 156
    |               shift and go to state 161
    :               shift and go to state 158
    ,               shift and go to state 162
    ;               shift and go to state 157
    R               shift and go to state 155

    recursive                      shift and go to state 159
    specialgroup                   shift and go to state 160

state 101

    (54) basicgroup -> re .
    (3) alternation -> re . | simple

    )               reduce using rule 54 (basicgroup -> re .)
    |               shift and go to state 153


state 102

    (41) groupbody -> basicgroup .

    )               reduce using rule 41 (groupbody -> basicgroup .)


state 103

    (26) asterisk -> elementary * .

    ?               reduce using rule 26 (asterisk -> elementary * .)
    (               reduce using rule 26 (asterisk -> elementary * .)
    ^               reduce using rule 26 (asterisk -> elementary * .)
    >               reduce using rule 26 (asterisk -> elementary * .)
    <               reduce using rule 26 (asterisk -> elementary * .)
    /               reduce using rule 26 (asterisk -> elementary * .)
    \               reduce using rule 26 (asterisk -> elementary * .)
    #               reduce using rule 26 (asterisk -> elementary * .)
    %               reduce using rule 26 (asterisk -> elementary * .)
    ESCAPED         reduce using rule 26 (asterisk -> elementary * .)
    DIGIT           reduce using rule 26 (asterisk -> elementary * .)
    OTHER           reduce using rule 26 (asterisk -> elementary * .)
    [               reduce using rule 26 (asterisk -> elementary * .)
    .               reduce using rule 26 (asterisk -> elementary * .)
    ,               reduce using rule 26 (asterisk -> elementary * .)
    :               reduce using rule 26 (asterisk -> elementary * .)
    ;               reduce using rule 26 (asterisk -> elementary * .)
    $               reduce using rule 26 (asterisk -> elementary * .)
    `               reduce using rule 26 (asterisk -> elementary * .)
    a               reduce using rule 26 (asterisk -> elementary * .)
    b               reduce using rule 26 (asterisk -> elementary * .)
    c               reduce using rule 26 (asterisk -> elementary * .)
    d               reduce using rule 26 (asterisk -> elementary * .)
    e               reduce using rule 26 (asterisk -> elementary * .)
    f               reduce using rule 26 (asterisk -> elementary * .)
    g               reduce using rule 26 (asterisk -> elementary * .)
    h               reduce using rule 26 (asterisk -> elementary * .)
    i               reduce using rule 26 (asterisk -> elementary * .)
    j               reduce using rule 26 (asterisk -> elementary * .)
    k               reduce using rule 26 (asterisk -> elementary * .)
    l               reduce using rule 26 (asterisk -> elementary * .)
    m               reduce using rule 26 (asterisk -> elementary * .)
    n               reduce using rule 26 (asterisk -> elementary * .)
    o               reduce using rule 26 (asterisk -> elementary * .)
    p               reduce using rule 26 (asterisk -> elementary * .)
    q               reduce using rule 26 (asterisk -> elementary * .)
    r               reduce using rule 26 (asterisk -> elementary * .)
    s               reduce using rule 26 (asterisk -> elementary * .)
    t               reduce using rule 26 (asterisk -> elementary * .)
    u               reduce using rule 26 (asterisk -> elementary * .)
    v               reduce using rule 26 (asterisk -> elementary * .)
    w               reduce using rule 26 (asterisk -> elementary * .)
    x               reduce using rule 26 (asterisk -> elementary * .)
    y               reduce using rule 26 (asterisk -> elementary * .)
    z               reduce using rule 26 (asterisk -> elementary * .)
    A               reduce using rule 26 (asterisk -> elementary * .)
    B               reduce using rule 26 (asterisk -> elementary * .)
    C               reduce using rule 26 (asterisk -> elementary * .)
    D               reduce using rule 26 (asterisk -> elementary * .)
    E               reduce using rule 26 (asterisk -> elementary * .)
    F               reduce using rule 26 (asterisk -> elementary * .)
    G               reduce using rule 26 (asterisk -> elementary * .)
    H               reduce using rule 26 (asterisk -> elementary * .)
    I               reduce using rule 26 (asterisk -> elementary * .)
    J               reduce using rule 26 (asterisk -> elementary * .)
    K               reduce using rule 26 (asterisk -> elementary * .)
    L               reduce using rule 26 (asterisk -> elementary * .)
    M               reduce using rule 26 (asterisk -> elementary * .)
    N               reduce using rule 26 (asterisk -> elementary * .)
    O               reduce using rule 26 (asterisk -> elementary * .)
    P               reduce using rule 26 (asterisk -> elementary * .)
    Q               reduce using rule 26 (asterisk -> elementary * .)
    R               reduce using rule 26 (asterisk -> elementary * .)
    S               reduce using rule 26 (asterisk -> elementary * .)
    T               reduce using rule 26 (asterisk -> elementary * .)
    U               reduce using rule 26 (asterisk -> elementary * .)
    V               reduce using rule 26 (asterisk -> elementary * .)
    W               reduce using rule 26 (asterisk -> elementary * .)
    X               reduce using rule 26 (asterisk -> elementary * .)
    Y               reduce using rule 26 (asterisk -> elementary * .)
    Z               reduce using rule 26 (asterisk -> elementary * .)
    |               reduce using rule 26 (asterisk -> elementary * .)
    )               reduce using rule 26 (asterisk -> elementary * .)
    $end            reduce using rule 26 (asterisk -> elementary * .)


state 104

    (27) plus -> elementary + .

    ?               reduce using rule 27 (plus -> elementary + .)
    (               reduce using rule 27 (plus -> elementary + .)
    ^               reduce using rule 27 (plus -> elementary + .)
    >               reduce using rule 27 (plus -> elementary + .)
    <               reduce using rule 27 (plus -> elementary + .)
    /               reduce using rule 27 (plus -> elementary + .)
    \               reduce using rule 27 (plus -> elementary + .)
    #               reduce using rule 27 (plus -> elementary + .)
    %               reduce using rule 27 (plus -> elementary + .)
    ESCAPED         reduce using rule 27 (plus -> elementary + .)
    DIGIT           reduce using rule 27 (plus -> elementary + .)
    OTHER           reduce using rule 27 (plus -> elementary + .)
    [               reduce using rule 27 (plus -> elementary + .)
    .               reduce using rule 27 (plus -> elementary + .)
    ,               reduce using rule 27 (plus -> elementary + .)
    :               reduce using rule 27 (plus -> elementary + .)
    ;               reduce using rule 27 (plus -> elementary + .)
    $               reduce using rule 27 (plus -> elementary + .)
    `               reduce using rule 27 (plus -> elementary + .)
    a               reduce using rule 27 (plus -> elementary + .)
    b               reduce using rule 27 (plus -> elementary + .)
    c               reduce using rule 27 (plus -> elementary + .)
    d               reduce using rule 27 (plus -> elementary + .)
    e               reduce using rule 27 (plus -> elementary + .)
    f               reduce using rule 27 (plus -> elementary + .)
    g               reduce using rule 27 (plus -> elementary + .)
    h               reduce using rule 27 (plus -> elementary + .)
    i               reduce using rule 27 (plus -> elementary + .)
    j               reduce using rule 27 (plus -> elementary + .)
    k               reduce using rule 27 (plus -> elementary + .)
    l               reduce using rule 27 (plus -> elementary + .)
    m               reduce using rule 27 (plus -> elementary + .)
    n               reduce using rule 27 (plus -> elementary + .)
    o               reduce using rule 27 (plus -> elementary + .)
    p               reduce using rule 27 (plus -> elementary + .)
    q               reduce using rule 27 (plus -> elementary + .)
    r               reduce using rule 27 (plus -> elementary + .)
    s               reduce using rule 27 (plus -> elementary + .)
    t               reduce using rule 27 (plus -> elementary + .)
    u               reduce using rule 27 (plus -> elementary + .)
    v               reduce using rule 27 (plus -> elementary + .)
    w               reduce using rule 27 (plus -> elementary + .)
    x               reduce using rule 27 (plus -> elementary + .)
    y               reduce using rule 27 (plus -> elementary + .)
    z               reduce using rule 27 (plus -> elementary + .)
    A               reduce using rule 27 (plus -> elementary + .)
    B               reduce using rule 27 (plus -> elementary + .)
    C               reduce using rule 27 (plus -> elementary + .)
    D               reduce using rule 27 (plus -> elementary + .)
    E               reduce using rule 27 (plus -> elementary + .)
    F               reduce using rule 27 (plus -> elementary + .)
    G               reduce using rule 27 (plus -> elementary + .)
    H               reduce using rule 27 (plus -> elementary + .)
    I               reduce using rule 27 (plus -> elementary + .)
    J               reduce using rule 27 (plus -> elementary + .)
    K               reduce using rule 27 (plus -> elementary + .)
    L               reduce using rule 27 (plus -> elementary + .)
    M               reduce using rule 27 (plus -> elementary + .)
    N               reduce using rule 27 (plus -> elementary + .)
    O               reduce using rule 27 (plus -> elementary + .)
    P               reduce using rule 27 (plus -> elementary + .)
    Q               reduce using rule 27 (plus -> elementary + .)
    R               reduce using rule 27 (plus -> elementary + .)
    S               reduce using rule 27 (plus -> elementary + .)
    T               reduce using rule 27 (plus -> elementary + .)
    U               reduce using rule 27 (plus -> elementary + .)
    V               reduce using rule 27 (plus -> elementary + .)
    W               reduce using rule 27 (plus -> elementary + .)
    X               reduce using rule 27 (plus -> elementary + .)
    Y               reduce using rule 27 (plus -> elementary + .)
    Z               reduce using rule 27 (plus -> elementary + .)
    |               reduce using rule 27 (plus -> elementary + .)
    )               reduce using rule 27 (plus -> elementary + .)
    $end            reduce using rule 27 (plus -> elementary + .)


state 105

    (29) nrepeat -> elementary { . number }
    (30) nrepeat -> elementary { . , number }
    (31) nrepeat -> elementary { . number , }
    (32) nrepeat -> elementary { . number , number }
    (37) number -> . DIGIT
    (38) number -> . DIGIT number

    ,               shift and go to state 163
    DIGIT           shift and go to state 165

    number                         shift and go to state 164

state 106

    (28) optional -> elementary ? .

    ?               reduce using rule 28 (optional -> elementary ? .)
    (               reduce using rule 28 (optional -> elementary ? .)
    ^               reduce using rule 28 (optional -> elementary ? .)
    >               reduce using rule 28 (optional -> elementary ? .)
    <               reduce using rule 28 (optional -> elementary ? .)
    /               reduce using rule 28 (optional -> elementary ? .)
    \               reduce using rule 28 (optional -> elementary ? .)
    #               reduce using rule 28 (optional -> elementary ? .)
    %               reduce using rule 28 (optional -> elementary ? .)
    ESCAPED         reduce using rule 28 (optional -> elementary ? .)
    DIGIT           reduce using rule 28 (optional -> elementary ? .)
    OTHER           reduce using rule 28 (optional -> elementary ? .)
    [               reduce using rule 28 (optional -> elementary ? .)
    .               reduce using rule 28 (optional -> elementary ? .)
    ,               reduce using rule 28 (optional -> elementary ? .)
    :               reduce using rule 28 (optional -> elementary ? .)
    ;               reduce using rule 28 (optional -> elementary ? .)
    $               reduce using rule 28 (optional -> elementary ? .)
    `               reduce using rule 28 (optional -> elementary ? .)
    a               reduce using rule 28 (optional -> elementary ? .)
    b               reduce using rule 28 (optional -> elementary ? .)
    c               reduce using rule 28 (optional -> elementary ? .)
    d               reduce using rule 28 (optional -> elementary ? .)
    e               reduce using rule 28 (optional -> elementary ? .)
    f               reduce using rule 28 (optional -> elementary ? .)
    g               reduce using rule 28 (optional -> elementary ? .)
    h               reduce using rule 28 (optional -> elementary ? .)
    i               reduce using rule 28 (optional -> elementary ? .)
    j               reduce using rule 28 (optional -> elementary ? .)
    k               reduce using rule 28 (optional -> elementary ? .)
    l               reduce using rule 28 (optional -> elementary ? .)
    m               reduce using rule 28 (optional -> elementary ? .)
    n               reduce using rule 28 (optional -> elementary ? .)
    o               reduce using rule 28 (optional -> elementary ? .)
    p               reduce using rule 28 (optional -> elementary ? .)
    q               reduce using rule 28 (optional -> elementary ? .)
    r               reduce using rule 28 (optional -> elementary ? .)
    s               reduce using rule 28 (optional -> elementary ? .)
    t               reduce using rule 28 (optional -> elementary ? .)
    u               reduce using rule 28 (optional -> elementary ? .)
    v               reduce using rule 28 (optional -> elementary ? .)
    w               reduce using rule 28 (optional -> elementary ? .)
    x               reduce using rule 28 (optional -> elementary ? .)
    y               reduce using rule 28 (optional -> elementary ? .)
    z               reduce using rule 28 (optional -> elementary ? .)
    A               reduce using rule 28 (optional -> elementary ? .)
    B               reduce using rule 28 (optional -> elementary ? .)
    C               reduce using rule 28 (optional -> elementary ? .)
    D               reduce using rule 28 (optional -> elementary ? .)
    E               reduce using rule 28 (optional -> elementary ? .)
    F               reduce using rule 28 (optional -> elementary ? .)
    G               reduce using rule 28 (optional -> elementary ? .)
    H               reduce using rule 28 (optional -> elementary ? .)
    I               reduce using rule 28 (optional -> elementary ? .)
    J               reduce using rule 28 (optional -> elementary ? .)
    K               reduce using rule 28 (optional -> elementary ? .)
    L               reduce using rule 28 (optional -> elementary ? .)
    M               reduce using rule 28 (optional -> elementary ? .)
    N               reduce using rule 28 (optional -> elementary ? .)
    O               reduce using rule 28 (optional -> elementary ? .)
    P               reduce using rule 28 (optional -> elementary ? .)
    Q               reduce using rule 28 (optional -> elementary ? .)
    R               reduce using rule 28 (optional -> elementary ? .)
    S               reduce using rule 28 (optional -> elementary ? .)
    T               reduce using rule 28 (optional -> elementary ? .)
    U               reduce using rule 28 (optional -> elementary ? .)
    V               reduce using rule 28 (optional -> elementary ? .)
    W               reduce using rule 28 (optional -> elementary ? .)
    X               reduce using rule 28 (optional -> elementary ? .)
    Y               reduce using rule 28 (optional -> elementary ? .)
    Z               reduce using rule 28 (optional -> elementary ? .)
    |               reduce using rule 28 (optional -> elementary ? .)
    $end            reduce using rule 28 (optional -> elementary ? .)
    )               reduce using rule 28 (optional -> elementary ? .)


state 107

    (66) classliteral -> # .

    -               reduce using rule 66 (classliteral -> # .)
    !               reduce using rule 66 (classliteral -> # .)
    "               reduce using rule 66 (classliteral -> # .)
    #               reduce using rule 66 (classliteral -> # .)
    $               reduce using rule 66 (classliteral -> # .)
    %               reduce using rule 66 (classliteral -> # .)
    &               reduce using rule 66 (classliteral -> # .)
    '               reduce using rule 66 (classliteral -> # .)
    (               reduce using rule 66 (classliteral -> # .)
    )               reduce using rule 66 (classliteral -> # .)
    *               reduce using rule 66 (classliteral -> # .)
    +               reduce using rule 66 (classliteral -> # .)
    ,               reduce using rule 66 (classliteral -> # .)
    .               reduce using rule 66 (classliteral -> # .)
    /               reduce using rule 66 (classliteral -> # .)
    :               reduce using rule 66 (classliteral -> # .)
    ;               reduce using rule 66 (classliteral -> # .)
    <               reduce using rule 66 (classliteral -> # .)
    =               reduce using rule 66 (classliteral -> # .)
    >               reduce using rule 66 (classliteral -> # .)
    ?               reduce using rule 66 (classliteral -> # .)
    @               reduce using rule 66 (classliteral -> # .)
    [               reduce using rule 66 (classliteral -> # .)
    \               reduce using rule 66 (classliteral -> # .)
    _               reduce using rule 66 (classliteral -> # .)
    `               reduce using rule 66 (classliteral -> # .)
    {               reduce using rule 66 (classliteral -> # .)
    }               reduce using rule 66 (classliteral -> # .)
    ~               reduce using rule 66 (classliteral -> # .)
    ESCAPED         reduce using rule 66 (classliteral -> # .)
    DIGIT           reduce using rule 66 (classliteral -> # .)
    OTHER           reduce using rule 66 (classliteral -> # .)
    a               reduce using rule 66 (classliteral -> # .)
    b               reduce using rule 66 (classliteral -> # .)
    c               reduce using rule 66 (classliteral -> # .)
    d               reduce using rule 66 (classliteral -> # .)
    e               reduce using rule 66 (classliteral -> # .)
    f               reduce using rule 66 (classliteral -> # .)
    g               reduce using rule 66 (classliteral -> # .)
    h               reduce using rule 66 (classliteral -> # .)
    i               reduce using rule 66 (classliteral -> # .)
    j               reduce using rule 66 (classliteral -> # .)
    k               reduce using rule 66 (classliteral -> # .)
    l               reduce using rule 66 (classliteral -> # .)
    m               reduce using rule 66 (classliteral -> # .)
    n               reduce using rule 66 (classliteral -> # .)
    o               reduce using rule 66 (classliteral -> # .)
    p               reduce using rule 66 (classliteral -> # .)
    q               reduce using rule 66 (classliteral -> # .)
    r               reduce using rule 66 (classliteral -> # .)
    s               reduce using rule 66 (classliteral -> # .)
    t               reduce using rule 66 (classliteral -> # .)
    u               reduce using rule 66 (classliteral -> # .)
    v               reduce using rule 66 (classliteral -> # .)
    w               reduce using rule 66 (classliteral -> # .)
    x               reduce using rule 66 (classliteral -> # .)
    y               reduce using rule 66 (classliteral -> # .)
    z               reduce using rule 66 (classliteral -> # .)
    A               reduce using rule 66 (classliteral -> # .)
    B               reduce using rule 66 (classliteral -> # .)
    C               reduce using rule 66 (classliteral -> # .)
    D               reduce using rule 66 (classliteral -> # .)
    E               reduce using rule 66 (classliteral -> # .)
    F               reduce using rule 66 (classliteral -> # .)
    G               reduce using rule 66 (classliteral -> # .)
    H               reduce using rule 66 (classliteral -> # .)
    I               reduce using rule 66 (classliteral -> # .)
    J               reduce using rule 66 (classliteral -> # .)
    K               reduce using rule 66 (classliteral -> # .)
    L               reduce using rule 66 (classliteral -> # .)
    M               reduce using rule 66 (classliteral -> # .)
    N               reduce using rule 66 (classliteral -> # .)
    O               reduce using rule 66 (classliteral -> # .)
    P               reduce using rule 66 (classliteral -> # .)
    Q               reduce using rule 66 (classliteral -> # .)
    R               reduce using rule 66 (classliteral -> # .)
    S               reduce using rule 66 (classliteral -> # .)
    T               reduce using rule 66 (classliteral -> # .)
    U               reduce using rule 66 (classliteral -> # .)
    V               reduce using rule 66 (classliteral -> # .)
    W               reduce using rule 66 (classliteral -> # .)
    X               reduce using rule 66 (classliteral -> # .)
    Y               reduce using rule 66 (classliteral -> # .)
    Z               reduce using rule 66 (classliteral -> # .)
    ]               reduce using rule 66 (classliteral -> # .)
    |               reduce using rule 66 (classliteral -> # .)


state 108

    (73) classliteral -> * .

    -               reduce using rule 73 (classliteral -> * .)
    !               reduce using rule 73 (classliteral -> * .)
    "               reduce using rule 73 (classliteral -> * .)
    #               reduce using rule 73 (classliteral -> * .)
    $               reduce using rule 73 (classliteral -> * .)
    %               reduce using rule 73 (classliteral -> * .)
    &               reduce using rule 73 (classliteral -> * .)
    '               reduce using rule 73 (classliteral -> * .)
    (               reduce using rule 73 (classliteral -> * .)
    )               reduce using rule 73 (classliteral -> * .)
    *               reduce using rule 73 (classliteral -> * .)
    +               reduce using rule 73 (classliteral -> * .)
    ,               reduce using rule 73 (classliteral -> * .)
    .               reduce using rule 73 (classliteral -> * .)
    /               reduce using rule 73 (classliteral -> * .)
    :               reduce using rule 73 (classliteral -> * .)
    ;               reduce using rule 73 (classliteral -> * .)
    <               reduce using rule 73 (classliteral -> * .)
    =               reduce using rule 73 (classliteral -> * .)
    >               reduce using rule 73 (classliteral -> * .)
    ?               reduce using rule 73 (classliteral -> * .)
    @               reduce using rule 73 (classliteral -> * .)
    [               reduce using rule 73 (classliteral -> * .)
    \               reduce using rule 73 (classliteral -> * .)
    _               reduce using rule 73 (classliteral -> * .)
    `               reduce using rule 73 (classliteral -> * .)
    {               reduce using rule 73 (classliteral -> * .)
    }               reduce using rule 73 (classliteral -> * .)
    ~               reduce using rule 73 (classliteral -> * .)
    ESCAPED         reduce using rule 73 (classliteral -> * .)
    DIGIT           reduce using rule 73 (classliteral -> * .)
    OTHER           reduce using rule 73 (classliteral -> * .)
    a               reduce using rule 73 (classliteral -> * .)
    b               reduce using rule 73 (classliteral -> * .)
    c               reduce using rule 73 (classliteral -> * .)
    d               reduce using rule 73 (classliteral -> * .)
    e               reduce using rule 73 (classliteral -> * .)
    f               reduce using rule 73 (classliteral -> * .)
    g               reduce using rule 73 (classliteral -> * .)
    h               reduce using rule 73 (classliteral -> * .)
    i               reduce using rule 73 (classliteral -> * .)
    j               reduce using rule 73 (classliteral -> * .)
    k               reduce using rule 73 (classliteral -> * .)
    l               reduce using rule 73 (classliteral -> * .)
    m               reduce using rule 73 (classliteral -> * .)
    n               reduce using rule 73 (classliteral -> * .)
    o               reduce using rule 73 (classliteral -> * .)
    p               reduce using rule 73 (classliteral -> * .)
    q               reduce using rule 73 (classliteral -> * .)
    r               reduce using rule 73 (classliteral -> * .)
    s               reduce using rule 73 (classliteral -> * .)
    t               reduce using rule 73 (classliteral -> * .)
    u               reduce using rule 73 (classliteral -> * .)
    v               reduce using rule 73 (classliteral -> * .)
    w               reduce using rule 73 (classliteral -> * .)
    x               reduce using rule 73 (classliteral -> * .)
    y               reduce using rule 73 (classliteral -> * .)
    z               reduce using rule 73 (classliteral -> * .)
    A               reduce using rule 73 (classliteral -> * .)
    B               reduce using rule 73 (classliteral -> * .)
    C               reduce using rule 73 (classliteral -> * .)
    D               reduce using rule 73 (classliteral -> * .)
    E               reduce using rule 73 (classliteral -> * .)
    F               reduce using rule 73 (classliteral -> * .)
    G               reduce using rule 73 (classliteral -> * .)
    H               reduce using rule 73 (classliteral -> * .)
    I               reduce using rule 73 (classliteral -> * .)
    J               reduce using rule 73 (classliteral -> * .)
    K               reduce using rule 73 (classliteral -> * .)
    L               reduce using rule 73 (classliteral -> * .)
    M               reduce using rule 73 (classliteral -> * .)
    N               reduce using rule 73 (classliteral -> * .)
    O               reduce using rule 73 (classliteral -> * .)
    P               reduce using rule 73 (classliteral -> * .)
    Q               reduce using rule 73 (classliteral -> * .)
    R               reduce using rule 73 (classliteral -> * .)
    S               reduce using rule 73 (classliteral -> * .)
    T               reduce using rule 73 (classliteral -> * .)
    U               reduce using rule 73 (classliteral -> * .)
    V               reduce using rule 73 (classliteral -> * .)
    W               reduce using rule 73 (classliteral -> * .)
    X               reduce using rule 73 (classliteral -> * .)
    Y               reduce using rule 73 (classliteral -> * .)
    Z               reduce using rule 73 (classliteral -> * .)
    ]               reduce using rule 73 (classliteral -> * .)
    |               reduce using rule 73 (classliteral -> * .)


state 109

    (70) classliteral -> ' .

    -               reduce using rule 70 (classliteral -> ' .)
    !               reduce using rule 70 (classliteral -> ' .)
    "               reduce using rule 70 (classliteral -> ' .)
    #               reduce using rule 70 (classliteral -> ' .)
    $               reduce using rule 70 (classliteral -> ' .)
    %               reduce using rule 70 (classliteral -> ' .)
    &               reduce using rule 70 (classliteral -> ' .)
    '               reduce using rule 70 (classliteral -> ' .)
    (               reduce using rule 70 (classliteral -> ' .)
    )               reduce using rule 70 (classliteral -> ' .)
    *               reduce using rule 70 (classliteral -> ' .)
    +               reduce using rule 70 (classliteral -> ' .)
    ,               reduce using rule 70 (classliteral -> ' .)
    .               reduce using rule 70 (classliteral -> ' .)
    /               reduce using rule 70 (classliteral -> ' .)
    :               reduce using rule 70 (classliteral -> ' .)
    ;               reduce using rule 70 (classliteral -> ' .)
    <               reduce using rule 70 (classliteral -> ' .)
    =               reduce using rule 70 (classliteral -> ' .)
    >               reduce using rule 70 (classliteral -> ' .)
    ?               reduce using rule 70 (classliteral -> ' .)
    @               reduce using rule 70 (classliteral -> ' .)
    [               reduce using rule 70 (classliteral -> ' .)
    \               reduce using rule 70 (classliteral -> ' .)
    _               reduce using rule 70 (classliteral -> ' .)
    `               reduce using rule 70 (classliteral -> ' .)
    {               reduce using rule 70 (classliteral -> ' .)
    }               reduce using rule 70 (classliteral -> ' .)
    ~               reduce using rule 70 (classliteral -> ' .)
    ESCAPED         reduce using rule 70 (classliteral -> ' .)
    DIGIT           reduce using rule 70 (classliteral -> ' .)
    OTHER           reduce using rule 70 (classliteral -> ' .)
    a               reduce using rule 70 (classliteral -> ' .)
    b               reduce using rule 70 (classliteral -> ' .)
    c               reduce using rule 70 (classliteral -> ' .)
    d               reduce using rule 70 (classliteral -> ' .)
    e               reduce using rule 70 (classliteral -> ' .)
    f               reduce using rule 70 (classliteral -> ' .)
    g               reduce using rule 70 (classliteral -> ' .)
    h               reduce using rule 70 (classliteral -> ' .)
    i               reduce using rule 70 (classliteral -> ' .)
    j               reduce using rule 70 (classliteral -> ' .)
    k               reduce using rule 70 (classliteral -> ' .)
    l               reduce using rule 70 (classliteral -> ' .)
    m               reduce using rule 70 (classliteral -> ' .)
    n               reduce using rule 70 (classliteral -> ' .)
    o               reduce using rule 70 (classliteral -> ' .)
    p               reduce using rule 70 (classliteral -> ' .)
    q               reduce using rule 70 (classliteral -> ' .)
    r               reduce using rule 70 (classliteral -> ' .)
    s               reduce using rule 70 (classliteral -> ' .)
    t               reduce using rule 70 (classliteral -> ' .)
    u               reduce using rule 70 (classliteral -> ' .)
    v               reduce using rule 70 (classliteral -> ' .)
    w               reduce using rule 70 (classliteral -> ' .)
    x               reduce using rule 70 (classliteral -> ' .)
    y               reduce using rule 70 (classliteral -> ' .)
    z               reduce using rule 70 (classliteral -> ' .)
    A               reduce using rule 70 (classliteral -> ' .)
    B               reduce using rule 70 (classliteral -> ' .)
    C               reduce using rule 70 (classliteral -> ' .)
    D               reduce using rule 70 (classliteral -> ' .)
    E               reduce using rule 70 (classliteral -> ' .)
    F               reduce using rule 70 (classliteral -> ' .)
    G               reduce using rule 70 (classliteral -> ' .)
    H               reduce using rule 70 (classliteral -> ' .)
    I               reduce using rule 70 (classliteral -> ' .)
    J               reduce using rule 70 (classliteral -> ' .)
    K               reduce using rule 70 (classliteral -> ' .)
    L               reduce using rule 70 (classliteral -> ' .)
    M               reduce using rule 70 (classliteral -> ' .)
    N               reduce using rule 70 (classliteral -> ' .)
    O               reduce using rule 70 (classliteral -> ' .)
    P               reduce using rule 70 (classliteral -> ' .)
    Q               reduce using rule 70 (classliteral -> ' .)
    R               reduce using rule 70 (classliteral -> ' .)
    S               reduce using rule 70 (classliteral -> ' .)
    T               reduce using rule 70 (classliteral -> ' .)
    U               reduce using rule 70 (classliteral -> ' .)
    V               reduce using rule 70 (classliteral -> ' .)
    W               reduce using rule 70 (classliteral -> ' .)
    X               reduce using rule 70 (classliteral -> ' .)
    Y               reduce using rule 70 (classliteral -> ' .)
    Z               reduce using rule 70 (classliteral -> ' .)
    ]               reduce using rule 70 (classliteral -> ' .)
    |               reduce using rule 70 (classliteral -> ' .)


state 110

    (88) classliteral -> ` .

    -               reduce using rule 88 (classliteral -> ` .)
    !               reduce using rule 88 (classliteral -> ` .)
    "               reduce using rule 88 (classliteral -> ` .)
    #               reduce using rule 88 (classliteral -> ` .)
    $               reduce using rule 88 (classliteral -> ` .)
    %               reduce using rule 88 (classliteral -> ` .)
    &               reduce using rule 88 (classliteral -> ` .)
    '               reduce using rule 88 (classliteral -> ` .)
    (               reduce using rule 88 (classliteral -> ` .)
    )               reduce using rule 88 (classliteral -> ` .)
    *               reduce using rule 88 (classliteral -> ` .)
    +               reduce using rule 88 (classliteral -> ` .)
    ,               reduce using rule 88 (classliteral -> ` .)
    .               reduce using rule 88 (classliteral -> ` .)
    /               reduce using rule 88 (classliteral -> ` .)
    :               reduce using rule 88 (classliteral -> ` .)
    ;               reduce using rule 88 (classliteral -> ` .)
    <               reduce using rule 88 (classliteral -> ` .)
    =               reduce using rule 88 (classliteral -> ` .)
    >               reduce using rule 88 (classliteral -> ` .)
    ?               reduce using rule 88 (classliteral -> ` .)
    @               reduce using rule 88 (classliteral -> ` .)
    [               reduce using rule 88 (classliteral -> ` .)
    \               reduce using rule 88 (classliteral -> ` .)
    _               reduce using rule 88 (classliteral -> ` .)
    `               reduce using rule 88 (classliteral -> ` .)
    {               reduce using rule 88 (classliteral -> ` .)
    }               reduce using rule 88 (classliteral -> ` .)
    ~               reduce using rule 88 (classliteral -> ` .)
    ESCAPED         reduce using rule 88 (classliteral -> ` .)
    DIGIT           reduce using rule 88 (classliteral -> ` .)
    OTHER           reduce using rule 88 (classliteral -> ` .)
    a               reduce using rule 88 (classliteral -> ` .)
    b               reduce using rule 88 (classliteral -> ` .)
    c               reduce using rule 88 (classliteral -> ` .)
    d               reduce using rule 88 (classliteral -> ` .)
    e               reduce using rule 88 (classliteral -> ` .)
    f               reduce using rule 88 (classliteral -> ` .)
    g               reduce using rule 88 (classliteral -> ` .)
    h               reduce using rule 88 (classliteral -> ` .)
    i               reduce using rule 88 (classliteral -> ` .)
    j               reduce using rule 88 (classliteral -> ` .)
    k               reduce using rule 88 (classliteral -> ` .)
    l               reduce using rule 88 (classliteral -> ` .)
    m               reduce using rule 88 (classliteral -> ` .)
    n               reduce using rule 88 (classliteral -> ` .)
    o               reduce using rule 88 (classliteral -> ` .)
    p               reduce using rule 88 (classliteral -> ` .)
    q               reduce using rule 88 (classliteral -> ` .)
    r               reduce using rule 88 (classliteral -> ` .)
    s               reduce using rule 88 (classliteral -> ` .)
    t               reduce using rule 88 (classliteral -> ` .)
    u               reduce using rule 88 (classliteral -> ` .)
    v               reduce using rule 88 (classliteral -> ` .)
    w               reduce using rule 88 (classliteral -> ` .)
    x               reduce using rule 88 (classliteral -> ` .)
    y               reduce using rule 88 (classliteral -> ` .)
    z               reduce using rule 88 (classliteral -> ` .)
    A               reduce using rule 88 (classliteral -> ` .)
    B               reduce using rule 88 (classliteral -> ` .)
    C               reduce using rule 88 (classliteral -> ` .)
    D               reduce using rule 88 (classliteral -> ` .)
    E               reduce using rule 88 (classliteral -> ` .)
    F               reduce using rule 88 (classliteral -> ` .)
    G               reduce using rule 88 (classliteral -> ` .)
    H               reduce using rule 88 (classliteral -> ` .)
    I               reduce using rule 88 (classliteral -> ` .)
    J               reduce using rule 88 (classliteral -> ` .)
    K               reduce using rule 88 (classliteral -> ` .)
    L               reduce using rule 88 (classliteral -> ` .)
    M               reduce using rule 88 (classliteral -> ` .)
    N               reduce using rule 88 (classliteral -> ` .)
    O               reduce using rule 88 (classliteral -> ` .)
    P               reduce using rule 88 (classliteral -> ` .)
    Q               reduce using rule 88 (classliteral -> ` .)
    R               reduce using rule 88 (classliteral -> ` .)
    S               reduce using rule 88 (classliteral -> ` .)
    T               reduce using rule 88 (classliteral -> ` .)
    U               reduce using rule 88 (classliteral -> ` .)
    V               reduce using rule 88 (classliteral -> ` .)
    W               reduce using rule 88 (classliteral -> ` .)
    X               reduce using rule 88 (classliteral -> ` .)
    Y               reduce using rule 88 (classliteral -> ` .)
    Z               reduce using rule 88 (classliteral -> ` .)
    ]               reduce using rule 88 (classliteral -> ` .)
    |               reduce using rule 88 (classliteral -> ` .)


state 111

    (55) charclass -> [ classitems . ]

    ]               shift and go to state 166


state 112

    (76) classliteral -> . .

    -               reduce using rule 76 (classliteral -> . .)
    !               reduce using rule 76 (classliteral -> . .)
    "               reduce using rule 76 (classliteral -> . .)
    #               reduce using rule 76 (classliteral -> . .)
    $               reduce using rule 76 (classliteral -> . .)
    %               reduce using rule 76 (classliteral -> . .)
    &               reduce using rule 76 (classliteral -> . .)
    '               reduce using rule 76 (classliteral -> . .)
    (               reduce using rule 76 (classliteral -> . .)
    )               reduce using rule 76 (classliteral -> . .)
    *               reduce using rule 76 (classliteral -> . .)
    +               reduce using rule 76 (classliteral -> . .)
    ,               reduce using rule 76 (classliteral -> . .)
    .               reduce using rule 76 (classliteral -> . .)
    /               reduce using rule 76 (classliteral -> . .)
    :               reduce using rule 76 (classliteral -> . .)
    ;               reduce using rule 76 (classliteral -> . .)
    <               reduce using rule 76 (classliteral -> . .)
    =               reduce using rule 76 (classliteral -> . .)
    >               reduce using rule 76 (classliteral -> . .)
    ?               reduce using rule 76 (classliteral -> . .)
    @               reduce using rule 76 (classliteral -> . .)
    [               reduce using rule 76 (classliteral -> . .)
    \               reduce using rule 76 (classliteral -> . .)
    _               reduce using rule 76 (classliteral -> . .)
    `               reduce using rule 76 (classliteral -> . .)
    {               reduce using rule 76 (classliteral -> . .)
    }               reduce using rule 76 (classliteral -> . .)
    ~               reduce using rule 76 (classliteral -> . .)
    ESCAPED         reduce using rule 76 (classliteral -> . .)
    DIGIT           reduce using rule 76 (classliteral -> . .)
    OTHER           reduce using rule 76 (classliteral -> . .)
    a               reduce using rule 76 (classliteral -> . .)
    b               reduce using rule 76 (classliteral -> . .)
    c               reduce using rule 76 (classliteral -> . .)
    d               reduce using rule 76 (classliteral -> . .)
    e               reduce using rule 76 (classliteral -> . .)
    f               reduce using rule 76 (classliteral -> . .)
    g               reduce using rule 76 (classliteral -> . .)
    h               reduce using rule 76 (classliteral -> . .)
    i               reduce using rule 76 (classliteral -> . .)
    j               reduce using rule 76 (classliteral -> . .)
    k               reduce using rule 76 (classliteral -> . .)
    l               reduce using rule 76 (classliteral -> . .)
    m               reduce using rule 76 (classliteral -> . .)
    n               reduce using rule 76 (classliteral -> . .)
    o               reduce using rule 76 (classliteral -> . .)
    p               reduce using rule 76 (classliteral -> . .)
    q               reduce using rule 76 (classliteral -> . .)
    r               reduce using rule 76 (classliteral -> . .)
    s               reduce using rule 76 (classliteral -> . .)
    t               reduce using rule 76 (classliteral -> . .)
    u               reduce using rule 76 (classliteral -> . .)
    v               reduce using rule 76 (classliteral -> . .)
    w               reduce using rule 76 (classliteral -> . .)
    x               reduce using rule 76 (classliteral -> . .)
    y               reduce using rule 76 (classliteral -> . .)
    z               reduce using rule 76 (classliteral -> . .)
    A               reduce using rule 76 (classliteral -> . .)
    B               reduce using rule 76 (classliteral -> . .)
    C               reduce using rule 76 (classliteral -> . .)
    D               reduce using rule 76 (classliteral -> . .)
    E               reduce using rule 76 (classliteral -> . .)
    F               reduce using rule 76 (classliteral -> . .)
    G               reduce using rule 76 (classliteral -> . .)
    H               reduce using rule 76 (classliteral -> . .)
    I               reduce using rule 76 (classliteral -> . .)
    J               reduce using rule 76 (classliteral -> . .)
    K               reduce using rule 76 (classliteral -> . .)
    L               reduce using rule 76 (classliteral -> . .)
    M               reduce using rule 76 (classliteral -> . .)
    N               reduce using rule 76 (classliteral -> . .)
    O               reduce using rule 76 (classliteral -> . .)
    P               reduce using rule 76 (classliteral -> . .)
    Q               reduce using rule 76 (classliteral -> . .)
    R               reduce using rule 76 (classliteral -> . .)
    S               reduce using rule 76 (classliteral -> . .)
    T               reduce using rule 76 (classliteral -> . .)
    U               reduce using rule 76 (classliteral -> . .)
    V               reduce using rule 76 (classliteral -> . .)
    W               reduce using rule 76 (classliteral -> . .)
    X               reduce using rule 76 (classliteral -> . .)
    Y               reduce using rule 76 (classliteral -> . .)
    Z               reduce using rule 76 (classliteral -> . .)
    ]               reduce using rule 76 (classliteral -> . .)
    |               reduce using rule 76 (classliteral -> . .)


state 113

    (91) classliteral -> ~ .

    -               reduce using rule 91 (classliteral -> ~ .)
    !               reduce using rule 91 (classliteral -> ~ .)
    "               reduce using rule 91 (classliteral -> ~ .)
    #               reduce using rule 91 (classliteral -> ~ .)
    $               reduce using rule 91 (classliteral -> ~ .)
    %               reduce using rule 91 (classliteral -> ~ .)
    &               reduce using rule 91 (classliteral -> ~ .)
    '               reduce using rule 91 (classliteral -> ~ .)
    (               reduce using rule 91 (classliteral -> ~ .)
    )               reduce using rule 91 (classliteral -> ~ .)
    *               reduce using rule 91 (classliteral -> ~ .)
    +               reduce using rule 91 (classliteral -> ~ .)
    ,               reduce using rule 91 (classliteral -> ~ .)
    .               reduce using rule 91 (classliteral -> ~ .)
    /               reduce using rule 91 (classliteral -> ~ .)
    :               reduce using rule 91 (classliteral -> ~ .)
    ;               reduce using rule 91 (classliteral -> ~ .)
    <               reduce using rule 91 (classliteral -> ~ .)
    =               reduce using rule 91 (classliteral -> ~ .)
    >               reduce using rule 91 (classliteral -> ~ .)
    ?               reduce using rule 91 (classliteral -> ~ .)
    @               reduce using rule 91 (classliteral -> ~ .)
    [               reduce using rule 91 (classliteral -> ~ .)
    \               reduce using rule 91 (classliteral -> ~ .)
    _               reduce using rule 91 (classliteral -> ~ .)
    `               reduce using rule 91 (classliteral -> ~ .)
    {               reduce using rule 91 (classliteral -> ~ .)
    }               reduce using rule 91 (classliteral -> ~ .)
    ~               reduce using rule 91 (classliteral -> ~ .)
    ESCAPED         reduce using rule 91 (classliteral -> ~ .)
    DIGIT           reduce using rule 91 (classliteral -> ~ .)
    OTHER           reduce using rule 91 (classliteral -> ~ .)
    a               reduce using rule 91 (classliteral -> ~ .)
    b               reduce using rule 91 (classliteral -> ~ .)
    c               reduce using rule 91 (classliteral -> ~ .)
    d               reduce using rule 91 (classliteral -> ~ .)
    e               reduce using rule 91 (classliteral -> ~ .)
    f               reduce using rule 91 (classliteral -> ~ .)
    g               reduce using rule 91 (classliteral -> ~ .)
    h               reduce using rule 91 (classliteral -> ~ .)
    i               reduce using rule 91 (classliteral -> ~ .)
    j               reduce using rule 91 (classliteral -> ~ .)
    k               reduce using rule 91 (classliteral -> ~ .)
    l               reduce using rule 91 (classliteral -> ~ .)
    m               reduce using rule 91 (classliteral -> ~ .)
    n               reduce using rule 91 (classliteral -> ~ .)
    o               reduce using rule 91 (classliteral -> ~ .)
    p               reduce using rule 91 (classliteral -> ~ .)
    q               reduce using rule 91 (classliteral -> ~ .)
    r               reduce using rule 91 (classliteral -> ~ .)
    s               reduce using rule 91 (classliteral -> ~ .)
    t               reduce using rule 91 (classliteral -> ~ .)
    u               reduce using rule 91 (classliteral -> ~ .)
    v               reduce using rule 91 (classliteral -> ~ .)
    w               reduce using rule 91 (classliteral -> ~ .)
    x               reduce using rule 91 (classliteral -> ~ .)
    y               reduce using rule 91 (classliteral -> ~ .)
    z               reduce using rule 91 (classliteral -> ~ .)
    A               reduce using rule 91 (classliteral -> ~ .)
    B               reduce using rule 91 (classliteral -> ~ .)
    C               reduce using rule 91 (classliteral -> ~ .)
    D               reduce using rule 91 (classliteral -> ~ .)
    E               reduce using rule 91 (classliteral -> ~ .)
    F               reduce using rule 91 (classliteral -> ~ .)
    G               reduce using rule 91 (classliteral -> ~ .)
    H               reduce using rule 91 (classliteral -> ~ .)
    I               reduce using rule 91 (classliteral -> ~ .)
    J               reduce using rule 91 (classliteral -> ~ .)
    K               reduce using rule 91 (classliteral -> ~ .)
    L               reduce using rule 91 (classliteral -> ~ .)
    M               reduce using rule 91 (classliteral -> ~ .)
    N               reduce using rule 91 (classliteral -> ~ .)
    O               reduce using rule 91 (classliteral -> ~ .)
    P               reduce using rule 91 (classliteral -> ~ .)
    Q               reduce using rule 91 (classliteral -> ~ .)
    R               reduce using rule 91 (classliteral -> ~ .)
    S               reduce using rule 91 (classliteral -> ~ .)
    T               reduce using rule 91 (classliteral -> ~ .)
    U               reduce using rule 91 (classliteral -> ~ .)
    V               reduce using rule 91 (classliteral -> ~ .)
    W               reduce using rule 91 (classliteral -> ~ .)
    X               reduce using rule 91 (classliteral -> ~ .)
    Y               reduce using rule 91 (classliteral -> ~ .)
    Z               reduce using rule 91 (classliteral -> ~ .)
    ]               reduce using rule 91 (classliteral -> ~ .)
    |               reduce using rule 91 (classliteral -> ~ .)


state 114

    (62) classatom -> classliteral .
    (93) classrange -> classliteral . - classliteral

    !               reduce using rule 62 (classatom -> classliteral .)
    "               reduce using rule 62 (classatom -> classliteral .)
    #               reduce using rule 62 (classatom -> classliteral .)
    $               reduce using rule 62 (classatom -> classliteral .)
    %               reduce using rule 62 (classatom -> classliteral .)
    &               reduce using rule 62 (classatom -> classliteral .)
    '               reduce using rule 62 (classatom -> classliteral .)
    (               reduce using rule 62 (classatom -> classliteral .)
    )               reduce using rule 62 (classatom -> classliteral .)
    *               reduce using rule 62 (classatom -> classliteral .)
    +               reduce using rule 62 (classatom -> classliteral .)
    ,               reduce using rule 62 (classatom -> classliteral .)
    .               reduce using rule 62 (classatom -> classliteral .)
    /               reduce using rule 62 (classatom -> classliteral .)
    :               reduce using rule 62 (classatom -> classliteral .)
    ;               reduce using rule 62 (classatom -> classliteral .)
    <               reduce using rule 62 (classatom -> classliteral .)
    =               reduce using rule 62 (classatom -> classliteral .)
    >               reduce using rule 62 (classatom -> classliteral .)
    ?               reduce using rule 62 (classatom -> classliteral .)
    @               reduce using rule 62 (classatom -> classliteral .)
    [               reduce using rule 62 (classatom -> classliteral .)
    \               reduce using rule 62 (classatom -> classliteral .)
    _               reduce using rule 62 (classatom -> classliteral .)
    `               reduce using rule 62 (classatom -> classliteral .)
    {               reduce using rule 62 (classatom -> classliteral .)
    }               reduce using rule 62 (classatom -> classliteral .)
    ~               reduce using rule 62 (classatom -> classliteral .)
    ESCAPED         reduce using rule 62 (classatom -> classliteral .)
    DIGIT           reduce using rule 62 (classatom -> classliteral .)
    OTHER           reduce using rule 62 (classatom -> classliteral .)
    a               reduce using rule 62 (classatom -> classliteral .)
    b               reduce using rule 62 (classatom -> classliteral .)
    c               reduce using rule 62 (classatom -> classliteral .)
    d               reduce using rule 62 (classatom -> classliteral .)
    e               reduce using rule 62 (classatom -> classliteral .)
    f               reduce using rule 62 (classatom -> classliteral .)
    g               reduce using rule 62 (classatom -> classliteral .)
    h               reduce using rule 62 (classatom -> classliteral .)
    i               reduce using rule 62 (classatom -> classliteral .)
    j               reduce using rule 62 (classatom -> classliteral .)
    k               reduce using rule 62 (classatom -> classliteral .)
    l               reduce using rule 62 (classatom -> classliteral .)
    m               reduce using rule 62 (classatom -> classliteral .)
    n               reduce using rule 62 (classatom -> classliteral .)
    o               reduce using rule 62 (classatom -> classliteral .)
    p               reduce using rule 62 (classatom -> classliteral .)
    q               reduce using rule 62 (classatom -> classliteral .)
    r               reduce using rule 62 (classatom -> classliteral .)
    s               reduce using rule 62 (classatom -> classliteral .)
    t               reduce using rule 62 (classatom -> classliteral .)
    u               reduce using rule 62 (classatom -> classliteral .)
    v               reduce using rule 62 (classatom -> classliteral .)
    w               reduce using rule 62 (classatom -> classliteral .)
    x               reduce using rule 62 (classatom -> classliteral .)
    y               reduce using rule 62 (classatom -> classliteral .)
    z               reduce using rule 62 (classatom -> classliteral .)
    A               reduce using rule 62 (classatom -> classliteral .)
    B               reduce using rule 62 (classatom -> classliteral .)
    C               reduce using rule 62 (classatom -> classliteral .)
    D               reduce using rule 62 (classatom -> classliteral .)
    E               reduce using rule 62 (classatom -> classliteral .)
    F               reduce using rule 62 (classatom -> classliteral .)
    G               reduce using rule 62 (classatom -> classliteral .)
    H               reduce using rule 62 (classatom -> classliteral .)
    I               reduce using rule 62 (classatom -> classliteral .)
    J               reduce using rule 62 (classatom -> classliteral .)
    K               reduce using rule 62 (classatom -> classliteral .)
    L               reduce using rule 62 (classatom -> classliteral .)
    M               reduce using rule 62 (classatom -> classliteral .)
    N               reduce using rule 62 (classatom -> classliteral .)
    O               reduce using rule 62 (classatom -> classliteral .)
    P               reduce using rule 62 (classatom -> classliteral .)
    Q               reduce using rule 62 (classatom -> classliteral .)
    R               reduce using rule 62 (classatom -> classliteral .)
    S               reduce using rule 62 (classatom -> classliteral .)
    T               reduce using rule 62 (classatom -> classliteral .)
    U               reduce using rule 62 (classatom -> classliteral .)
    V               reduce using rule 62 (classatom -> classliteral .)
    W               reduce using rule 62 (classatom -> classliteral .)
    X               reduce using rule 62 (classatom -> classliteral .)
    Y               reduce using rule 62 (classatom -> classliteral .)
    Z               reduce using rule 62 (classatom -> classliteral .)
    |               reduce using rule 62 (classatom -> classliteral .)
    ]               reduce using rule 62 (classatom -> classliteral .)
    -               shift and go to state 167


state 115

    (57) classitems -> classitems2 .

    ]               reduce using rule 57 (classitems -> classitems2 .)


state 116

    (79) classliteral -> ; .

    -               reduce using rule 79 (classliteral -> ; .)
    !               reduce using rule 79 (classliteral -> ; .)
    "               reduce using rule 79 (classliteral -> ; .)
    #               reduce using rule 79 (classliteral -> ; .)
    $               reduce using rule 79 (classliteral -> ; .)
    %               reduce using rule 79 (classliteral -> ; .)
    &               reduce using rule 79 (classliteral -> ; .)
    '               reduce using rule 79 (classliteral -> ; .)
    (               reduce using rule 79 (classliteral -> ; .)
    )               reduce using rule 79 (classliteral -> ; .)
    *               reduce using rule 79 (classliteral -> ; .)
    +               reduce using rule 79 (classliteral -> ; .)
    ,               reduce using rule 79 (classliteral -> ; .)
    .               reduce using rule 79 (classliteral -> ; .)
    /               reduce using rule 79 (classliteral -> ; .)
    :               reduce using rule 79 (classliteral -> ; .)
    ;               reduce using rule 79 (classliteral -> ; .)
    <               reduce using rule 79 (classliteral -> ; .)
    =               reduce using rule 79 (classliteral -> ; .)
    >               reduce using rule 79 (classliteral -> ; .)
    ?               reduce using rule 79 (classliteral -> ; .)
    @               reduce using rule 79 (classliteral -> ; .)
    [               reduce using rule 79 (classliteral -> ; .)
    \               reduce using rule 79 (classliteral -> ; .)
    _               reduce using rule 79 (classliteral -> ; .)
    `               reduce using rule 79 (classliteral -> ; .)
    {               reduce using rule 79 (classliteral -> ; .)
    }               reduce using rule 79 (classliteral -> ; .)
    ~               reduce using rule 79 (classliteral -> ; .)
    ESCAPED         reduce using rule 79 (classliteral -> ; .)
    DIGIT           reduce using rule 79 (classliteral -> ; .)
    OTHER           reduce using rule 79 (classliteral -> ; .)
    a               reduce using rule 79 (classliteral -> ; .)
    b               reduce using rule 79 (classliteral -> ; .)
    c               reduce using rule 79 (classliteral -> ; .)
    d               reduce using rule 79 (classliteral -> ; .)
    e               reduce using rule 79 (classliteral -> ; .)
    f               reduce using rule 79 (classliteral -> ; .)
    g               reduce using rule 79 (classliteral -> ; .)
    h               reduce using rule 79 (classliteral -> ; .)
    i               reduce using rule 79 (classliteral -> ; .)
    j               reduce using rule 79 (classliteral -> ; .)
    k               reduce using rule 79 (classliteral -> ; .)
    l               reduce using rule 79 (classliteral -> ; .)
    m               reduce using rule 79 (classliteral -> ; .)
    n               reduce using rule 79 (classliteral -> ; .)
    o               reduce using rule 79 (classliteral -> ; .)
    p               reduce using rule 79 (classliteral -> ; .)
    q               reduce using rule 79 (classliteral -> ; .)
    r               reduce using rule 79 (classliteral -> ; .)
    s               reduce using rule 79 (classliteral -> ; .)
    t               reduce using rule 79 (classliteral -> ; .)
    u               reduce using rule 79 (classliteral -> ; .)
    v               reduce using rule 79 (classliteral -> ; .)
    w               reduce using rule 79 (classliteral -> ; .)
    x               reduce using rule 79 (classliteral -> ; .)
    y               reduce using rule 79 (classliteral -> ; .)
    z               reduce using rule 79 (classliteral -> ; .)
    A               reduce using rule 79 (classliteral -> ; .)
    B               reduce using rule 79 (classliteral -> ; .)
    C               reduce using rule 79 (classliteral -> ; .)
    D               reduce using rule 79 (classliteral -> ; .)
    E               reduce using rule 79 (classliteral -> ; .)
    F               reduce using rule 79 (classliteral -> ; .)
    G               reduce using rule 79 (classliteral -> ; .)
    H               reduce using rule 79 (classliteral -> ; .)
    I               reduce using rule 79 (classliteral -> ; .)
    J               reduce using rule 79 (classliteral -> ; .)
    K               reduce using rule 79 (classliteral -> ; .)
    L               reduce using rule 79 (classliteral -> ; .)
    M               reduce using rule 79 (classliteral -> ; .)
    N               reduce using rule 79 (classliteral -> ; .)
    O               reduce using rule 79 (classliteral -> ; .)
    P               reduce using rule 79 (classliteral -> ; .)
    Q               reduce using rule 79 (classliteral -> ; .)
    R               reduce using rule 79 (classliteral -> ; .)
    S               reduce using rule 79 (classliteral -> ; .)
    T               reduce using rule 79 (classliteral -> ; .)
    U               reduce using rule 79 (classliteral -> ; .)
    V               reduce using rule 79 (classliteral -> ; .)
    W               reduce using rule 79 (classliteral -> ; .)
    X               reduce using rule 79 (classliteral -> ; .)
    Y               reduce using rule 79 (classliteral -> ; .)
    Z               reduce using rule 79 (classliteral -> ; .)
    ]               reduce using rule 79 (classliteral -> ; .)
    |               reduce using rule 79 (classliteral -> ; .)


state 117

    (71) classliteral -> ( .

    -               reduce using rule 71 (classliteral -> ( .)
    !               reduce using rule 71 (classliteral -> ( .)
    "               reduce using rule 71 (classliteral -> ( .)
    #               reduce using rule 71 (classliteral -> ( .)
    $               reduce using rule 71 (classliteral -> ( .)
    %               reduce using rule 71 (classliteral -> ( .)
    &               reduce using rule 71 (classliteral -> ( .)
    '               reduce using rule 71 (classliteral -> ( .)
    (               reduce using rule 71 (classliteral -> ( .)
    )               reduce using rule 71 (classliteral -> ( .)
    *               reduce using rule 71 (classliteral -> ( .)
    +               reduce using rule 71 (classliteral -> ( .)
    ,               reduce using rule 71 (classliteral -> ( .)
    .               reduce using rule 71 (classliteral -> ( .)
    /               reduce using rule 71 (classliteral -> ( .)
    :               reduce using rule 71 (classliteral -> ( .)
    ;               reduce using rule 71 (classliteral -> ( .)
    <               reduce using rule 71 (classliteral -> ( .)
    =               reduce using rule 71 (classliteral -> ( .)
    >               reduce using rule 71 (classliteral -> ( .)
    ?               reduce using rule 71 (classliteral -> ( .)
    @               reduce using rule 71 (classliteral -> ( .)
    [               reduce using rule 71 (classliteral -> ( .)
    \               reduce using rule 71 (classliteral -> ( .)
    _               reduce using rule 71 (classliteral -> ( .)
    `               reduce using rule 71 (classliteral -> ( .)
    {               reduce using rule 71 (classliteral -> ( .)
    }               reduce using rule 71 (classliteral -> ( .)
    ~               reduce using rule 71 (classliteral -> ( .)
    ESCAPED         reduce using rule 71 (classliteral -> ( .)
    DIGIT           reduce using rule 71 (classliteral -> ( .)
    OTHER           reduce using rule 71 (classliteral -> ( .)
    a               reduce using rule 71 (classliteral -> ( .)
    b               reduce using rule 71 (classliteral -> ( .)
    c               reduce using rule 71 (classliteral -> ( .)
    d               reduce using rule 71 (classliteral -> ( .)
    e               reduce using rule 71 (classliteral -> ( .)
    f               reduce using rule 71 (classliteral -> ( .)
    g               reduce using rule 71 (classliteral -> ( .)
    h               reduce using rule 71 (classliteral -> ( .)
    i               reduce using rule 71 (classliteral -> ( .)
    j               reduce using rule 71 (classliteral -> ( .)
    k               reduce using rule 71 (classliteral -> ( .)
    l               reduce using rule 71 (classliteral -> ( .)
    m               reduce using rule 71 (classliteral -> ( .)
    n               reduce using rule 71 (classliteral -> ( .)
    o               reduce using rule 71 (classliteral -> ( .)
    p               reduce using rule 71 (classliteral -> ( .)
    q               reduce using rule 71 (classliteral -> ( .)
    r               reduce using rule 71 (classliteral -> ( .)
    s               reduce using rule 71 (classliteral -> ( .)
    t               reduce using rule 71 (classliteral -> ( .)
    u               reduce using rule 71 (classliteral -> ( .)
    v               reduce using rule 71 (classliteral -> ( .)
    w               reduce using rule 71 (classliteral -> ( .)
    x               reduce using rule 71 (classliteral -> ( .)
    y               reduce using rule 71 (classliteral -> ( .)
    z               reduce using rule 71 (classliteral -> ( .)
    A               reduce using rule 71 (classliteral -> ( .)
    B               reduce using rule 71 (classliteral -> ( .)
    C               reduce using rule 71 (classliteral -> ( .)
    D               reduce using rule 71 (classliteral -> ( .)
    E               reduce using rule 71 (classliteral -> ( .)
    F               reduce using rule 71 (classliteral -> ( .)
    G               reduce using rule 71 (classliteral -> ( .)
    H               reduce using rule 71 (classliteral -> ( .)
    I               reduce using rule 71 (classliteral -> ( .)
    J               reduce using rule 71 (classliteral -> ( .)
    K               reduce using rule 71 (classliteral -> ( .)
    L               reduce using rule 71 (classliteral -> ( .)
    M               reduce using rule 71 (classliteral -> ( .)
    N               reduce using rule 71 (classliteral -> ( .)
    O               reduce using rule 71 (classliteral -> ( .)
    P               reduce using rule 71 (classliteral -> ( .)
    Q               reduce using rule 71 (classliteral -> ( .)
    R               reduce using rule 71 (classliteral -> ( .)
    S               reduce using rule 71 (classliteral -> ( .)
    T               reduce using rule 71 (classliteral -> ( .)
    U               reduce using rule 71 (classliteral -> ( .)
    V               reduce using rule 71 (classliteral -> ( .)
    W               reduce using rule 71 (classliteral -> ( .)
    X               reduce using rule 71 (classliteral -> ( .)
    Y               reduce using rule 71 (classliteral -> ( .)
    Z               reduce using rule 71 (classliteral -> ( .)
    ]               reduce using rule 71 (classliteral -> ( .)
    |               reduce using rule 71 (classliteral -> ( .)


state 118

    (72) classliteral -> ) .

    -               reduce using rule 72 (classliteral -> ) .)
    !               reduce using rule 72 (classliteral -> ) .)
    "               reduce using rule 72 (classliteral -> ) .)
    #               reduce using rule 72 (classliteral -> ) .)
    $               reduce using rule 72 (classliteral -> ) .)
    %               reduce using rule 72 (classliteral -> ) .)
    &               reduce using rule 72 (classliteral -> ) .)
    '               reduce using rule 72 (classliteral -> ) .)
    (               reduce using rule 72 (classliteral -> ) .)
    )               reduce using rule 72 (classliteral -> ) .)
    *               reduce using rule 72 (classliteral -> ) .)
    +               reduce using rule 72 (classliteral -> ) .)
    ,               reduce using rule 72 (classliteral -> ) .)
    .               reduce using rule 72 (classliteral -> ) .)
    /               reduce using rule 72 (classliteral -> ) .)
    :               reduce using rule 72 (classliteral -> ) .)
    ;               reduce using rule 72 (classliteral -> ) .)
    <               reduce using rule 72 (classliteral -> ) .)
    =               reduce using rule 72 (classliteral -> ) .)
    >               reduce using rule 72 (classliteral -> ) .)
    ?               reduce using rule 72 (classliteral -> ) .)
    @               reduce using rule 72 (classliteral -> ) .)
    [               reduce using rule 72 (classliteral -> ) .)
    \               reduce using rule 72 (classliteral -> ) .)
    _               reduce using rule 72 (classliteral -> ) .)
    `               reduce using rule 72 (classliteral -> ) .)
    {               reduce using rule 72 (classliteral -> ) .)
    }               reduce using rule 72 (classliteral -> ) .)
    ~               reduce using rule 72 (classliteral -> ) .)
    ESCAPED         reduce using rule 72 (classliteral -> ) .)
    DIGIT           reduce using rule 72 (classliteral -> ) .)
    OTHER           reduce using rule 72 (classliteral -> ) .)
    a               reduce using rule 72 (classliteral -> ) .)
    b               reduce using rule 72 (classliteral -> ) .)
    c               reduce using rule 72 (classliteral -> ) .)
    d               reduce using rule 72 (classliteral -> ) .)
    e               reduce using rule 72 (classliteral -> ) .)
    f               reduce using rule 72 (classliteral -> ) .)
    g               reduce using rule 72 (classliteral -> ) .)
    h               reduce using rule 72 (classliteral -> ) .)
    i               reduce using rule 72 (classliteral -> ) .)
    j               reduce using rule 72 (classliteral -> ) .)
    k               reduce using rule 72 (classliteral -> ) .)
    l               reduce using rule 72 (classliteral -> ) .)
    m               reduce using rule 72 (classliteral -> ) .)
    n               reduce using rule 72 (classliteral -> ) .)
    o               reduce using rule 72 (classliteral -> ) .)
    p               reduce using rule 72 (classliteral -> ) .)
    q               reduce using rule 72 (classliteral -> ) .)
    r               reduce using rule 72 (classliteral -> ) .)
    s               reduce using rule 72 (classliteral -> ) .)
    t               reduce using rule 72 (classliteral -> ) .)
    u               reduce using rule 72 (classliteral -> ) .)
    v               reduce using rule 72 (classliteral -> ) .)
    w               reduce using rule 72 (classliteral -> ) .)
    x               reduce using rule 72 (classliteral -> ) .)
    y               reduce using rule 72 (classliteral -> ) .)
    z               reduce using rule 72 (classliteral -> ) .)
    A               reduce using rule 72 (classliteral -> ) .)
    B               reduce using rule 72 (classliteral -> ) .)
    C               reduce using rule 72 (classliteral -> ) .)
    D               reduce using rule 72 (classliteral -> ) .)
    E               reduce using rule 72 (classliteral -> ) .)
    F               reduce using rule 72 (classliteral -> ) .)
    G               reduce using rule 72 (classliteral -> ) .)
    H               reduce using rule 72 (classliteral -> ) .)
    I               reduce using rule 72 (classliteral -> ) .)
    J               reduce using rule 72 (classliteral -> ) .)
    K               reduce using rule 72 (classliteral -> ) .)
    L               reduce using rule 72 (classliteral -> ) .)
    M               reduce using rule 72 (classliteral -> ) .)
    N               reduce using rule 72 (classliteral -> ) .)
    O               reduce using rule 72 (classliteral -> ) .)
    P               reduce using rule 72 (classliteral -> ) .)
    Q               reduce using rule 72 (classliteral -> ) .)
    R               reduce using rule 72 (classliteral -> ) .)
    S               reduce using rule 72 (classliteral -> ) .)
    T               reduce using rule 72 (classliteral -> ) .)
    U               reduce using rule 72 (classliteral -> ) .)
    V               reduce using rule 72 (classliteral -> ) .)
    W               reduce using rule 72 (classliteral -> ) .)
    X               reduce using rule 72 (classliteral -> ) .)
    Y               reduce using rule 72 (classliteral -> ) .)
    Z               reduce using rule 72 (classliteral -> ) .)
    ]               reduce using rule 72 (classliteral -> ) .)
    |               reduce using rule 72 (classliteral -> ) .)


state 119

    (77) classliteral -> / .

    -               reduce using rule 77 (classliteral -> / .)
    !               reduce using rule 77 (classliteral -> / .)
    "               reduce using rule 77 (classliteral -> / .)
    #               reduce using rule 77 (classliteral -> / .)
    $               reduce using rule 77 (classliteral -> / .)
    %               reduce using rule 77 (classliteral -> / .)
    &               reduce using rule 77 (classliteral -> / .)
    '               reduce using rule 77 (classliteral -> / .)
    (               reduce using rule 77 (classliteral -> / .)
    )               reduce using rule 77 (classliteral -> / .)
    *               reduce using rule 77 (classliteral -> / .)
    +               reduce using rule 77 (classliteral -> / .)
    ,               reduce using rule 77 (classliteral -> / .)
    .               reduce using rule 77 (classliteral -> / .)
    /               reduce using rule 77 (classliteral -> / .)
    :               reduce using rule 77 (classliteral -> / .)
    ;               reduce using rule 77 (classliteral -> / .)
    <               reduce using rule 77 (classliteral -> / .)
    =               reduce using rule 77 (classliteral -> / .)
    >               reduce using rule 77 (classliteral -> / .)
    ?               reduce using rule 77 (classliteral -> / .)
    @               reduce using rule 77 (classliteral -> / .)
    [               reduce using rule 77 (classliteral -> / .)
    \               reduce using rule 77 (classliteral -> / .)
    _               reduce using rule 77 (classliteral -> / .)
    `               reduce using rule 77 (classliteral -> / .)
    {               reduce using rule 77 (classliteral -> / .)
    }               reduce using rule 77 (classliteral -> / .)
    ~               reduce using rule 77 (classliteral -> / .)
    ESCAPED         reduce using rule 77 (classliteral -> / .)
    DIGIT           reduce using rule 77 (classliteral -> / .)
    OTHER           reduce using rule 77 (classliteral -> / .)
    a               reduce using rule 77 (classliteral -> / .)
    b               reduce using rule 77 (classliteral -> / .)
    c               reduce using rule 77 (classliteral -> / .)
    d               reduce using rule 77 (classliteral -> / .)
    e               reduce using rule 77 (classliteral -> / .)
    f               reduce using rule 77 (classliteral -> / .)
    g               reduce using rule 77 (classliteral -> / .)
    h               reduce using rule 77 (classliteral -> / .)
    i               reduce using rule 77 (classliteral -> / .)
    j               reduce using rule 77 (classliteral -> / .)
    k               reduce using rule 77 (classliteral -> / .)
    l               reduce using rule 77 (classliteral -> / .)
    m               reduce using rule 77 (classliteral -> / .)
    n               reduce using rule 77 (classliteral -> / .)
    o               reduce using rule 77 (classliteral -> / .)
    p               reduce using rule 77 (classliteral -> / .)
    q               reduce using rule 77 (classliteral -> / .)
    r               reduce using rule 77 (classliteral -> / .)
    s               reduce using rule 77 (classliteral -> / .)
    t               reduce using rule 77 (classliteral -> / .)
    u               reduce using rule 77 (classliteral -> / .)
    v               reduce using rule 77 (classliteral -> / .)
    w               reduce using rule 77 (classliteral -> / .)
    x               reduce using rule 77 (classliteral -> / .)
    y               reduce using rule 77 (classliteral -> / .)
    z               reduce using rule 77 (classliteral -> / .)
    A               reduce using rule 77 (classliteral -> / .)
    B               reduce using rule 77 (classliteral -> / .)
    C               reduce using rule 77 (classliteral -> / .)
    D               reduce using rule 77 (classliteral -> / .)
    E               reduce using rule 77 (classliteral -> / .)
    F               reduce using rule 77 (classliteral -> / .)
    G               reduce using rule 77 (classliteral -> / .)
    H               reduce using rule 77 (classliteral -> / .)
    I               reduce using rule 77 (classliteral -> / .)
    J               reduce using rule 77 (classliteral -> / .)
    K               reduce using rule 77 (classliteral -> / .)
    L               reduce using rule 77 (classliteral -> / .)
    M               reduce using rule 77 (classliteral -> / .)
    N               reduce using rule 77 (classliteral -> / .)
    O               reduce using rule 77 (classliteral -> / .)
    P               reduce using rule 77 (classliteral -> / .)
    Q               reduce using rule 77 (classliteral -> / .)
    R               reduce using rule 77 (classliteral -> / .)
    S               reduce using rule 77 (classliteral -> / .)
    T               reduce using rule 77 (classliteral -> / .)
    U               reduce using rule 77 (classliteral -> / .)
    V               reduce using rule 77 (classliteral -> / .)
    W               reduce using rule 77 (classliteral -> / .)
    X               reduce using rule 77 (classliteral -> / .)
    Y               reduce using rule 77 (classliteral -> / .)
    Z               reduce using rule 77 (classliteral -> / .)
    ]               reduce using rule 77 (classliteral -> / .)
    |               reduce using rule 77 (classliteral -> / .)


state 120

    (60) baseitems -> classatom .
    (61) baseitems -> classatom . baseitems
    (60) baseitems -> . classatom
    (61) baseitems -> . classatom baseitems
    (62) classatom -> . classliteral
    (63) classatom -> . classrange
    (64) classliteral -> . !
    (65) classliteral -> . "
    (66) classliteral -> . #
    (67) classliteral -> . $
    (68) classliteral -> . %
    (69) classliteral -> . &
    (70) classliteral -> . '
    (71) classliteral -> . (
    (72) classliteral -> . )
    (73) classliteral -> . *
    (74) classliteral -> . +
    (75) classliteral -> . ,
    (76) classliteral -> . .
    (77) classliteral -> . /
    (78) classliteral -> . :
    (79) classliteral -> . ;
    (80) classliteral -> . <
    (81) classliteral -> . =
    (82) classliteral -> . >
    (83) classliteral -> . ?
    (84) classliteral -> . @
    (85) classliteral -> . [
    (86) classliteral -> . \
    (87) classliteral -> . _
    (88) classliteral -> . `
    (89) classliteral -> . {
    (90) classliteral -> . }
    (91) classliteral -> . ~
    (92) classliteral -> . literal
    (93) classrange -> . classliteral - classliteral
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    |               reduce using rule 60 (baseitems -> classatom .)
    ]               reduce using rule 60 (baseitems -> classatom .)
    !               shift and go to state 137
    "               shift and go to state 140
    #               shift and go to state 107
    $               shift and go to state 132
    %               shift and go to state 138
    &               shift and go to state 135
    '               shift and go to state 109
    (               shift and go to state 117
    )               shift and go to state 118
    *               shift and go to state 108
    +               shift and go to state 122
    ,               shift and go to state 136
    .               shift and go to state 112
    /               shift and go to state 119
    :               shift and go to state 125
    ;               shift and go to state 116
    <               shift and go to state 131
    =               shift and go to state 142
    >               shift and go to state 134
    ?               shift and go to state 124
    @               shift and go to state 126
    [               shift and go to state 121
    \               shift and go to state 128
    _               shift and go to state 130
    `               shift and go to state 110
    {               shift and go to state 123
    }               shift and go to state 127
    ~               shift and go to state 113
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 86
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88
    classatom                      shift and go to state 120
    literal                        shift and go to state 129
    classliteral                   shift and go to state 114
    classrange                     shift and go to state 141
    baseitems                      shift and go to state 168

state 121

    (85) classliteral -> [ .

    -               reduce using rule 85 (classliteral -> [ .)
    !               reduce using rule 85 (classliteral -> [ .)
    "               reduce using rule 85 (classliteral -> [ .)
    #               reduce using rule 85 (classliteral -> [ .)
    $               reduce using rule 85 (classliteral -> [ .)
    %               reduce using rule 85 (classliteral -> [ .)
    &               reduce using rule 85 (classliteral -> [ .)
    '               reduce using rule 85 (classliteral -> [ .)
    (               reduce using rule 85 (classliteral -> [ .)
    )               reduce using rule 85 (classliteral -> [ .)
    *               reduce using rule 85 (classliteral -> [ .)
    +               reduce using rule 85 (classliteral -> [ .)
    ,               reduce using rule 85 (classliteral -> [ .)
    .               reduce using rule 85 (classliteral -> [ .)
    /               reduce using rule 85 (classliteral -> [ .)
    :               reduce using rule 85 (classliteral -> [ .)
    ;               reduce using rule 85 (classliteral -> [ .)
    <               reduce using rule 85 (classliteral -> [ .)
    =               reduce using rule 85 (classliteral -> [ .)
    >               reduce using rule 85 (classliteral -> [ .)
    ?               reduce using rule 85 (classliteral -> [ .)
    @               reduce using rule 85 (classliteral -> [ .)
    [               reduce using rule 85 (classliteral -> [ .)
    \               reduce using rule 85 (classliteral -> [ .)
    _               reduce using rule 85 (classliteral -> [ .)
    `               reduce using rule 85 (classliteral -> [ .)
    {               reduce using rule 85 (classliteral -> [ .)
    }               reduce using rule 85 (classliteral -> [ .)
    ~               reduce using rule 85 (classliteral -> [ .)
    ESCAPED         reduce using rule 85 (classliteral -> [ .)
    DIGIT           reduce using rule 85 (classliteral -> [ .)
    OTHER           reduce using rule 85 (classliteral -> [ .)
    a               reduce using rule 85 (classliteral -> [ .)
    b               reduce using rule 85 (classliteral -> [ .)
    c               reduce using rule 85 (classliteral -> [ .)
    d               reduce using rule 85 (classliteral -> [ .)
    e               reduce using rule 85 (classliteral -> [ .)
    f               reduce using rule 85 (classliteral -> [ .)
    g               reduce using rule 85 (classliteral -> [ .)
    h               reduce using rule 85 (classliteral -> [ .)
    i               reduce using rule 85 (classliteral -> [ .)
    j               reduce using rule 85 (classliteral -> [ .)
    k               reduce using rule 85 (classliteral -> [ .)
    l               reduce using rule 85 (classliteral -> [ .)
    m               reduce using rule 85 (classliteral -> [ .)
    n               reduce using rule 85 (classliteral -> [ .)
    o               reduce using rule 85 (classliteral -> [ .)
    p               reduce using rule 85 (classliteral -> [ .)
    q               reduce using rule 85 (classliteral -> [ .)
    r               reduce using rule 85 (classliteral -> [ .)
    s               reduce using rule 85 (classliteral -> [ .)
    t               reduce using rule 85 (classliteral -> [ .)
    u               reduce using rule 85 (classliteral -> [ .)
    v               reduce using rule 85 (classliteral -> [ .)
    w               reduce using rule 85 (classliteral -> [ .)
    x               reduce using rule 85 (classliteral -> [ .)
    y               reduce using rule 85 (classliteral -> [ .)
    z               reduce using rule 85 (classliteral -> [ .)
    A               reduce using rule 85 (classliteral -> [ .)
    B               reduce using rule 85 (classliteral -> [ .)
    C               reduce using rule 85 (classliteral -> [ .)
    D               reduce using rule 85 (classliteral -> [ .)
    E               reduce using rule 85 (classliteral -> [ .)
    F               reduce using rule 85 (classliteral -> [ .)
    G               reduce using rule 85 (classliteral -> [ .)
    H               reduce using rule 85 (classliteral -> [ .)
    I               reduce using rule 85 (classliteral -> [ .)
    J               reduce using rule 85 (classliteral -> [ .)
    K               reduce using rule 85 (classliteral -> [ .)
    L               reduce using rule 85 (classliteral -> [ .)
    M               reduce using rule 85 (classliteral -> [ .)
    N               reduce using rule 85 (classliteral -> [ .)
    O               reduce using rule 85 (classliteral -> [ .)
    P               reduce using rule 85 (classliteral -> [ .)
    Q               reduce using rule 85 (classliteral -> [ .)
    R               reduce using rule 85 (classliteral -> [ .)
    S               reduce using rule 85 (classliteral -> [ .)
    T               reduce using rule 85 (classliteral -> [ .)
    U               reduce using rule 85 (classliteral -> [ .)
    V               reduce using rule 85 (classliteral -> [ .)
    W               reduce using rule 85 (classliteral -> [ .)
    X               reduce using rule 85 (classliteral -> [ .)
    Y               reduce using rule 85 (classliteral -> [ .)
    Z               reduce using rule 85 (classliteral -> [ .)
    ]               reduce using rule 85 (classliteral -> [ .)
    |               reduce using rule 85 (classliteral -> [ .)


state 122

    (74) classliteral -> + .

    -               reduce using rule 74 (classliteral -> + .)
    !               reduce using rule 74 (classliteral -> + .)
    "               reduce using rule 74 (classliteral -> + .)
    #               reduce using rule 74 (classliteral -> + .)
    $               reduce using rule 74 (classliteral -> + .)
    %               reduce using rule 74 (classliteral -> + .)
    &               reduce using rule 74 (classliteral -> + .)
    '               reduce using rule 74 (classliteral -> + .)
    (               reduce using rule 74 (classliteral -> + .)
    )               reduce using rule 74 (classliteral -> + .)
    *               reduce using rule 74 (classliteral -> + .)
    +               reduce using rule 74 (classliteral -> + .)
    ,               reduce using rule 74 (classliteral -> + .)
    .               reduce using rule 74 (classliteral -> + .)
    /               reduce using rule 74 (classliteral -> + .)
    :               reduce using rule 74 (classliteral -> + .)
    ;               reduce using rule 74 (classliteral -> + .)
    <               reduce using rule 74 (classliteral -> + .)
    =               reduce using rule 74 (classliteral -> + .)
    >               reduce using rule 74 (classliteral -> + .)
    ?               reduce using rule 74 (classliteral -> + .)
    @               reduce using rule 74 (classliteral -> + .)
    [               reduce using rule 74 (classliteral -> + .)
    \               reduce using rule 74 (classliteral -> + .)
    _               reduce using rule 74 (classliteral -> + .)
    `               reduce using rule 74 (classliteral -> + .)
    {               reduce using rule 74 (classliteral -> + .)
    }               reduce using rule 74 (classliteral -> + .)
    ~               reduce using rule 74 (classliteral -> + .)
    ESCAPED         reduce using rule 74 (classliteral -> + .)
    DIGIT           reduce using rule 74 (classliteral -> + .)
    OTHER           reduce using rule 74 (classliteral -> + .)
    a               reduce using rule 74 (classliteral -> + .)
    b               reduce using rule 74 (classliteral -> + .)
    c               reduce using rule 74 (classliteral -> + .)
    d               reduce using rule 74 (classliteral -> + .)
    e               reduce using rule 74 (classliteral -> + .)
    f               reduce using rule 74 (classliteral -> + .)
    g               reduce using rule 74 (classliteral -> + .)
    h               reduce using rule 74 (classliteral -> + .)
    i               reduce using rule 74 (classliteral -> + .)
    j               reduce using rule 74 (classliteral -> + .)
    k               reduce using rule 74 (classliteral -> + .)
    l               reduce using rule 74 (classliteral -> + .)
    m               reduce using rule 74 (classliteral -> + .)
    n               reduce using rule 74 (classliteral -> + .)
    o               reduce using rule 74 (classliteral -> + .)
    p               reduce using rule 74 (classliteral -> + .)
    q               reduce using rule 74 (classliteral -> + .)
    r               reduce using rule 74 (classliteral -> + .)
    s               reduce using rule 74 (classliteral -> + .)
    t               reduce using rule 74 (classliteral -> + .)
    u               reduce using rule 74 (classliteral -> + .)
    v               reduce using rule 74 (classliteral -> + .)
    w               reduce using rule 74 (classliteral -> + .)
    x               reduce using rule 74 (classliteral -> + .)
    y               reduce using rule 74 (classliteral -> + .)
    z               reduce using rule 74 (classliteral -> + .)
    A               reduce using rule 74 (classliteral -> + .)
    B               reduce using rule 74 (classliteral -> + .)
    C               reduce using rule 74 (classliteral -> + .)
    D               reduce using rule 74 (classliteral -> + .)
    E               reduce using rule 74 (classliteral -> + .)
    F               reduce using rule 74 (classliteral -> + .)
    G               reduce using rule 74 (classliteral -> + .)
    H               reduce using rule 74 (classliteral -> + .)
    I               reduce using rule 74 (classliteral -> + .)
    J               reduce using rule 74 (classliteral -> + .)
    K               reduce using rule 74 (classliteral -> + .)
    L               reduce using rule 74 (classliteral -> + .)
    M               reduce using rule 74 (classliteral -> + .)
    N               reduce using rule 74 (classliteral -> + .)
    O               reduce using rule 74 (classliteral -> + .)
    P               reduce using rule 74 (classliteral -> + .)
    Q               reduce using rule 74 (classliteral -> + .)
    R               reduce using rule 74 (classliteral -> + .)
    S               reduce using rule 74 (classliteral -> + .)
    T               reduce using rule 74 (classliteral -> + .)
    U               reduce using rule 74 (classliteral -> + .)
    V               reduce using rule 74 (classliteral -> + .)
    W               reduce using rule 74 (classliteral -> + .)
    X               reduce using rule 74 (classliteral -> + .)
    Y               reduce using rule 74 (classliteral -> + .)
    Z               reduce using rule 74 (classliteral -> + .)
    ]               reduce using rule 74 (classliteral -> + .)
    |               reduce using rule 74 (classliteral -> + .)


state 123

    (89) classliteral -> { .

    -               reduce using rule 89 (classliteral -> { .)
    !               reduce using rule 89 (classliteral -> { .)
    "               reduce using rule 89 (classliteral -> { .)
    #               reduce using rule 89 (classliteral -> { .)
    $               reduce using rule 89 (classliteral -> { .)
    %               reduce using rule 89 (classliteral -> { .)
    &               reduce using rule 89 (classliteral -> { .)
    '               reduce using rule 89 (classliteral -> { .)
    (               reduce using rule 89 (classliteral -> { .)
    )               reduce using rule 89 (classliteral -> { .)
    *               reduce using rule 89 (classliteral -> { .)
    +               reduce using rule 89 (classliteral -> { .)
    ,               reduce using rule 89 (classliteral -> { .)
    .               reduce using rule 89 (classliteral -> { .)
    /               reduce using rule 89 (classliteral -> { .)
    :               reduce using rule 89 (classliteral -> { .)
    ;               reduce using rule 89 (classliteral -> { .)
    <               reduce using rule 89 (classliteral -> { .)
    =               reduce using rule 89 (classliteral -> { .)
    >               reduce using rule 89 (classliteral -> { .)
    ?               reduce using rule 89 (classliteral -> { .)
    @               reduce using rule 89 (classliteral -> { .)
    [               reduce using rule 89 (classliteral -> { .)
    \               reduce using rule 89 (classliteral -> { .)
    _               reduce using rule 89 (classliteral -> { .)
    `               reduce using rule 89 (classliteral -> { .)
    {               reduce using rule 89 (classliteral -> { .)
    }               reduce using rule 89 (classliteral -> { .)
    ~               reduce using rule 89 (classliteral -> { .)
    ESCAPED         reduce using rule 89 (classliteral -> { .)
    DIGIT           reduce using rule 89 (classliteral -> { .)
    OTHER           reduce using rule 89 (classliteral -> { .)
    a               reduce using rule 89 (classliteral -> { .)
    b               reduce using rule 89 (classliteral -> { .)
    c               reduce using rule 89 (classliteral -> { .)
    d               reduce using rule 89 (classliteral -> { .)
    e               reduce using rule 89 (classliteral -> { .)
    f               reduce using rule 89 (classliteral -> { .)
    g               reduce using rule 89 (classliteral -> { .)
    h               reduce using rule 89 (classliteral -> { .)
    i               reduce using rule 89 (classliteral -> { .)
    j               reduce using rule 89 (classliteral -> { .)
    k               reduce using rule 89 (classliteral -> { .)
    l               reduce using rule 89 (classliteral -> { .)
    m               reduce using rule 89 (classliteral -> { .)
    n               reduce using rule 89 (classliteral -> { .)
    o               reduce using rule 89 (classliteral -> { .)
    p               reduce using rule 89 (classliteral -> { .)
    q               reduce using rule 89 (classliteral -> { .)
    r               reduce using rule 89 (classliteral -> { .)
    s               reduce using rule 89 (classliteral -> { .)
    t               reduce using rule 89 (classliteral -> { .)
    u               reduce using rule 89 (classliteral -> { .)
    v               reduce using rule 89 (classliteral -> { .)
    w               reduce using rule 89 (classliteral -> { .)
    x               reduce using rule 89 (classliteral -> { .)
    y               reduce using rule 89 (classliteral -> { .)
    z               reduce using rule 89 (classliteral -> { .)
    A               reduce using rule 89 (classliteral -> { .)
    B               reduce using rule 89 (classliteral -> { .)
    C               reduce using rule 89 (classliteral -> { .)
    D               reduce using rule 89 (classliteral -> { .)
    E               reduce using rule 89 (classliteral -> { .)
    F               reduce using rule 89 (classliteral -> { .)
    G               reduce using rule 89 (classliteral -> { .)
    H               reduce using rule 89 (classliteral -> { .)
    I               reduce using rule 89 (classliteral -> { .)
    J               reduce using rule 89 (classliteral -> { .)
    K               reduce using rule 89 (classliteral -> { .)
    L               reduce using rule 89 (classliteral -> { .)
    M               reduce using rule 89 (classliteral -> { .)
    N               reduce using rule 89 (classliteral -> { .)
    O               reduce using rule 89 (classliteral -> { .)
    P               reduce using rule 89 (classliteral -> { .)
    Q               reduce using rule 89 (classliteral -> { .)
    R               reduce using rule 89 (classliteral -> { .)
    S               reduce using rule 89 (classliteral -> { .)
    T               reduce using rule 89 (classliteral -> { .)
    U               reduce using rule 89 (classliteral -> { .)
    V               reduce using rule 89 (classliteral -> { .)
    W               reduce using rule 89 (classliteral -> { .)
    X               reduce using rule 89 (classliteral -> { .)
    Y               reduce using rule 89 (classliteral -> { .)
    Z               reduce using rule 89 (classliteral -> { .)
    ]               reduce using rule 89 (classliteral -> { .)
    |               reduce using rule 89 (classliteral -> { .)


state 124

    (83) classliteral -> ? .

    -               reduce using rule 83 (classliteral -> ? .)
    !               reduce using rule 83 (classliteral -> ? .)
    "               reduce using rule 83 (classliteral -> ? .)
    #               reduce using rule 83 (classliteral -> ? .)
    $               reduce using rule 83 (classliteral -> ? .)
    %               reduce using rule 83 (classliteral -> ? .)
    &               reduce using rule 83 (classliteral -> ? .)
    '               reduce using rule 83 (classliteral -> ? .)
    (               reduce using rule 83 (classliteral -> ? .)
    )               reduce using rule 83 (classliteral -> ? .)
    *               reduce using rule 83 (classliteral -> ? .)
    +               reduce using rule 83 (classliteral -> ? .)
    ,               reduce using rule 83 (classliteral -> ? .)
    .               reduce using rule 83 (classliteral -> ? .)
    /               reduce using rule 83 (classliteral -> ? .)
    :               reduce using rule 83 (classliteral -> ? .)
    ;               reduce using rule 83 (classliteral -> ? .)
    <               reduce using rule 83 (classliteral -> ? .)
    =               reduce using rule 83 (classliteral -> ? .)
    >               reduce using rule 83 (classliteral -> ? .)
    ?               reduce using rule 83 (classliteral -> ? .)
    @               reduce using rule 83 (classliteral -> ? .)
    [               reduce using rule 83 (classliteral -> ? .)
    \               reduce using rule 83 (classliteral -> ? .)
    _               reduce using rule 83 (classliteral -> ? .)
    `               reduce using rule 83 (classliteral -> ? .)
    {               reduce using rule 83 (classliteral -> ? .)
    }               reduce using rule 83 (classliteral -> ? .)
    ~               reduce using rule 83 (classliteral -> ? .)
    ESCAPED         reduce using rule 83 (classliteral -> ? .)
    DIGIT           reduce using rule 83 (classliteral -> ? .)
    OTHER           reduce using rule 83 (classliteral -> ? .)
    a               reduce using rule 83 (classliteral -> ? .)
    b               reduce using rule 83 (classliteral -> ? .)
    c               reduce using rule 83 (classliteral -> ? .)
    d               reduce using rule 83 (classliteral -> ? .)
    e               reduce using rule 83 (classliteral -> ? .)
    f               reduce using rule 83 (classliteral -> ? .)
    g               reduce using rule 83 (classliteral -> ? .)
    h               reduce using rule 83 (classliteral -> ? .)
    i               reduce using rule 83 (classliteral -> ? .)
    j               reduce using rule 83 (classliteral -> ? .)
    k               reduce using rule 83 (classliteral -> ? .)
    l               reduce using rule 83 (classliteral -> ? .)
    m               reduce using rule 83 (classliteral -> ? .)
    n               reduce using rule 83 (classliteral -> ? .)
    o               reduce using rule 83 (classliteral -> ? .)
    p               reduce using rule 83 (classliteral -> ? .)
    q               reduce using rule 83 (classliteral -> ? .)
    r               reduce using rule 83 (classliteral -> ? .)
    s               reduce using rule 83 (classliteral -> ? .)
    t               reduce using rule 83 (classliteral -> ? .)
    u               reduce using rule 83 (classliteral -> ? .)
    v               reduce using rule 83 (classliteral -> ? .)
    w               reduce using rule 83 (classliteral -> ? .)
    x               reduce using rule 83 (classliteral -> ? .)
    y               reduce using rule 83 (classliteral -> ? .)
    z               reduce using rule 83 (classliteral -> ? .)
    A               reduce using rule 83 (classliteral -> ? .)
    B               reduce using rule 83 (classliteral -> ? .)
    C               reduce using rule 83 (classliteral -> ? .)
    D               reduce using rule 83 (classliteral -> ? .)
    E               reduce using rule 83 (classliteral -> ? .)
    F               reduce using rule 83 (classliteral -> ? .)
    G               reduce using rule 83 (classliteral -> ? .)
    H               reduce using rule 83 (classliteral -> ? .)
    I               reduce using rule 83 (classliteral -> ? .)
    J               reduce using rule 83 (classliteral -> ? .)
    K               reduce using rule 83 (classliteral -> ? .)
    L               reduce using rule 83 (classliteral -> ? .)
    M               reduce using rule 83 (classliteral -> ? .)
    N               reduce using rule 83 (classliteral -> ? .)
    O               reduce using rule 83 (classliteral -> ? .)
    P               reduce using rule 83 (classliteral -> ? .)
    Q               reduce using rule 83 (classliteral -> ? .)
    R               reduce using rule 83 (classliteral -> ? .)
    S               reduce using rule 83 (classliteral -> ? .)
    T               reduce using rule 83 (classliteral -> ? .)
    U               reduce using rule 83 (classliteral -> ? .)
    V               reduce using rule 83 (classliteral -> ? .)
    W               reduce using rule 83 (classliteral -> ? .)
    X               reduce using rule 83 (classliteral -> ? .)
    Y               reduce using rule 83 (classliteral -> ? .)
    Z               reduce using rule 83 (classliteral -> ? .)
    ]               reduce using rule 83 (classliteral -> ? .)
    |               reduce using rule 83 (classliteral -> ? .)


state 125

    (78) classliteral -> : .

    -               reduce using rule 78 (classliteral -> : .)
    !               reduce using rule 78 (classliteral -> : .)
    "               reduce using rule 78 (classliteral -> : .)
    #               reduce using rule 78 (classliteral -> : .)
    $               reduce using rule 78 (classliteral -> : .)
    %               reduce using rule 78 (classliteral -> : .)
    &               reduce using rule 78 (classliteral -> : .)
    '               reduce using rule 78 (classliteral -> : .)
    (               reduce using rule 78 (classliteral -> : .)
    )               reduce using rule 78 (classliteral -> : .)
    *               reduce using rule 78 (classliteral -> : .)
    +               reduce using rule 78 (classliteral -> : .)
    ,               reduce using rule 78 (classliteral -> : .)
    .               reduce using rule 78 (classliteral -> : .)
    /               reduce using rule 78 (classliteral -> : .)
    :               reduce using rule 78 (classliteral -> : .)
    ;               reduce using rule 78 (classliteral -> : .)
    <               reduce using rule 78 (classliteral -> : .)
    =               reduce using rule 78 (classliteral -> : .)
    >               reduce using rule 78 (classliteral -> : .)
    ?               reduce using rule 78 (classliteral -> : .)
    @               reduce using rule 78 (classliteral -> : .)
    [               reduce using rule 78 (classliteral -> : .)
    \               reduce using rule 78 (classliteral -> : .)
    _               reduce using rule 78 (classliteral -> : .)
    `               reduce using rule 78 (classliteral -> : .)
    {               reduce using rule 78 (classliteral -> : .)
    }               reduce using rule 78 (classliteral -> : .)
    ~               reduce using rule 78 (classliteral -> : .)
    ESCAPED         reduce using rule 78 (classliteral -> : .)
    DIGIT           reduce using rule 78 (classliteral -> : .)
    OTHER           reduce using rule 78 (classliteral -> : .)
    a               reduce using rule 78 (classliteral -> : .)
    b               reduce using rule 78 (classliteral -> : .)
    c               reduce using rule 78 (classliteral -> : .)
    d               reduce using rule 78 (classliteral -> : .)
    e               reduce using rule 78 (classliteral -> : .)
    f               reduce using rule 78 (classliteral -> : .)
    g               reduce using rule 78 (classliteral -> : .)
    h               reduce using rule 78 (classliteral -> : .)
    i               reduce using rule 78 (classliteral -> : .)
    j               reduce using rule 78 (classliteral -> : .)
    k               reduce using rule 78 (classliteral -> : .)
    l               reduce using rule 78 (classliteral -> : .)
    m               reduce using rule 78 (classliteral -> : .)
    n               reduce using rule 78 (classliteral -> : .)
    o               reduce using rule 78 (classliteral -> : .)
    p               reduce using rule 78 (classliteral -> : .)
    q               reduce using rule 78 (classliteral -> : .)
    r               reduce using rule 78 (classliteral -> : .)
    s               reduce using rule 78 (classliteral -> : .)
    t               reduce using rule 78 (classliteral -> : .)
    u               reduce using rule 78 (classliteral -> : .)
    v               reduce using rule 78 (classliteral -> : .)
    w               reduce using rule 78 (classliteral -> : .)
    x               reduce using rule 78 (classliteral -> : .)
    y               reduce using rule 78 (classliteral -> : .)
    z               reduce using rule 78 (classliteral -> : .)
    A               reduce using rule 78 (classliteral -> : .)
    B               reduce using rule 78 (classliteral -> : .)
    C               reduce using rule 78 (classliteral -> : .)
    D               reduce using rule 78 (classliteral -> : .)
    E               reduce using rule 78 (classliteral -> : .)
    F               reduce using rule 78 (classliteral -> : .)
    G               reduce using rule 78 (classliteral -> : .)
    H               reduce using rule 78 (classliteral -> : .)
    I               reduce using rule 78 (classliteral -> : .)
    J               reduce using rule 78 (classliteral -> : .)
    K               reduce using rule 78 (classliteral -> : .)
    L               reduce using rule 78 (classliteral -> : .)
    M               reduce using rule 78 (classliteral -> : .)
    N               reduce using rule 78 (classliteral -> : .)
    O               reduce using rule 78 (classliteral -> : .)
    P               reduce using rule 78 (classliteral -> : .)
    Q               reduce using rule 78 (classliteral -> : .)
    R               reduce using rule 78 (classliteral -> : .)
    S               reduce using rule 78 (classliteral -> : .)
    T               reduce using rule 78 (classliteral -> : .)
    U               reduce using rule 78 (classliteral -> : .)
    V               reduce using rule 78 (classliteral -> : .)
    W               reduce using rule 78 (classliteral -> : .)
    X               reduce using rule 78 (classliteral -> : .)
    Y               reduce using rule 78 (classliteral -> : .)
    Z               reduce using rule 78 (classliteral -> : .)
    ]               reduce using rule 78 (classliteral -> : .)
    |               reduce using rule 78 (classliteral -> : .)


state 126

    (84) classliteral -> @ .

    -               reduce using rule 84 (classliteral -> @ .)
    !               reduce using rule 84 (classliteral -> @ .)
    "               reduce using rule 84 (classliteral -> @ .)
    #               reduce using rule 84 (classliteral -> @ .)
    $               reduce using rule 84 (classliteral -> @ .)
    %               reduce using rule 84 (classliteral -> @ .)
    &               reduce using rule 84 (classliteral -> @ .)
    '               reduce using rule 84 (classliteral -> @ .)
    (               reduce using rule 84 (classliteral -> @ .)
    )               reduce using rule 84 (classliteral -> @ .)
    *               reduce using rule 84 (classliteral -> @ .)
    +               reduce using rule 84 (classliteral -> @ .)
    ,               reduce using rule 84 (classliteral -> @ .)
    .               reduce using rule 84 (classliteral -> @ .)
    /               reduce using rule 84 (classliteral -> @ .)
    :               reduce using rule 84 (classliteral -> @ .)
    ;               reduce using rule 84 (classliteral -> @ .)
    <               reduce using rule 84 (classliteral -> @ .)
    =               reduce using rule 84 (classliteral -> @ .)
    >               reduce using rule 84 (classliteral -> @ .)
    ?               reduce using rule 84 (classliteral -> @ .)
    @               reduce using rule 84 (classliteral -> @ .)
    [               reduce using rule 84 (classliteral -> @ .)
    \               reduce using rule 84 (classliteral -> @ .)
    _               reduce using rule 84 (classliteral -> @ .)
    `               reduce using rule 84 (classliteral -> @ .)
    {               reduce using rule 84 (classliteral -> @ .)
    }               reduce using rule 84 (classliteral -> @ .)
    ~               reduce using rule 84 (classliteral -> @ .)
    ESCAPED         reduce using rule 84 (classliteral -> @ .)
    DIGIT           reduce using rule 84 (classliteral -> @ .)
    OTHER           reduce using rule 84 (classliteral -> @ .)
    a               reduce using rule 84 (classliteral -> @ .)
    b               reduce using rule 84 (classliteral -> @ .)
    c               reduce using rule 84 (classliteral -> @ .)
    d               reduce using rule 84 (classliteral -> @ .)
    e               reduce using rule 84 (classliteral -> @ .)
    f               reduce using rule 84 (classliteral -> @ .)
    g               reduce using rule 84 (classliteral -> @ .)
    h               reduce using rule 84 (classliteral -> @ .)
    i               reduce using rule 84 (classliteral -> @ .)
    j               reduce using rule 84 (classliteral -> @ .)
    k               reduce using rule 84 (classliteral -> @ .)
    l               reduce using rule 84 (classliteral -> @ .)
    m               reduce using rule 84 (classliteral -> @ .)
    n               reduce using rule 84 (classliteral -> @ .)
    o               reduce using rule 84 (classliteral -> @ .)
    p               reduce using rule 84 (classliteral -> @ .)
    q               reduce using rule 84 (classliteral -> @ .)
    r               reduce using rule 84 (classliteral -> @ .)
    s               reduce using rule 84 (classliteral -> @ .)
    t               reduce using rule 84 (classliteral -> @ .)
    u               reduce using rule 84 (classliteral -> @ .)
    v               reduce using rule 84 (classliteral -> @ .)
    w               reduce using rule 84 (classliteral -> @ .)
    x               reduce using rule 84 (classliteral -> @ .)
    y               reduce using rule 84 (classliteral -> @ .)
    z               reduce using rule 84 (classliteral -> @ .)
    A               reduce using rule 84 (classliteral -> @ .)
    B               reduce using rule 84 (classliteral -> @ .)
    C               reduce using rule 84 (classliteral -> @ .)
    D               reduce using rule 84 (classliteral -> @ .)
    E               reduce using rule 84 (classliteral -> @ .)
    F               reduce using rule 84 (classliteral -> @ .)
    G               reduce using rule 84 (classliteral -> @ .)
    H               reduce using rule 84 (classliteral -> @ .)
    I               reduce using rule 84 (classliteral -> @ .)
    J               reduce using rule 84 (classliteral -> @ .)
    K               reduce using rule 84 (classliteral -> @ .)
    L               reduce using rule 84 (classliteral -> @ .)
    M               reduce using rule 84 (classliteral -> @ .)
    N               reduce using rule 84 (classliteral -> @ .)
    O               reduce using rule 84 (classliteral -> @ .)
    P               reduce using rule 84 (classliteral -> @ .)
    Q               reduce using rule 84 (classliteral -> @ .)
    R               reduce using rule 84 (classliteral -> @ .)
    S               reduce using rule 84 (classliteral -> @ .)
    T               reduce using rule 84 (classliteral -> @ .)
    U               reduce using rule 84 (classliteral -> @ .)
    V               reduce using rule 84 (classliteral -> @ .)
    W               reduce using rule 84 (classliteral -> @ .)
    X               reduce using rule 84 (classliteral -> @ .)
    Y               reduce using rule 84 (classliteral -> @ .)
    Z               reduce using rule 84 (classliteral -> @ .)
    ]               reduce using rule 84 (classliteral -> @ .)
    |               reduce using rule 84 (classliteral -> @ .)


state 127

    (90) classliteral -> } .

    -               reduce using rule 90 (classliteral -> } .)
    !               reduce using rule 90 (classliteral -> } .)
    "               reduce using rule 90 (classliteral -> } .)
    #               reduce using rule 90 (classliteral -> } .)
    $               reduce using rule 90 (classliteral -> } .)
    %               reduce using rule 90 (classliteral -> } .)
    &               reduce using rule 90 (classliteral -> } .)
    '               reduce using rule 90 (classliteral -> } .)
    (               reduce using rule 90 (classliteral -> } .)
    )               reduce using rule 90 (classliteral -> } .)
    *               reduce using rule 90 (classliteral -> } .)
    +               reduce using rule 90 (classliteral -> } .)
    ,               reduce using rule 90 (classliteral -> } .)
    .               reduce using rule 90 (classliteral -> } .)
    /               reduce using rule 90 (classliteral -> } .)
    :               reduce using rule 90 (classliteral -> } .)
    ;               reduce using rule 90 (classliteral -> } .)
    <               reduce using rule 90 (classliteral -> } .)
    =               reduce using rule 90 (classliteral -> } .)
    >               reduce using rule 90 (classliteral -> } .)
    ?               reduce using rule 90 (classliteral -> } .)
    @               reduce using rule 90 (classliteral -> } .)
    [               reduce using rule 90 (classliteral -> } .)
    \               reduce using rule 90 (classliteral -> } .)
    _               reduce using rule 90 (classliteral -> } .)
    `               reduce using rule 90 (classliteral -> } .)
    {               reduce using rule 90 (classliteral -> } .)
    }               reduce using rule 90 (classliteral -> } .)
    ~               reduce using rule 90 (classliteral -> } .)
    ESCAPED         reduce using rule 90 (classliteral -> } .)
    DIGIT           reduce using rule 90 (classliteral -> } .)
    OTHER           reduce using rule 90 (classliteral -> } .)
    a               reduce using rule 90 (classliteral -> } .)
    b               reduce using rule 90 (classliteral -> } .)
    c               reduce using rule 90 (classliteral -> } .)
    d               reduce using rule 90 (classliteral -> } .)
    e               reduce using rule 90 (classliteral -> } .)
    f               reduce using rule 90 (classliteral -> } .)
    g               reduce using rule 90 (classliteral -> } .)
    h               reduce using rule 90 (classliteral -> } .)
    i               reduce using rule 90 (classliteral -> } .)
    j               reduce using rule 90 (classliteral -> } .)
    k               reduce using rule 90 (classliteral -> } .)
    l               reduce using rule 90 (classliteral -> } .)
    m               reduce using rule 90 (classliteral -> } .)
    n               reduce using rule 90 (classliteral -> } .)
    o               reduce using rule 90 (classliteral -> } .)
    p               reduce using rule 90 (classliteral -> } .)
    q               reduce using rule 90 (classliteral -> } .)
    r               reduce using rule 90 (classliteral -> } .)
    s               reduce using rule 90 (classliteral -> } .)
    t               reduce using rule 90 (classliteral -> } .)
    u               reduce using rule 90 (classliteral -> } .)
    v               reduce using rule 90 (classliteral -> } .)
    w               reduce using rule 90 (classliteral -> } .)
    x               reduce using rule 90 (classliteral -> } .)
    y               reduce using rule 90 (classliteral -> } .)
    z               reduce using rule 90 (classliteral -> } .)
    A               reduce using rule 90 (classliteral -> } .)
    B               reduce using rule 90 (classliteral -> } .)
    C               reduce using rule 90 (classliteral -> } .)
    D               reduce using rule 90 (classliteral -> } .)
    E               reduce using rule 90 (classliteral -> } .)
    F               reduce using rule 90 (classliteral -> } .)
    G               reduce using rule 90 (classliteral -> } .)
    H               reduce using rule 90 (classliteral -> } .)
    I               reduce using rule 90 (classliteral -> } .)
    J               reduce using rule 90 (classliteral -> } .)
    K               reduce using rule 90 (classliteral -> } .)
    L               reduce using rule 90 (classliteral -> } .)
    M               reduce using rule 90 (classliteral -> } .)
    N               reduce using rule 90 (classliteral -> } .)
    O               reduce using rule 90 (classliteral -> } .)
    P               reduce using rule 90 (classliteral -> } .)
    Q               reduce using rule 90 (classliteral -> } .)
    R               reduce using rule 90 (classliteral -> } .)
    S               reduce using rule 90 (classliteral -> } .)
    T               reduce using rule 90 (classliteral -> } .)
    U               reduce using rule 90 (classliteral -> } .)
    V               reduce using rule 90 (classliteral -> } .)
    W               reduce using rule 90 (classliteral -> } .)
    X               reduce using rule 90 (classliteral -> } .)
    Y               reduce using rule 90 (classliteral -> } .)
    Z               reduce using rule 90 (classliteral -> } .)
    ]               reduce using rule 90 (classliteral -> } .)
    |               reduce using rule 90 (classliteral -> } .)


state 128

    (86) classliteral -> \ .

    -               reduce using rule 86 (classliteral -> \ .)
    !               reduce using rule 86 (classliteral -> \ .)
    "               reduce using rule 86 (classliteral -> \ .)
    #               reduce using rule 86 (classliteral -> \ .)
    $               reduce using rule 86 (classliteral -> \ .)
    %               reduce using rule 86 (classliteral -> \ .)
    &               reduce using rule 86 (classliteral -> \ .)
    '               reduce using rule 86 (classliteral -> \ .)
    (               reduce using rule 86 (classliteral -> \ .)
    )               reduce using rule 86 (classliteral -> \ .)
    *               reduce using rule 86 (classliteral -> \ .)
    +               reduce using rule 86 (classliteral -> \ .)
    ,               reduce using rule 86 (classliteral -> \ .)
    .               reduce using rule 86 (classliteral -> \ .)
    /               reduce using rule 86 (classliteral -> \ .)
    :               reduce using rule 86 (classliteral -> \ .)
    ;               reduce using rule 86 (classliteral -> \ .)
    <               reduce using rule 86 (classliteral -> \ .)
    =               reduce using rule 86 (classliteral -> \ .)
    >               reduce using rule 86 (classliteral -> \ .)
    ?               reduce using rule 86 (classliteral -> \ .)
    @               reduce using rule 86 (classliteral -> \ .)
    [               reduce using rule 86 (classliteral -> \ .)
    \               reduce using rule 86 (classliteral -> \ .)
    _               reduce using rule 86 (classliteral -> \ .)
    `               reduce using rule 86 (classliteral -> \ .)
    {               reduce using rule 86 (classliteral -> \ .)
    }               reduce using rule 86 (classliteral -> \ .)
    ~               reduce using rule 86 (classliteral -> \ .)
    ESCAPED         reduce using rule 86 (classliteral -> \ .)
    DIGIT           reduce using rule 86 (classliteral -> \ .)
    OTHER           reduce using rule 86 (classliteral -> \ .)
    a               reduce using rule 86 (classliteral -> \ .)
    b               reduce using rule 86 (classliteral -> \ .)
    c               reduce using rule 86 (classliteral -> \ .)
    d               reduce using rule 86 (classliteral -> \ .)
    e               reduce using rule 86 (classliteral -> \ .)
    f               reduce using rule 86 (classliteral -> \ .)
    g               reduce using rule 86 (classliteral -> \ .)
    h               reduce using rule 86 (classliteral -> \ .)
    i               reduce using rule 86 (classliteral -> \ .)
    j               reduce using rule 86 (classliteral -> \ .)
    k               reduce using rule 86 (classliteral -> \ .)
    l               reduce using rule 86 (classliteral -> \ .)
    m               reduce using rule 86 (classliteral -> \ .)
    n               reduce using rule 86 (classliteral -> \ .)
    o               reduce using rule 86 (classliteral -> \ .)
    p               reduce using rule 86 (classliteral -> \ .)
    q               reduce using rule 86 (classliteral -> \ .)
    r               reduce using rule 86 (classliteral -> \ .)
    s               reduce using rule 86 (classliteral -> \ .)
    t               reduce using rule 86 (classliteral -> \ .)
    u               reduce using rule 86 (classliteral -> \ .)
    v               reduce using rule 86 (classliteral -> \ .)
    w               reduce using rule 86 (classliteral -> \ .)
    x               reduce using rule 86 (classliteral -> \ .)
    y               reduce using rule 86 (classliteral -> \ .)
    z               reduce using rule 86 (classliteral -> \ .)
    A               reduce using rule 86 (classliteral -> \ .)
    B               reduce using rule 86 (classliteral -> \ .)
    C               reduce using rule 86 (classliteral -> \ .)
    D               reduce using rule 86 (classliteral -> \ .)
    E               reduce using rule 86 (classliteral -> \ .)
    F               reduce using rule 86 (classliteral -> \ .)
    G               reduce using rule 86 (classliteral -> \ .)
    H               reduce using rule 86 (classliteral -> \ .)
    I               reduce using rule 86 (classliteral -> \ .)
    J               reduce using rule 86 (classliteral -> \ .)
    K               reduce using rule 86 (classliteral -> \ .)
    L               reduce using rule 86 (classliteral -> \ .)
    M               reduce using rule 86 (classliteral -> \ .)
    N               reduce using rule 86 (classliteral -> \ .)
    O               reduce using rule 86 (classliteral -> \ .)
    P               reduce using rule 86 (classliteral -> \ .)
    Q               reduce using rule 86 (classliteral -> \ .)
    R               reduce using rule 86 (classliteral -> \ .)
    S               reduce using rule 86 (classliteral -> \ .)
    T               reduce using rule 86 (classliteral -> \ .)
    U               reduce using rule 86 (classliteral -> \ .)
    V               reduce using rule 86 (classliteral -> \ .)
    W               reduce using rule 86 (classliteral -> \ .)
    X               reduce using rule 86 (classliteral -> \ .)
    Y               reduce using rule 86 (classliteral -> \ .)
    Z               reduce using rule 86 (classliteral -> \ .)
    ]               reduce using rule 86 (classliteral -> \ .)
    |               reduce using rule 86 (classliteral -> \ .)


state 129

    (92) classliteral -> literal .

    -               reduce using rule 92 (classliteral -> literal .)
    !               reduce using rule 92 (classliteral -> literal .)
    "               reduce using rule 92 (classliteral -> literal .)
    #               reduce using rule 92 (classliteral -> literal .)
    $               reduce using rule 92 (classliteral -> literal .)
    %               reduce using rule 92 (classliteral -> literal .)
    &               reduce using rule 92 (classliteral -> literal .)
    '               reduce using rule 92 (classliteral -> literal .)
    (               reduce using rule 92 (classliteral -> literal .)
    )               reduce using rule 92 (classliteral -> literal .)
    *               reduce using rule 92 (classliteral -> literal .)
    +               reduce using rule 92 (classliteral -> literal .)
    ,               reduce using rule 92 (classliteral -> literal .)
    .               reduce using rule 92 (classliteral -> literal .)
    /               reduce using rule 92 (classliteral -> literal .)
    :               reduce using rule 92 (classliteral -> literal .)
    ;               reduce using rule 92 (classliteral -> literal .)
    <               reduce using rule 92 (classliteral -> literal .)
    =               reduce using rule 92 (classliteral -> literal .)
    >               reduce using rule 92 (classliteral -> literal .)
    ?               reduce using rule 92 (classliteral -> literal .)
    @               reduce using rule 92 (classliteral -> literal .)
    [               reduce using rule 92 (classliteral -> literal .)
    \               reduce using rule 92 (classliteral -> literal .)
    _               reduce using rule 92 (classliteral -> literal .)
    `               reduce using rule 92 (classliteral -> literal .)
    {               reduce using rule 92 (classliteral -> literal .)
    }               reduce using rule 92 (classliteral -> literal .)
    ~               reduce using rule 92 (classliteral -> literal .)
    ESCAPED         reduce using rule 92 (classliteral -> literal .)
    DIGIT           reduce using rule 92 (classliteral -> literal .)
    OTHER           reduce using rule 92 (classliteral -> literal .)
    a               reduce using rule 92 (classliteral -> literal .)
    b               reduce using rule 92 (classliteral -> literal .)
    c               reduce using rule 92 (classliteral -> literal .)
    d               reduce using rule 92 (classliteral -> literal .)
    e               reduce using rule 92 (classliteral -> literal .)
    f               reduce using rule 92 (classliteral -> literal .)
    g               reduce using rule 92 (classliteral -> literal .)
    h               reduce using rule 92 (classliteral -> literal .)
    i               reduce using rule 92 (classliteral -> literal .)
    j               reduce using rule 92 (classliteral -> literal .)
    k               reduce using rule 92 (classliteral -> literal .)
    l               reduce using rule 92 (classliteral -> literal .)
    m               reduce using rule 92 (classliteral -> literal .)
    n               reduce using rule 92 (classliteral -> literal .)
    o               reduce using rule 92 (classliteral -> literal .)
    p               reduce using rule 92 (classliteral -> literal .)
    q               reduce using rule 92 (classliteral -> literal .)
    r               reduce using rule 92 (classliteral -> literal .)
    s               reduce using rule 92 (classliteral -> literal .)
    t               reduce using rule 92 (classliteral -> literal .)
    u               reduce using rule 92 (classliteral -> literal .)
    v               reduce using rule 92 (classliteral -> literal .)
    w               reduce using rule 92 (classliteral -> literal .)
    x               reduce using rule 92 (classliteral -> literal .)
    y               reduce using rule 92 (classliteral -> literal .)
    z               reduce using rule 92 (classliteral -> literal .)
    A               reduce using rule 92 (classliteral -> literal .)
    B               reduce using rule 92 (classliteral -> literal .)
    C               reduce using rule 92 (classliteral -> literal .)
    D               reduce using rule 92 (classliteral -> literal .)
    E               reduce using rule 92 (classliteral -> literal .)
    F               reduce using rule 92 (classliteral -> literal .)
    G               reduce using rule 92 (classliteral -> literal .)
    H               reduce using rule 92 (classliteral -> literal .)
    I               reduce using rule 92 (classliteral -> literal .)
    J               reduce using rule 92 (classliteral -> literal .)
    K               reduce using rule 92 (classliteral -> literal .)
    L               reduce using rule 92 (classliteral -> literal .)
    M               reduce using rule 92 (classliteral -> literal .)
    N               reduce using rule 92 (classliteral -> literal .)
    O               reduce using rule 92 (classliteral -> literal .)
    P               reduce using rule 92 (classliteral -> literal .)
    Q               reduce using rule 92 (classliteral -> literal .)
    R               reduce using rule 92 (classliteral -> literal .)
    S               reduce using rule 92 (classliteral -> literal .)
    T               reduce using rule 92 (classliteral -> literal .)
    U               reduce using rule 92 (classliteral -> literal .)
    V               reduce using rule 92 (classliteral -> literal .)
    W               reduce using rule 92 (classliteral -> literal .)
    X               reduce using rule 92 (classliteral -> literal .)
    Y               reduce using rule 92 (classliteral -> literal .)
    Z               reduce using rule 92 (classliteral -> literal .)
    ]               reduce using rule 92 (classliteral -> literal .)
    |               reduce using rule 92 (classliteral -> literal .)


state 130

    (87) classliteral -> _ .

    -               reduce using rule 87 (classliteral -> _ .)
    !               reduce using rule 87 (classliteral -> _ .)
    "               reduce using rule 87 (classliteral -> _ .)
    #               reduce using rule 87 (classliteral -> _ .)
    $               reduce using rule 87 (classliteral -> _ .)
    %               reduce using rule 87 (classliteral -> _ .)
    &               reduce using rule 87 (classliteral -> _ .)
    '               reduce using rule 87 (classliteral -> _ .)
    (               reduce using rule 87 (classliteral -> _ .)
    )               reduce using rule 87 (classliteral -> _ .)
    *               reduce using rule 87 (classliteral -> _ .)
    +               reduce using rule 87 (classliteral -> _ .)
    ,               reduce using rule 87 (classliteral -> _ .)
    .               reduce using rule 87 (classliteral -> _ .)
    /               reduce using rule 87 (classliteral -> _ .)
    :               reduce using rule 87 (classliteral -> _ .)
    ;               reduce using rule 87 (classliteral -> _ .)
    <               reduce using rule 87 (classliteral -> _ .)
    =               reduce using rule 87 (classliteral -> _ .)
    >               reduce using rule 87 (classliteral -> _ .)
    ?               reduce using rule 87 (classliteral -> _ .)
    @               reduce using rule 87 (classliteral -> _ .)
    [               reduce using rule 87 (classliteral -> _ .)
    \               reduce using rule 87 (classliteral -> _ .)
    _               reduce using rule 87 (classliteral -> _ .)
    `               reduce using rule 87 (classliteral -> _ .)
    {               reduce using rule 87 (classliteral -> _ .)
    }               reduce using rule 87 (classliteral -> _ .)
    ~               reduce using rule 87 (classliteral -> _ .)
    ESCAPED         reduce using rule 87 (classliteral -> _ .)
    DIGIT           reduce using rule 87 (classliteral -> _ .)
    OTHER           reduce using rule 87 (classliteral -> _ .)
    a               reduce using rule 87 (classliteral -> _ .)
    b               reduce using rule 87 (classliteral -> _ .)
    c               reduce using rule 87 (classliteral -> _ .)
    d               reduce using rule 87 (classliteral -> _ .)
    e               reduce using rule 87 (classliteral -> _ .)
    f               reduce using rule 87 (classliteral -> _ .)
    g               reduce using rule 87 (classliteral -> _ .)
    h               reduce using rule 87 (classliteral -> _ .)
    i               reduce using rule 87 (classliteral -> _ .)
    j               reduce using rule 87 (classliteral -> _ .)
    k               reduce using rule 87 (classliteral -> _ .)
    l               reduce using rule 87 (classliteral -> _ .)
    m               reduce using rule 87 (classliteral -> _ .)
    n               reduce using rule 87 (classliteral -> _ .)
    o               reduce using rule 87 (classliteral -> _ .)
    p               reduce using rule 87 (classliteral -> _ .)
    q               reduce using rule 87 (classliteral -> _ .)
    r               reduce using rule 87 (classliteral -> _ .)
    s               reduce using rule 87 (classliteral -> _ .)
    t               reduce using rule 87 (classliteral -> _ .)
    u               reduce using rule 87 (classliteral -> _ .)
    v               reduce using rule 87 (classliteral -> _ .)
    w               reduce using rule 87 (classliteral -> _ .)
    x               reduce using rule 87 (classliteral -> _ .)
    y               reduce using rule 87 (classliteral -> _ .)
    z               reduce using rule 87 (classliteral -> _ .)
    A               reduce using rule 87 (classliteral -> _ .)
    B               reduce using rule 87 (classliteral -> _ .)
    C               reduce using rule 87 (classliteral -> _ .)
    D               reduce using rule 87 (classliteral -> _ .)
    E               reduce using rule 87 (classliteral -> _ .)
    F               reduce using rule 87 (classliteral -> _ .)
    G               reduce using rule 87 (classliteral -> _ .)
    H               reduce using rule 87 (classliteral -> _ .)
    I               reduce using rule 87 (classliteral -> _ .)
    J               reduce using rule 87 (classliteral -> _ .)
    K               reduce using rule 87 (classliteral -> _ .)
    L               reduce using rule 87 (classliteral -> _ .)
    M               reduce using rule 87 (classliteral -> _ .)
    N               reduce using rule 87 (classliteral -> _ .)
    O               reduce using rule 87 (classliteral -> _ .)
    P               reduce using rule 87 (classliteral -> _ .)
    Q               reduce using rule 87 (classliteral -> _ .)
    R               reduce using rule 87 (classliteral -> _ .)
    S               reduce using rule 87 (classliteral -> _ .)
    T               reduce using rule 87 (classliteral -> _ .)
    U               reduce using rule 87 (classliteral -> _ .)
    V               reduce using rule 87 (classliteral -> _ .)
    W               reduce using rule 87 (classliteral -> _ .)
    X               reduce using rule 87 (classliteral -> _ .)
    Y               reduce using rule 87 (classliteral -> _ .)
    Z               reduce using rule 87 (classliteral -> _ .)
    ]               reduce using rule 87 (classliteral -> _ .)
    |               reduce using rule 87 (classliteral -> _ .)


state 131

    (80) classliteral -> < .

    -               reduce using rule 80 (classliteral -> < .)
    !               reduce using rule 80 (classliteral -> < .)
    "               reduce using rule 80 (classliteral -> < .)
    #               reduce using rule 80 (classliteral -> < .)
    $               reduce using rule 80 (classliteral -> < .)
    %               reduce using rule 80 (classliteral -> < .)
    &               reduce using rule 80 (classliteral -> < .)
    '               reduce using rule 80 (classliteral -> < .)
    (               reduce using rule 80 (classliteral -> < .)
    )               reduce using rule 80 (classliteral -> < .)
    *               reduce using rule 80 (classliteral -> < .)
    +               reduce using rule 80 (classliteral -> < .)
    ,               reduce using rule 80 (classliteral -> < .)
    .               reduce using rule 80 (classliteral -> < .)
    /               reduce using rule 80 (classliteral -> < .)
    :               reduce using rule 80 (classliteral -> < .)
    ;               reduce using rule 80 (classliteral -> < .)
    <               reduce using rule 80 (classliteral -> < .)
    =               reduce using rule 80 (classliteral -> < .)
    >               reduce using rule 80 (classliteral -> < .)
    ?               reduce using rule 80 (classliteral -> < .)
    @               reduce using rule 80 (classliteral -> < .)
    [               reduce using rule 80 (classliteral -> < .)
    \               reduce using rule 80 (classliteral -> < .)
    _               reduce using rule 80 (classliteral -> < .)
    `               reduce using rule 80 (classliteral -> < .)
    {               reduce using rule 80 (classliteral -> < .)
    }               reduce using rule 80 (classliteral -> < .)
    ~               reduce using rule 80 (classliteral -> < .)
    ESCAPED         reduce using rule 80 (classliteral -> < .)
    DIGIT           reduce using rule 80 (classliteral -> < .)
    OTHER           reduce using rule 80 (classliteral -> < .)
    a               reduce using rule 80 (classliteral -> < .)
    b               reduce using rule 80 (classliteral -> < .)
    c               reduce using rule 80 (classliteral -> < .)
    d               reduce using rule 80 (classliteral -> < .)
    e               reduce using rule 80 (classliteral -> < .)
    f               reduce using rule 80 (classliteral -> < .)
    g               reduce using rule 80 (classliteral -> < .)
    h               reduce using rule 80 (classliteral -> < .)
    i               reduce using rule 80 (classliteral -> < .)
    j               reduce using rule 80 (classliteral -> < .)
    k               reduce using rule 80 (classliteral -> < .)
    l               reduce using rule 80 (classliteral -> < .)
    m               reduce using rule 80 (classliteral -> < .)
    n               reduce using rule 80 (classliteral -> < .)
    o               reduce using rule 80 (classliteral -> < .)
    p               reduce using rule 80 (classliteral -> < .)
    q               reduce using rule 80 (classliteral -> < .)
    r               reduce using rule 80 (classliteral -> < .)
    s               reduce using rule 80 (classliteral -> < .)
    t               reduce using rule 80 (classliteral -> < .)
    u               reduce using rule 80 (classliteral -> < .)
    v               reduce using rule 80 (classliteral -> < .)
    w               reduce using rule 80 (classliteral -> < .)
    x               reduce using rule 80 (classliteral -> < .)
    y               reduce using rule 80 (classliteral -> < .)
    z               reduce using rule 80 (classliteral -> < .)
    A               reduce using rule 80 (classliteral -> < .)
    B               reduce using rule 80 (classliteral -> < .)
    C               reduce using rule 80 (classliteral -> < .)
    D               reduce using rule 80 (classliteral -> < .)
    E               reduce using rule 80 (classliteral -> < .)
    F               reduce using rule 80 (classliteral -> < .)
    G               reduce using rule 80 (classliteral -> < .)
    H               reduce using rule 80 (classliteral -> < .)
    I               reduce using rule 80 (classliteral -> < .)
    J               reduce using rule 80 (classliteral -> < .)
    K               reduce using rule 80 (classliteral -> < .)
    L               reduce using rule 80 (classliteral -> < .)
    M               reduce using rule 80 (classliteral -> < .)
    N               reduce using rule 80 (classliteral -> < .)
    O               reduce using rule 80 (classliteral -> < .)
    P               reduce using rule 80 (classliteral -> < .)
    Q               reduce using rule 80 (classliteral -> < .)
    R               reduce using rule 80 (classliteral -> < .)
    S               reduce using rule 80 (classliteral -> < .)
    T               reduce using rule 80 (classliteral -> < .)
    U               reduce using rule 80 (classliteral -> < .)
    V               reduce using rule 80 (classliteral -> < .)
    W               reduce using rule 80 (classliteral -> < .)
    X               reduce using rule 80 (classliteral -> < .)
    Y               reduce using rule 80 (classliteral -> < .)
    Z               reduce using rule 80 (classliteral -> < .)
    ]               reduce using rule 80 (classliteral -> < .)
    |               reduce using rule 80 (classliteral -> < .)


state 132

    (67) classliteral -> $ .

    -               reduce using rule 67 (classliteral -> $ .)
    !               reduce using rule 67 (classliteral -> $ .)
    "               reduce using rule 67 (classliteral -> $ .)
    #               reduce using rule 67 (classliteral -> $ .)
    $               reduce using rule 67 (classliteral -> $ .)
    %               reduce using rule 67 (classliteral -> $ .)
    &               reduce using rule 67 (classliteral -> $ .)
    '               reduce using rule 67 (classliteral -> $ .)
    (               reduce using rule 67 (classliteral -> $ .)
    )               reduce using rule 67 (classliteral -> $ .)
    *               reduce using rule 67 (classliteral -> $ .)
    +               reduce using rule 67 (classliteral -> $ .)
    ,               reduce using rule 67 (classliteral -> $ .)
    .               reduce using rule 67 (classliteral -> $ .)
    /               reduce using rule 67 (classliteral -> $ .)
    :               reduce using rule 67 (classliteral -> $ .)
    ;               reduce using rule 67 (classliteral -> $ .)
    <               reduce using rule 67 (classliteral -> $ .)
    =               reduce using rule 67 (classliteral -> $ .)
    >               reduce using rule 67 (classliteral -> $ .)
    ?               reduce using rule 67 (classliteral -> $ .)
    @               reduce using rule 67 (classliteral -> $ .)
    [               reduce using rule 67 (classliteral -> $ .)
    \               reduce using rule 67 (classliteral -> $ .)
    _               reduce using rule 67 (classliteral -> $ .)
    `               reduce using rule 67 (classliteral -> $ .)
    {               reduce using rule 67 (classliteral -> $ .)
    }               reduce using rule 67 (classliteral -> $ .)
    ~               reduce using rule 67 (classliteral -> $ .)
    ESCAPED         reduce using rule 67 (classliteral -> $ .)
    DIGIT           reduce using rule 67 (classliteral -> $ .)
    OTHER           reduce using rule 67 (classliteral -> $ .)
    a               reduce using rule 67 (classliteral -> $ .)
    b               reduce using rule 67 (classliteral -> $ .)
    c               reduce using rule 67 (classliteral -> $ .)
    d               reduce using rule 67 (classliteral -> $ .)
    e               reduce using rule 67 (classliteral -> $ .)
    f               reduce using rule 67 (classliteral -> $ .)
    g               reduce using rule 67 (classliteral -> $ .)
    h               reduce using rule 67 (classliteral -> $ .)
    i               reduce using rule 67 (classliteral -> $ .)
    j               reduce using rule 67 (classliteral -> $ .)
    k               reduce using rule 67 (classliteral -> $ .)
    l               reduce using rule 67 (classliteral -> $ .)
    m               reduce using rule 67 (classliteral -> $ .)
    n               reduce using rule 67 (classliteral -> $ .)
    o               reduce using rule 67 (classliteral -> $ .)
    p               reduce using rule 67 (classliteral -> $ .)
    q               reduce using rule 67 (classliteral -> $ .)
    r               reduce using rule 67 (classliteral -> $ .)
    s               reduce using rule 67 (classliteral -> $ .)
    t               reduce using rule 67 (classliteral -> $ .)
    u               reduce using rule 67 (classliteral -> $ .)
    v               reduce using rule 67 (classliteral -> $ .)
    w               reduce using rule 67 (classliteral -> $ .)
    x               reduce using rule 67 (classliteral -> $ .)
    y               reduce using rule 67 (classliteral -> $ .)
    z               reduce using rule 67 (classliteral -> $ .)
    A               reduce using rule 67 (classliteral -> $ .)
    B               reduce using rule 67 (classliteral -> $ .)
    C               reduce using rule 67 (classliteral -> $ .)
    D               reduce using rule 67 (classliteral -> $ .)
    E               reduce using rule 67 (classliteral -> $ .)
    F               reduce using rule 67 (classliteral -> $ .)
    G               reduce using rule 67 (classliteral -> $ .)
    H               reduce using rule 67 (classliteral -> $ .)
    I               reduce using rule 67 (classliteral -> $ .)
    J               reduce using rule 67 (classliteral -> $ .)
    K               reduce using rule 67 (classliteral -> $ .)
    L               reduce using rule 67 (classliteral -> $ .)
    M               reduce using rule 67 (classliteral -> $ .)
    N               reduce using rule 67 (classliteral -> $ .)
    O               reduce using rule 67 (classliteral -> $ .)
    P               reduce using rule 67 (classliteral -> $ .)
    Q               reduce using rule 67 (classliteral -> $ .)
    R               reduce using rule 67 (classliteral -> $ .)
    S               reduce using rule 67 (classliteral -> $ .)
    T               reduce using rule 67 (classliteral -> $ .)
    U               reduce using rule 67 (classliteral -> $ .)
    V               reduce using rule 67 (classliteral -> $ .)
    W               reduce using rule 67 (classliteral -> $ .)
    X               reduce using rule 67 (classliteral -> $ .)
    Y               reduce using rule 67 (classliteral -> $ .)
    Z               reduce using rule 67 (classliteral -> $ .)
    ]               reduce using rule 67 (classliteral -> $ .)
    |               reduce using rule 67 (classliteral -> $ .)


state 133

    (56) classitems -> ^ . baseitems
    (60) baseitems -> . classatom
    (61) baseitems -> . classatom baseitems
    (62) classatom -> . classliteral
    (63) classatom -> . classrange
    (64) classliteral -> . !
    (65) classliteral -> . "
    (66) classliteral -> . #
    (67) classliteral -> . $
    (68) classliteral -> . %
    (69) classliteral -> . &
    (70) classliteral -> . '
    (71) classliteral -> . (
    (72) classliteral -> . )
    (73) classliteral -> . *
    (74) classliteral -> . +
    (75) classliteral -> . ,
    (76) classliteral -> . .
    (77) classliteral -> . /
    (78) classliteral -> . :
    (79) classliteral -> . ;
    (80) classliteral -> . <
    (81) classliteral -> . =
    (82) classliteral -> . >
    (83) classliteral -> . ?
    (84) classliteral -> . @
    (85) classliteral -> . [
    (86) classliteral -> . \
    (87) classliteral -> . _
    (88) classliteral -> . `
    (89) classliteral -> . {
    (90) classliteral -> . }
    (91) classliteral -> . ~
    (92) classliteral -> . literal
    (93) classrange -> . classliteral - classliteral
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    !               shift and go to state 137
    "               shift and go to state 140
    #               shift and go to state 107
    $               shift and go to state 132
    %               shift and go to state 138
    &               shift and go to state 135
    '               shift and go to state 109
    (               shift and go to state 117
    )               shift and go to state 118
    *               shift and go to state 108
    +               shift and go to state 122
    ,               shift and go to state 136
    .               shift and go to state 112
    /               shift and go to state 119
    :               shift and go to state 125
    ;               shift and go to state 116
    <               shift and go to state 131
    =               shift and go to state 142
    >               shift and go to state 134
    ?               shift and go to state 124
    @               shift and go to state 126
    [               shift and go to state 121
    \               shift and go to state 128
    _               shift and go to state 130
    `               shift and go to state 110
    {               shift and go to state 123
    }               shift and go to state 127
    ~               shift and go to state 113
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 86
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88
    classatom                      shift and go to state 120
    literal                        shift and go to state 129
    classliteral                   shift and go to state 114
    classrange                     shift and go to state 141
    baseitems                      shift and go to state 169

state 134

    (82) classliteral -> > .

    -               reduce using rule 82 (classliteral -> > .)
    !               reduce using rule 82 (classliteral -> > .)
    "               reduce using rule 82 (classliteral -> > .)
    #               reduce using rule 82 (classliteral -> > .)
    $               reduce using rule 82 (classliteral -> > .)
    %               reduce using rule 82 (classliteral -> > .)
    &               reduce using rule 82 (classliteral -> > .)
    '               reduce using rule 82 (classliteral -> > .)
    (               reduce using rule 82 (classliteral -> > .)
    )               reduce using rule 82 (classliteral -> > .)
    *               reduce using rule 82 (classliteral -> > .)
    +               reduce using rule 82 (classliteral -> > .)
    ,               reduce using rule 82 (classliteral -> > .)
    .               reduce using rule 82 (classliteral -> > .)
    /               reduce using rule 82 (classliteral -> > .)
    :               reduce using rule 82 (classliteral -> > .)
    ;               reduce using rule 82 (classliteral -> > .)
    <               reduce using rule 82 (classliteral -> > .)
    =               reduce using rule 82 (classliteral -> > .)
    >               reduce using rule 82 (classliteral -> > .)
    ?               reduce using rule 82 (classliteral -> > .)
    @               reduce using rule 82 (classliteral -> > .)
    [               reduce using rule 82 (classliteral -> > .)
    \               reduce using rule 82 (classliteral -> > .)
    _               reduce using rule 82 (classliteral -> > .)
    `               reduce using rule 82 (classliteral -> > .)
    {               reduce using rule 82 (classliteral -> > .)
    }               reduce using rule 82 (classliteral -> > .)
    ~               reduce using rule 82 (classliteral -> > .)
    ESCAPED         reduce using rule 82 (classliteral -> > .)
    DIGIT           reduce using rule 82 (classliteral -> > .)
    OTHER           reduce using rule 82 (classliteral -> > .)
    a               reduce using rule 82 (classliteral -> > .)
    b               reduce using rule 82 (classliteral -> > .)
    c               reduce using rule 82 (classliteral -> > .)
    d               reduce using rule 82 (classliteral -> > .)
    e               reduce using rule 82 (classliteral -> > .)
    f               reduce using rule 82 (classliteral -> > .)
    g               reduce using rule 82 (classliteral -> > .)
    h               reduce using rule 82 (classliteral -> > .)
    i               reduce using rule 82 (classliteral -> > .)
    j               reduce using rule 82 (classliteral -> > .)
    k               reduce using rule 82 (classliteral -> > .)
    l               reduce using rule 82 (classliteral -> > .)
    m               reduce using rule 82 (classliteral -> > .)
    n               reduce using rule 82 (classliteral -> > .)
    o               reduce using rule 82 (classliteral -> > .)
    p               reduce using rule 82 (classliteral -> > .)
    q               reduce using rule 82 (classliteral -> > .)
    r               reduce using rule 82 (classliteral -> > .)
    s               reduce using rule 82 (classliteral -> > .)
    t               reduce using rule 82 (classliteral -> > .)
    u               reduce using rule 82 (classliteral -> > .)
    v               reduce using rule 82 (classliteral -> > .)
    w               reduce using rule 82 (classliteral -> > .)
    x               reduce using rule 82 (classliteral -> > .)
    y               reduce using rule 82 (classliteral -> > .)
    z               reduce using rule 82 (classliteral -> > .)
    A               reduce using rule 82 (classliteral -> > .)
    B               reduce using rule 82 (classliteral -> > .)
    C               reduce using rule 82 (classliteral -> > .)
    D               reduce using rule 82 (classliteral -> > .)
    E               reduce using rule 82 (classliteral -> > .)
    F               reduce using rule 82 (classliteral -> > .)
    G               reduce using rule 82 (classliteral -> > .)
    H               reduce using rule 82 (classliteral -> > .)
    I               reduce using rule 82 (classliteral -> > .)
    J               reduce using rule 82 (classliteral -> > .)
    K               reduce using rule 82 (classliteral -> > .)
    L               reduce using rule 82 (classliteral -> > .)
    M               reduce using rule 82 (classliteral -> > .)
    N               reduce using rule 82 (classliteral -> > .)
    O               reduce using rule 82 (classliteral -> > .)
    P               reduce using rule 82 (classliteral -> > .)
    Q               reduce using rule 82 (classliteral -> > .)
    R               reduce using rule 82 (classliteral -> > .)
    S               reduce using rule 82 (classliteral -> > .)
    T               reduce using rule 82 (classliteral -> > .)
    U               reduce using rule 82 (classliteral -> > .)
    V               reduce using rule 82 (classliteral -> > .)
    W               reduce using rule 82 (classliteral -> > .)
    X               reduce using rule 82 (classliteral -> > .)
    Y               reduce using rule 82 (classliteral -> > .)
    Z               reduce using rule 82 (classliteral -> > .)
    ]               reduce using rule 82 (classliteral -> > .)
    |               reduce using rule 82 (classliteral -> > .)


state 135

    (69) classliteral -> & .

    -               reduce using rule 69 (classliteral -> & .)
    !               reduce using rule 69 (classliteral -> & .)
    "               reduce using rule 69 (classliteral -> & .)
    #               reduce using rule 69 (classliteral -> & .)
    $               reduce using rule 69 (classliteral -> & .)
    %               reduce using rule 69 (classliteral -> & .)
    &               reduce using rule 69 (classliteral -> & .)
    '               reduce using rule 69 (classliteral -> & .)
    (               reduce using rule 69 (classliteral -> & .)
    )               reduce using rule 69 (classliteral -> & .)
    *               reduce using rule 69 (classliteral -> & .)
    +               reduce using rule 69 (classliteral -> & .)
    ,               reduce using rule 69 (classliteral -> & .)
    .               reduce using rule 69 (classliteral -> & .)
    /               reduce using rule 69 (classliteral -> & .)
    :               reduce using rule 69 (classliteral -> & .)
    ;               reduce using rule 69 (classliteral -> & .)
    <               reduce using rule 69 (classliteral -> & .)
    =               reduce using rule 69 (classliteral -> & .)
    >               reduce using rule 69 (classliteral -> & .)
    ?               reduce using rule 69 (classliteral -> & .)
    @               reduce using rule 69 (classliteral -> & .)
    [               reduce using rule 69 (classliteral -> & .)
    \               reduce using rule 69 (classliteral -> & .)
    _               reduce using rule 69 (classliteral -> & .)
    `               reduce using rule 69 (classliteral -> & .)
    {               reduce using rule 69 (classliteral -> & .)
    }               reduce using rule 69 (classliteral -> & .)
    ~               reduce using rule 69 (classliteral -> & .)
    ESCAPED         reduce using rule 69 (classliteral -> & .)
    DIGIT           reduce using rule 69 (classliteral -> & .)
    OTHER           reduce using rule 69 (classliteral -> & .)
    a               reduce using rule 69 (classliteral -> & .)
    b               reduce using rule 69 (classliteral -> & .)
    c               reduce using rule 69 (classliteral -> & .)
    d               reduce using rule 69 (classliteral -> & .)
    e               reduce using rule 69 (classliteral -> & .)
    f               reduce using rule 69 (classliteral -> & .)
    g               reduce using rule 69 (classliteral -> & .)
    h               reduce using rule 69 (classliteral -> & .)
    i               reduce using rule 69 (classliteral -> & .)
    j               reduce using rule 69 (classliteral -> & .)
    k               reduce using rule 69 (classliteral -> & .)
    l               reduce using rule 69 (classliteral -> & .)
    m               reduce using rule 69 (classliteral -> & .)
    n               reduce using rule 69 (classliteral -> & .)
    o               reduce using rule 69 (classliteral -> & .)
    p               reduce using rule 69 (classliteral -> & .)
    q               reduce using rule 69 (classliteral -> & .)
    r               reduce using rule 69 (classliteral -> & .)
    s               reduce using rule 69 (classliteral -> & .)
    t               reduce using rule 69 (classliteral -> & .)
    u               reduce using rule 69 (classliteral -> & .)
    v               reduce using rule 69 (classliteral -> & .)
    w               reduce using rule 69 (classliteral -> & .)
    x               reduce using rule 69 (classliteral -> & .)
    y               reduce using rule 69 (classliteral -> & .)
    z               reduce using rule 69 (classliteral -> & .)
    A               reduce using rule 69 (classliteral -> & .)
    B               reduce using rule 69 (classliteral -> & .)
    C               reduce using rule 69 (classliteral -> & .)
    D               reduce using rule 69 (classliteral -> & .)
    E               reduce using rule 69 (classliteral -> & .)
    F               reduce using rule 69 (classliteral -> & .)
    G               reduce using rule 69 (classliteral -> & .)
    H               reduce using rule 69 (classliteral -> & .)
    I               reduce using rule 69 (classliteral -> & .)
    J               reduce using rule 69 (classliteral -> & .)
    K               reduce using rule 69 (classliteral -> & .)
    L               reduce using rule 69 (classliteral -> & .)
    M               reduce using rule 69 (classliteral -> & .)
    N               reduce using rule 69 (classliteral -> & .)
    O               reduce using rule 69 (classliteral -> & .)
    P               reduce using rule 69 (classliteral -> & .)
    Q               reduce using rule 69 (classliteral -> & .)
    R               reduce using rule 69 (classliteral -> & .)
    S               reduce using rule 69 (classliteral -> & .)
    T               reduce using rule 69 (classliteral -> & .)
    U               reduce using rule 69 (classliteral -> & .)
    V               reduce using rule 69 (classliteral -> & .)
    W               reduce using rule 69 (classliteral -> & .)
    X               reduce using rule 69 (classliteral -> & .)
    Y               reduce using rule 69 (classliteral -> & .)
    Z               reduce using rule 69 (classliteral -> & .)
    ]               reduce using rule 69 (classliteral -> & .)
    |               reduce using rule 69 (classliteral -> & .)


state 136

    (75) classliteral -> , .

    -               reduce using rule 75 (classliteral -> , .)
    !               reduce using rule 75 (classliteral -> , .)
    "               reduce using rule 75 (classliteral -> , .)
    #               reduce using rule 75 (classliteral -> , .)
    $               reduce using rule 75 (classliteral -> , .)
    %               reduce using rule 75 (classliteral -> , .)
    &               reduce using rule 75 (classliteral -> , .)
    '               reduce using rule 75 (classliteral -> , .)
    (               reduce using rule 75 (classliteral -> , .)
    )               reduce using rule 75 (classliteral -> , .)
    *               reduce using rule 75 (classliteral -> , .)
    +               reduce using rule 75 (classliteral -> , .)
    ,               reduce using rule 75 (classliteral -> , .)
    .               reduce using rule 75 (classliteral -> , .)
    /               reduce using rule 75 (classliteral -> , .)
    :               reduce using rule 75 (classliteral -> , .)
    ;               reduce using rule 75 (classliteral -> , .)
    <               reduce using rule 75 (classliteral -> , .)
    =               reduce using rule 75 (classliteral -> , .)
    >               reduce using rule 75 (classliteral -> , .)
    ?               reduce using rule 75 (classliteral -> , .)
    @               reduce using rule 75 (classliteral -> , .)
    [               reduce using rule 75 (classliteral -> , .)
    \               reduce using rule 75 (classliteral -> , .)
    _               reduce using rule 75 (classliteral -> , .)
    `               reduce using rule 75 (classliteral -> , .)
    {               reduce using rule 75 (classliteral -> , .)
    }               reduce using rule 75 (classliteral -> , .)
    ~               reduce using rule 75 (classliteral -> , .)
    ESCAPED         reduce using rule 75 (classliteral -> , .)
    DIGIT           reduce using rule 75 (classliteral -> , .)
    OTHER           reduce using rule 75 (classliteral -> , .)
    a               reduce using rule 75 (classliteral -> , .)
    b               reduce using rule 75 (classliteral -> , .)
    c               reduce using rule 75 (classliteral -> , .)
    d               reduce using rule 75 (classliteral -> , .)
    e               reduce using rule 75 (classliteral -> , .)
    f               reduce using rule 75 (classliteral -> , .)
    g               reduce using rule 75 (classliteral -> , .)
    h               reduce using rule 75 (classliteral -> , .)
    i               reduce using rule 75 (classliteral -> , .)
    j               reduce using rule 75 (classliteral -> , .)
    k               reduce using rule 75 (classliteral -> , .)
    l               reduce using rule 75 (classliteral -> , .)
    m               reduce using rule 75 (classliteral -> , .)
    n               reduce using rule 75 (classliteral -> , .)
    o               reduce using rule 75 (classliteral -> , .)
    p               reduce using rule 75 (classliteral -> , .)
    q               reduce using rule 75 (classliteral -> , .)
    r               reduce using rule 75 (classliteral -> , .)
    s               reduce using rule 75 (classliteral -> , .)
    t               reduce using rule 75 (classliteral -> , .)
    u               reduce using rule 75 (classliteral -> , .)
    v               reduce using rule 75 (classliteral -> , .)
    w               reduce using rule 75 (classliteral -> , .)
    x               reduce using rule 75 (classliteral -> , .)
    y               reduce using rule 75 (classliteral -> , .)
    z               reduce using rule 75 (classliteral -> , .)
    A               reduce using rule 75 (classliteral -> , .)
    B               reduce using rule 75 (classliteral -> , .)
    C               reduce using rule 75 (classliteral -> , .)
    D               reduce using rule 75 (classliteral -> , .)
    E               reduce using rule 75 (classliteral -> , .)
    F               reduce using rule 75 (classliteral -> , .)
    G               reduce using rule 75 (classliteral -> , .)
    H               reduce using rule 75 (classliteral -> , .)
    I               reduce using rule 75 (classliteral -> , .)
    J               reduce using rule 75 (classliteral -> , .)
    K               reduce using rule 75 (classliteral -> , .)
    L               reduce using rule 75 (classliteral -> , .)
    M               reduce using rule 75 (classliteral -> , .)
    N               reduce using rule 75 (classliteral -> , .)
    O               reduce using rule 75 (classliteral -> , .)
    P               reduce using rule 75 (classliteral -> , .)
    Q               reduce using rule 75 (classliteral -> , .)
    R               reduce using rule 75 (classliteral -> , .)
    S               reduce using rule 75 (classliteral -> , .)
    T               reduce using rule 75 (classliteral -> , .)
    U               reduce using rule 75 (classliteral -> , .)
    V               reduce using rule 75 (classliteral -> , .)
    W               reduce using rule 75 (classliteral -> , .)
    X               reduce using rule 75 (classliteral -> , .)
    Y               reduce using rule 75 (classliteral -> , .)
    Z               reduce using rule 75 (classliteral -> , .)
    ]               reduce using rule 75 (classliteral -> , .)
    |               reduce using rule 75 (classliteral -> , .)


state 137

    (64) classliteral -> ! .

    -               reduce using rule 64 (classliteral -> ! .)
    !               reduce using rule 64 (classliteral -> ! .)
    "               reduce using rule 64 (classliteral -> ! .)
    #               reduce using rule 64 (classliteral -> ! .)
    $               reduce using rule 64 (classliteral -> ! .)
    %               reduce using rule 64 (classliteral -> ! .)
    &               reduce using rule 64 (classliteral -> ! .)
    '               reduce using rule 64 (classliteral -> ! .)
    (               reduce using rule 64 (classliteral -> ! .)
    )               reduce using rule 64 (classliteral -> ! .)
    *               reduce using rule 64 (classliteral -> ! .)
    +               reduce using rule 64 (classliteral -> ! .)
    ,               reduce using rule 64 (classliteral -> ! .)
    .               reduce using rule 64 (classliteral -> ! .)
    /               reduce using rule 64 (classliteral -> ! .)
    :               reduce using rule 64 (classliteral -> ! .)
    ;               reduce using rule 64 (classliteral -> ! .)
    <               reduce using rule 64 (classliteral -> ! .)
    =               reduce using rule 64 (classliteral -> ! .)
    >               reduce using rule 64 (classliteral -> ! .)
    ?               reduce using rule 64 (classliteral -> ! .)
    @               reduce using rule 64 (classliteral -> ! .)
    [               reduce using rule 64 (classliteral -> ! .)
    \               reduce using rule 64 (classliteral -> ! .)
    _               reduce using rule 64 (classliteral -> ! .)
    `               reduce using rule 64 (classliteral -> ! .)
    {               reduce using rule 64 (classliteral -> ! .)
    }               reduce using rule 64 (classliteral -> ! .)
    ~               reduce using rule 64 (classliteral -> ! .)
    ESCAPED         reduce using rule 64 (classliteral -> ! .)
    DIGIT           reduce using rule 64 (classliteral -> ! .)
    OTHER           reduce using rule 64 (classliteral -> ! .)
    a               reduce using rule 64 (classliteral -> ! .)
    b               reduce using rule 64 (classliteral -> ! .)
    c               reduce using rule 64 (classliteral -> ! .)
    d               reduce using rule 64 (classliteral -> ! .)
    e               reduce using rule 64 (classliteral -> ! .)
    f               reduce using rule 64 (classliteral -> ! .)
    g               reduce using rule 64 (classliteral -> ! .)
    h               reduce using rule 64 (classliteral -> ! .)
    i               reduce using rule 64 (classliteral -> ! .)
    j               reduce using rule 64 (classliteral -> ! .)
    k               reduce using rule 64 (classliteral -> ! .)
    l               reduce using rule 64 (classliteral -> ! .)
    m               reduce using rule 64 (classliteral -> ! .)
    n               reduce using rule 64 (classliteral -> ! .)
    o               reduce using rule 64 (classliteral -> ! .)
    p               reduce using rule 64 (classliteral -> ! .)
    q               reduce using rule 64 (classliteral -> ! .)
    r               reduce using rule 64 (classliteral -> ! .)
    s               reduce using rule 64 (classliteral -> ! .)
    t               reduce using rule 64 (classliteral -> ! .)
    u               reduce using rule 64 (classliteral -> ! .)
    v               reduce using rule 64 (classliteral -> ! .)
    w               reduce using rule 64 (classliteral -> ! .)
    x               reduce using rule 64 (classliteral -> ! .)
    y               reduce using rule 64 (classliteral -> ! .)
    z               reduce using rule 64 (classliteral -> ! .)
    A               reduce using rule 64 (classliteral -> ! .)
    B               reduce using rule 64 (classliteral -> ! .)
    C               reduce using rule 64 (classliteral -> ! .)
    D               reduce using rule 64 (classliteral -> ! .)
    E               reduce using rule 64 (classliteral -> ! .)
    F               reduce using rule 64 (classliteral -> ! .)
    G               reduce using rule 64 (classliteral -> ! .)
    H               reduce using rule 64 (classliteral -> ! .)
    I               reduce using rule 64 (classliteral -> ! .)
    J               reduce using rule 64 (classliteral -> ! .)
    K               reduce using rule 64 (classliteral -> ! .)
    L               reduce using rule 64 (classliteral -> ! .)
    M               reduce using rule 64 (classliteral -> ! .)
    N               reduce using rule 64 (classliteral -> ! .)
    O               reduce using rule 64 (classliteral -> ! .)
    P               reduce using rule 64 (classliteral -> ! .)
    Q               reduce using rule 64 (classliteral -> ! .)
    R               reduce using rule 64 (classliteral -> ! .)
    S               reduce using rule 64 (classliteral -> ! .)
    T               reduce using rule 64 (classliteral -> ! .)
    U               reduce using rule 64 (classliteral -> ! .)
    V               reduce using rule 64 (classliteral -> ! .)
    W               reduce using rule 64 (classliteral -> ! .)
    X               reduce using rule 64 (classliteral -> ! .)
    Y               reduce using rule 64 (classliteral -> ! .)
    Z               reduce using rule 64 (classliteral -> ! .)
    ]               reduce using rule 64 (classliteral -> ! .)
    |               reduce using rule 64 (classliteral -> ! .)


state 138

    (68) classliteral -> % .

    -               reduce using rule 68 (classliteral -> % .)
    !               reduce using rule 68 (classliteral -> % .)
    "               reduce using rule 68 (classliteral -> % .)
    #               reduce using rule 68 (classliteral -> % .)
    $               reduce using rule 68 (classliteral -> % .)
    %               reduce using rule 68 (classliteral -> % .)
    &               reduce using rule 68 (classliteral -> % .)
    '               reduce using rule 68 (classliteral -> % .)
    (               reduce using rule 68 (classliteral -> % .)
    )               reduce using rule 68 (classliteral -> % .)
    *               reduce using rule 68 (classliteral -> % .)
    +               reduce using rule 68 (classliteral -> % .)
    ,               reduce using rule 68 (classliteral -> % .)
    .               reduce using rule 68 (classliteral -> % .)
    /               reduce using rule 68 (classliteral -> % .)
    :               reduce using rule 68 (classliteral -> % .)
    ;               reduce using rule 68 (classliteral -> % .)
    <               reduce using rule 68 (classliteral -> % .)
    =               reduce using rule 68 (classliteral -> % .)
    >               reduce using rule 68 (classliteral -> % .)
    ?               reduce using rule 68 (classliteral -> % .)
    @               reduce using rule 68 (classliteral -> % .)
    [               reduce using rule 68 (classliteral -> % .)
    \               reduce using rule 68 (classliteral -> % .)
    _               reduce using rule 68 (classliteral -> % .)
    `               reduce using rule 68 (classliteral -> % .)
    {               reduce using rule 68 (classliteral -> % .)
    }               reduce using rule 68 (classliteral -> % .)
    ~               reduce using rule 68 (classliteral -> % .)
    ESCAPED         reduce using rule 68 (classliteral -> % .)
    DIGIT           reduce using rule 68 (classliteral -> % .)
    OTHER           reduce using rule 68 (classliteral -> % .)
    a               reduce using rule 68 (classliteral -> % .)
    b               reduce using rule 68 (classliteral -> % .)
    c               reduce using rule 68 (classliteral -> % .)
    d               reduce using rule 68 (classliteral -> % .)
    e               reduce using rule 68 (classliteral -> % .)
    f               reduce using rule 68 (classliteral -> % .)
    g               reduce using rule 68 (classliteral -> % .)
    h               reduce using rule 68 (classliteral -> % .)
    i               reduce using rule 68 (classliteral -> % .)
    j               reduce using rule 68 (classliteral -> % .)
    k               reduce using rule 68 (classliteral -> % .)
    l               reduce using rule 68 (classliteral -> % .)
    m               reduce using rule 68 (classliteral -> % .)
    n               reduce using rule 68 (classliteral -> % .)
    o               reduce using rule 68 (classliteral -> % .)
    p               reduce using rule 68 (classliteral -> % .)
    q               reduce using rule 68 (classliteral -> % .)
    r               reduce using rule 68 (classliteral -> % .)
    s               reduce using rule 68 (classliteral -> % .)
    t               reduce using rule 68 (classliteral -> % .)
    u               reduce using rule 68 (classliteral -> % .)
    v               reduce using rule 68 (classliteral -> % .)
    w               reduce using rule 68 (classliteral -> % .)
    x               reduce using rule 68 (classliteral -> % .)
    y               reduce using rule 68 (classliteral -> % .)
    z               reduce using rule 68 (classliteral -> % .)
    A               reduce using rule 68 (classliteral -> % .)
    B               reduce using rule 68 (classliteral -> % .)
    C               reduce using rule 68 (classliteral -> % .)
    D               reduce using rule 68 (classliteral -> % .)
    E               reduce using rule 68 (classliteral -> % .)
    F               reduce using rule 68 (classliteral -> % .)
    G               reduce using rule 68 (classliteral -> % .)
    H               reduce using rule 68 (classliteral -> % .)
    I               reduce using rule 68 (classliteral -> % .)
    J               reduce using rule 68 (classliteral -> % .)
    K               reduce using rule 68 (classliteral -> % .)
    L               reduce using rule 68 (classliteral -> % .)
    M               reduce using rule 68 (classliteral -> % .)
    N               reduce using rule 68 (classliteral -> % .)
    O               reduce using rule 68 (classliteral -> % .)
    P               reduce using rule 68 (classliteral -> % .)
    Q               reduce using rule 68 (classliteral -> % .)
    R               reduce using rule 68 (classliteral -> % .)
    S               reduce using rule 68 (classliteral -> % .)
    T               reduce using rule 68 (classliteral -> % .)
    U               reduce using rule 68 (classliteral -> % .)
    V               reduce using rule 68 (classliteral -> % .)
    W               reduce using rule 68 (classliteral -> % .)
    X               reduce using rule 68 (classliteral -> % .)
    Y               reduce using rule 68 (classliteral -> % .)
    Z               reduce using rule 68 (classliteral -> % .)
    ]               reduce using rule 68 (classliteral -> % .)
    |               reduce using rule 68 (classliteral -> % .)


state 139

    (58) classitems2 -> baseitems .
    (59) classitems2 -> baseitems . | baseitems

    ]               reduce using rule 58 (classitems2 -> baseitems .)
    |               shift and go to state 170


state 140

    (65) classliteral -> " .

    -               reduce using rule 65 (classliteral -> " .)
    !               reduce using rule 65 (classliteral -> " .)
    "               reduce using rule 65 (classliteral -> " .)
    #               reduce using rule 65 (classliteral -> " .)
    $               reduce using rule 65 (classliteral -> " .)
    %               reduce using rule 65 (classliteral -> " .)
    &               reduce using rule 65 (classliteral -> " .)
    '               reduce using rule 65 (classliteral -> " .)
    (               reduce using rule 65 (classliteral -> " .)
    )               reduce using rule 65 (classliteral -> " .)
    *               reduce using rule 65 (classliteral -> " .)
    +               reduce using rule 65 (classliteral -> " .)
    ,               reduce using rule 65 (classliteral -> " .)
    .               reduce using rule 65 (classliteral -> " .)
    /               reduce using rule 65 (classliteral -> " .)
    :               reduce using rule 65 (classliteral -> " .)
    ;               reduce using rule 65 (classliteral -> " .)
    <               reduce using rule 65 (classliteral -> " .)
    =               reduce using rule 65 (classliteral -> " .)
    >               reduce using rule 65 (classliteral -> " .)
    ?               reduce using rule 65 (classliteral -> " .)
    @               reduce using rule 65 (classliteral -> " .)
    [               reduce using rule 65 (classliteral -> " .)
    \               reduce using rule 65 (classliteral -> " .)
    _               reduce using rule 65 (classliteral -> " .)
    `               reduce using rule 65 (classliteral -> " .)
    {               reduce using rule 65 (classliteral -> " .)
    }               reduce using rule 65 (classliteral -> " .)
    ~               reduce using rule 65 (classliteral -> " .)
    ESCAPED         reduce using rule 65 (classliteral -> " .)
    DIGIT           reduce using rule 65 (classliteral -> " .)
    OTHER           reduce using rule 65 (classliteral -> " .)
    a               reduce using rule 65 (classliteral -> " .)
    b               reduce using rule 65 (classliteral -> " .)
    c               reduce using rule 65 (classliteral -> " .)
    d               reduce using rule 65 (classliteral -> " .)
    e               reduce using rule 65 (classliteral -> " .)
    f               reduce using rule 65 (classliteral -> " .)
    g               reduce using rule 65 (classliteral -> " .)
    h               reduce using rule 65 (classliteral -> " .)
    i               reduce using rule 65 (classliteral -> " .)
    j               reduce using rule 65 (classliteral -> " .)
    k               reduce using rule 65 (classliteral -> " .)
    l               reduce using rule 65 (classliteral -> " .)
    m               reduce using rule 65 (classliteral -> " .)
    n               reduce using rule 65 (classliteral -> " .)
    o               reduce using rule 65 (classliteral -> " .)
    p               reduce using rule 65 (classliteral -> " .)
    q               reduce using rule 65 (classliteral -> " .)
    r               reduce using rule 65 (classliteral -> " .)
    s               reduce using rule 65 (classliteral -> " .)
    t               reduce using rule 65 (classliteral -> " .)
    u               reduce using rule 65 (classliteral -> " .)
    v               reduce using rule 65 (classliteral -> " .)
    w               reduce using rule 65 (classliteral -> " .)
    x               reduce using rule 65 (classliteral -> " .)
    y               reduce using rule 65 (classliteral -> " .)
    z               reduce using rule 65 (classliteral -> " .)
    A               reduce using rule 65 (classliteral -> " .)
    B               reduce using rule 65 (classliteral -> " .)
    C               reduce using rule 65 (classliteral -> " .)
    D               reduce using rule 65 (classliteral -> " .)
    E               reduce using rule 65 (classliteral -> " .)
    F               reduce using rule 65 (classliteral -> " .)
    G               reduce using rule 65 (classliteral -> " .)
    H               reduce using rule 65 (classliteral -> " .)
    I               reduce using rule 65 (classliteral -> " .)
    J               reduce using rule 65 (classliteral -> " .)
    K               reduce using rule 65 (classliteral -> " .)
    L               reduce using rule 65 (classliteral -> " .)
    M               reduce using rule 65 (classliteral -> " .)
    N               reduce using rule 65 (classliteral -> " .)
    O               reduce using rule 65 (classliteral -> " .)
    P               reduce using rule 65 (classliteral -> " .)
    Q               reduce using rule 65 (classliteral -> " .)
    R               reduce using rule 65 (classliteral -> " .)
    S               reduce using rule 65 (classliteral -> " .)
    T               reduce using rule 65 (classliteral -> " .)
    U               reduce using rule 65 (classliteral -> " .)
    V               reduce using rule 65 (classliteral -> " .)
    W               reduce using rule 65 (classliteral -> " .)
    X               reduce using rule 65 (classliteral -> " .)
    Y               reduce using rule 65 (classliteral -> " .)
    Z               reduce using rule 65 (classliteral -> " .)
    ]               reduce using rule 65 (classliteral -> " .)
    |               reduce using rule 65 (classliteral -> " .)


state 141

    (63) classatom -> classrange .

    !               reduce using rule 63 (classatom -> classrange .)
    "               reduce using rule 63 (classatom -> classrange .)
    #               reduce using rule 63 (classatom -> classrange .)
    $               reduce using rule 63 (classatom -> classrange .)
    %               reduce using rule 63 (classatom -> classrange .)
    &               reduce using rule 63 (classatom -> classrange .)
    '               reduce using rule 63 (classatom -> classrange .)
    (               reduce using rule 63 (classatom -> classrange .)
    )               reduce using rule 63 (classatom -> classrange .)
    *               reduce using rule 63 (classatom -> classrange .)
    +               reduce using rule 63 (classatom -> classrange .)
    ,               reduce using rule 63 (classatom -> classrange .)
    .               reduce using rule 63 (classatom -> classrange .)
    /               reduce using rule 63 (classatom -> classrange .)
    :               reduce using rule 63 (classatom -> classrange .)
    ;               reduce using rule 63 (classatom -> classrange .)
    <               reduce using rule 63 (classatom -> classrange .)
    =               reduce using rule 63 (classatom -> classrange .)
    >               reduce using rule 63 (classatom -> classrange .)
    ?               reduce using rule 63 (classatom -> classrange .)
    @               reduce using rule 63 (classatom -> classrange .)
    [               reduce using rule 63 (classatom -> classrange .)
    \               reduce using rule 63 (classatom -> classrange .)
    _               reduce using rule 63 (classatom -> classrange .)
    `               reduce using rule 63 (classatom -> classrange .)
    {               reduce using rule 63 (classatom -> classrange .)
    }               reduce using rule 63 (classatom -> classrange .)
    ~               reduce using rule 63 (classatom -> classrange .)
    ESCAPED         reduce using rule 63 (classatom -> classrange .)
    DIGIT           reduce using rule 63 (classatom -> classrange .)
    OTHER           reduce using rule 63 (classatom -> classrange .)
    a               reduce using rule 63 (classatom -> classrange .)
    b               reduce using rule 63 (classatom -> classrange .)
    c               reduce using rule 63 (classatom -> classrange .)
    d               reduce using rule 63 (classatom -> classrange .)
    e               reduce using rule 63 (classatom -> classrange .)
    f               reduce using rule 63 (classatom -> classrange .)
    g               reduce using rule 63 (classatom -> classrange .)
    h               reduce using rule 63 (classatom -> classrange .)
    i               reduce using rule 63 (classatom -> classrange .)
    j               reduce using rule 63 (classatom -> classrange .)
    k               reduce using rule 63 (classatom -> classrange .)
    l               reduce using rule 63 (classatom -> classrange .)
    m               reduce using rule 63 (classatom -> classrange .)
    n               reduce using rule 63 (classatom -> classrange .)
    o               reduce using rule 63 (classatom -> classrange .)
    p               reduce using rule 63 (classatom -> classrange .)
    q               reduce using rule 63 (classatom -> classrange .)
    r               reduce using rule 63 (classatom -> classrange .)
    s               reduce using rule 63 (classatom -> classrange .)
    t               reduce using rule 63 (classatom -> classrange .)
    u               reduce using rule 63 (classatom -> classrange .)
    v               reduce using rule 63 (classatom -> classrange .)
    w               reduce using rule 63 (classatom -> classrange .)
    x               reduce using rule 63 (classatom -> classrange .)
    y               reduce using rule 63 (classatom -> classrange .)
    z               reduce using rule 63 (classatom -> classrange .)
    A               reduce using rule 63 (classatom -> classrange .)
    B               reduce using rule 63 (classatom -> classrange .)
    C               reduce using rule 63 (classatom -> classrange .)
    D               reduce using rule 63 (classatom -> classrange .)
    E               reduce using rule 63 (classatom -> classrange .)
    F               reduce using rule 63 (classatom -> classrange .)
    G               reduce using rule 63 (classatom -> classrange .)
    H               reduce using rule 63 (classatom -> classrange .)
    I               reduce using rule 63 (classatom -> classrange .)
    J               reduce using rule 63 (classatom -> classrange .)
    K               reduce using rule 63 (classatom -> classrange .)
    L               reduce using rule 63 (classatom -> classrange .)
    M               reduce using rule 63 (classatom -> classrange .)
    N               reduce using rule 63 (classatom -> classrange .)
    O               reduce using rule 63 (classatom -> classrange .)
    P               reduce using rule 63 (classatom -> classrange .)
    Q               reduce using rule 63 (classatom -> classrange .)
    R               reduce using rule 63 (classatom -> classrange .)
    S               reduce using rule 63 (classatom -> classrange .)
    T               reduce using rule 63 (classatom -> classrange .)
    U               reduce using rule 63 (classatom -> classrange .)
    V               reduce using rule 63 (classatom -> classrange .)
    W               reduce using rule 63 (classatom -> classrange .)
    X               reduce using rule 63 (classatom -> classrange .)
    Y               reduce using rule 63 (classatom -> classrange .)
    Z               reduce using rule 63 (classatom -> classrange .)
    |               reduce using rule 63 (classatom -> classrange .)
    ]               reduce using rule 63 (classatom -> classrange .)


state 142

    (81) classliteral -> = .

    -               reduce using rule 81 (classliteral -> = .)
    !               reduce using rule 81 (classliteral -> = .)
    "               reduce using rule 81 (classliteral -> = .)
    #               reduce using rule 81 (classliteral -> = .)
    $               reduce using rule 81 (classliteral -> = .)
    %               reduce using rule 81 (classliteral -> = .)
    &               reduce using rule 81 (classliteral -> = .)
    '               reduce using rule 81 (classliteral -> = .)
    (               reduce using rule 81 (classliteral -> = .)
    )               reduce using rule 81 (classliteral -> = .)
    *               reduce using rule 81 (classliteral -> = .)
    +               reduce using rule 81 (classliteral -> = .)
    ,               reduce using rule 81 (classliteral -> = .)
    .               reduce using rule 81 (classliteral -> = .)
    /               reduce using rule 81 (classliteral -> = .)
    :               reduce using rule 81 (classliteral -> = .)
    ;               reduce using rule 81 (classliteral -> = .)
    <               reduce using rule 81 (classliteral -> = .)
    =               reduce using rule 81 (classliteral -> = .)
    >               reduce using rule 81 (classliteral -> = .)
    ?               reduce using rule 81 (classliteral -> = .)
    @               reduce using rule 81 (classliteral -> = .)
    [               reduce using rule 81 (classliteral -> = .)
    \               reduce using rule 81 (classliteral -> = .)
    _               reduce using rule 81 (classliteral -> = .)
    `               reduce using rule 81 (classliteral -> = .)
    {               reduce using rule 81 (classliteral -> = .)
    }               reduce using rule 81 (classliteral -> = .)
    ~               reduce using rule 81 (classliteral -> = .)
    ESCAPED         reduce using rule 81 (classliteral -> = .)
    DIGIT           reduce using rule 81 (classliteral -> = .)
    OTHER           reduce using rule 81 (classliteral -> = .)
    a               reduce using rule 81 (classliteral -> = .)
    b               reduce using rule 81 (classliteral -> = .)
    c               reduce using rule 81 (classliteral -> = .)
    d               reduce using rule 81 (classliteral -> = .)
    e               reduce using rule 81 (classliteral -> = .)
    f               reduce using rule 81 (classliteral -> = .)
    g               reduce using rule 81 (classliteral -> = .)
    h               reduce using rule 81 (classliteral -> = .)
    i               reduce using rule 81 (classliteral -> = .)
    j               reduce using rule 81 (classliteral -> = .)
    k               reduce using rule 81 (classliteral -> = .)
    l               reduce using rule 81 (classliteral -> = .)
    m               reduce using rule 81 (classliteral -> = .)
    n               reduce using rule 81 (classliteral -> = .)
    o               reduce using rule 81 (classliteral -> = .)
    p               reduce using rule 81 (classliteral -> = .)
    q               reduce using rule 81 (classliteral -> = .)
    r               reduce using rule 81 (classliteral -> = .)
    s               reduce using rule 81 (classliteral -> = .)
    t               reduce using rule 81 (classliteral -> = .)
    u               reduce using rule 81 (classliteral -> = .)
    v               reduce using rule 81 (classliteral -> = .)
    w               reduce using rule 81 (classliteral -> = .)
    x               reduce using rule 81 (classliteral -> = .)
    y               reduce using rule 81 (classliteral -> = .)
    z               reduce using rule 81 (classliteral -> = .)
    A               reduce using rule 81 (classliteral -> = .)
    B               reduce using rule 81 (classliteral -> = .)
    C               reduce using rule 81 (classliteral -> = .)
    D               reduce using rule 81 (classliteral -> = .)
    E               reduce using rule 81 (classliteral -> = .)
    F               reduce using rule 81 (classliteral -> = .)
    G               reduce using rule 81 (classliteral -> = .)
    H               reduce using rule 81 (classliteral -> = .)
    I               reduce using rule 81 (classliteral -> = .)
    J               reduce using rule 81 (classliteral -> = .)
    K               reduce using rule 81 (classliteral -> = .)
    L               reduce using rule 81 (classliteral -> = .)
    M               reduce using rule 81 (classliteral -> = .)
    N               reduce using rule 81 (classliteral -> = .)
    O               reduce using rule 81 (classliteral -> = .)
    P               reduce using rule 81 (classliteral -> = .)
    Q               reduce using rule 81 (classliteral -> = .)
    R               reduce using rule 81 (classliteral -> = .)
    S               reduce using rule 81 (classliteral -> = .)
    T               reduce using rule 81 (classliteral -> = .)
    U               reduce using rule 81 (classliteral -> = .)
    V               reduce using rule 81 (classliteral -> = .)
    W               reduce using rule 81 (classliteral -> = .)
    X               reduce using rule 81 (classliteral -> = .)
    Y               reduce using rule 81 (classliteral -> = .)
    Z               reduce using rule 81 (classliteral -> = .)
    ]               reduce using rule 81 (classliteral -> = .)
    |               reduce using rule 81 (classliteral -> = .)


state 143

    (101) anchor -> $ * .

    *               reduce using rule 101 (anchor -> $ * .)
    +               reduce using rule 101 (anchor -> $ * .)
    ?               reduce using rule 101 (anchor -> $ * .)
    {               reduce using rule 101 (anchor -> $ * .)
    (               reduce using rule 101 (anchor -> $ * .)
    ^               reduce using rule 101 (anchor -> $ * .)
    >               reduce using rule 101 (anchor -> $ * .)
    <               reduce using rule 101 (anchor -> $ * .)
    /               reduce using rule 101 (anchor -> $ * .)
    \               reduce using rule 101 (anchor -> $ * .)
    #               reduce using rule 101 (anchor -> $ * .)
    %               reduce using rule 101 (anchor -> $ * .)
    ESCAPED         reduce using rule 101 (anchor -> $ * .)
    DIGIT           reduce using rule 101 (anchor -> $ * .)
    OTHER           reduce using rule 101 (anchor -> $ * .)
    [               reduce using rule 101 (anchor -> $ * .)
    .               reduce using rule 101 (anchor -> $ * .)
    ,               reduce using rule 101 (anchor -> $ * .)
    :               reduce using rule 101 (anchor -> $ * .)
    ;               reduce using rule 101 (anchor -> $ * .)
    $               reduce using rule 101 (anchor -> $ * .)
    `               reduce using rule 101 (anchor -> $ * .)
    a               reduce using rule 101 (anchor -> $ * .)
    b               reduce using rule 101 (anchor -> $ * .)
    c               reduce using rule 101 (anchor -> $ * .)
    d               reduce using rule 101 (anchor -> $ * .)
    e               reduce using rule 101 (anchor -> $ * .)
    f               reduce using rule 101 (anchor -> $ * .)
    g               reduce using rule 101 (anchor -> $ * .)
    h               reduce using rule 101 (anchor -> $ * .)
    i               reduce using rule 101 (anchor -> $ * .)
    j               reduce using rule 101 (anchor -> $ * .)
    k               reduce using rule 101 (anchor -> $ * .)
    l               reduce using rule 101 (anchor -> $ * .)
    m               reduce using rule 101 (anchor -> $ * .)
    n               reduce using rule 101 (anchor -> $ * .)
    o               reduce using rule 101 (anchor -> $ * .)
    p               reduce using rule 101 (anchor -> $ * .)
    q               reduce using rule 101 (anchor -> $ * .)
    r               reduce using rule 101 (anchor -> $ * .)
    s               reduce using rule 101 (anchor -> $ * .)
    t               reduce using rule 101 (anchor -> $ * .)
    u               reduce using rule 101 (anchor -> $ * .)
    v               reduce using rule 101 (anchor -> $ * .)
    w               reduce using rule 101 (anchor -> $ * .)
    x               reduce using rule 101 (anchor -> $ * .)
    y               reduce using rule 101 (anchor -> $ * .)
    z               reduce using rule 101 (anchor -> $ * .)
    A               reduce using rule 101 (anchor -> $ * .)
    B               reduce using rule 101 (anchor -> $ * .)
    C               reduce using rule 101 (anchor -> $ * .)
    D               reduce using rule 101 (anchor -> $ * .)
    E               reduce using rule 101 (anchor -> $ * .)
    F               reduce using rule 101 (anchor -> $ * .)
    G               reduce using rule 101 (anchor -> $ * .)
    H               reduce using rule 101 (anchor -> $ * .)
    I               reduce using rule 101 (anchor -> $ * .)
    J               reduce using rule 101 (anchor -> $ * .)
    K               reduce using rule 101 (anchor -> $ * .)
    L               reduce using rule 101 (anchor -> $ * .)
    M               reduce using rule 101 (anchor -> $ * .)
    N               reduce using rule 101 (anchor -> $ * .)
    O               reduce using rule 101 (anchor -> $ * .)
    P               reduce using rule 101 (anchor -> $ * .)
    Q               reduce using rule 101 (anchor -> $ * .)
    R               reduce using rule 101 (anchor -> $ * .)
    S               reduce using rule 101 (anchor -> $ * .)
    T               reduce using rule 101 (anchor -> $ * .)
    U               reduce using rule 101 (anchor -> $ * .)
    V               reduce using rule 101 (anchor -> $ * .)
    W               reduce using rule 101 (anchor -> $ * .)
    X               reduce using rule 101 (anchor -> $ * .)
    Y               reduce using rule 101 (anchor -> $ * .)
    Z               reduce using rule 101 (anchor -> $ * .)
    |               reduce using rule 101 (anchor -> $ * .)
    )               reduce using rule 101 (anchor -> $ * .)
    $end            reduce using rule 101 (anchor -> $ * .)


state 144

    (99) anchor -> $ DIGIT .

    *               reduce using rule 99 (anchor -> $ DIGIT .)
    +               reduce using rule 99 (anchor -> $ DIGIT .)
    ?               reduce using rule 99 (anchor -> $ DIGIT .)
    {               reduce using rule 99 (anchor -> $ DIGIT .)
    (               reduce using rule 99 (anchor -> $ DIGIT .)
    ^               reduce using rule 99 (anchor -> $ DIGIT .)
    >               reduce using rule 99 (anchor -> $ DIGIT .)
    <               reduce using rule 99 (anchor -> $ DIGIT .)
    /               reduce using rule 99 (anchor -> $ DIGIT .)
    \               reduce using rule 99 (anchor -> $ DIGIT .)
    #               reduce using rule 99 (anchor -> $ DIGIT .)
    %               reduce using rule 99 (anchor -> $ DIGIT .)
    ESCAPED         reduce using rule 99 (anchor -> $ DIGIT .)
    DIGIT           reduce using rule 99 (anchor -> $ DIGIT .)
    OTHER           reduce using rule 99 (anchor -> $ DIGIT .)
    [               reduce using rule 99 (anchor -> $ DIGIT .)
    .               reduce using rule 99 (anchor -> $ DIGIT .)
    ,               reduce using rule 99 (anchor -> $ DIGIT .)
    :               reduce using rule 99 (anchor -> $ DIGIT .)
    ;               reduce using rule 99 (anchor -> $ DIGIT .)
    $               reduce using rule 99 (anchor -> $ DIGIT .)
    `               reduce using rule 99 (anchor -> $ DIGIT .)
    a               reduce using rule 99 (anchor -> $ DIGIT .)
    b               reduce using rule 99 (anchor -> $ DIGIT .)
    c               reduce using rule 99 (anchor -> $ DIGIT .)
    d               reduce using rule 99 (anchor -> $ DIGIT .)
    e               reduce using rule 99 (anchor -> $ DIGIT .)
    f               reduce using rule 99 (anchor -> $ DIGIT .)
    g               reduce using rule 99 (anchor -> $ DIGIT .)
    h               reduce using rule 99 (anchor -> $ DIGIT .)
    i               reduce using rule 99 (anchor -> $ DIGIT .)
    j               reduce using rule 99 (anchor -> $ DIGIT .)
    k               reduce using rule 99 (anchor -> $ DIGIT .)
    l               reduce using rule 99 (anchor -> $ DIGIT .)
    m               reduce using rule 99 (anchor -> $ DIGIT .)
    n               reduce using rule 99 (anchor -> $ DIGIT .)
    o               reduce using rule 99 (anchor -> $ DIGIT .)
    p               reduce using rule 99 (anchor -> $ DIGIT .)
    q               reduce using rule 99 (anchor -> $ DIGIT .)
    r               reduce using rule 99 (anchor -> $ DIGIT .)
    s               reduce using rule 99 (anchor -> $ DIGIT .)
    t               reduce using rule 99 (anchor -> $ DIGIT .)
    u               reduce using rule 99 (anchor -> $ DIGIT .)
    v               reduce using rule 99 (anchor -> $ DIGIT .)
    w               reduce using rule 99 (anchor -> $ DIGIT .)
    x               reduce using rule 99 (anchor -> $ DIGIT .)
    y               reduce using rule 99 (anchor -> $ DIGIT .)
    z               reduce using rule 99 (anchor -> $ DIGIT .)
    A               reduce using rule 99 (anchor -> $ DIGIT .)
    B               reduce using rule 99 (anchor -> $ DIGIT .)
    C               reduce using rule 99 (anchor -> $ DIGIT .)
    D               reduce using rule 99 (anchor -> $ DIGIT .)
    E               reduce using rule 99 (anchor -> $ DIGIT .)
    F               reduce using rule 99 (anchor -> $ DIGIT .)
    G               reduce using rule 99 (anchor -> $ DIGIT .)
    H               reduce using rule 99 (anchor -> $ DIGIT .)
    I               reduce using rule 99 (anchor -> $ DIGIT .)
    J               reduce using rule 99 (anchor -> $ DIGIT .)
    K               reduce using rule 99 (anchor -> $ DIGIT .)
    L               reduce using rule 99 (anchor -> $ DIGIT .)
    M               reduce using rule 99 (anchor -> $ DIGIT .)
    N               reduce using rule 99 (anchor -> $ DIGIT .)
    O               reduce using rule 99 (anchor -> $ DIGIT .)
    P               reduce using rule 99 (anchor -> $ DIGIT .)
    Q               reduce using rule 99 (anchor -> $ DIGIT .)
    R               reduce using rule 99 (anchor -> $ DIGIT .)
    S               reduce using rule 99 (anchor -> $ DIGIT .)
    T               reduce using rule 99 (anchor -> $ DIGIT .)
    U               reduce using rule 99 (anchor -> $ DIGIT .)
    V               reduce using rule 99 (anchor -> $ DIGIT .)
    W               reduce using rule 99 (anchor -> $ DIGIT .)
    X               reduce using rule 99 (anchor -> $ DIGIT .)
    Y               reduce using rule 99 (anchor -> $ DIGIT .)
    Z               reduce using rule 99 (anchor -> $ DIGIT .)
    |               reduce using rule 99 (anchor -> $ DIGIT .)
    )               reduce using rule 99 (anchor -> $ DIGIT .)
    $end            reduce using rule 99 (anchor -> $ DIGIT .)


state 145

    (103) anchor -> $ ^ .

    *               reduce using rule 103 (anchor -> $ ^ .)
    +               reduce using rule 103 (anchor -> $ ^ .)
    ?               reduce using rule 103 (anchor -> $ ^ .)
    {               reduce using rule 103 (anchor -> $ ^ .)
    (               reduce using rule 103 (anchor -> $ ^ .)
    ^               reduce using rule 103 (anchor -> $ ^ .)
    >               reduce using rule 103 (anchor -> $ ^ .)
    <               reduce using rule 103 (anchor -> $ ^ .)
    /               reduce using rule 103 (anchor -> $ ^ .)
    \               reduce using rule 103 (anchor -> $ ^ .)
    #               reduce using rule 103 (anchor -> $ ^ .)
    %               reduce using rule 103 (anchor -> $ ^ .)
    ESCAPED         reduce using rule 103 (anchor -> $ ^ .)
    DIGIT           reduce using rule 103 (anchor -> $ ^ .)
    OTHER           reduce using rule 103 (anchor -> $ ^ .)
    [               reduce using rule 103 (anchor -> $ ^ .)
    .               reduce using rule 103 (anchor -> $ ^ .)
    ,               reduce using rule 103 (anchor -> $ ^ .)
    :               reduce using rule 103 (anchor -> $ ^ .)
    ;               reduce using rule 103 (anchor -> $ ^ .)
    $               reduce using rule 103 (anchor -> $ ^ .)
    `               reduce using rule 103 (anchor -> $ ^ .)
    a               reduce using rule 103 (anchor -> $ ^ .)
    b               reduce using rule 103 (anchor -> $ ^ .)
    c               reduce using rule 103 (anchor -> $ ^ .)
    d               reduce using rule 103 (anchor -> $ ^ .)
    e               reduce using rule 103 (anchor -> $ ^ .)
    f               reduce using rule 103 (anchor -> $ ^ .)
    g               reduce using rule 103 (anchor -> $ ^ .)
    h               reduce using rule 103 (anchor -> $ ^ .)
    i               reduce using rule 103 (anchor -> $ ^ .)
    j               reduce using rule 103 (anchor -> $ ^ .)
    k               reduce using rule 103 (anchor -> $ ^ .)
    l               reduce using rule 103 (anchor -> $ ^ .)
    m               reduce using rule 103 (anchor -> $ ^ .)
    n               reduce using rule 103 (anchor -> $ ^ .)
    o               reduce using rule 103 (anchor -> $ ^ .)
    p               reduce using rule 103 (anchor -> $ ^ .)
    q               reduce using rule 103 (anchor -> $ ^ .)
    r               reduce using rule 103 (anchor -> $ ^ .)
    s               reduce using rule 103 (anchor -> $ ^ .)
    t               reduce using rule 103 (anchor -> $ ^ .)
    u               reduce using rule 103 (anchor -> $ ^ .)
    v               reduce using rule 103 (anchor -> $ ^ .)
    w               reduce using rule 103 (anchor -> $ ^ .)
    x               reduce using rule 103 (anchor -> $ ^ .)
    y               reduce using rule 103 (anchor -> $ ^ .)
    z               reduce using rule 103 (anchor -> $ ^ .)
    A               reduce using rule 103 (anchor -> $ ^ .)
    B               reduce using rule 103 (anchor -> $ ^ .)
    C               reduce using rule 103 (anchor -> $ ^ .)
    D               reduce using rule 103 (anchor -> $ ^ .)
    E               reduce using rule 103 (anchor -> $ ^ .)
    F               reduce using rule 103 (anchor -> $ ^ .)
    G               reduce using rule 103 (anchor -> $ ^ .)
    H               reduce using rule 103 (anchor -> $ ^ .)
    I               reduce using rule 103 (anchor -> $ ^ .)
    J               reduce using rule 103 (anchor -> $ ^ .)
    K               reduce using rule 103 (anchor -> $ ^ .)
    L               reduce using rule 103 (anchor -> $ ^ .)
    M               reduce using rule 103 (anchor -> $ ^ .)
    N               reduce using rule 103 (anchor -> $ ^ .)
    O               reduce using rule 103 (anchor -> $ ^ .)
    P               reduce using rule 103 (anchor -> $ ^ .)
    Q               reduce using rule 103 (anchor -> $ ^ .)
    R               reduce using rule 103 (anchor -> $ ^ .)
    S               reduce using rule 103 (anchor -> $ ^ .)
    T               reduce using rule 103 (anchor -> $ ^ .)
    U               reduce using rule 103 (anchor -> $ ^ .)
    V               reduce using rule 103 (anchor -> $ ^ .)
    W               reduce using rule 103 (anchor -> $ ^ .)
    X               reduce using rule 103 (anchor -> $ ^ .)
    Y               reduce using rule 103 (anchor -> $ ^ .)
    Z               reduce using rule 103 (anchor -> $ ^ .)
    |               reduce using rule 103 (anchor -> $ ^ .)
    )               reduce using rule 103 (anchor -> $ ^ .)
    $end            reduce using rule 103 (anchor -> $ ^ .)


state 146

    (100) anchor -> $ alpha .

    *               reduce using rule 100 (anchor -> $ alpha .)
    +               reduce using rule 100 (anchor -> $ alpha .)
    ?               reduce using rule 100 (anchor -> $ alpha .)
    {               reduce using rule 100 (anchor -> $ alpha .)
    (               reduce using rule 100 (anchor -> $ alpha .)
    ^               reduce using rule 100 (anchor -> $ alpha .)
    >               reduce using rule 100 (anchor -> $ alpha .)
    <               reduce using rule 100 (anchor -> $ alpha .)
    /               reduce using rule 100 (anchor -> $ alpha .)
    \               reduce using rule 100 (anchor -> $ alpha .)
    #               reduce using rule 100 (anchor -> $ alpha .)
    %               reduce using rule 100 (anchor -> $ alpha .)
    ESCAPED         reduce using rule 100 (anchor -> $ alpha .)
    DIGIT           reduce using rule 100 (anchor -> $ alpha .)
    OTHER           reduce using rule 100 (anchor -> $ alpha .)
    [               reduce using rule 100 (anchor -> $ alpha .)
    .               reduce using rule 100 (anchor -> $ alpha .)
    ,               reduce using rule 100 (anchor -> $ alpha .)
    :               reduce using rule 100 (anchor -> $ alpha .)
    ;               reduce using rule 100 (anchor -> $ alpha .)
    $               reduce using rule 100 (anchor -> $ alpha .)
    `               reduce using rule 100 (anchor -> $ alpha .)
    a               reduce using rule 100 (anchor -> $ alpha .)
    b               reduce using rule 100 (anchor -> $ alpha .)
    c               reduce using rule 100 (anchor -> $ alpha .)
    d               reduce using rule 100 (anchor -> $ alpha .)
    e               reduce using rule 100 (anchor -> $ alpha .)
    f               reduce using rule 100 (anchor -> $ alpha .)
    g               reduce using rule 100 (anchor -> $ alpha .)
    h               reduce using rule 100 (anchor -> $ alpha .)
    i               reduce using rule 100 (anchor -> $ alpha .)
    j               reduce using rule 100 (anchor -> $ alpha .)
    k               reduce using rule 100 (anchor -> $ alpha .)
    l               reduce using rule 100 (anchor -> $ alpha .)
    m               reduce using rule 100 (anchor -> $ alpha .)
    n               reduce using rule 100 (anchor -> $ alpha .)
    o               reduce using rule 100 (anchor -> $ alpha .)
    p               reduce using rule 100 (anchor -> $ alpha .)
    q               reduce using rule 100 (anchor -> $ alpha .)
    r               reduce using rule 100 (anchor -> $ alpha .)
    s               reduce using rule 100 (anchor -> $ alpha .)
    t               reduce using rule 100 (anchor -> $ alpha .)
    u               reduce using rule 100 (anchor -> $ alpha .)
    v               reduce using rule 100 (anchor -> $ alpha .)
    w               reduce using rule 100 (anchor -> $ alpha .)
    x               reduce using rule 100 (anchor -> $ alpha .)
    y               reduce using rule 100 (anchor -> $ alpha .)
    z               reduce using rule 100 (anchor -> $ alpha .)
    A               reduce using rule 100 (anchor -> $ alpha .)
    B               reduce using rule 100 (anchor -> $ alpha .)
    C               reduce using rule 100 (anchor -> $ alpha .)
    D               reduce using rule 100 (anchor -> $ alpha .)
    E               reduce using rule 100 (anchor -> $ alpha .)
    F               reduce using rule 100 (anchor -> $ alpha .)
    G               reduce using rule 100 (anchor -> $ alpha .)
    H               reduce using rule 100 (anchor -> $ alpha .)
    I               reduce using rule 100 (anchor -> $ alpha .)
    J               reduce using rule 100 (anchor -> $ alpha .)
    K               reduce using rule 100 (anchor -> $ alpha .)
    L               reduce using rule 100 (anchor -> $ alpha .)
    M               reduce using rule 100 (anchor -> $ alpha .)
    N               reduce using rule 100 (anchor -> $ alpha .)
    O               reduce using rule 100 (anchor -> $ alpha .)
    P               reduce using rule 100 (anchor -> $ alpha .)
    Q               reduce using rule 100 (anchor -> $ alpha .)
    R               reduce using rule 100 (anchor -> $ alpha .)
    S               reduce using rule 100 (anchor -> $ alpha .)
    T               reduce using rule 100 (anchor -> $ alpha .)
    U               reduce using rule 100 (anchor -> $ alpha .)
    V               reduce using rule 100 (anchor -> $ alpha .)
    W               reduce using rule 100 (anchor -> $ alpha .)
    X               reduce using rule 100 (anchor -> $ alpha .)
    Y               reduce using rule 100 (anchor -> $ alpha .)
    Z               reduce using rule 100 (anchor -> $ alpha .)
    |               reduce using rule 100 (anchor -> $ alpha .)
    )               reduce using rule 100 (anchor -> $ alpha .)
    $end            reduce using rule 100 (anchor -> $ alpha .)


state 147

    (102) anchor -> $ + .

    *               reduce using rule 102 (anchor -> $ + .)
    +               reduce using rule 102 (anchor -> $ + .)
    ?               reduce using rule 102 (anchor -> $ + .)
    {               reduce using rule 102 (anchor -> $ + .)
    (               reduce using rule 102 (anchor -> $ + .)
    ^               reduce using rule 102 (anchor -> $ + .)
    >               reduce using rule 102 (anchor -> $ + .)
    <               reduce using rule 102 (anchor -> $ + .)
    /               reduce using rule 102 (anchor -> $ + .)
    \               reduce using rule 102 (anchor -> $ + .)
    #               reduce using rule 102 (anchor -> $ + .)
    %               reduce using rule 102 (anchor -> $ + .)
    ESCAPED         reduce using rule 102 (anchor -> $ + .)
    DIGIT           reduce using rule 102 (anchor -> $ + .)
    OTHER           reduce using rule 102 (anchor -> $ + .)
    [               reduce using rule 102 (anchor -> $ + .)
    .               reduce using rule 102 (anchor -> $ + .)
    ,               reduce using rule 102 (anchor -> $ + .)
    :               reduce using rule 102 (anchor -> $ + .)
    ;               reduce using rule 102 (anchor -> $ + .)
    $               reduce using rule 102 (anchor -> $ + .)
    `               reduce using rule 102 (anchor -> $ + .)
    a               reduce using rule 102 (anchor -> $ + .)
    b               reduce using rule 102 (anchor -> $ + .)
    c               reduce using rule 102 (anchor -> $ + .)
    d               reduce using rule 102 (anchor -> $ + .)
    e               reduce using rule 102 (anchor -> $ + .)
    f               reduce using rule 102 (anchor -> $ + .)
    g               reduce using rule 102 (anchor -> $ + .)
    h               reduce using rule 102 (anchor -> $ + .)
    i               reduce using rule 102 (anchor -> $ + .)
    j               reduce using rule 102 (anchor -> $ + .)
    k               reduce using rule 102 (anchor -> $ + .)
    l               reduce using rule 102 (anchor -> $ + .)
    m               reduce using rule 102 (anchor -> $ + .)
    n               reduce using rule 102 (anchor -> $ + .)
    o               reduce using rule 102 (anchor -> $ + .)
    p               reduce using rule 102 (anchor -> $ + .)
    q               reduce using rule 102 (anchor -> $ + .)
    r               reduce using rule 102 (anchor -> $ + .)
    s               reduce using rule 102 (anchor -> $ + .)
    t               reduce using rule 102 (anchor -> $ + .)
    u               reduce using rule 102 (anchor -> $ + .)
    v               reduce using rule 102 (anchor -> $ + .)
    w               reduce using rule 102 (anchor -> $ + .)
    x               reduce using rule 102 (anchor -> $ + .)
    y               reduce using rule 102 (anchor -> $ + .)
    z               reduce using rule 102 (anchor -> $ + .)
    A               reduce using rule 102 (anchor -> $ + .)
    B               reduce using rule 102 (anchor -> $ + .)
    C               reduce using rule 102 (anchor -> $ + .)
    D               reduce using rule 102 (anchor -> $ + .)
    E               reduce using rule 102 (anchor -> $ + .)
    F               reduce using rule 102 (anchor -> $ + .)
    G               reduce using rule 102 (anchor -> $ + .)
    H               reduce using rule 102 (anchor -> $ + .)
    I               reduce using rule 102 (anchor -> $ + .)
    J               reduce using rule 102 (anchor -> $ + .)
    K               reduce using rule 102 (anchor -> $ + .)
    L               reduce using rule 102 (anchor -> $ + .)
    M               reduce using rule 102 (anchor -> $ + .)
    N               reduce using rule 102 (anchor -> $ + .)
    O               reduce using rule 102 (anchor -> $ + .)
    P               reduce using rule 102 (anchor -> $ + .)
    Q               reduce using rule 102 (anchor -> $ + .)
    R               reduce using rule 102 (anchor -> $ + .)
    S               reduce using rule 102 (anchor -> $ + .)
    T               reduce using rule 102 (anchor -> $ + .)
    U               reduce using rule 102 (anchor -> $ + .)
    V               reduce using rule 102 (anchor -> $ + .)
    W               reduce using rule 102 (anchor -> $ + .)
    X               reduce using rule 102 (anchor -> $ + .)
    Y               reduce using rule 102 (anchor -> $ + .)
    Z               reduce using rule 102 (anchor -> $ + .)
    |               reduce using rule 102 (anchor -> $ + .)
    )               reduce using rule 102 (anchor -> $ + .)
    $end            reduce using rule 102 (anchor -> $ + .)


state 148

    (10) quantifier -> basequantifier ? .

    (               reduce using rule 10 (quantifier -> basequantifier ? .)
    ^               reduce using rule 10 (quantifier -> basequantifier ? .)
    >               reduce using rule 10 (quantifier -> basequantifier ? .)
    <               reduce using rule 10 (quantifier -> basequantifier ? .)
    /               reduce using rule 10 (quantifier -> basequantifier ? .)
    \               reduce using rule 10 (quantifier -> basequantifier ? .)
    #               reduce using rule 10 (quantifier -> basequantifier ? .)
    %               reduce using rule 10 (quantifier -> basequantifier ? .)
    ESCAPED         reduce using rule 10 (quantifier -> basequantifier ? .)
    DIGIT           reduce using rule 10 (quantifier -> basequantifier ? .)
    OTHER           reduce using rule 10 (quantifier -> basequantifier ? .)
    [               reduce using rule 10 (quantifier -> basequantifier ? .)
    .               reduce using rule 10 (quantifier -> basequantifier ? .)
    ,               reduce using rule 10 (quantifier -> basequantifier ? .)
    :               reduce using rule 10 (quantifier -> basequantifier ? .)
    ;               reduce using rule 10 (quantifier -> basequantifier ? .)
    $               reduce using rule 10 (quantifier -> basequantifier ? .)
    `               reduce using rule 10 (quantifier -> basequantifier ? .)
    a               reduce using rule 10 (quantifier -> basequantifier ? .)
    b               reduce using rule 10 (quantifier -> basequantifier ? .)
    c               reduce using rule 10 (quantifier -> basequantifier ? .)
    d               reduce using rule 10 (quantifier -> basequantifier ? .)
    e               reduce using rule 10 (quantifier -> basequantifier ? .)
    f               reduce using rule 10 (quantifier -> basequantifier ? .)
    g               reduce using rule 10 (quantifier -> basequantifier ? .)
    h               reduce using rule 10 (quantifier -> basequantifier ? .)
    i               reduce using rule 10 (quantifier -> basequantifier ? .)
    j               reduce using rule 10 (quantifier -> basequantifier ? .)
    k               reduce using rule 10 (quantifier -> basequantifier ? .)
    l               reduce using rule 10 (quantifier -> basequantifier ? .)
    m               reduce using rule 10 (quantifier -> basequantifier ? .)
    n               reduce using rule 10 (quantifier -> basequantifier ? .)
    o               reduce using rule 10 (quantifier -> basequantifier ? .)
    p               reduce using rule 10 (quantifier -> basequantifier ? .)
    q               reduce using rule 10 (quantifier -> basequantifier ? .)
    r               reduce using rule 10 (quantifier -> basequantifier ? .)
    s               reduce using rule 10 (quantifier -> basequantifier ? .)
    t               reduce using rule 10 (quantifier -> basequantifier ? .)
    u               reduce using rule 10 (quantifier -> basequantifier ? .)
    v               reduce using rule 10 (quantifier -> basequantifier ? .)
    w               reduce using rule 10 (quantifier -> basequantifier ? .)
    x               reduce using rule 10 (quantifier -> basequantifier ? .)
    y               reduce using rule 10 (quantifier -> basequantifier ? .)
    z               reduce using rule 10 (quantifier -> basequantifier ? .)
    A               reduce using rule 10 (quantifier -> basequantifier ? .)
    B               reduce using rule 10 (quantifier -> basequantifier ? .)
    C               reduce using rule 10 (quantifier -> basequantifier ? .)
    D               reduce using rule 10 (quantifier -> basequantifier ? .)
    E               reduce using rule 10 (quantifier -> basequantifier ? .)
    F               reduce using rule 10 (quantifier -> basequantifier ? .)
    G               reduce using rule 10 (quantifier -> basequantifier ? .)
    H               reduce using rule 10 (quantifier -> basequantifier ? .)
    I               reduce using rule 10 (quantifier -> basequantifier ? .)
    J               reduce using rule 10 (quantifier -> basequantifier ? .)
    K               reduce using rule 10 (quantifier -> basequantifier ? .)
    L               reduce using rule 10 (quantifier -> basequantifier ? .)
    M               reduce using rule 10 (quantifier -> basequantifier ? .)
    N               reduce using rule 10 (quantifier -> basequantifier ? .)
    O               reduce using rule 10 (quantifier -> basequantifier ? .)
    P               reduce using rule 10 (quantifier -> basequantifier ? .)
    Q               reduce using rule 10 (quantifier -> basequantifier ? .)
    R               reduce using rule 10 (quantifier -> basequantifier ? .)
    S               reduce using rule 10 (quantifier -> basequantifier ? .)
    T               reduce using rule 10 (quantifier -> basequantifier ? .)
    U               reduce using rule 10 (quantifier -> basequantifier ? .)
    V               reduce using rule 10 (quantifier -> basequantifier ? .)
    W               reduce using rule 10 (quantifier -> basequantifier ? .)
    X               reduce using rule 10 (quantifier -> basequantifier ? .)
    Y               reduce using rule 10 (quantifier -> basequantifier ? .)
    Z               reduce using rule 10 (quantifier -> basequantifier ? .)
    |               reduce using rule 10 (quantifier -> basequantifier ? .)
    $end            reduce using rule 10 (quantifier -> basequantifier ? .)
    )               reduce using rule 10 (quantifier -> basequantifier ? .)


state 149

    (97) directional -> ^ * .

    *               reduce using rule 97 (directional -> ^ * .)
    +               reduce using rule 97 (directional -> ^ * .)
    ?               reduce using rule 97 (directional -> ^ * .)
    {               reduce using rule 97 (directional -> ^ * .)
    (               reduce using rule 97 (directional -> ^ * .)
    ^               reduce using rule 97 (directional -> ^ * .)
    >               reduce using rule 97 (directional -> ^ * .)
    <               reduce using rule 97 (directional -> ^ * .)
    /               reduce using rule 97 (directional -> ^ * .)
    \               reduce using rule 97 (directional -> ^ * .)
    #               reduce using rule 97 (directional -> ^ * .)
    %               reduce using rule 97 (directional -> ^ * .)
    ESCAPED         reduce using rule 97 (directional -> ^ * .)
    DIGIT           reduce using rule 97 (directional -> ^ * .)
    OTHER           reduce using rule 97 (directional -> ^ * .)
    [               reduce using rule 97 (directional -> ^ * .)
    .               reduce using rule 97 (directional -> ^ * .)
    ,               reduce using rule 97 (directional -> ^ * .)
    :               reduce using rule 97 (directional -> ^ * .)
    ;               reduce using rule 97 (directional -> ^ * .)
    $               reduce using rule 97 (directional -> ^ * .)
    `               reduce using rule 97 (directional -> ^ * .)
    a               reduce using rule 97 (directional -> ^ * .)
    b               reduce using rule 97 (directional -> ^ * .)
    c               reduce using rule 97 (directional -> ^ * .)
    d               reduce using rule 97 (directional -> ^ * .)
    e               reduce using rule 97 (directional -> ^ * .)
    f               reduce using rule 97 (directional -> ^ * .)
    g               reduce using rule 97 (directional -> ^ * .)
    h               reduce using rule 97 (directional -> ^ * .)
    i               reduce using rule 97 (directional -> ^ * .)
    j               reduce using rule 97 (directional -> ^ * .)
    k               reduce using rule 97 (directional -> ^ * .)
    l               reduce using rule 97 (directional -> ^ * .)
    m               reduce using rule 97 (directional -> ^ * .)
    n               reduce using rule 97 (directional -> ^ * .)
    o               reduce using rule 97 (directional -> ^ * .)
    p               reduce using rule 97 (directional -> ^ * .)
    q               reduce using rule 97 (directional -> ^ * .)
    r               reduce using rule 97 (directional -> ^ * .)
    s               reduce using rule 97 (directional -> ^ * .)
    t               reduce using rule 97 (directional -> ^ * .)
    u               reduce using rule 97 (directional -> ^ * .)
    v               reduce using rule 97 (directional -> ^ * .)
    w               reduce using rule 97 (directional -> ^ * .)
    x               reduce using rule 97 (directional -> ^ * .)
    y               reduce using rule 97 (directional -> ^ * .)
    z               reduce using rule 97 (directional -> ^ * .)
    A               reduce using rule 97 (directional -> ^ * .)
    B               reduce using rule 97 (directional -> ^ * .)
    C               reduce using rule 97 (directional -> ^ * .)
    D               reduce using rule 97 (directional -> ^ * .)
    E               reduce using rule 97 (directional -> ^ * .)
    F               reduce using rule 97 (directional -> ^ * .)
    G               reduce using rule 97 (directional -> ^ * .)
    H               reduce using rule 97 (directional -> ^ * .)
    I               reduce using rule 97 (directional -> ^ * .)
    J               reduce using rule 97 (directional -> ^ * .)
    K               reduce using rule 97 (directional -> ^ * .)
    L               reduce using rule 97 (directional -> ^ * .)
    M               reduce using rule 97 (directional -> ^ * .)
    N               reduce using rule 97 (directional -> ^ * .)
    O               reduce using rule 97 (directional -> ^ * .)
    P               reduce using rule 97 (directional -> ^ * .)
    Q               reduce using rule 97 (directional -> ^ * .)
    R               reduce using rule 97 (directional -> ^ * .)
    S               reduce using rule 97 (directional -> ^ * .)
    T               reduce using rule 97 (directional -> ^ * .)
    U               reduce using rule 97 (directional -> ^ * .)
    V               reduce using rule 97 (directional -> ^ * .)
    W               reduce using rule 97 (directional -> ^ * .)
    X               reduce using rule 97 (directional -> ^ * .)
    Y               reduce using rule 97 (directional -> ^ * .)
    Z               reduce using rule 97 (directional -> ^ * .)
    |               reduce using rule 97 (directional -> ^ * .)
    $end            reduce using rule 97 (directional -> ^ * .)
    )               reduce using rule 97 (directional -> ^ * .)


state 150

    (95) directional -> ^ DIGIT .

    *               reduce using rule 95 (directional -> ^ DIGIT .)
    +               reduce using rule 95 (directional -> ^ DIGIT .)
    ?               reduce using rule 95 (directional -> ^ DIGIT .)
    {               reduce using rule 95 (directional -> ^ DIGIT .)
    (               reduce using rule 95 (directional -> ^ DIGIT .)
    ^               reduce using rule 95 (directional -> ^ DIGIT .)
    >               reduce using rule 95 (directional -> ^ DIGIT .)
    <               reduce using rule 95 (directional -> ^ DIGIT .)
    /               reduce using rule 95 (directional -> ^ DIGIT .)
    \               reduce using rule 95 (directional -> ^ DIGIT .)
    #               reduce using rule 95 (directional -> ^ DIGIT .)
    %               reduce using rule 95 (directional -> ^ DIGIT .)
    ESCAPED         reduce using rule 95 (directional -> ^ DIGIT .)
    DIGIT           reduce using rule 95 (directional -> ^ DIGIT .)
    OTHER           reduce using rule 95 (directional -> ^ DIGIT .)
    [               reduce using rule 95 (directional -> ^ DIGIT .)
    .               reduce using rule 95 (directional -> ^ DIGIT .)
    ,               reduce using rule 95 (directional -> ^ DIGIT .)
    :               reduce using rule 95 (directional -> ^ DIGIT .)
    ;               reduce using rule 95 (directional -> ^ DIGIT .)
    $               reduce using rule 95 (directional -> ^ DIGIT .)
    `               reduce using rule 95 (directional -> ^ DIGIT .)
    a               reduce using rule 95 (directional -> ^ DIGIT .)
    b               reduce using rule 95 (directional -> ^ DIGIT .)
    c               reduce using rule 95 (directional -> ^ DIGIT .)
    d               reduce using rule 95 (directional -> ^ DIGIT .)
    e               reduce using rule 95 (directional -> ^ DIGIT .)
    f               reduce using rule 95 (directional -> ^ DIGIT .)
    g               reduce using rule 95 (directional -> ^ DIGIT .)
    h               reduce using rule 95 (directional -> ^ DIGIT .)
    i               reduce using rule 95 (directional -> ^ DIGIT .)
    j               reduce using rule 95 (directional -> ^ DIGIT .)
    k               reduce using rule 95 (directional -> ^ DIGIT .)
    l               reduce using rule 95 (directional -> ^ DIGIT .)
    m               reduce using rule 95 (directional -> ^ DIGIT .)
    n               reduce using rule 95 (directional -> ^ DIGIT .)
    o               reduce using rule 95 (directional -> ^ DIGIT .)
    p               reduce using rule 95 (directional -> ^ DIGIT .)
    q               reduce using rule 95 (directional -> ^ DIGIT .)
    r               reduce using rule 95 (directional -> ^ DIGIT .)
    s               reduce using rule 95 (directional -> ^ DIGIT .)
    t               reduce using rule 95 (directional -> ^ DIGIT .)
    u               reduce using rule 95 (directional -> ^ DIGIT .)
    v               reduce using rule 95 (directional -> ^ DIGIT .)
    w               reduce using rule 95 (directional -> ^ DIGIT .)
    x               reduce using rule 95 (directional -> ^ DIGIT .)
    y               reduce using rule 95 (directional -> ^ DIGIT .)
    z               reduce using rule 95 (directional -> ^ DIGIT .)
    A               reduce using rule 95 (directional -> ^ DIGIT .)
    B               reduce using rule 95 (directional -> ^ DIGIT .)
    C               reduce using rule 95 (directional -> ^ DIGIT .)
    D               reduce using rule 95 (directional -> ^ DIGIT .)
    E               reduce using rule 95 (directional -> ^ DIGIT .)
    F               reduce using rule 95 (directional -> ^ DIGIT .)
    G               reduce using rule 95 (directional -> ^ DIGIT .)
    H               reduce using rule 95 (directional -> ^ DIGIT .)
    I               reduce using rule 95 (directional -> ^ DIGIT .)
    J               reduce using rule 95 (directional -> ^ DIGIT .)
    K               reduce using rule 95 (directional -> ^ DIGIT .)
    L               reduce using rule 95 (directional -> ^ DIGIT .)
    M               reduce using rule 95 (directional -> ^ DIGIT .)
    N               reduce using rule 95 (directional -> ^ DIGIT .)
    O               reduce using rule 95 (directional -> ^ DIGIT .)
    P               reduce using rule 95 (directional -> ^ DIGIT .)
    Q               reduce using rule 95 (directional -> ^ DIGIT .)
    R               reduce using rule 95 (directional -> ^ DIGIT .)
    S               reduce using rule 95 (directional -> ^ DIGIT .)
    T               reduce using rule 95 (directional -> ^ DIGIT .)
    U               reduce using rule 95 (directional -> ^ DIGIT .)
    V               reduce using rule 95 (directional -> ^ DIGIT .)
    W               reduce using rule 95 (directional -> ^ DIGIT .)
    X               reduce using rule 95 (directional -> ^ DIGIT .)
    Y               reduce using rule 95 (directional -> ^ DIGIT .)
    Z               reduce using rule 95 (directional -> ^ DIGIT .)
    |               reduce using rule 95 (directional -> ^ DIGIT .)
    $end            reduce using rule 95 (directional -> ^ DIGIT .)
    )               reduce using rule 95 (directional -> ^ DIGIT .)


state 151

    (96) directional -> ^ alpha .

    *               reduce using rule 96 (directional -> ^ alpha .)
    +               reduce using rule 96 (directional -> ^ alpha .)
    ?               reduce using rule 96 (directional -> ^ alpha .)
    {               reduce using rule 96 (directional -> ^ alpha .)
    (               reduce using rule 96 (directional -> ^ alpha .)
    ^               reduce using rule 96 (directional -> ^ alpha .)
    >               reduce using rule 96 (directional -> ^ alpha .)
    <               reduce using rule 96 (directional -> ^ alpha .)
    /               reduce using rule 96 (directional -> ^ alpha .)
    \               reduce using rule 96 (directional -> ^ alpha .)
    #               reduce using rule 96 (directional -> ^ alpha .)
    %               reduce using rule 96 (directional -> ^ alpha .)
    ESCAPED         reduce using rule 96 (directional -> ^ alpha .)
    DIGIT           reduce using rule 96 (directional -> ^ alpha .)
    OTHER           reduce using rule 96 (directional -> ^ alpha .)
    [               reduce using rule 96 (directional -> ^ alpha .)
    .               reduce using rule 96 (directional -> ^ alpha .)
    ,               reduce using rule 96 (directional -> ^ alpha .)
    :               reduce using rule 96 (directional -> ^ alpha .)
    ;               reduce using rule 96 (directional -> ^ alpha .)
    $               reduce using rule 96 (directional -> ^ alpha .)
    `               reduce using rule 96 (directional -> ^ alpha .)
    a               reduce using rule 96 (directional -> ^ alpha .)
    b               reduce using rule 96 (directional -> ^ alpha .)
    c               reduce using rule 96 (directional -> ^ alpha .)
    d               reduce using rule 96 (directional -> ^ alpha .)
    e               reduce using rule 96 (directional -> ^ alpha .)
    f               reduce using rule 96 (directional -> ^ alpha .)
    g               reduce using rule 96 (directional -> ^ alpha .)
    h               reduce using rule 96 (directional -> ^ alpha .)
    i               reduce using rule 96 (directional -> ^ alpha .)
    j               reduce using rule 96 (directional -> ^ alpha .)
    k               reduce using rule 96 (directional -> ^ alpha .)
    l               reduce using rule 96 (directional -> ^ alpha .)
    m               reduce using rule 96 (directional -> ^ alpha .)
    n               reduce using rule 96 (directional -> ^ alpha .)
    o               reduce using rule 96 (directional -> ^ alpha .)
    p               reduce using rule 96 (directional -> ^ alpha .)
    q               reduce using rule 96 (directional -> ^ alpha .)
    r               reduce using rule 96 (directional -> ^ alpha .)
    s               reduce using rule 96 (directional -> ^ alpha .)
    t               reduce using rule 96 (directional -> ^ alpha .)
    u               reduce using rule 96 (directional -> ^ alpha .)
    v               reduce using rule 96 (directional -> ^ alpha .)
    w               reduce using rule 96 (directional -> ^ alpha .)
    x               reduce using rule 96 (directional -> ^ alpha .)
    y               reduce using rule 96 (directional -> ^ alpha .)
    z               reduce using rule 96 (directional -> ^ alpha .)
    A               reduce using rule 96 (directional -> ^ alpha .)
    B               reduce using rule 96 (directional -> ^ alpha .)
    C               reduce using rule 96 (directional -> ^ alpha .)
    D               reduce using rule 96 (directional -> ^ alpha .)
    E               reduce using rule 96 (directional -> ^ alpha .)
    F               reduce using rule 96 (directional -> ^ alpha .)
    G               reduce using rule 96 (directional -> ^ alpha .)
    H               reduce using rule 96 (directional -> ^ alpha .)
    I               reduce using rule 96 (directional -> ^ alpha .)
    J               reduce using rule 96 (directional -> ^ alpha .)
    K               reduce using rule 96 (directional -> ^ alpha .)
    L               reduce using rule 96 (directional -> ^ alpha .)
    M               reduce using rule 96 (directional -> ^ alpha .)
    N               reduce using rule 96 (directional -> ^ alpha .)
    O               reduce using rule 96 (directional -> ^ alpha .)
    P               reduce using rule 96 (directional -> ^ alpha .)
    Q               reduce using rule 96 (directional -> ^ alpha .)
    R               reduce using rule 96 (directional -> ^ alpha .)
    S               reduce using rule 96 (directional -> ^ alpha .)
    T               reduce using rule 96 (directional -> ^ alpha .)
    U               reduce using rule 96 (directional -> ^ alpha .)
    V               reduce using rule 96 (directional -> ^ alpha .)
    W               reduce using rule 96 (directional -> ^ alpha .)
    X               reduce using rule 96 (directional -> ^ alpha .)
    Y               reduce using rule 96 (directional -> ^ alpha .)
    Z               reduce using rule 96 (directional -> ^ alpha .)
    |               reduce using rule 96 (directional -> ^ alpha .)
    $end            reduce using rule 96 (directional -> ^ alpha .)
    )               reduce using rule 96 (directional -> ^ alpha .)


state 152

    (98) directional -> ^ + .

    *               reduce using rule 98 (directional -> ^ + .)
    +               reduce using rule 98 (directional -> ^ + .)
    ?               reduce using rule 98 (directional -> ^ + .)
    {               reduce using rule 98 (directional -> ^ + .)
    (               reduce using rule 98 (directional -> ^ + .)
    ^               reduce using rule 98 (directional -> ^ + .)
    >               reduce using rule 98 (directional -> ^ + .)
    <               reduce using rule 98 (directional -> ^ + .)
    /               reduce using rule 98 (directional -> ^ + .)
    \               reduce using rule 98 (directional -> ^ + .)
    #               reduce using rule 98 (directional -> ^ + .)
    %               reduce using rule 98 (directional -> ^ + .)
    ESCAPED         reduce using rule 98 (directional -> ^ + .)
    DIGIT           reduce using rule 98 (directional -> ^ + .)
    OTHER           reduce using rule 98 (directional -> ^ + .)
    [               reduce using rule 98 (directional -> ^ + .)
    .               reduce using rule 98 (directional -> ^ + .)
    ,               reduce using rule 98 (directional -> ^ + .)
    :               reduce using rule 98 (directional -> ^ + .)
    ;               reduce using rule 98 (directional -> ^ + .)
    $               reduce using rule 98 (directional -> ^ + .)
    `               reduce using rule 98 (directional -> ^ + .)
    a               reduce using rule 98 (directional -> ^ + .)
    b               reduce using rule 98 (directional -> ^ + .)
    c               reduce using rule 98 (directional -> ^ + .)
    d               reduce using rule 98 (directional -> ^ + .)
    e               reduce using rule 98 (directional -> ^ + .)
    f               reduce using rule 98 (directional -> ^ + .)
    g               reduce using rule 98 (directional -> ^ + .)
    h               reduce using rule 98 (directional -> ^ + .)
    i               reduce using rule 98 (directional -> ^ + .)
    j               reduce using rule 98 (directional -> ^ + .)
    k               reduce using rule 98 (directional -> ^ + .)
    l               reduce using rule 98 (directional -> ^ + .)
    m               reduce using rule 98 (directional -> ^ + .)
    n               reduce using rule 98 (directional -> ^ + .)
    o               reduce using rule 98 (directional -> ^ + .)
    p               reduce using rule 98 (directional -> ^ + .)
    q               reduce using rule 98 (directional -> ^ + .)
    r               reduce using rule 98 (directional -> ^ + .)
    s               reduce using rule 98 (directional -> ^ + .)
    t               reduce using rule 98 (directional -> ^ + .)
    u               reduce using rule 98 (directional -> ^ + .)
    v               reduce using rule 98 (directional -> ^ + .)
    w               reduce using rule 98 (directional -> ^ + .)
    x               reduce using rule 98 (directional -> ^ + .)
    y               reduce using rule 98 (directional -> ^ + .)
    z               reduce using rule 98 (directional -> ^ + .)
    A               reduce using rule 98 (directional -> ^ + .)
    B               reduce using rule 98 (directional -> ^ + .)
    C               reduce using rule 98 (directional -> ^ + .)
    D               reduce using rule 98 (directional -> ^ + .)
    E               reduce using rule 98 (directional -> ^ + .)
    F               reduce using rule 98 (directional -> ^ + .)
    G               reduce using rule 98 (directional -> ^ + .)
    H               reduce using rule 98 (directional -> ^ + .)
    I               reduce using rule 98 (directional -> ^ + .)
    J               reduce using rule 98 (directional -> ^ + .)
    K               reduce using rule 98 (directional -> ^ + .)
    L               reduce using rule 98 (directional -> ^ + .)
    M               reduce using rule 98 (directional -> ^ + .)
    N               reduce using rule 98 (directional -> ^ + .)
    O               reduce using rule 98 (directional -> ^ + .)
    P               reduce using rule 98 (directional -> ^ + .)
    Q               reduce using rule 98 (directional -> ^ + .)
    R               reduce using rule 98 (directional -> ^ + .)
    S               reduce using rule 98 (directional -> ^ + .)
    T               reduce using rule 98 (directional -> ^ + .)
    U               reduce using rule 98 (directional -> ^ + .)
    V               reduce using rule 98 (directional -> ^ + .)
    W               reduce using rule 98 (directional -> ^ + .)
    X               reduce using rule 98 (directional -> ^ + .)
    Y               reduce using rule 98 (directional -> ^ + .)
    Z               reduce using rule 98 (directional -> ^ + .)
    |               reduce using rule 98 (directional -> ^ + .)
    $end            reduce using rule 98 (directional -> ^ + .)
    )               reduce using rule 98 (directional -> ^ + .)


state 153

    (3) alternation -> re | . simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 171
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alpha                          shift and go to state 86
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 154

    (39) group -> ( groupbody ) .

    *               reduce using rule 39 (group -> ( groupbody ) .)
    +               reduce using rule 39 (group -> ( groupbody ) .)
    ?               reduce using rule 39 (group -> ( groupbody ) .)
    {               reduce using rule 39 (group -> ( groupbody ) .)
    (               reduce using rule 39 (group -> ( groupbody ) .)
    ^               reduce using rule 39 (group -> ( groupbody ) .)
    >               reduce using rule 39 (group -> ( groupbody ) .)
    <               reduce using rule 39 (group -> ( groupbody ) .)
    /               reduce using rule 39 (group -> ( groupbody ) .)
    \               reduce using rule 39 (group -> ( groupbody ) .)
    #               reduce using rule 39 (group -> ( groupbody ) .)
    %               reduce using rule 39 (group -> ( groupbody ) .)
    ESCAPED         reduce using rule 39 (group -> ( groupbody ) .)
    DIGIT           reduce using rule 39 (group -> ( groupbody ) .)
    OTHER           reduce using rule 39 (group -> ( groupbody ) .)
    [               reduce using rule 39 (group -> ( groupbody ) .)
    .               reduce using rule 39 (group -> ( groupbody ) .)
    ,               reduce using rule 39 (group -> ( groupbody ) .)
    :               reduce using rule 39 (group -> ( groupbody ) .)
    ;               reduce using rule 39 (group -> ( groupbody ) .)
    $               reduce using rule 39 (group -> ( groupbody ) .)
    `               reduce using rule 39 (group -> ( groupbody ) .)
    a               reduce using rule 39 (group -> ( groupbody ) .)
    b               reduce using rule 39 (group -> ( groupbody ) .)
    c               reduce using rule 39 (group -> ( groupbody ) .)
    d               reduce using rule 39 (group -> ( groupbody ) .)
    e               reduce using rule 39 (group -> ( groupbody ) .)
    f               reduce using rule 39 (group -> ( groupbody ) .)
    g               reduce using rule 39 (group -> ( groupbody ) .)
    h               reduce using rule 39 (group -> ( groupbody ) .)
    i               reduce using rule 39 (group -> ( groupbody ) .)
    j               reduce using rule 39 (group -> ( groupbody ) .)
    k               reduce using rule 39 (group -> ( groupbody ) .)
    l               reduce using rule 39 (group -> ( groupbody ) .)
    m               reduce using rule 39 (group -> ( groupbody ) .)
    n               reduce using rule 39 (group -> ( groupbody ) .)
    o               reduce using rule 39 (group -> ( groupbody ) .)
    p               reduce using rule 39 (group -> ( groupbody ) .)
    q               reduce using rule 39 (group -> ( groupbody ) .)
    r               reduce using rule 39 (group -> ( groupbody ) .)
    s               reduce using rule 39 (group -> ( groupbody ) .)
    t               reduce using rule 39 (group -> ( groupbody ) .)
    u               reduce using rule 39 (group -> ( groupbody ) .)
    v               reduce using rule 39 (group -> ( groupbody ) .)
    w               reduce using rule 39 (group -> ( groupbody ) .)
    x               reduce using rule 39 (group -> ( groupbody ) .)
    y               reduce using rule 39 (group -> ( groupbody ) .)
    z               reduce using rule 39 (group -> ( groupbody ) .)
    A               reduce using rule 39 (group -> ( groupbody ) .)
    B               reduce using rule 39 (group -> ( groupbody ) .)
    C               reduce using rule 39 (group -> ( groupbody ) .)
    D               reduce using rule 39 (group -> ( groupbody ) .)
    E               reduce using rule 39 (group -> ( groupbody ) .)
    F               reduce using rule 39 (group -> ( groupbody ) .)
    G               reduce using rule 39 (group -> ( groupbody ) .)
    H               reduce using rule 39 (group -> ( groupbody ) .)
    I               reduce using rule 39 (group -> ( groupbody ) .)
    J               reduce using rule 39 (group -> ( groupbody ) .)
    K               reduce using rule 39 (group -> ( groupbody ) .)
    L               reduce using rule 39 (group -> ( groupbody ) .)
    M               reduce using rule 39 (group -> ( groupbody ) .)
    N               reduce using rule 39 (group -> ( groupbody ) .)
    O               reduce using rule 39 (group -> ( groupbody ) .)
    P               reduce using rule 39 (group -> ( groupbody ) .)
    Q               reduce using rule 39 (group -> ( groupbody ) .)
    R               reduce using rule 39 (group -> ( groupbody ) .)
    S               reduce using rule 39 (group -> ( groupbody ) .)
    T               reduce using rule 39 (group -> ( groupbody ) .)
    U               reduce using rule 39 (group -> ( groupbody ) .)
    V               reduce using rule 39 (group -> ( groupbody ) .)
    W               reduce using rule 39 (group -> ( groupbody ) .)
    X               reduce using rule 39 (group -> ( groupbody ) .)
    Y               reduce using rule 39 (group -> ( groupbody ) .)
    Z               reduce using rule 39 (group -> ( groupbody ) .)
    |               reduce using rule 39 (group -> ( groupbody ) .)
    )               reduce using rule 39 (group -> ( groupbody ) .)
    $end            reduce using rule 39 (group -> ( groupbody ) .)


state 155

    (53) recursive -> R .

    )               reduce using rule 53 (recursive -> R .)


state 156

    (42) specialgroup -> _ . lengthcheck
    (48) lengthcheck -> . ( number ) re

    (               shift and go to state 173

    lengthcheck                    shift and go to state 172

state 157

    (46) specialgroup -> ; . nodispmatchgroup
    (52) nodispmatchgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    nodispmatchgroup               shift and go to state 174
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    concatenation                  shift and go to state 16
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 175
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    alternation                    shift and go to state 12
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 158

    (44) specialgroup -> : . nomatchgroup
    (50) nomatchgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alternation                    shift and go to state 12
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 177
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    nomatchgroup                   shift and go to state 176
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 159

    (47) specialgroup -> recursive .

    )               reduce using rule 47 (specialgroup -> recursive .)


state 160

    (40) groupbody -> ? specialgroup .

    )               reduce using rule 40 (groupbody -> ? specialgroup .)


state 161

    (43) specialgroup -> | . stationarygroup
    (49) stationarygroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    stationarygroup                shift and go to state 178
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alternation                    shift and go to state 12
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 179
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    basic                          shift and go to state 66
    anychar                        shift and go to state 41

state 162

    (45) specialgroup -> , . nodispgroup
    (51) nodispgroup -> . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    nodispgroup                    shift and go to state 180
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alternation                    shift and go to state 12
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 181
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 163

    (30) nrepeat -> elementary { , . number }
    (37) number -> . DIGIT
    (38) number -> . DIGIT number

    DIGIT           shift and go to state 165

    number                         shift and go to state 182

state 164

    (29) nrepeat -> elementary { number . }
    (31) nrepeat -> elementary { number . , }
    (32) nrepeat -> elementary { number . , number }

    }               shift and go to state 184
    ,               shift and go to state 183


state 165

    (37) number -> DIGIT .
    (38) number -> DIGIT . number
    (37) number -> . DIGIT
    (38) number -> . DIGIT number

    }               reduce using rule 37 (number -> DIGIT .)
    ,               reduce using rule 37 (number -> DIGIT .)
    )               reduce using rule 37 (number -> DIGIT .)
    DIGIT           shift and go to state 165

    number                         shift and go to state 185

state 166

    (55) charclass -> [ classitems ] .

    *               reduce using rule 55 (charclass -> [ classitems ] .)
    +               reduce using rule 55 (charclass -> [ classitems ] .)
    ?               reduce using rule 55 (charclass -> [ classitems ] .)
    {               reduce using rule 55 (charclass -> [ classitems ] .)
    (               reduce using rule 55 (charclass -> [ classitems ] .)
    ^               reduce using rule 55 (charclass -> [ classitems ] .)
    >               reduce using rule 55 (charclass -> [ classitems ] .)
    <               reduce using rule 55 (charclass -> [ classitems ] .)
    /               reduce using rule 55 (charclass -> [ classitems ] .)
    \               reduce using rule 55 (charclass -> [ classitems ] .)
    #               reduce using rule 55 (charclass -> [ classitems ] .)
    %               reduce using rule 55 (charclass -> [ classitems ] .)
    ESCAPED         reduce using rule 55 (charclass -> [ classitems ] .)
    DIGIT           reduce using rule 55 (charclass -> [ classitems ] .)
    OTHER           reduce using rule 55 (charclass -> [ classitems ] .)
    [               reduce using rule 55 (charclass -> [ classitems ] .)
    .               reduce using rule 55 (charclass -> [ classitems ] .)
    ,               reduce using rule 55 (charclass -> [ classitems ] .)
    :               reduce using rule 55 (charclass -> [ classitems ] .)
    ;               reduce using rule 55 (charclass -> [ classitems ] .)
    $               reduce using rule 55 (charclass -> [ classitems ] .)
    `               reduce using rule 55 (charclass -> [ classitems ] .)
    a               reduce using rule 55 (charclass -> [ classitems ] .)
    b               reduce using rule 55 (charclass -> [ classitems ] .)
    c               reduce using rule 55 (charclass -> [ classitems ] .)
    d               reduce using rule 55 (charclass -> [ classitems ] .)
    e               reduce using rule 55 (charclass -> [ classitems ] .)
    f               reduce using rule 55 (charclass -> [ classitems ] .)
    g               reduce using rule 55 (charclass -> [ classitems ] .)
    h               reduce using rule 55 (charclass -> [ classitems ] .)
    i               reduce using rule 55 (charclass -> [ classitems ] .)
    j               reduce using rule 55 (charclass -> [ classitems ] .)
    k               reduce using rule 55 (charclass -> [ classitems ] .)
    l               reduce using rule 55 (charclass -> [ classitems ] .)
    m               reduce using rule 55 (charclass -> [ classitems ] .)
    n               reduce using rule 55 (charclass -> [ classitems ] .)
    o               reduce using rule 55 (charclass -> [ classitems ] .)
    p               reduce using rule 55 (charclass -> [ classitems ] .)
    q               reduce using rule 55 (charclass -> [ classitems ] .)
    r               reduce using rule 55 (charclass -> [ classitems ] .)
    s               reduce using rule 55 (charclass -> [ classitems ] .)
    t               reduce using rule 55 (charclass -> [ classitems ] .)
    u               reduce using rule 55 (charclass -> [ classitems ] .)
    v               reduce using rule 55 (charclass -> [ classitems ] .)
    w               reduce using rule 55 (charclass -> [ classitems ] .)
    x               reduce using rule 55 (charclass -> [ classitems ] .)
    y               reduce using rule 55 (charclass -> [ classitems ] .)
    z               reduce using rule 55 (charclass -> [ classitems ] .)
    A               reduce using rule 55 (charclass -> [ classitems ] .)
    B               reduce using rule 55 (charclass -> [ classitems ] .)
    C               reduce using rule 55 (charclass -> [ classitems ] .)
    D               reduce using rule 55 (charclass -> [ classitems ] .)
    E               reduce using rule 55 (charclass -> [ classitems ] .)
    F               reduce using rule 55 (charclass -> [ classitems ] .)
    G               reduce using rule 55 (charclass -> [ classitems ] .)
    H               reduce using rule 55 (charclass -> [ classitems ] .)
    I               reduce using rule 55 (charclass -> [ classitems ] .)
    J               reduce using rule 55 (charclass -> [ classitems ] .)
    K               reduce using rule 55 (charclass -> [ classitems ] .)
    L               reduce using rule 55 (charclass -> [ classitems ] .)
    M               reduce using rule 55 (charclass -> [ classitems ] .)
    N               reduce using rule 55 (charclass -> [ classitems ] .)
    O               reduce using rule 55 (charclass -> [ classitems ] .)
    P               reduce using rule 55 (charclass -> [ classitems ] .)
    Q               reduce using rule 55 (charclass -> [ classitems ] .)
    R               reduce using rule 55 (charclass -> [ classitems ] .)
    S               reduce using rule 55 (charclass -> [ classitems ] .)
    T               reduce using rule 55 (charclass -> [ classitems ] .)
    U               reduce using rule 55 (charclass -> [ classitems ] .)
    V               reduce using rule 55 (charclass -> [ classitems ] .)
    W               reduce using rule 55 (charclass -> [ classitems ] .)
    X               reduce using rule 55 (charclass -> [ classitems ] .)
    Y               reduce using rule 55 (charclass -> [ classitems ] .)
    Z               reduce using rule 55 (charclass -> [ classitems ] .)
    |               reduce using rule 55 (charclass -> [ classitems ] .)
    $end            reduce using rule 55 (charclass -> [ classitems ] .)
    )               reduce using rule 55 (charclass -> [ classitems ] .)


state 167

    (93) classrange -> classliteral - . classliteral
    (64) classliteral -> . !
    (65) classliteral -> . "
    (66) classliteral -> . #
    (67) classliteral -> . $
    (68) classliteral -> . %
    (69) classliteral -> . &
    (70) classliteral -> . '
    (71) classliteral -> . (
    (72) classliteral -> . )
    (73) classliteral -> . *
    (74) classliteral -> . +
    (75) classliteral -> . ,
    (76) classliteral -> . .
    (77) classliteral -> . /
    (78) classliteral -> . :
    (79) classliteral -> . ;
    (80) classliteral -> . <
    (81) classliteral -> . =
    (82) classliteral -> . >
    (83) classliteral -> . ?
    (84) classliteral -> . @
    (85) classliteral -> . [
    (86) classliteral -> . \
    (87) classliteral -> . _
    (88) classliteral -> . `
    (89) classliteral -> . {
    (90) classliteral -> . }
    (91) classliteral -> . ~
    (92) classliteral -> . literal
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    !               shift and go to state 137
    "               shift and go to state 140
    #               shift and go to state 107
    $               shift and go to state 132
    %               shift and go to state 138
    &               shift and go to state 135
    '               shift and go to state 109
    (               shift and go to state 117
    )               shift and go to state 118
    *               shift and go to state 108
    +               shift and go to state 122
    ,               shift and go to state 136
    .               shift and go to state 112
    /               shift and go to state 119
    :               shift and go to state 125
    ;               shift and go to state 116
    <               shift and go to state 131
    =               shift and go to state 142
    >               shift and go to state 134
    ?               shift and go to state 124
    @               shift and go to state 126
    [               shift and go to state 121
    \               shift and go to state 128
    _               shift and go to state 130
    `               shift and go to state 110
    {               shift and go to state 123
    }               shift and go to state 127
    ~               shift and go to state 113
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 86
    literal                        shift and go to state 129
    alpha_lower                    shift and go to state 88
    alpha_upper                    shift and go to state 7
    classliteral                   shift and go to state 186

state 168

    (61) baseitems -> classatom baseitems .

    |               reduce using rule 61 (baseitems -> classatom baseitems .)
    ]               reduce using rule 61 (baseitems -> classatom baseitems .)


state 169

    (56) classitems -> ^ baseitems .

    ]               reduce using rule 56 (classitems -> ^ baseitems .)


state 170

    (59) classitems2 -> baseitems | . baseitems
    (60) baseitems -> . classatom
    (61) baseitems -> . classatom baseitems
    (62) classatom -> . classliteral
    (63) classatom -> . classrange
    (64) classliteral -> . !
    (65) classliteral -> . "
    (66) classliteral -> . #
    (67) classliteral -> . $
    (68) classliteral -> . %
    (69) classliteral -> . &
    (70) classliteral -> . '
    (71) classliteral -> . (
    (72) classliteral -> . )
    (73) classliteral -> . *
    (74) classliteral -> . +
    (75) classliteral -> . ,
    (76) classliteral -> . .
    (77) classliteral -> . /
    (78) classliteral -> . :
    (79) classliteral -> . ;
    (80) classliteral -> . <
    (81) classliteral -> . =
    (82) classliteral -> . >
    (83) classliteral -> . ?
    (84) classliteral -> . @
    (85) classliteral -> . [
    (86) classliteral -> . \
    (87) classliteral -> . _
    (88) classliteral -> . `
    (89) classliteral -> . {
    (90) classliteral -> . }
    (91) classliteral -> . ~
    (92) classliteral -> . literal
    (93) classrange -> . classliteral - classliteral
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    !               shift and go to state 137
    "               shift and go to state 140
    #               shift and go to state 107
    $               shift and go to state 132
    %               shift and go to state 138
    &               shift and go to state 135
    '               shift and go to state 109
    (               shift and go to state 117
    )               shift and go to state 118
    *               shift and go to state 108
    +               shift and go to state 122
    ,               shift and go to state 136
    .               shift and go to state 112
    /               shift and go to state 119
    :               shift and go to state 125
    ;               shift and go to state 116
    <               shift and go to state 131
    =               shift and go to state 142
    >               shift and go to state 134
    ?               shift and go to state 124
    @               shift and go to state 126
    [               shift and go to state 121
    \               shift and go to state 128
    _               shift and go to state 130
    `               shift and go to state 110
    {               shift and go to state 123
    }               shift and go to state 127
    ~               shift and go to state 113
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    alpha                          shift and go to state 86
    alpha_upper                    shift and go to state 7
    alpha_lower                    shift and go to state 88
    classatom                      shift and go to state 120
    literal                        shift and go to state 129
    classliteral                   shift and go to state 114
    classrange                     shift and go to state 141
    baseitems                      shift and go to state 187

state 171

    (3) alternation -> re | simple .
    (6) concatenation -> simple . basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    |               reduce using rule 3 (alternation -> re | simple .)
    )               reduce using rule 3 (alternation -> re | simple .)
    $end            reduce using rule 3 (alternation -> re | simple .)
    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 97
    nodisplay                      shift and go to state 59
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alpha                          shift and go to state 86
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    literal                        shift and go to state 91
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41

state 172

    (42) specialgroup -> _ lengthcheck .

    )               reduce using rule 42 (specialgroup -> _ lengthcheck .)


state 173

    (48) lengthcheck -> ( . number ) re
    (37) number -> . DIGIT
    (38) number -> . DIGIT number

    DIGIT           shift and go to state 165

    number                         shift and go to state 188

state 174

    (46) specialgroup -> ; nodispmatchgroup .

    )               reduce using rule 46 (specialgroup -> ; nodispmatchgroup .)


state 175

    (52) nodispmatchgroup -> re .
    (3) alternation -> re . | simple

    )               reduce using rule 52 (nodispmatchgroup -> re .)
    |               shift and go to state 153


state 176

    (44) specialgroup -> : nomatchgroup .

    )               reduce using rule 44 (specialgroup -> : nomatchgroup .)


state 177

    (50) nomatchgroup -> re .
    (3) alternation -> re . | simple

    )               reduce using rule 50 (nomatchgroup -> re .)
    |               shift and go to state 153


state 178

    (43) specialgroup -> | stationarygroup .

    )               reduce using rule 43 (specialgroup -> | stationarygroup .)


state 179

    (49) stationarygroup -> re .
    (3) alternation -> re . | simple

    )               reduce using rule 49 (stationarygroup -> re .)
    |               shift and go to state 153


state 180

    (45) specialgroup -> , nodispgroup .

    )               reduce using rule 45 (specialgroup -> , nodispgroup .)


state 181

    (51) nodispgroup -> re .
    (3) alternation -> re . | simple

    )               reduce using rule 51 (nodispgroup -> re .)
    |               shift and go to state 153


state 182

    (30) nrepeat -> elementary { , number . }

    }               shift and go to state 189


state 183

    (31) nrepeat -> elementary { number , . }
    (32) nrepeat -> elementary { number , . number }
    (37) number -> . DIGIT
    (38) number -> . DIGIT number

    }               shift and go to state 190
    DIGIT           shift and go to state 165

    number                         shift and go to state 191

state 184

    (29) nrepeat -> elementary { number } .

    ?               reduce using rule 29 (nrepeat -> elementary { number } .)
    (               reduce using rule 29 (nrepeat -> elementary { number } .)
    ^               reduce using rule 29 (nrepeat -> elementary { number } .)
    >               reduce using rule 29 (nrepeat -> elementary { number } .)
    <               reduce using rule 29 (nrepeat -> elementary { number } .)
    /               reduce using rule 29 (nrepeat -> elementary { number } .)
    \               reduce using rule 29 (nrepeat -> elementary { number } .)
    #               reduce using rule 29 (nrepeat -> elementary { number } .)
    %               reduce using rule 29 (nrepeat -> elementary { number } .)
    ESCAPED         reduce using rule 29 (nrepeat -> elementary { number } .)
    DIGIT           reduce using rule 29 (nrepeat -> elementary { number } .)
    OTHER           reduce using rule 29 (nrepeat -> elementary { number } .)
    [               reduce using rule 29 (nrepeat -> elementary { number } .)
    .               reduce using rule 29 (nrepeat -> elementary { number } .)
    ,               reduce using rule 29 (nrepeat -> elementary { number } .)
    :               reduce using rule 29 (nrepeat -> elementary { number } .)
    ;               reduce using rule 29 (nrepeat -> elementary { number } .)
    $               reduce using rule 29 (nrepeat -> elementary { number } .)
    `               reduce using rule 29 (nrepeat -> elementary { number } .)
    a               reduce using rule 29 (nrepeat -> elementary { number } .)
    b               reduce using rule 29 (nrepeat -> elementary { number } .)
    c               reduce using rule 29 (nrepeat -> elementary { number } .)
    d               reduce using rule 29 (nrepeat -> elementary { number } .)
    e               reduce using rule 29 (nrepeat -> elementary { number } .)
    f               reduce using rule 29 (nrepeat -> elementary { number } .)
    g               reduce using rule 29 (nrepeat -> elementary { number } .)
    h               reduce using rule 29 (nrepeat -> elementary { number } .)
    i               reduce using rule 29 (nrepeat -> elementary { number } .)
    j               reduce using rule 29 (nrepeat -> elementary { number } .)
    k               reduce using rule 29 (nrepeat -> elementary { number } .)
    l               reduce using rule 29 (nrepeat -> elementary { number } .)
    m               reduce using rule 29 (nrepeat -> elementary { number } .)
    n               reduce using rule 29 (nrepeat -> elementary { number } .)
    o               reduce using rule 29 (nrepeat -> elementary { number } .)
    p               reduce using rule 29 (nrepeat -> elementary { number } .)
    q               reduce using rule 29 (nrepeat -> elementary { number } .)
    r               reduce using rule 29 (nrepeat -> elementary { number } .)
    s               reduce using rule 29 (nrepeat -> elementary { number } .)
    t               reduce using rule 29 (nrepeat -> elementary { number } .)
    u               reduce using rule 29 (nrepeat -> elementary { number } .)
    v               reduce using rule 29 (nrepeat -> elementary { number } .)
    w               reduce using rule 29 (nrepeat -> elementary { number } .)
    x               reduce using rule 29 (nrepeat -> elementary { number } .)
    y               reduce using rule 29 (nrepeat -> elementary { number } .)
    z               reduce using rule 29 (nrepeat -> elementary { number } .)
    A               reduce using rule 29 (nrepeat -> elementary { number } .)
    B               reduce using rule 29 (nrepeat -> elementary { number } .)
    C               reduce using rule 29 (nrepeat -> elementary { number } .)
    D               reduce using rule 29 (nrepeat -> elementary { number } .)
    E               reduce using rule 29 (nrepeat -> elementary { number } .)
    F               reduce using rule 29 (nrepeat -> elementary { number } .)
    G               reduce using rule 29 (nrepeat -> elementary { number } .)
    H               reduce using rule 29 (nrepeat -> elementary { number } .)
    I               reduce using rule 29 (nrepeat -> elementary { number } .)
    J               reduce using rule 29 (nrepeat -> elementary { number } .)
    K               reduce using rule 29 (nrepeat -> elementary { number } .)
    L               reduce using rule 29 (nrepeat -> elementary { number } .)
    M               reduce using rule 29 (nrepeat -> elementary { number } .)
    N               reduce using rule 29 (nrepeat -> elementary { number } .)
    O               reduce using rule 29 (nrepeat -> elementary { number } .)
    P               reduce using rule 29 (nrepeat -> elementary { number } .)
    Q               reduce using rule 29 (nrepeat -> elementary { number } .)
    R               reduce using rule 29 (nrepeat -> elementary { number } .)
    S               reduce using rule 29 (nrepeat -> elementary { number } .)
    T               reduce using rule 29 (nrepeat -> elementary { number } .)
    U               reduce using rule 29 (nrepeat -> elementary { number } .)
    V               reduce using rule 29 (nrepeat -> elementary { number } .)
    W               reduce using rule 29 (nrepeat -> elementary { number } .)
    X               reduce using rule 29 (nrepeat -> elementary { number } .)
    Y               reduce using rule 29 (nrepeat -> elementary { number } .)
    Z               reduce using rule 29 (nrepeat -> elementary { number } .)
    |               reduce using rule 29 (nrepeat -> elementary { number } .)
    )               reduce using rule 29 (nrepeat -> elementary { number } .)
    $end            reduce using rule 29 (nrepeat -> elementary { number } .)


state 185

    (38) number -> DIGIT number .

    }               reduce using rule 38 (number -> DIGIT number .)
    ,               reduce using rule 38 (number -> DIGIT number .)
    )               reduce using rule 38 (number -> DIGIT number .)


state 186

    (93) classrange -> classliteral - classliteral .

    !               reduce using rule 93 (classrange -> classliteral - classliteral .)
    "               reduce using rule 93 (classrange -> classliteral - classliteral .)
    #               reduce using rule 93 (classrange -> classliteral - classliteral .)
    $               reduce using rule 93 (classrange -> classliteral - classliteral .)
    %               reduce using rule 93 (classrange -> classliteral - classliteral .)
    &               reduce using rule 93 (classrange -> classliteral - classliteral .)
    '               reduce using rule 93 (classrange -> classliteral - classliteral .)
    (               reduce using rule 93 (classrange -> classliteral - classliteral .)
    )               reduce using rule 93 (classrange -> classliteral - classliteral .)
    *               reduce using rule 93 (classrange -> classliteral - classliteral .)
    +               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ,               reduce using rule 93 (classrange -> classliteral - classliteral .)
    .               reduce using rule 93 (classrange -> classliteral - classliteral .)
    /               reduce using rule 93 (classrange -> classliteral - classliteral .)
    :               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ;               reduce using rule 93 (classrange -> classliteral - classliteral .)
    <               reduce using rule 93 (classrange -> classliteral - classliteral .)
    =               reduce using rule 93 (classrange -> classliteral - classliteral .)
    >               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ?               reduce using rule 93 (classrange -> classliteral - classliteral .)
    @               reduce using rule 93 (classrange -> classliteral - classliteral .)
    [               reduce using rule 93 (classrange -> classliteral - classliteral .)
    \               reduce using rule 93 (classrange -> classliteral - classliteral .)
    _               reduce using rule 93 (classrange -> classliteral - classliteral .)
    `               reduce using rule 93 (classrange -> classliteral - classliteral .)
    {               reduce using rule 93 (classrange -> classliteral - classliteral .)
    }               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ~               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ESCAPED         reduce using rule 93 (classrange -> classliteral - classliteral .)
    DIGIT           reduce using rule 93 (classrange -> classliteral - classliteral .)
    OTHER           reduce using rule 93 (classrange -> classliteral - classliteral .)
    a               reduce using rule 93 (classrange -> classliteral - classliteral .)
    b               reduce using rule 93 (classrange -> classliteral - classliteral .)
    c               reduce using rule 93 (classrange -> classliteral - classliteral .)
    d               reduce using rule 93 (classrange -> classliteral - classliteral .)
    e               reduce using rule 93 (classrange -> classliteral - classliteral .)
    f               reduce using rule 93 (classrange -> classliteral - classliteral .)
    g               reduce using rule 93 (classrange -> classliteral - classliteral .)
    h               reduce using rule 93 (classrange -> classliteral - classliteral .)
    i               reduce using rule 93 (classrange -> classliteral - classliteral .)
    j               reduce using rule 93 (classrange -> classliteral - classliteral .)
    k               reduce using rule 93 (classrange -> classliteral - classliteral .)
    l               reduce using rule 93 (classrange -> classliteral - classliteral .)
    m               reduce using rule 93 (classrange -> classliteral - classliteral .)
    n               reduce using rule 93 (classrange -> classliteral - classliteral .)
    o               reduce using rule 93 (classrange -> classliteral - classliteral .)
    p               reduce using rule 93 (classrange -> classliteral - classliteral .)
    q               reduce using rule 93 (classrange -> classliteral - classliteral .)
    r               reduce using rule 93 (classrange -> classliteral - classliteral .)
    s               reduce using rule 93 (classrange -> classliteral - classliteral .)
    t               reduce using rule 93 (classrange -> classliteral - classliteral .)
    u               reduce using rule 93 (classrange -> classliteral - classliteral .)
    v               reduce using rule 93 (classrange -> classliteral - classliteral .)
    w               reduce using rule 93 (classrange -> classliteral - classliteral .)
    x               reduce using rule 93 (classrange -> classliteral - classliteral .)
    y               reduce using rule 93 (classrange -> classliteral - classliteral .)
    z               reduce using rule 93 (classrange -> classliteral - classliteral .)
    A               reduce using rule 93 (classrange -> classliteral - classliteral .)
    B               reduce using rule 93 (classrange -> classliteral - classliteral .)
    C               reduce using rule 93 (classrange -> classliteral - classliteral .)
    D               reduce using rule 93 (classrange -> classliteral - classliteral .)
    E               reduce using rule 93 (classrange -> classliteral - classliteral .)
    F               reduce using rule 93 (classrange -> classliteral - classliteral .)
    G               reduce using rule 93 (classrange -> classliteral - classliteral .)
    H               reduce using rule 93 (classrange -> classliteral - classliteral .)
    I               reduce using rule 93 (classrange -> classliteral - classliteral .)
    J               reduce using rule 93 (classrange -> classliteral - classliteral .)
    K               reduce using rule 93 (classrange -> classliteral - classliteral .)
    L               reduce using rule 93 (classrange -> classliteral - classliteral .)
    M               reduce using rule 93 (classrange -> classliteral - classliteral .)
    N               reduce using rule 93 (classrange -> classliteral - classliteral .)
    O               reduce using rule 93 (classrange -> classliteral - classliteral .)
    P               reduce using rule 93 (classrange -> classliteral - classliteral .)
    Q               reduce using rule 93 (classrange -> classliteral - classliteral .)
    R               reduce using rule 93 (classrange -> classliteral - classliteral .)
    S               reduce using rule 93 (classrange -> classliteral - classliteral .)
    T               reduce using rule 93 (classrange -> classliteral - classliteral .)
    U               reduce using rule 93 (classrange -> classliteral - classliteral .)
    V               reduce using rule 93 (classrange -> classliteral - classliteral .)
    W               reduce using rule 93 (classrange -> classliteral - classliteral .)
    X               reduce using rule 93 (classrange -> classliteral - classliteral .)
    Y               reduce using rule 93 (classrange -> classliteral - classliteral .)
    Z               reduce using rule 93 (classrange -> classliteral - classliteral .)
    |               reduce using rule 93 (classrange -> classliteral - classliteral .)
    ]               reduce using rule 93 (classrange -> classliteral - classliteral .)


state 187

    (59) classitems2 -> baseitems | baseitems .

    ]               reduce using rule 59 (classitems2 -> baseitems | baseitems .)


state 188

    (48) lengthcheck -> ( number . ) re

    )               shift and go to state 192


state 189

    (30) nrepeat -> elementary { , number } .

    ?               reduce using rule 30 (nrepeat -> elementary { , number } .)
    (               reduce using rule 30 (nrepeat -> elementary { , number } .)
    ^               reduce using rule 30 (nrepeat -> elementary { , number } .)
    >               reduce using rule 30 (nrepeat -> elementary { , number } .)
    <               reduce using rule 30 (nrepeat -> elementary { , number } .)
    /               reduce using rule 30 (nrepeat -> elementary { , number } .)
    \               reduce using rule 30 (nrepeat -> elementary { , number } .)
    #               reduce using rule 30 (nrepeat -> elementary { , number } .)
    %               reduce using rule 30 (nrepeat -> elementary { , number } .)
    ESCAPED         reduce using rule 30 (nrepeat -> elementary { , number } .)
    DIGIT           reduce using rule 30 (nrepeat -> elementary { , number } .)
    OTHER           reduce using rule 30 (nrepeat -> elementary { , number } .)
    [               reduce using rule 30 (nrepeat -> elementary { , number } .)
    .               reduce using rule 30 (nrepeat -> elementary { , number } .)
    ,               reduce using rule 30 (nrepeat -> elementary { , number } .)
    :               reduce using rule 30 (nrepeat -> elementary { , number } .)
    ;               reduce using rule 30 (nrepeat -> elementary { , number } .)
    $               reduce using rule 30 (nrepeat -> elementary { , number } .)
    `               reduce using rule 30 (nrepeat -> elementary { , number } .)
    a               reduce using rule 30 (nrepeat -> elementary { , number } .)
    b               reduce using rule 30 (nrepeat -> elementary { , number } .)
    c               reduce using rule 30 (nrepeat -> elementary { , number } .)
    d               reduce using rule 30 (nrepeat -> elementary { , number } .)
    e               reduce using rule 30 (nrepeat -> elementary { , number } .)
    f               reduce using rule 30 (nrepeat -> elementary { , number } .)
    g               reduce using rule 30 (nrepeat -> elementary { , number } .)
    h               reduce using rule 30 (nrepeat -> elementary { , number } .)
    i               reduce using rule 30 (nrepeat -> elementary { , number } .)
    j               reduce using rule 30 (nrepeat -> elementary { , number } .)
    k               reduce using rule 30 (nrepeat -> elementary { , number } .)
    l               reduce using rule 30 (nrepeat -> elementary { , number } .)
    m               reduce using rule 30 (nrepeat -> elementary { , number } .)
    n               reduce using rule 30 (nrepeat -> elementary { , number } .)
    o               reduce using rule 30 (nrepeat -> elementary { , number } .)
    p               reduce using rule 30 (nrepeat -> elementary { , number } .)
    q               reduce using rule 30 (nrepeat -> elementary { , number } .)
    r               reduce using rule 30 (nrepeat -> elementary { , number } .)
    s               reduce using rule 30 (nrepeat -> elementary { , number } .)
    t               reduce using rule 30 (nrepeat -> elementary { , number } .)
    u               reduce using rule 30 (nrepeat -> elementary { , number } .)
    v               reduce using rule 30 (nrepeat -> elementary { , number } .)
    w               reduce using rule 30 (nrepeat -> elementary { , number } .)
    x               reduce using rule 30 (nrepeat -> elementary { , number } .)
    y               reduce using rule 30 (nrepeat -> elementary { , number } .)
    z               reduce using rule 30 (nrepeat -> elementary { , number } .)
    A               reduce using rule 30 (nrepeat -> elementary { , number } .)
    B               reduce using rule 30 (nrepeat -> elementary { , number } .)
    C               reduce using rule 30 (nrepeat -> elementary { , number } .)
    D               reduce using rule 30 (nrepeat -> elementary { , number } .)
    E               reduce using rule 30 (nrepeat -> elementary { , number } .)
    F               reduce using rule 30 (nrepeat -> elementary { , number } .)
    G               reduce using rule 30 (nrepeat -> elementary { , number } .)
    H               reduce using rule 30 (nrepeat -> elementary { , number } .)
    I               reduce using rule 30 (nrepeat -> elementary { , number } .)
    J               reduce using rule 30 (nrepeat -> elementary { , number } .)
    K               reduce using rule 30 (nrepeat -> elementary { , number } .)
    L               reduce using rule 30 (nrepeat -> elementary { , number } .)
    M               reduce using rule 30 (nrepeat -> elementary { , number } .)
    N               reduce using rule 30 (nrepeat -> elementary { , number } .)
    O               reduce using rule 30 (nrepeat -> elementary { , number } .)
    P               reduce using rule 30 (nrepeat -> elementary { , number } .)
    Q               reduce using rule 30 (nrepeat -> elementary { , number } .)
    R               reduce using rule 30 (nrepeat -> elementary { , number } .)
    S               reduce using rule 30 (nrepeat -> elementary { , number } .)
    T               reduce using rule 30 (nrepeat -> elementary { , number } .)
    U               reduce using rule 30 (nrepeat -> elementary { , number } .)
    V               reduce using rule 30 (nrepeat -> elementary { , number } .)
    W               reduce using rule 30 (nrepeat -> elementary { , number } .)
    X               reduce using rule 30 (nrepeat -> elementary { , number } .)
    Y               reduce using rule 30 (nrepeat -> elementary { , number } .)
    Z               reduce using rule 30 (nrepeat -> elementary { , number } .)
    |               reduce using rule 30 (nrepeat -> elementary { , number } .)
    )               reduce using rule 30 (nrepeat -> elementary { , number } .)
    $end            reduce using rule 30 (nrepeat -> elementary { , number } .)


state 190

    (31) nrepeat -> elementary { number , } .

    ?               reduce using rule 31 (nrepeat -> elementary { number , } .)
    (               reduce using rule 31 (nrepeat -> elementary { number , } .)
    ^               reduce using rule 31 (nrepeat -> elementary { number , } .)
    >               reduce using rule 31 (nrepeat -> elementary { number , } .)
    <               reduce using rule 31 (nrepeat -> elementary { number , } .)
    /               reduce using rule 31 (nrepeat -> elementary { number , } .)
    \               reduce using rule 31 (nrepeat -> elementary { number , } .)
    #               reduce using rule 31 (nrepeat -> elementary { number , } .)
    %               reduce using rule 31 (nrepeat -> elementary { number , } .)
    ESCAPED         reduce using rule 31 (nrepeat -> elementary { number , } .)
    DIGIT           reduce using rule 31 (nrepeat -> elementary { number , } .)
    OTHER           reduce using rule 31 (nrepeat -> elementary { number , } .)
    [               reduce using rule 31 (nrepeat -> elementary { number , } .)
    .               reduce using rule 31 (nrepeat -> elementary { number , } .)
    ,               reduce using rule 31 (nrepeat -> elementary { number , } .)
    :               reduce using rule 31 (nrepeat -> elementary { number , } .)
    ;               reduce using rule 31 (nrepeat -> elementary { number , } .)
    $               reduce using rule 31 (nrepeat -> elementary { number , } .)
    `               reduce using rule 31 (nrepeat -> elementary { number , } .)
    a               reduce using rule 31 (nrepeat -> elementary { number , } .)
    b               reduce using rule 31 (nrepeat -> elementary { number , } .)
    c               reduce using rule 31 (nrepeat -> elementary { number , } .)
    d               reduce using rule 31 (nrepeat -> elementary { number , } .)
    e               reduce using rule 31 (nrepeat -> elementary { number , } .)
    f               reduce using rule 31 (nrepeat -> elementary { number , } .)
    g               reduce using rule 31 (nrepeat -> elementary { number , } .)
    h               reduce using rule 31 (nrepeat -> elementary { number , } .)
    i               reduce using rule 31 (nrepeat -> elementary { number , } .)
    j               reduce using rule 31 (nrepeat -> elementary { number , } .)
    k               reduce using rule 31 (nrepeat -> elementary { number , } .)
    l               reduce using rule 31 (nrepeat -> elementary { number , } .)
    m               reduce using rule 31 (nrepeat -> elementary { number , } .)
    n               reduce using rule 31 (nrepeat -> elementary { number , } .)
    o               reduce using rule 31 (nrepeat -> elementary { number , } .)
    p               reduce using rule 31 (nrepeat -> elementary { number , } .)
    q               reduce using rule 31 (nrepeat -> elementary { number , } .)
    r               reduce using rule 31 (nrepeat -> elementary { number , } .)
    s               reduce using rule 31 (nrepeat -> elementary { number , } .)
    t               reduce using rule 31 (nrepeat -> elementary { number , } .)
    u               reduce using rule 31 (nrepeat -> elementary { number , } .)
    v               reduce using rule 31 (nrepeat -> elementary { number , } .)
    w               reduce using rule 31 (nrepeat -> elementary { number , } .)
    x               reduce using rule 31 (nrepeat -> elementary { number , } .)
    y               reduce using rule 31 (nrepeat -> elementary { number , } .)
    z               reduce using rule 31 (nrepeat -> elementary { number , } .)
    A               reduce using rule 31 (nrepeat -> elementary { number , } .)
    B               reduce using rule 31 (nrepeat -> elementary { number , } .)
    C               reduce using rule 31 (nrepeat -> elementary { number , } .)
    D               reduce using rule 31 (nrepeat -> elementary { number , } .)
    E               reduce using rule 31 (nrepeat -> elementary { number , } .)
    F               reduce using rule 31 (nrepeat -> elementary { number , } .)
    G               reduce using rule 31 (nrepeat -> elementary { number , } .)
    H               reduce using rule 31 (nrepeat -> elementary { number , } .)
    I               reduce using rule 31 (nrepeat -> elementary { number , } .)
    J               reduce using rule 31 (nrepeat -> elementary { number , } .)
    K               reduce using rule 31 (nrepeat -> elementary { number , } .)
    L               reduce using rule 31 (nrepeat -> elementary { number , } .)
    M               reduce using rule 31 (nrepeat -> elementary { number , } .)
    N               reduce using rule 31 (nrepeat -> elementary { number , } .)
    O               reduce using rule 31 (nrepeat -> elementary { number , } .)
    P               reduce using rule 31 (nrepeat -> elementary { number , } .)
    Q               reduce using rule 31 (nrepeat -> elementary { number , } .)
    R               reduce using rule 31 (nrepeat -> elementary { number , } .)
    S               reduce using rule 31 (nrepeat -> elementary { number , } .)
    T               reduce using rule 31 (nrepeat -> elementary { number , } .)
    U               reduce using rule 31 (nrepeat -> elementary { number , } .)
    V               reduce using rule 31 (nrepeat -> elementary { number , } .)
    W               reduce using rule 31 (nrepeat -> elementary { number , } .)
    X               reduce using rule 31 (nrepeat -> elementary { number , } .)
    Y               reduce using rule 31 (nrepeat -> elementary { number , } .)
    Z               reduce using rule 31 (nrepeat -> elementary { number , } .)
    |               reduce using rule 31 (nrepeat -> elementary { number , } .)
    )               reduce using rule 31 (nrepeat -> elementary { number , } .)
    $end            reduce using rule 31 (nrepeat -> elementary { number , } .)


state 191

    (32) nrepeat -> elementary { number , number . }

    }               shift and go to state 193


state 192

    (48) lengthcheck -> ( number ) . re
    (1) re -> . alternation
    (2) re -> . simple
    (3) alternation -> . re | simple
    (4) simple -> . concatenation
    (5) simple -> . basic
    (6) concatenation -> . simple basic
    (7) basic -> . elementary
    (8) basic -> . quantifier
    (15) elementary -> . group
    (16) elementary -> . directional
    (17) elementary -> . command
    (18) elementary -> . literal
    (19) elementary -> . charclass
    (20) elementary -> . anychar
    (21) elementary -> . nodisplay
    (22) elementary -> . nomatch
    (23) elementary -> . nodispmatch
    (24) elementary -> . anchor
    (25) elementary -> . predefined
    (9) quantifier -> . basequantifier
    (10) quantifier -> . basequantifier ?
    (39) group -> . ( groupbody )
    (95) directional -> . ^ DIGIT
    (96) directional -> . ^ alpha
    (97) directional -> . ^ *
    (98) directional -> . ^ +
    (104) command -> . >
    (105) command -> . <
    (106) command -> . /
    (107) command -> . \
    (108) command -> . #
    (109) command -> . %
    (110) literal -> . ESCAPED
    (111) literal -> . alpha
    (112) literal -> . DIGIT
    (113) literal -> . OTHER
    (55) charclass -> . [ classitems ]
    (33) anychar -> . .
    (34) nodisplay -> . ,
    (35) nomatch -> . :
    (36) nodispmatch -> . ;
    (99) anchor -> . $ DIGIT
    (100) anchor -> . $ alpha
    (101) anchor -> . $ *
    (102) anchor -> . $ +
    (103) anchor -> . $ ^
    (94) predefined -> . ` alpha
    (11) basequantifier -> . asterisk
    (12) basequantifier -> . plus
    (13) basequantifier -> . optional
    (14) basequantifier -> . nrepeat
    (114) alpha -> . alpha_lower
    (115) alpha -> . alpha_upper
    (26) asterisk -> . elementary *
    (27) plus -> . elementary +
    (28) optional -> . elementary ?
    (29) nrepeat -> . elementary { number }
    (30) nrepeat -> . elementary { , number }
    (31) nrepeat -> . elementary { number , }
    (32) nrepeat -> . elementary { number , number }
    (116) alpha_lower -> . a
    (117) alpha_lower -> . b
    (118) alpha_lower -> . c
    (119) alpha_lower -> . d
    (120) alpha_lower -> . e
    (121) alpha_lower -> . f
    (122) alpha_lower -> . g
    (123) alpha_lower -> . h
    (124) alpha_lower -> . i
    (125) alpha_lower -> . j
    (126) alpha_lower -> . k
    (127) alpha_lower -> . l
    (128) alpha_lower -> . m
    (129) alpha_lower -> . n
    (130) alpha_lower -> . o
    (131) alpha_lower -> . p
    (132) alpha_lower -> . q
    (133) alpha_lower -> . r
    (134) alpha_lower -> . s
    (135) alpha_lower -> . t
    (136) alpha_lower -> . u
    (137) alpha_lower -> . v
    (138) alpha_lower -> . w
    (139) alpha_lower -> . x
    (140) alpha_lower -> . y
    (141) alpha_lower -> . z
    (142) alpha_upper -> . A
    (143) alpha_upper -> . B
    (144) alpha_upper -> . C
    (145) alpha_upper -> . D
    (146) alpha_upper -> . E
    (147) alpha_upper -> . F
    (148) alpha_upper -> . G
    (149) alpha_upper -> . H
    (150) alpha_upper -> . I
    (151) alpha_upper -> . J
    (152) alpha_upper -> . K
    (153) alpha_upper -> . L
    (154) alpha_upper -> . M
    (155) alpha_upper -> . N
    (156) alpha_upper -> . O
    (157) alpha_upper -> . P
    (158) alpha_upper -> . Q
    (159) alpha_upper -> . R
    (160) alpha_upper -> . S
    (161) alpha_upper -> . T
    (162) alpha_upper -> . U
    (163) alpha_upper -> . V
    (164) alpha_upper -> . W
    (165) alpha_upper -> . X
    (166) alpha_upper -> . Y
    (167) alpha_upper -> . Z

    (               shift and go to state 26
    ^               shift and go to state 64
    >               shift and go to state 65
    <               shift and go to state 49
    /               shift and go to state 30
    \               shift and go to state 76
    #               shift and go to state 1
    %               shift and go to state 85
    ESCAPED         shift and go to state 52
    DIGIT           shift and go to state 51
    OTHER           shift and go to state 43
    [               shift and go to state 33
    .               shift and go to state 9
    ,               shift and go to state 73
    :               shift and go to state 39
    ;               shift and go to state 25
    $               shift and go to state 53
    `               shift and go to state 6
    a               shift and go to state 38
    b               shift and go to state 94
    c               shift and go to state 69
    d               shift and go to state 72
    e               shift and go to state 5
    f               shift and go to state 78
    g               shift and go to state 2
    h               shift and go to state 44
    i               shift and go to state 92
    j               shift and go to state 36
    k               shift and go to state 80
    l               shift and go to state 83
    m               shift and go to state 50
    n               shift and go to state 58
    o               shift and go to state 11
    p               shift and go to state 90
    q               shift and go to state 82
    r               shift and go to state 27
    s               shift and go to state 79
    t               shift and go to state 56
    u               shift and go to state 34
    v               shift and go to state 71
    w               shift and go to state 62
    x               shift and go to state 95
    y               shift and go to state 20
    z               shift and go to state 47
    A               shift and go to state 46
    B               shift and go to state 24
    C               shift and go to state 77
    D               shift and go to state 54
    E               shift and go to state 81
    F               shift and go to state 28
    G               shift and go to state 21
    H               shift and go to state 19
    I               shift and go to state 74
    J               shift and go to state 84
    K               shift and go to state 93
    L               shift and go to state 70
    M               shift and go to state 35
    N               shift and go to state 75
    O               shift and go to state 89
    P               shift and go to state 29
    Q               shift and go to state 68
    R               shift and go to state 67
    S               shift and go to state 22
    T               shift and go to state 45
    U               shift and go to state 17
    V               shift and go to state 60
    W               shift and go to state 18
    X               shift and go to state 23
    Y               shift and go to state 48
    Z               shift and go to state 42

    optional                       shift and go to state 15
    basic                          shift and go to state 66
    nodisplay                      shift and go to state 59
    simple                         shift and go to state 3
    alpha                          shift and go to state 86
    directional                    shift and go to state 4
    alpha_upper                    shift and go to state 7
    charclass                      shift and go to state 8
    anchor                         shift and go to state 40
    elementary                     shift and go to state 31
    quantifier                     shift and go to state 10
    nodispmatch                    shift and go to state 32
    basequantifier                 shift and go to state 61
    asterisk                       shift and go to state 87
    alternation                    shift and go to state 12
    command                        shift and go to state 13
    nomatch                        shift and go to state 63
    re                             shift and go to state 194
    alpha_lower                    shift and go to state 88
    plus                           shift and go to state 14
    predefined                     shift and go to state 37
    group                          shift and go to state 57
    concatenation                  shift and go to state 16
    nrepeat                        shift and go to state 55
    anychar                        shift and go to state 41
    literal                        shift and go to state 91

state 193

    (32) nrepeat -> elementary { number , number } .

    ?               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    (               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    ^               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    >               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    <               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    /               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    \               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    #               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    %               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    ESCAPED         reduce using rule 32 (nrepeat -> elementary { number , number } .)
    DIGIT           reduce using rule 32 (nrepeat -> elementary { number , number } .)
    OTHER           reduce using rule 32 (nrepeat -> elementary { number , number } .)
    [               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    .               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    ,               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    :               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    ;               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    $               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    `               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    a               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    b               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    c               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    d               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    e               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    f               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    g               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    h               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    i               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    j               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    k               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    l               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    m               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    n               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    o               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    p               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    q               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    r               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    s               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    t               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    u               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    v               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    w               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    x               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    y               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    z               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    A               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    B               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    C               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    D               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    E               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    F               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    G               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    H               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    I               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    J               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    K               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    L               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    M               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    N               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    O               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    P               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    Q               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    R               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    S               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    T               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    U               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    V               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    W               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    X               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    Y               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    Z               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    |               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    )               reduce using rule 32 (nrepeat -> elementary { number , number } .)
    $end            reduce using rule 32 (nrepeat -> elementary { number , number } .)


state 194

    (48) lengthcheck -> ( number ) re .
    (3) alternation -> re . | simple

    )               reduce using rule 48 (lengthcheck -> ( number ) re .)
    |               shift and go to state 153

